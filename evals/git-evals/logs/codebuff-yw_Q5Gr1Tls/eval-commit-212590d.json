{"sha":"212590da3577ddebdc9136e3929fcc5d586f8d2a","spec":"Add support for custom tool definitions throughout the Codebuff system. The implementation should:\n\n1. **Add Custom Tool Definitions to ProjectFileContext**: Add a new `customToolDefinitions` field to the `ProjectFileContext` type that stores custom tool definitions with their input schemas, descriptions, and metadata.\n\n2. **Update Mock Test Objects**: Update all test mock objects for `ProjectFileContext` to include the new `customToolDefinitions: {}` field instead of or alongside the existing `fileVersions` field.\n\n3. **Expand Tool Name Type Flexibility**: Update `toolNames` type definitions throughout the codebase to accept both built-in tool names and custom tool name strings. Change from strict `ToolName[]` arrays to more flexible types like `(ToolName | (string & {}))[]` or `readonly string[]`.\n\n4. **Update Tool Processing Functions**: Modify tool-related functions to handle both built-in tools (from `codebuffToolDefs`) and custom tools (from `customToolDefinitions`). This includes:\n   - Tool instruction generation functions\n   - Tool stream parsing\n   - Tool execution functions\n   - Tool validation functions\n\n5. **Add Custom Tool Support to SDK**: Extend the SDK to support custom tool definitions including:\n   - A `CustomToolDefinition` type for defining custom tools\n   - A helper function for creating custom tool definitions\n   - Integration with the client's `run()` method to accept custom tool definitions\n   - Custom tool execution handling in the WebSocket client\n\n6. **Update Template Schemas**: Modify agent template schemas to accept custom tool names in addition to built-in tool names, allowing agents to use both types of tools.\n\n7. **Remove Deprecated Fields**: Clean up test files by removing references to deprecated fields like `fileVersions` where they've been replaced with `customToolDefinitions`.\n\n8. **Update Package Dependencies**: Update SDK package.json to use zod version 4.0.0 instead of 3.x to support newer schema features.\n\nThe system should maintain backward compatibility with existing built-in tools while seamlessly supporting user-defined custom tools with their own schemas, descriptions, and execution handlers.","fileStates":[{"path":"backend/src/__tests__/main-prompt.integration.test.ts","preContent":"import { TEST_USER_ID } from '@codebuff/common/old-constants'\n\n// Mock imports needed for setup within the test\nimport { getToolCallString } from '@codebuff/common/tools/utils'\nimport { getInitialSessionState } from '@codebuff/common/types/session-state'\nimport {\n  afterEach,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  mock,\n  spyOn,\n} from 'bun:test'\n\nimport * as checkTerminalCommandModule from '../check-terminal-command'\nimport * as requestFilesPrompt from '../find-files/request-files-prompt'\nimport * as aisdk from '../llm-apis/vercel-ai-sdk/ai-sdk'\nimport { mainPrompt } from '../main-prompt'\nimport { logger } from '../util/logger'\nimport { renderReadFilesResult } from '../util/parse-tool-call-xml'\nimport * as websocketAction from '../websockets/websocket-action'\n\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\n// --- Shared Mocks & Helpers ---\n\nclass MockWebSocket {\n  send(msg: string) {}\n  close() {}\n  on(event: string, listener: (...args: any[]) => void) {}\n  removeListener(event: string, listener: (...args: any[]) => void) {}\n}\n\nconst mockFileContext: ProjectFileContext = {\n  projectRoot: '/test',\n  cwd: '/test',\n  fileTree: [],\n  fileTokenScores: {},\n  knowledgeFiles: {},\n  gitChanges: {\n    status: '',\n    diff: '',\n    diffCached: '',\n    lastCommitMessages: '',\n  },\n  changesSinceLastChat: {},\n  shellConfigFiles: {},\n  systemInfo: {\n    platform: 'test',\n    shell: 'test',\n    nodeVersion: 'test',\n    arch: 'test',\n    homedir: '/home/test',\n    cpus: 1,\n  },\n  fileVersions: [],\n  agentTemplates: {},\n}\n\n// --- Integration Test with Real LLM Call ---\ndescribe.skip('mainPrompt (Integration)', () => {\n  let mockLocalAgentTemplates: Record<string, any>\n\n  beforeEach(() => {\n    // Setup common mock agent templates\n    mockLocalAgentTemplates = {\n      base: {\n        id: 'base',\n        displayName: 'Base Agent',\n        outputMode: 'last_message',\n        inputSchema: {},\n        spawnerPrompt: '',\n        model: 'gpt-4o-mini',\n        includeMessageHistory: true,\n        toolNames: ['write_file', 'run_terminal_command'],\n        spawnableAgents: [],\n        systemPrompt: '',\n        instructionsPrompt: '',\n        stepPrompt: '',\n      },\n    }\n\n    spyOn(websocketAction, 'requestToolCall').mockImplementation(\n      async (\n        ws: WebSocket,\n        userInputId: string,\n        toolName: string,\n        input: Record<string, any>,\n      ) => {\n        return {\n          success: true,\n          result: `Tool call success: ${{ toolName, input }}` as any,\n        }\n      },\n    )\n  })\n\n  afterEach(() => {\n    mock.restore()\n  })\n\n  it('should delete a specified function while preserving other code', async () => {\n    // Mock necessary non-LLM functions\n    spyOn(logger, 'debug').mockImplementation(() => {})\n    spyOn(logger, 'error').mockImplementation(() => {})\n    spyOn(logger, 'info').mockImplementation(() => {})\n    spyOn(logger, 'warn').mockImplementation(() => {})\n    spyOn(requestFilesPrompt, 'requestRelevantFiles').mockResolvedValue([])\n\n    const initialContent = `import { Message } from '@codebuff/common/types/message'\nimport { withCacheControl } from '@codebuff/common/util/messages'\n\nimport { System } from '../llm-apis/claude'\nimport { OpenAIMessage } from '../llm-apis/openai-api'\nimport { logger } from './logger'\nimport { simplifyTerminalCommandResults } from './simplify-tool-results'\nimport { countTokensJson } from './token-counter'\n\n/**\n * Wraps an array of messages with a system prompt for LLM API calls\n * @param messages - Array of messages to wrap\n * @param system - System prompt to prepend\n * @returns Array with system message followed by provided messages\n */\nexport const messagesWithSystem = (messages: Message[], system: System) =>\n  [{ role: 'system', content: system }, ...messages] as OpenAIMessage[]\n\nexport function asSystemInstruction(str: string): string {\n  return \\`<system_instructions>\\${str}</system_instructions>\\`\n}\n\nexport function asSystemMessage(str: string): string {\n  return \\`<system>\\${str}</system>\\`\n}\n\nexport function isSystemInstruction(str: string): boolean {\n  return (\n    str.startsWith('<system_instructions>') &&\n    str.endsWith('</system_instructions>')\n  )\n}\n\nexport function isSystemMessage(str: string): boolean {\n  return str.startsWith('<system>') && str.endsWith('</system>')\n}\n\n/**\n * Extracts the text content from a message, handling both string and array content types\n * @param message - Message to extract text from\n * @returns Combined text content of the message, or undefined if no text content\n */\nexport function getMessageText(message: Message): string | undefined {\n  if (typeof message.content === 'string') {\n    return message.content\n  }\n  return message.content.map((c) => ('text' in c ? c.text : '')).join('\\\\n')\n}\n\nexport function castAssistantMessage(message: Message): Message {\n  if (message.role !== 'assistant') {\n    return message\n  }\n  if (typeof message.content === 'string') {\n    return {\n      content: \\`<previous_assistant_message>\\${message.content}</previous_assistant_message>\\`,\n      role: 'user' as const,\n    }\n  }\n  return {\n    role: 'user' as const,\n    content: message.content.map((m) => {\n      if (m.type === 'text') {\n        return {\n          ...m,\n          text: \\`<previous_assistant_message>\\${m.text}</previous_assistant_message>\\`,\n        }\n      }\n      return m\n    }),\n  }\n}\n\n// Number of terminal command outputs to keep in full form before simplifying\nconst numTerminalCommandsToKeep = 5\n\n/**\n * Helper function to simplify terminal command output while preserving some recent ones\n * @param text - Terminal output text to potentially simplify\n * @param numKept - Number of terminal outputs already kept in full form\n * @returns Object containing simplified result and updated count of kept outputs\n */\nfunction simplifyTerminalHelper(\n  text: string,\n  numKept: number\n): { result: string; numKept: number } {\n  const simplifiedText = simplifyTerminalCommandResults(text)\n\n  // Keep the full output for the N most recent commands\n  if (numKept < numTerminalCommandsToKeep && simplifiedText !== text) {\n    return { result: text, numKept: numKept + 1 }\n  }\n\n  return {\n    result: simplifiedText,\n    numKept,\n  }\n}\n\n// Factor to reduce token count target by, to leave room for new messages\nconst shortenedMessageTokenFactor = 0.5\n\n/**\n * Trims messages from the beginning to fit within token limits while preserving\n * important content. Also simplifies terminal command outputs to save tokens.\n *\n * The function:\n * 1. Processes messages from newest to oldest\n * 2. Simplifies terminal command outputs after keeping N most recent ones\n * 3. Stops adding messages when approaching token limit\n *\n * @param messages - Array of messages to trim\n * @param systemTokens - Number of tokens used by system prompt\n * @param maxTotalTokens - Maximum total tokens allowed, defaults to 200k\n * @returns Trimmed array of messages that fits within token limit\n */\nexport function trimMessagesToFitTokenLimit(\n  messages: Message[],\n  systemTokens: number,\n  maxTotalTokens: number = 200_000\n): Message[] {\n  const MAX_MESSAGE_TOKENS = maxTotalTokens - systemTokens\n\n  // Check if we're already under the limit\n  const initialTokens = countTokensJson(messages)\n\n  if (initialTokens < MAX_MESSAGE_TOKENS) {\n    return messages\n  }\n\n  let totalTokens = 0\n  const targetTokens = MAX_MESSAGE_TOKENS * shortenedMessageTokenFactor\n  const results: Message[] = []\n  let numKept = 0\n\n  // Process messages from newest to oldest\n  for (let i = messages.length - 1; i >= 0; i--) {\n    const { role, content } = messages[i]\n    let newContent: typeof content\n\n    // Handle string content (usually terminal output)\n    if (typeof content === 'string') {\n      if (isSystemInstruction(content)) {\n        continue\n      }\n      const result = simplifyTerminalHelper(content, numKept)\n      newContent = result.result\n      numKept = result.numKept\n    } else {\n      // Handle array content (mixed content types)\n      newContent = []\n      // Process content parts from newest to oldest\n      for (let j = content.length - 1; j >= 0; j--) {\n        const messagePart = content[j]\n        // Preserve non-text content (i.e. images)\n        if (messagePart.type !== 'text') {\n          newContent.push(messagePart)\n          continue\n        }\n\n        const result = simplifyTerminalHelper(messagePart.text, numKept)\n        newContent.push({ ...messagePart, text: result.result })\n        numKept = result.numKept\n      }\n      newContent.reverse()\n    }\n\n    // Check if adding this message would exceed our token target\n    const message = { role, content: newContent }\n    const messageTokens = countTokensJson(message)\n\n    if (totalTokens + messageTokens <= targetTokens) {\n      results.push({ role, content: newContent })\n      totalTokens += messageTokens\n    } else {\n      break\n    }\n  }\n\n  results.reverse()\n  return results\n}\n\nexport function getMessagesSubset(messages: Message[], otherTokens: number) {\n  const indexLastSubgoalComplete = messages.findLastIndex(({ content }) => {\n    JSON.stringify(content).includes('COMPLETE')\n  })\n\n  const messagesSubset = trimMessagesToFitTokenLimit(\n    indexLastSubgoalComplete === -1\n      ? messages\n      : messages.slice(indexLastSubgoalComplete),\n    otherTokens\n  )\n\n  // Remove cache_control from all messages\n  for (const message of messagesSubset) {\n    if (typeof message.content === 'object' && message.content.length > 0) {\n      delete message.content[message.content.length - 1].cache_control\n    }\n  }\n\n  // Cache up to the last message!\n  const lastMessage = messagesSubset[messagesSubset.length - 1]\n  if (lastMessage) {\n    messagesSubset[messagesSubset.length - 1] = withCacheControl(lastMessage)\n  } else {\n    logger.debug(\n      {\n        messages,\n        messagesSubset,\n        otherTokens,\n      },\n      'No last message found in messagesSubset!'\n    )\n  }\n\n  return messagesSubset\n}\n`\n    spyOn(websocketAction, 'requestFiles').mockResolvedValue({\n      'src/util/messages.ts': initialContent,\n    })\n    spyOn(websocketAction, 'requestOptionalFile').mockResolvedValue(\n      initialContent,\n    )\n    spyOn(checkTerminalCommandModule, 'checkTerminalCommand').mockResolvedValue(\n      null,\n    )\n\n    // Mock LLM calls\n    spyOn(aisdk, 'promptAiSdk').mockResolvedValue('Mocked non-stream AiSdk')\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    sessionState.mainAgentState.messageHistory.push(\n      {\n        role: 'assistant',\n        content: getToolCallString('read_files', {\n          paths: ['src/util/messages.ts'],\n        }),\n      },\n      {\n        role: 'user',\n        content: renderReadFilesResult(\n          [\n            {\n              path: 'src/util/messages.ts',\n              content: initialContent,\n            },\n          ],\n          {},\n        ),\n      },\n    )\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Delete the castAssistantMessage function',\n      sessionState,\n      fingerprintId: 'test-delete-function-integration',\n      costMode: 'normal' as const,\n      promptId: 'test-delete-function-id-integration',\n      toolResults: [],\n    }\n\n    const {\n      toolCalls,\n      toolResults,\n      sessionState: finalSessionState,\n    } = await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n      userId: TEST_USER_ID,\n      clientSessionId: 'test-session-delete-function-integration',\n      localAgentTemplates: mockLocalAgentTemplates,\n      onResponseChunk: (chunk: string | PrintModeEvent) => {\n        if (typeof chunk !== 'string') {\n          return\n        }\n        process.stdout.write(chunk)\n      },\n    })\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n\n    // Find the write_file tool call\n    const writeFileCall = requestToolCallSpy.mock.calls.find(\n      (call: any) => call[1] === 'write_file',\n    )\n    expect(writeFileCall).toBeDefined()\n    expect(writeFileCall[2].path).toBe('src/util/messages.ts')\n    expect(writeFileCall[2].content.trim()).toBe(\n      `@@ -46,32 +46,8 @@\\n   }\\n   return message.content.map((c) => ('text' in c ? c.text : '')).join('\\\\n')\\n }\\n \\n-export function castAssistantMessage(message: Message): Message {\\n-  if (message.role !== 'assistant') {\\n-    return message\\n-  }\\n-  if (typeof message.content === 'string') {\\n-    return {\\n-      content: \\`<previous_assistant_message>\\${message.content}</previous_assistant_message>\\`,\\n-      role: 'user' as const,\\n-    }\\n-  }\\n-  return {\\n-    role: 'user' as const,\\n-    content: message.content.map((m) => {\\n-      if (m.type === 'text') {\\n-        return {\\n-          ...m,\\n-          text: \\`<previous_assistant_message>\\${m.text}</previous_assistant_message>\\`,\\n-        }\\n-      }\\n-      return m\\n-    }),\\n-  }\\n-}\\n-\\n // Number of terminal command outputs to keep in full form before simplifying\\n const numTerminalCommandsToKeep = 5\\n \\n /**`.trim(),\n    )\n  }, 60000) // Increase timeout for real LLM call\n\n  describe.skip('Real world example', () => {\n    it('should specify deletion comment while deleting single character', async () => {\n      // Mock necessary non-LLM functions\n      spyOn(logger, 'debug').mockImplementation(() => {})\n      spyOn(logger, 'error').mockImplementation(() => {})\n      spyOn(logger, 'info').mockImplementation(() => {})\n      spyOn(logger, 'warn').mockImplementation(() => {})\n      spyOn(requestFilesPrompt, 'requestRelevantFiles').mockResolvedValue([])\n\n      const initialContent =\n        \"import express from 'express';\\nimport session from 'express-session';\\nimport cors from 'cors';\\nimport TelegramBot, { User, ChatMember, MessageEntity } from 'node-telegram-bot-api';\\nimport { connectDB } from './config/database';\\nimport authRouter from './api/auth';\\nimport blacklistPhrasesRouter from './api/blacklistPhrases';\\nimport whitelistUsersRouter from './api/whitelistUsers';\\nimport whitelistPhrasesRouter from './api/whitelistPhrases';\\nimport statsRouter from './api/stats';\\nimport ocrRouter from './api/ocr';\\nimport settingsRouter from './api/settings';\\nimport impersonationRouter from './api/impersonation';\\nimport botActionsRouter from './api/botActions';\\nimport { impersonationService } from './services/ImpersonationService';\\nimport {\\n  AdminUser,\\n  AuditLogAction,\\n  ChatPermissions,\\n  compareModActions,\\n  ModAction,\\n} from '@buff-bot/shared';\\nimport { blacklistPhraseService } from './services/BlacklistPhraseService';\\nimport { whitelistUserService } from './services/WhitelistUserService';\\nimport { OCRService } from './services/OCRService';\\nimport { AuditLog } from './models/AuditLog';\\nimport { ActiveChat } from './models/ActiveChat';\\nimport { RawMessage } from './models/RawMessage';\\nimport { updateRecentMember } from './models/RecentMember';\\nimport { addRecentMessage } from './models/RecentMessage';\\nimport { whitelistPhraseService } from './services/WhitelistPhraseService';\\nimport { handleModerationAction } from './services/moderationActions';\\nimport { Admin } from './models/Admin';\\n\\ninterface PendingModeration {\\n  action: ModAction;\\n  userId?: number;\\n  detailsForLog: string;\\n  phraseForLog?: string;\\n  messageContent: string | undefined;\\n}\\n\\ndeclare module 'express-session' {\\n  interface SessionData {\\n    user?: AdminUser;\\n  }\\n}\\n\\n// Temporary type definitions until @types/node-telegram-bot-api is updated\\ninterface BotMessage extends TelegramBot.Message {\\n  story?: Story;\\n  external_reply?: any;\\n}\\n\\ninterface Story {\\n  chat: TelegramBot.Chat;\\n  id: number;\\n}\\n\\n/**\\n * Extend the built-in Error to carry an optional HTTP status code.\\n */\\nexport interface HttpError {\\n  message: string;\\n  status?: number;\\n  error?: Error;\\n}\\n\\nconst token = process.env.BOT_TOKEN;\\nif (!token) {\\n  throw new Error('BOT_TOKEN must be provided in environment variables');\\n}\\n\\nconst DEFAULT_MUTE_DURATION = parseInt(process.env.DEFAULT_MUTE_DURATION || '3600', 10);\\nconst ADMIN_CACHE_DURATION_MS = 15 * 60 * 1000; // Cache Telegram admins for 15 minutes\\n\\nconst bot = new TelegramBot(token, {\\n  polling: {\\n    params: {\\n      // Type definitions are incorrect here; need to pass array as json string form\\n      allowed_updates: JSON.stringify(['message', 'edited_message', 'chat_member']) as any,\\n    },\\n  },\\n});\\n\\nconst app = express();\\napp.use(\\n  cors({\\n    origin: process.env.FRONTEND_URL || 'http://localhost:5173',\\n    credentials: true,\\n  })\\n);\\napp.use(express.json());\\napp.use(\\n  session({\\n    secret: process.env.SESSION_SECRET || 'your-secret-key',\\n    resave: false,\\n    saveUninitialized: false,\\n    cookie: { secure: process.env.NODE_ENV === 'production' },\\n  })\\n);\\n\\nfunction errorHandler(\\n  err: HttpError,\\n  req: express.Request,\\n  res: express.Response,\\n  next: express.NextFunction\\n) {\\n  const status = err.status || 500;\\n  const message = err.message || 'Internal Server Error';\\n\\n  console.error(`[${new Date().toISOString()}]`, {\\n    status,\\n    message,\\n    // include stack in logs, but not in production responses\\n    stack: err.error?.stack,\\n    path: req.originalUrl,\\n    method: req.method,\\n  });\\n\\n  const payload = { error: { message } };\\n\\n  res.status(status).json(payload);\\n}\\n\\napp.set('bot', bot);\\n\\napp.use('/api/auth', authRouter);\\napp.use('/api/blacklist-phrases', blacklistPhrasesRouter);\\napp.use('/api/whitelist-users', whitelistUsersRouter);\\napp.use('/api/whitelist-phrases', whitelistPhrasesRouter);\\napp.use('/api/ocr', ocrRouter);\\napp.use('/api/stats', statsRouter);\\napp.use('/api/settings', settingsRouter);\\napp.use('/api/impersonation', impersonationRouter);\\napp.use('/api/bot', botActionsRouter);\\n\\napp.use(errorHandler);\\n\\nlet botInfo: TelegramBot.User | null = null;\\n\\ninterface AdminCacheEntry {\\n  admins: ChatMember[];\\n  expiresAt: number;\\n}\\n\\nconst telegramAdminCache = new Map<number, AdminCacheEntry>();\\n\\nasync function getTelegramAdmin(\\n  senderId: number,\\n  chatId: number,\\n  botInstance: TelegramBot\\n): Promise<ChatMember | undefined> {\\n  const now = Date.now();\\n  const cachedEntry = telegramAdminCache.get(chatId);\\n\\n  if (cachedEntry && cachedEntry.expiresAt > now) {\\n    return cachedEntry.admins.find((admin) => admin.user.id === senderId);\\n  }\\n\\n  try {\\n    const chatAdmins = await botInstance.getChatAdministrators(chatId);\\n    telegramAdminCache.set(chatId, {\\n      admins: chatAdmins,\\n      expiresAt: now + ADMIN_CACHE_DURATION_MS,\\n    });\\n\\n    return chatAdmins.find((admin) => admin.user.id === senderId);\\n  } catch (error: any) {\\n    if (error.response?.statusCode !== 403 && error.response?.statusCode !== 400) {\\n      console.error(`Error fetching chat admins for chat ${chatId}:`, error.message);\\n    }\\n    return cachedEntry?.admins.find((admin) => admin.user.id === senderId);\\n  }\\n}\\n\\nasync function isAuthorizedToModerate(\\n  sender: TelegramBot.User,\\n  chatId: number,\\n  botInstance: TelegramBot,\\n  action: ModAction\\n): Promise<boolean> {\\n  // Check if user is a super admin\\n  const adminUser = await Admin.findOne({ telegramId: sender.id });\\n  if (adminUser?.isSuperAdmin) {\\n    return true;\\n  }\\n\\n  // Check if user is a bot admin for this chat with MANAGE_CHANNEL permission\\n  if (\\n    adminUser?.chatPermissions?.some(\\n      (cp: ChatPermissions) => cp.chatId === chatId && cp.permissions.MANAGE_CHANNEL\\n    )\\n  ) {\\n    return true;\\n  }\\n\\n  // Check if user is a Telegram chat admin with appropriate permissions\\n  const telegramAdmin = await getTelegramAdmin(sender.id, chatId, botInstance);\\n  if (!telegramAdmin) {\\n    return false;\\n  }\\n\\n  if (action === 'delete') {\\n    return telegramAdmin.can_delete_messages || false;\\n  }\\n\\n  if (action === 'mute' || action === 'ban') {\\n    return telegramAdmin.can_restrict_members || false;\\n  }\\n\\n  return false;\\n}\\n\\nasync function init() {\\n  await connectDB();\\n  await blacklistPhraseService.init();\\n  await OCRService.getInstance().init(bot);\\n  await impersonationService.init();\\n  await whitelistUserService.init();\\n  await whitelistPhraseService.init();\\n\\n  botInfo = await bot.getMe();\\n  if (!botInfo) {\\n    throw new Error('Failed to get bot information');\\n  }\\n  console.log(`Bot initialized: ${botInfo.username} (ID: ${botInfo.id})`);\\n\\n  setInterval(\\n    () => {\\n      const now = Date.now();\\n      for (const [chatId, entry] of telegramAdminCache.entries()) {\\n        if (entry.expiresAt <= now) {\\n          telegramAdminCache.delete(chatId);\\n        }\\n      }\\n    },\\n    60 * 60 * 1000\\n  );\\n\\n  async function handleMessageChecks(msg: BotMessage, isEdited: boolean = false): Promise<boolean> {\\n    if (!botInfo) {\\n      console.error('Bot info not available in handleMessageChecks');\\n      return false;\\n    }\\n\\n    const text = msg.text || msg.caption || undefined;\\n    const chatId = msg.chat.id;\\n    const messageId = msg.message_id;\\n    const sender = msg.from;\\n\\n    const activeChat = await ActiveChat.findOne({ chatId });\\n    if (!activeChat) {\\n      return false;\\n    }\\n\\n    const muteDuration = activeChat.muteDuration || DEFAULT_MUTE_DURATION;\\n    const linkAction = activeChat.linkModerationAction || 'none';\\n    const fakeSlashAction = activeChat.fakeSlashModerationAction || 'none';\\n    const storyAction = activeChat.forwardedStoryAction || 'none';\\n    const replyMarkupAction = activeChat.replyMarkupAction || 'none';\\n    const forwardedPollAction = activeChat.forwardedPollAction || 'none';\\n    const externalReplyAction = activeChat?.externalReplyAction || 'none';\\n\\n    // Initialize tracking for the most severe action\\n    let pendingModAction: PendingModeration | null = null;\\n\\n    // Helper to build context string\\n    const getContextHint = () => {\\n      let context = '';\\n      if (isEdited) context += '(edited message)';\\n      if (msg.forward_date) {\\n        if (context) context += ' ';\\n        context += '(forwarded message)';\\n      }\\n      return context;\\n    };\\n\\n    // Helper to update pending moderation if the new action is more severe\\n    const tryUpdatePendingModeration = (\\n      potentialAction: ModAction,\\n      userIdToMod: number | undefined,\\n      logDetails: string,\\n      logPhrase?: string,\\n      msgContent?: string\\n    ) => {\\n      if (\\n        pendingModAction === null ||\\n        compareModActions(potentialAction, pendingModAction.action) > 0\\n      ) {\\n        pendingModAction = {\\n          action: potentialAction,\\n          userId: userIdToMod,\\n          detailsForLog: logDetails,\\n          phraseForLog: logPhrase,\\n          messageContent: msgContent,\\n        };\\n      }\\n    };\\n\\n    if (sender) {\\n      // Check Sender is whitelisted; skip all moderation if applicable\\n      const isWhitelisted = await whitelistUserService.isWhitelisted(chatId, sender.id);\\n      if (isWhitelisted) {\\n        return false; // No moderation actions taken\\n      }\\n\\n      // Check for impersonation by sender\\n      const matchedImpersonationRule = await impersonationService.checkUser(chatId, sender);\\n      if (matchedImpersonationRule) {\\n        const displayName = [sender.first_name, sender.last_name].filter(Boolean).join(' ');\\n        const userNames = `${sender.username ? `\\\"@${sender.username}\\\" ` : `ID:${sender.id}`} ${displayName?.length > 0 ? `[[\\\"${displayName}\\\"]]` : ''}`;\\n        const rulePattern = `${matchedImpersonationRule.username ? `\\\"@${matchedImpersonationRule.username}\\\" ` : ''} ${matchedImpersonationRule.displayName ? `[[\\\"${matchedImpersonationRule.displayName}\\\"]]` : ''}`;\\n        const details =\\n          `Impersonation attempt ${userNames} matching rule \\\"${rulePattern}\\\" ${getContextHint()}`.trim();\\n\\n        tryUpdatePendingModeration(\\n          matchedImpersonationRule.action,\\n          sender.id,\\n          details,\\n          undefined,\\n          text\\n        );\\n      }\\n    }\\n\\n    // Check for forwarded story\\n    if (msg.story && msg.chat.id !== msg.story.chat.id && storyAction !== 'none') {\\n      const details = 'Forwarded content: Story';\\n      tryUpdatePendingModeration(storyAction, sender?.id, details, undefined, '[Forwarded Story]');\\n    }\\n\\n    if (msg.forward_from) {\\n      // Check the Original Sender is whitelisted; skip all moderation if applicable\\n      const isWhitelisted = await whitelistUserService.isWhitelisted(chatId, msg.forward_from.id);\\n      if (isWhitelisted) {\\n        return false; // No moderation actions taken\\n      }\\n\\n      // Check impersonation by author of forwarded message\\n      const matchedImpersonationRule = await impersonationService.checkUser(\\n        chatId,\\n        msg.forward_from\\n      );\\n      if (matchedImpersonationRule) {\\n        const displayName = [msg.forward_from.first_name, msg.forward_from.last_name]\\n          .filter(Boolean)\\n          .join(' ');\\n        const userNames = `${msg.forward_from.username ? `\\\"@${msg.forward_from.username}\\\" ` : `ID:${msg.forward_from.id}`} ${displayName?.length > 0 ? `[[\\\"${displayName}\\\"]]` : ''}`;\\n        const rulePattern = `${matchedImpersonationRule.username ? `\\\"@${matchedImpersonationRule.username}\\\" ` : ''} ${matchedImpersonationRule.displayName ? `[[\\\"${matchedImpersonationRule.displayName}\\\"]]` : ''}`;\\n        const details =\\n          `Impersonation attempt by original author ${userNames} of forwarded message, matching rule \\\"${rulePattern}\\\" ${getContextHint()}`.trim();\\n\\n        tryUpdatePendingModeration(\\n          matchedImpersonationRule.action,\\n          sender?.id, // Action is on the forwarder\\n          details,\\n          undefined,\\n          text\\n        );\\n      }\\n    }\\n\\n    // Check text for whitelist match first - if matched, skip all other text checks\\n    if (text) {\\n      const whitelistMatch = await whitelistPhraseService.checkMessage(text, chatId);\\n      if (whitelistMatch) {\\n        return false; // No action was taken\\n      }\\n\\n      const matchedPhrase = await blacklistPhraseService.checkMessage(text, chatId);\\n      if (matchedPhrase) {\\n        const contextHint = getContextHint();\\n        const details = `Blacklisted phrase detected ${contextHint}`.trim();\\n\\n        tryUpdatePendingModeration(\\n          matchedPhrase.action,\\n          sender?.id,\\n          details,\\n          matchedPhrase.phrase,\\n          text\\n        );\\n      }\\n    }\\n\\n    if (fakeSlashAction !== 'none' && msg.entities && msg.entities.length > 0) {\\n      const hasFakeSlash = msg.entities.some(\\n        (entity: MessageEntity) => entity.type === 'text_link' && msg.text![entity.offset] === '/'\\n      );\\n\\n      if (hasFakeSlash) {\\n        const details = `Fake slash command detected ${getContextHint()}`.trim();\\n        tryUpdatePendingModeration(fakeSlashAction, sender?.id, details, undefined, text);\\n      }\\n    }\\n\\n    if (externalReplyAction !== 'none' && msg.external_reply) {\\n      const details = `Message has external reply ${getContextHint()}`.trim();\\n      tryUpdatePendingModeration(externalReplyAction, sender?.id, details, undefined, text);\\n    }\\n\\n    if (linkAction !== 'none' && msg.entities && msg.entities.length > 0) {\\n      const hasLink = msg.entities.some(\\n        (entity: MessageEntity) => entity.type === 'url' || entity.type === 'text_link'\\n      );\\n\\n      if (hasLink) {\\n        const details = `Link detected ${getContextHint()}`.trim();\\n        tryUpdatePendingModeration(linkAction, sender?.id, details, undefined, text);\\n      }\\n    }\\n\\n    if (msg.reply_markup && replyMarkupAction !== 'none') {\\n      const details = `Message contains reply markup ${getContextHint()}`.trim();\\n      tryUpdatePendingModeration(replyMarkupAction, sender?.id, details, undefined, text);\\n    }\\n\\n    if (msg.poll && msg.forward_date && forwardedPollAction !== 'none') {\\n      const details = `Forwarded poll detected ${getContextHint()}`.trim();\\n      tryUpdatePendingModeration(\\n        forwardedPollAction,\\n        sender?.id,\\n        details,\\n        undefined,\\n        `[Forwarded Poll: ${msg.poll.question}]`\\n      );\\n    }\\n\\n    // ToDo check is OCR enabled?\\n    if (msg.photo || msg.sticker) {\\n      const ocrResult = await OCRService.getInstance().handleImage(msg);\\n      if (ocrResult && ocrResult.confidence > activeChat.ocrMinConfidence) {\\n        const whitelistMatch = await whitelistPhraseService.checkMessage(ocrResult.text, chatId);\\n        if (whitelistMatch) {\\n          return false; // No action was taken\\n        }\\n\\n        const matchedPhrase = await blacklistPhraseService.checkMessage(ocrResult.text, chatId);\\n        if (matchedPhrase) {\\n          const details = `Blacklisted phrase found in image (OCR) ${getContextHint()}`.trim();\\n\\n          tryUpdatePendingModeration(\\n            matchedPhrase.action,\\n            sender?.id,\\n            details,\\n            matchedPhrase.phrase,\\n            text\\n          );\\n        }\\n      }\\n    }\\n\\n    // Finally, execute the most severe action if one was determined\\n    if (pendingModAction) {\\n      pendingModAction = pendingModAction as PendingModeration; // hack around TS:strictNullChecks\\n      await handleModerationAction(\\n        bot,\\n        chatId,\\n        messageId,\\n        pendingModAction.userId,\\n        pendingModAction.action,\\n        muteDuration,\\n        msg.chat.type,\\n        botInfo,\\n        pendingModAction.detailsForLog,\\n        pendingModAction.phraseForLog,\\n        pendingModAction.messageContent\\n      );\\n      return true; // An action was taken\\n    }\\n\\n    return false; // No action was taken\\n  }\\n\\n  bot.on('chat_member', async (chatMember: TelegramBot.ChatMemberUpdated) => {\\n    if (!botInfo) {\\n      console.error('Bot info not available in chat_member handler');\\n      return;\\n    }\\n\\n    const chat = chatMember.chat;\\n    const user = chatMember.new_chat_member.user;\\n    const displayName = [user.first_name, user.last_name].filter(Boolean).join(' ');\\n    const oldStatus = chatMember.old_chat_member.status;\\n    const newStatus = chatMember.new_chat_member.status;\\n\\n    if (user.id === botInfo.id) {\\n      console.log('bot member status change?!?!');\\n      let action: AuditLogAction | null = null;\\n      if (oldStatus === 'left' && (newStatus === 'member' || newStatus === 'administrator')) {\\n        action = 'bot_joined';\\n      } else if (\\n        (oldStatus === 'member' || oldStatus === 'administrator') &&\\n        (newStatus === 'left' || newStatus === 'kicked')\\n      ) {\\n        action = 'bot_left';\\n      } else if (oldStatus === 'member' && newStatus === 'administrator') {\\n        action = 'bot_promoted';\\n      } else if (oldStatus === 'administrator' && newStatus === 'member') {\\n        action = 'bot_demoted';\\n      }\\n\\n      if (action) {\\n        await AuditLog.create({\\n          action,\\n          adminUser: { id: chatMember.from.id, username: chatMember.from.username },\\n          chatId: chat.id,\\n          details: `Bot ${action.replace('_', ' ')} by ${chatMember.from.username || chatMember.from.id}`,\\n        });\\n      }\\n\\n      if (newStatus === 'member' || newStatus === 'administrator') {\\n        await ActiveChat.findOneAndUpdate(\\n          { chatId: chat.id },\\n          {\\n            chatId: chat.id,\\n            title: chat.title,\\n            type: chat.type,\\n            joinedAt: new Date(),\\n            lastActivityAt: new Date(),\\n          },\\n          { upsert: true, new: true }\\n        );\\n      } else {\\n        await ActiveChat.findOneAndDelete({ chatId: chat.id });\\n      }\\n    } else if ((oldStatus === 'left' || oldStatus === 'kicked') && newStatus === 'member') {\\n      await updateRecentMember(chat.id, user);\\n\\n      const activeChat = await ActiveChat.findOne({ chatId: chat.id });\\n      const muteDuration = activeChat?.muteDuration || DEFAULT_MUTE_DURATION;\\n\\n      console.log('checking impersonation');\\n      const matchedImpersonationRule = await impersonationService.checkUser(chat.id, user);\\n      if (matchedImpersonationRule) {\\n        const userNames = `${user.username ? `\\\"@${user.username}\\\" ` : `ID:${user.id}`} ${displayName?.length > 0 ? `[[\\\"${displayName}\\\"]]` : ''}`;\\n        const rulePattern = `${matchedImpersonationRule.username ? `\\\"@${matchedImpersonationRule.username}\\\" ` : ''} ${matchedImpersonationRule.displayName ? `[[\\\"${matchedImpersonationRule.displayName}\\\"]]` : ''}`;\\n        const details = `Impersonation attempt by new user ${userNames} matching rule \\\"${rulePattern}\\\"`;\\n        console.log(details);\\n\\n        await AuditLog.create({\\n          action: matchedImpersonationRule.action,\\n          targetUser: { id: user.id, username: user.username },\\n          adminUser: { id: botInfo!.id, username: botInfo!.username },\\n          chatId: chat.id,\\n          details: details,\\n        });\\n\\n        await handleModerationAction(\\n          bot,\\n          chat.id,\\n          undefined,\\n          user.id,\\n          matchedImpersonationRule.action,\\n          muteDuration,\\n          chat.type,\\n          botInfo!,\\n          details\\n        );\\n      }\\n    }\\n  });\\n\\n  bot.on('edited_message', async (msg) => {\\n    if (!botInfo) {\\n      console.error('Bot info not available in edited_message handler');\\n      return;\\n    }\\n\\n    await handleMessageChecks(msg as BotMessage, true);\\n  });\\n\\n  bot.on('message', async (msg) => {\\n    if (!botInfo) {\\n      console.error('Bot info not available in message handler');\\n      return;\\n    }\\n\\n    await RawMessage.create({\\n      chatId: msg.chat.id,\\n      messageId: msg.message_id,\\n      rawData: msg,\\n      timestamp: new Date(),\\n    });\\n\\n    let activeChat = await ActiveChat.findOneAndUpdate(\\n      { chatId: msg.chat.id },\\n      { lastActivityAt: new Date() },\\n      { new: true }\\n    );\\n    if (!activeChat) {\\n      activeChat = await ActiveChat.create({\\n        chatId: msg.chat.id,\\n        title: msg.chat.title,\\n        type: msg.chat.type,\\n        joinedAt: new Date(),\\n        lastActivityAt: new Date(),\\n      });\\n    }\\n\\n    await addRecentMessage(msg.chat.id, msg.message_id, msg.text || msg.caption, msg.from);\\n\\n    if (msg.from) {\\n      await updateRecentMember(msg.chat.id, msg.from);\\n    }\\n\\n    const botMsg = msg as BotMessage;\\n    await handleMessageChecks(botMsg, false);\\n  });\\n\\n  bot.onText(/^\\\\/md$/, async (msg) => {\\n    await moderationCommand(msg, 'delete');\\n  });\\n\\n  bot.onText(/^\\\\/mm$/, async (msg) => {\\n    await moderationCommand(msg, 'mute');\\n  });\\n\\n  bot.onText(/^\\\\/mb$/, async (msg) => {\\n    await moderationCommand(msg, 'ban');\\n  });\\n\\n  async function moderationCommand(msg: TelegramBot.Message, action: ModAction) {\\n    if (!msg.reply_to_message) return; // Command must be a reply\\n\\n    const chatId = msg.chat.id;\\n    const sender = msg.from;\\n    if (!sender) return;\\n\\n    // Check if sender is authorized\\n    if (!(await isAuthorizedToModerate(sender, chatId, bot, action))) {\\n      return;\\n    }\\n\\n    const targetMessage = msg.reply_to_message;\\n    const targetUser = targetMessage.from;\\n    if (!targetUser) return;\\n\\n    // Delete the command message\\n    try {\\n      await bot.deleteMessage(chatId, msg.message_id);\\n    } catch (error) {\\n      console.error('Failed to delete command message:', error);\\n    }\\n\\n    let detail: string;\\n    switch (action) {\\n      case 'ban':\\n        detail = `Admin command: /mb`;\\n        break;\\n      case 'mute':\\n        detail = `Admin command: /mm`;\\n        break;\\n      case 'delete':\\n        detail = `Admin command: /md`;\\n        break;\\n      default:\\n        detail = `Admin command: ${action}`;\\n    }\\n\\n    const activeChat = await ActiveChat.findOne({ chatId });\\n    const muteDuration = activeChat?.muteDuration || DEFAULT_MUTE_DURATION;\\n\\n    await handleModerationAction(\\n      bot,\\n      chatId,\\n      targetMessage.message_id,\\n      targetUser.id,\\n      action,\\n      muteDuration,\\n      msg.chat.type,\\n      sender, // Use command sender as adminUser\\n      detail,\\n      undefined,\\n      targetMessage.text || targetMessage.caption\\n    );\\n  }\\n\\n  const port = process.env.PORT || 3000;\\n  app.listen(port, () => {\\n    console.log(`Server running on port ${port}`);\\n  });\\n\\n  console.log('Bot started successfully');\\n\\n  process.on('SIGTERM', async () => {\\n    await OCRService.getInstance().cleanup();\\n    process.exit(0);\\n  });\\n}\\n\\ninit().catch(console.error);\\n\\n}\"\n      spyOn(websocketAction, 'requestFiles').mockResolvedValue({\n        'src/util/messages.ts': initialContent,\n      })\n      spyOn(websocketAction, 'requestOptionalFile').mockResolvedValue(\n        initialContent,\n      )\n      spyOn(\n        checkTerminalCommandModule,\n        'checkTerminalCommand',\n      ).mockResolvedValue(null)\n\n      // Mock LLM calls\n      spyOn(aisdk, 'promptAiSdk').mockResolvedValue('Mocked non-stream AiSdk')\n\n      const sessionState = getInitialSessionState(mockFileContext)\n      sessionState.mainAgentState.messageHistory.push(\n        {\n          role: 'assistant',\n          content: getToolCallString('read_files', {\n            paths: ['packages/backend/src/index.ts'],\n          }),\n        },\n        {\n          role: 'user',\n          content: renderReadFilesResult(\n            [\n              {\n                path: 'packages/backend/src/index.ts',\n                content: initialContent,\n              },\n            ],\n            {},\n          ),\n        },\n      )\n\n      const action = {\n        type: 'prompt' as const,\n        prompt: \"There's a syntax error. Delete the last } in the file\",\n        sessionState,\n        fingerprintId: 'test-delete-function-integration',\n        costMode: 'normal' as const,\n        promptId: 'test-delete-function-id-integration',\n        toolResults: [],\n      }\n\n      await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session-delete-function-integration',\n        localAgentTemplates: {\n          base: {\n            id: 'base',\n            displayName: 'Base Agent',\n            outputMode: 'last_message',\n            inputSchema: {},\n            spawnerPrompt: '',\n            model: 'gpt-4o-mini',\n            includeMessageHistory: true,\n            toolNames: ['write_file', 'run_terminal_command'],\n            spawnableAgents: [],\n            systemPrompt: '',\n            instructionsPrompt: '',\n            stepPrompt: '',\n          },\n        },\n        onResponseChunk: (chunk: string | PrintModeEvent) => {\n          if (typeof chunk !== 'string') {\n            return\n          }\n          process.stdout.write(chunk)\n        },\n      })\n\n      const requestToolCallSpy = websocketAction.requestToolCall as any\n\n      // Find the write_file tool call\n      const writeFileCall = requestToolCallSpy.mock.calls.find(\n        (call: any) => call[1] === 'write_file',\n      )\n      expect(writeFileCall).toBeDefined()\n      expect(writeFileCall[2].path).toBe('packages/backend/src/index.ts')\n      expect(writeFileCall[2].content.trim()).toBe(\n        `\n@@ -689,6 +689,4 @@\n   });\n }\n \n init().catch(console.error);\n-\n-}\n\\\\ No newline at end of file\n        `.trim(),\n      )\n    }, 60000) // Increase timeout for real LLM call\n  })\n})\n","postContent":"import { TEST_USER_ID } from '@codebuff/common/old-constants'\n\n// Mock imports needed for setup within the test\nimport { getToolCallString } from '@codebuff/common/tools/utils'\nimport { getInitialSessionState } from '@codebuff/common/types/session-state'\nimport {\n  afterEach,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  mock,\n  spyOn,\n} from 'bun:test'\n\nimport * as checkTerminalCommandModule from '../check-terminal-command'\nimport * as requestFilesPrompt from '../find-files/request-files-prompt'\nimport * as aisdk from '../llm-apis/vercel-ai-sdk/ai-sdk'\nimport { mainPrompt } from '../main-prompt'\nimport { logger } from '../util/logger'\nimport { renderReadFilesResult } from '../util/parse-tool-call-xml'\nimport * as websocketAction from '../websockets/websocket-action'\n\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\n// --- Shared Mocks & Helpers ---\n\nclass MockWebSocket {\n  send(msg: string) {}\n  close() {}\n  on(event: string, listener: (...args: any[]) => void) {}\n  removeListener(event: string, listener: (...args: any[]) => void) {}\n}\n\nconst mockFileContext: ProjectFileContext = {\n  projectRoot: '/test',\n  cwd: '/test',\n  fileTree: [],\n  fileTokenScores: {},\n  knowledgeFiles: {},\n  gitChanges: {\n    status: '',\n    diff: '',\n    diffCached: '',\n    lastCommitMessages: '',\n  },\n  changesSinceLastChat: {},\n  shellConfigFiles: {},\n  systemInfo: {\n    platform: 'test',\n    shell: 'test',\n    nodeVersion: 'test',\n    arch: 'test',\n    homedir: '/home/test',\n    cpus: 1,\n  },\n  agentTemplates: {},\n  customToolDefinitions: {},\n}\n\n// --- Integration Test with Real LLM Call ---\ndescribe.skip('mainPrompt (Integration)', () => {\n  let mockLocalAgentTemplates: Record<string, any>\n\n  beforeEach(() => {\n    // Setup common mock agent templates\n    mockLocalAgentTemplates = {\n      base: {\n        id: 'base',\n        displayName: 'Base Agent',\n        outputMode: 'last_message',\n        inputSchema: {},\n        spawnerPrompt: '',\n        model: 'gpt-4o-mini',\n        includeMessageHistory: true,\n        toolNames: ['write_file', 'run_terminal_command'],\n        spawnableAgents: [],\n        systemPrompt: '',\n        instructionsPrompt: '',\n        stepPrompt: '',\n      },\n    }\n\n    spyOn(websocketAction, 'requestToolCall').mockImplementation(\n      async (\n        ws: WebSocket,\n        userInputId: string,\n        toolName: string,\n        input: Record<string, any>,\n      ) => {\n        return {\n          success: true,\n          result: `Tool call success: ${{ toolName, input }}` as any,\n        }\n      },\n    )\n  })\n\n  afterEach(() => {\n    mock.restore()\n  })\n\n  it('should delete a specified function while preserving other code', async () => {\n    // Mock necessary non-LLM functions\n    spyOn(logger, 'debug').mockImplementation(() => {})\n    spyOn(logger, 'error').mockImplementation(() => {})\n    spyOn(logger, 'info').mockImplementation(() => {})\n    spyOn(logger, 'warn').mockImplementation(() => {})\n    spyOn(requestFilesPrompt, 'requestRelevantFiles').mockResolvedValue([])\n\n    const initialContent = `import { Message } from '@codebuff/common/types/message'\nimport { withCacheControl } from '@codebuff/common/util/messages'\n\nimport { System } from '../llm-apis/claude'\nimport { OpenAIMessage } from '../llm-apis/openai-api'\nimport { logger } from './logger'\nimport { simplifyTerminalCommandResults } from './simplify-tool-results'\nimport { countTokensJson } from './token-counter'\n\n/**\n * Wraps an array of messages with a system prompt for LLM API calls\n * @param messages - Array of messages to wrap\n * @param system - System prompt to prepend\n * @returns Array with system message followed by provided messages\n */\nexport const messagesWithSystem = (messages: Message[], system: System) =>\n  [{ role: 'system', content: system }, ...messages] as OpenAIMessage[]\n\nexport function asSystemInstruction(str: string): string {\n  return \\`<system_instructions>\\${str}</system_instructions>\\`\n}\n\nexport function asSystemMessage(str: string): string {\n  return \\`<system>\\${str}</system>\\`\n}\n\nexport function isSystemInstruction(str: string): boolean {\n  return (\n    str.startsWith('<system_instructions>') &&\n    str.endsWith('</system_instructions>')\n  )\n}\n\nexport function isSystemMessage(str: string): boolean {\n  return str.startsWith('<system>') && str.endsWith('</system>')\n}\n\n/**\n * Extracts the text content from a message, handling both string and array content types\n * @param message - Message to extract text from\n * @returns Combined text content of the message, or undefined if no text content\n */\nexport function getMessageText(message: Message): string | undefined {\n  if (typeof message.content === 'string') {\n    return message.content\n  }\n  return message.content.map((c) => ('text' in c ? c.text : '')).join('\\\\n')\n}\n\nexport function castAssistantMessage(message: Message): Message {\n  if (message.role !== 'assistant') {\n    return message\n  }\n  if (typeof message.content === 'string') {\n    return {\n      content: \\`<previous_assistant_message>\\${message.content}</previous_assistant_message>\\`,\n      role: 'user' as const,\n    }\n  }\n  return {\n    role: 'user' as const,\n    content: message.content.map((m) => {\n      if (m.type === 'text') {\n        return {\n          ...m,\n          text: \\`<previous_assistant_message>\\${m.text}</previous_assistant_message>\\`,\n        }\n      }\n      return m\n    }),\n  }\n}\n\n// Number of terminal command outputs to keep in full form before simplifying\nconst numTerminalCommandsToKeep = 5\n\n/**\n * Helper function to simplify terminal command output while preserving some recent ones\n * @param text - Terminal output text to potentially simplify\n * @param numKept - Number of terminal outputs already kept in full form\n * @returns Object containing simplified result and updated count of kept outputs\n */\nfunction simplifyTerminalHelper(\n  text: string,\n  numKept: number\n): { result: string; numKept: number } {\n  const simplifiedText = simplifyTerminalCommandResults(text)\n\n  // Keep the full output for the N most recent commands\n  if (numKept < numTerminalCommandsToKeep && simplifiedText !== text) {\n    return { result: text, numKept: numKept + 1 }\n  }\n\n  return {\n    result: simplifiedText,\n    numKept,\n  }\n}\n\n// Factor to reduce token count target by, to leave room for new messages\nconst shortenedMessageTokenFactor = 0.5\n\n/**\n * Trims messages from the beginning to fit within token limits while preserving\n * important content. Also simplifies terminal command outputs to save tokens.\n *\n * The function:\n * 1. Processes messages from newest to oldest\n * 2. Simplifies terminal command outputs after keeping N most recent ones\n * 3. Stops adding messages when approaching token limit\n *\n * @param messages - Array of messages to trim\n * @param systemTokens - Number of tokens used by system prompt\n * @param maxTotalTokens - Maximum total tokens allowed, defaults to 200k\n * @returns Trimmed array of messages that fits within token limit\n */\nexport function trimMessagesToFitTokenLimit(\n  messages: Message[],\n  systemTokens: number,\n  maxTotalTokens: number = 200_000\n): Message[] {\n  const MAX_MESSAGE_TOKENS = maxTotalTokens - systemTokens\n\n  // Check if we're already under the limit\n  const initialTokens = countTokensJson(messages)\n\n  if (initialTokens < MAX_MESSAGE_TOKENS) {\n    return messages\n  }\n\n  let totalTokens = 0\n  const targetTokens = MAX_MESSAGE_TOKENS * shortenedMessageTokenFactor\n  const results: Message[] = []\n  let numKept = 0\n\n  // Process messages from newest to oldest\n  for (let i = messages.length - 1; i >= 0; i--) {\n    const { role, content } = messages[i]\n    let newContent: typeof content\n\n    // Handle string content (usually terminal output)\n    if (typeof content === 'string') {\n      if (isSystemInstruction(content)) {\n        continue\n      }\n      const result = simplifyTerminalHelper(content, numKept)\n      newContent = result.result\n      numKept = result.numKept\n    } else {\n      // Handle array content (mixed content types)\n      newContent = []\n      // Process content parts from newest to oldest\n      for (let j = content.length - 1; j >= 0; j--) {\n        const messagePart = content[j]\n        // Preserve non-text content (i.e. images)\n        if (messagePart.type !== 'text') {\n          newContent.push(messagePart)\n          continue\n        }\n\n        const result = simplifyTerminalHelper(messagePart.text, numKept)\n        newContent.push({ ...messagePart, text: result.result })\n        numKept = result.numKept\n      }\n      newContent.reverse()\n    }\n\n    // Check if adding this message would exceed our token target\n    const message = { role, content: newContent }\n    const messageTokens = countTokensJson(message)\n\n    if (totalTokens + messageTokens <= targetTokens) {\n      results.push({ role, content: newContent })\n      totalTokens += messageTokens\n    } else {\n      break\n    }\n  }\n\n  results.reverse()\n  return results\n}\n\nexport function getMessagesSubset(messages: Message[], otherTokens: number) {\n  const indexLastSubgoalComplete = messages.findLastIndex(({ content }) => {\n    JSON.stringify(content).includes('COMPLETE')\n  })\n\n  const messagesSubset = trimMessagesToFitTokenLimit(\n    indexLastSubgoalComplete === -1\n      ? messages\n      : messages.slice(indexLastSubgoalComplete),\n    otherTokens\n  )\n\n  // Remove cache_control from all messages\n  for (const message of messagesSubset) {\n    if (typeof message.content === 'object' && message.content.length > 0) {\n      delete message.content[message.content.length - 1].cache_control\n    }\n  }\n\n  // Cache up to the last message!\n  const lastMessage = messagesSubset[messagesSubset.length - 1]\n  if (lastMessage) {\n    messagesSubset[messagesSubset.length - 1] = withCacheControl(lastMessage)\n  } else {\n    logger.debug(\n      {\n        messages,\n        messagesSubset,\n        otherTokens,\n      },\n      'No last message found in messagesSubset!'\n    )\n  }\n\n  return messagesSubset\n}\n`\n    spyOn(websocketAction, 'requestFiles').mockResolvedValue({\n      'src/util/messages.ts': initialContent,\n    })\n    spyOn(websocketAction, 'requestOptionalFile').mockResolvedValue(\n      initialContent,\n    )\n    spyOn(checkTerminalCommandModule, 'checkTerminalCommand').mockResolvedValue(\n      null,\n    )\n\n    // Mock LLM calls\n    spyOn(aisdk, 'promptAiSdk').mockResolvedValue('Mocked non-stream AiSdk')\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    sessionState.mainAgentState.messageHistory.push(\n      {\n        role: 'assistant',\n        content: getToolCallString('read_files', {\n          paths: ['src/util/messages.ts'],\n        }),\n      },\n      {\n        role: 'user',\n        content: renderReadFilesResult(\n          [\n            {\n              path: 'src/util/messages.ts',\n              content: initialContent,\n            },\n          ],\n          {},\n        ),\n      },\n    )\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Delete the castAssistantMessage function',\n      sessionState,\n      fingerprintId: 'test-delete-function-integration',\n      costMode: 'normal' as const,\n      promptId: 'test-delete-function-id-integration',\n      toolResults: [],\n    }\n\n    const {\n      toolCalls,\n      toolResults,\n      sessionState: finalSessionState,\n    } = await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n      userId: TEST_USER_ID,\n      clientSessionId: 'test-session-delete-function-integration',\n      localAgentTemplates: mockLocalAgentTemplates,\n      onResponseChunk: (chunk: string | PrintModeEvent) => {\n        if (typeof chunk !== 'string') {\n          return\n        }\n        process.stdout.write(chunk)\n      },\n    })\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n\n    // Find the write_file tool call\n    const writeFileCall = requestToolCallSpy.mock.calls.find(\n      (call: any) => call[1] === 'write_file',\n    )\n    expect(writeFileCall).toBeDefined()\n    expect(writeFileCall[2].path).toBe('src/util/messages.ts')\n    expect(writeFileCall[2].content.trim()).toBe(\n      `@@ -46,32 +46,8 @@\\n   }\\n   return message.content.map((c) => ('text' in c ? c.text : '')).join('\\\\n')\\n }\\n \\n-export function castAssistantMessage(message: Message): Message {\\n-  if (message.role !== 'assistant') {\\n-    return message\\n-  }\\n-  if (typeof message.content === 'string') {\\n-    return {\\n-      content: \\`<previous_assistant_message>\\${message.content}</previous_assistant_message>\\`,\\n-      role: 'user' as const,\\n-    }\\n-  }\\n-  return {\\n-    role: 'user' as const,\\n-    content: message.content.map((m) => {\\n-      if (m.type === 'text') {\\n-        return {\\n-          ...m,\\n-          text: \\`<previous_assistant_message>\\${m.text}</previous_assistant_message>\\`,\\n-        }\\n-      }\\n-      return m\\n-    }),\\n-  }\\n-}\\n-\\n // Number of terminal command outputs to keep in full form before simplifying\\n const numTerminalCommandsToKeep = 5\\n \\n /**`.trim(),\n    )\n  }, 60000) // Increase timeout for real LLM call\n\n  describe.skip('Real world example', () => {\n    it('should specify deletion comment while deleting single character', async () => {\n      // Mock necessary non-LLM functions\n      spyOn(logger, 'debug').mockImplementation(() => {})\n      spyOn(logger, 'error').mockImplementation(() => {})\n      spyOn(logger, 'info').mockImplementation(() => {})\n      spyOn(logger, 'warn').mockImplementation(() => {})\n      spyOn(requestFilesPrompt, 'requestRelevantFiles').mockResolvedValue([])\n\n      const initialContent =\n        \"import express from 'express';\\nimport session from 'express-session';\\nimport cors from 'cors';\\nimport TelegramBot, { User, ChatMember, MessageEntity } from 'node-telegram-bot-api';\\nimport { connectDB } from './config/database';\\nimport authRouter from './api/auth';\\nimport blacklistPhrasesRouter from './api/blacklistPhrases';\\nimport whitelistUsersRouter from './api/whitelistUsers';\\nimport whitelistPhrasesRouter from './api/whitelistPhrases';\\nimport statsRouter from './api/stats';\\nimport ocrRouter from './api/ocr';\\nimport settingsRouter from './api/settings';\\nimport impersonationRouter from './api/impersonation';\\nimport botActionsRouter from './api/botActions';\\nimport { impersonationService } from './services/ImpersonationService';\\nimport {\\n  AdminUser,\\n  AuditLogAction,\\n  ChatPermissions,\\n  compareModActions,\\n  ModAction,\\n} from '@buff-bot/shared';\\nimport { blacklistPhraseService } from './services/BlacklistPhraseService';\\nimport { whitelistUserService } from './services/WhitelistUserService';\\nimport { OCRService } from './services/OCRService';\\nimport { AuditLog } from './models/AuditLog';\\nimport { ActiveChat } from './models/ActiveChat';\\nimport { RawMessage } from './models/RawMessage';\\nimport { updateRecentMember } from './models/RecentMember';\\nimport { addRecentMessage } from './models/RecentMessage';\\nimport { whitelistPhraseService } from './services/WhitelistPhraseService';\\nimport { handleModerationAction } from './services/moderationActions';\\nimport { Admin } from './models/Admin';\\n\\ninterface PendingModeration {\\n  action: ModAction;\\n  userId?: number;\\n  detailsForLog: string;\\n  phraseForLog?: string;\\n  messageContent: string | undefined;\\n}\\n\\ndeclare module 'express-session' {\\n  interface SessionData {\\n    user?: AdminUser;\\n  }\\n}\\n\\n// Temporary type definitions until @types/node-telegram-bot-api is updated\\ninterface BotMessage extends TelegramBot.Message {\\n  story?: Story;\\n  external_reply?: any;\\n}\\n\\ninterface Story {\\n  chat: TelegramBot.Chat;\\n  id: number;\\n}\\n\\n/**\\n * Extend the built-in Error to carry an optional HTTP status code.\\n */\\nexport interface HttpError {\\n  message: string;\\n  status?: number;\\n  error?: Error;\\n}\\n\\nconst token = process.env.BOT_TOKEN;\\nif (!token) {\\n  throw new Error('BOT_TOKEN must be provided in environment variables');\\n}\\n\\nconst DEFAULT_MUTE_DURATION = parseInt(process.env.DEFAULT_MUTE_DURATION || '3600', 10);\\nconst ADMIN_CACHE_DURATION_MS = 15 * 60 * 1000; // Cache Telegram admins for 15 minutes\\n\\nconst bot = new TelegramBot(token, {\\n  polling: {\\n    params: {\\n      // Type definitions are incorrect here; need to pass array as json string form\\n      allowed_updates: JSON.stringify(['message', 'edited_message', 'chat_member']) as any,\\n    },\\n  },\\n});\\n\\nconst app = express();\\napp.use(\\n  cors({\\n    origin: process.env.FRONTEND_URL || 'http://localhost:5173',\\n    credentials: true,\\n  })\\n);\\napp.use(express.json());\\napp.use(\\n  session({\\n    secret: process.env.SESSION_SECRET || 'your-secret-key',\\n    resave: false,\\n    saveUninitialized: false,\\n    cookie: { secure: process.env.NODE_ENV === 'production' },\\n  })\\n);\\n\\nfunction errorHandler(\\n  err: HttpError,\\n  req: express.Request,\\n  res: express.Response,\\n  next: express.NextFunction\\n) {\\n  const status = err.status || 500;\\n  const message = err.message || 'Internal Server Error';\\n\\n  console.error(`[${new Date().toISOString()}]`, {\\n    status,\\n    message,\\n    // include stack in logs, but not in production responses\\n    stack: err.error?.stack,\\n    path: req.originalUrl,\\n    method: req.method,\\n  });\\n\\n  const payload = { error: { message } };\\n\\n  res.status(status).json(payload);\\n}\\n\\napp.set('bot', bot);\\n\\napp.use('/api/auth', authRouter);\\napp.use('/api/blacklist-phrases', blacklistPhrasesRouter);\\napp.use('/api/whitelist-users', whitelistUsersRouter);\\napp.use('/api/whitelist-phrases', whitelistPhrasesRouter);\\napp.use('/api/ocr', ocrRouter);\\napp.use('/api/stats', statsRouter);\\napp.use('/api/settings', settingsRouter);\\napp.use('/api/impersonation', impersonationRouter);\\napp.use('/api/bot', botActionsRouter);\\n\\napp.use(errorHandler);\\n\\nlet botInfo: TelegramBot.User | null = null;\\n\\ninterface AdminCacheEntry {\\n  admins: ChatMember[];\\n  expiresAt: number;\\n}\\n\\nconst telegramAdminCache = new Map<number, AdminCacheEntry>();\\n\\nasync function getTelegramAdmin(\\n  senderId: number,\\n  chatId: number,\\n  botInstance: TelegramBot\\n): Promise<ChatMember | undefined> {\\n  const now = Date.now();\\n  const cachedEntry = telegramAdminCache.get(chatId);\\n\\n  if (cachedEntry && cachedEntry.expiresAt > now) {\\n    return cachedEntry.admins.find((admin) => admin.user.id === senderId);\\n  }\\n\\n  try {\\n    const chatAdmins = await botInstance.getChatAdministrators(chatId);\\n    telegramAdminCache.set(chatId, {\\n      admins: chatAdmins,\\n      expiresAt: now + ADMIN_CACHE_DURATION_MS,\\n    });\\n\\n    return chatAdmins.find((admin) => admin.user.id === senderId);\\n  } catch (error: any) {\\n    if (error.response?.statusCode !== 403 && error.response?.statusCode !== 400) {\\n      console.error(`Error fetching chat admins for chat ${chatId}:`, error.message);\\n    }\\n    return cachedEntry?.admins.find((admin) => admin.user.id === senderId);\\n  }\\n}\\n\\nasync function isAuthorizedToModerate(\\n  sender: TelegramBot.User,\\n  chatId: number,\\n  botInstance: TelegramBot,\\n  action: ModAction\\n): Promise<boolean> {\\n  // Check if user is a super admin\\n  const adminUser = await Admin.findOne({ telegramId: sender.id });\\n  if (adminUser?.isSuperAdmin) {\\n    return true;\\n  }\\n\\n  // Check if user is a bot admin for this chat with MANAGE_CHANNEL permission\\n  if (\\n    adminUser?.chatPermissions?.some(\\n      (cp: ChatPermissions) => cp.chatId === chatId && cp.permissions.MANAGE_CHANNEL\\n    )\\n  ) {\\n    return true;\\n  }\\n\\n  // Check if user is a Telegram chat admin with appropriate permissions\\n  const telegramAdmin = await getTelegramAdmin(sender.id, chatId, botInstance);\\n  if (!telegramAdmin) {\\n    return false;\\n  }\\n\\n  if (action === 'delete') {\\n    return telegramAdmin.can_delete_messages || false;\\n  }\\n\\n  if (action === 'mute' || action === 'ban') {\\n    return telegramAdmin.can_restrict_members || false;\\n  }\\n\\n  return false;\\n}\\n\\nasync function init() {\\n  await connectDB();\\n  await blacklistPhraseService.init();\\n  await OCRService.getInstance().init(bot);\\n  await impersonationService.init();\\n  await whitelistUserService.init();\\n  await whitelistPhraseService.init();\\n\\n  botInfo = await bot.getMe();\\n  if (!botInfo) {\\n    throw new Error('Failed to get bot information');\\n  }\\n  console.log(`Bot initialized: ${botInfo.username} (ID: ${botInfo.id})`);\\n\\n  setInterval(\\n    () => {\\n      const now = Date.now();\\n      for (const [chatId, entry] of telegramAdminCache.entries()) {\\n        if (entry.expiresAt <= now) {\\n          telegramAdminCache.delete(chatId);\\n        }\\n      }\\n    },\\n    60 * 60 * 1000\\n  );\\n\\n  async function handleMessageChecks(msg: BotMessage, isEdited: boolean = false): Promise<boolean> {\\n    if (!botInfo) {\\n      console.error('Bot info not available in handleMessageChecks');\\n      return false;\\n    }\\n\\n    const text = msg.text || msg.caption || undefined;\\n    const chatId = msg.chat.id;\\n    const messageId = msg.message_id;\\n    const sender = msg.from;\\n\\n    const activeChat = await ActiveChat.findOne({ chatId });\\n    if (!activeChat) {\\n      return false;\\n    }\\n\\n    const muteDuration = activeChat.muteDuration || DEFAULT_MUTE_DURATION;\\n    const linkAction = activeChat.linkModerationAction || 'none';\\n    const fakeSlashAction = activeChat.fakeSlashModerationAction || 'none';\\n    const storyAction = activeChat.forwardedStoryAction || 'none';\\n    const replyMarkupAction = activeChat.replyMarkupAction || 'none';\\n    const forwardedPollAction = activeChat.forwardedPollAction || 'none';\\n    const externalReplyAction = activeChat?.externalReplyAction || 'none';\\n\\n    // Initialize tracking for the most severe action\\n    let pendingModAction: PendingModeration | null = null;\\n\\n    // Helper to build context string\\n    const getContextHint = () => {\\n      let context = '';\\n      if (isEdited) context += '(edited message)';\\n      if (msg.forward_date) {\\n        if (context) context += ' ';\\n        context += '(forwarded message)';\\n      }\\n      return context;\\n    };\\n\\n    // Helper to update pending moderation if the new action is more severe\\n    const tryUpdatePendingModeration = (\\n      potentialAction: ModAction,\\n      userIdToMod: number | undefined,\\n      logDetails: string,\\n      logPhrase?: string,\\n      msgContent?: string\\n    ) => {\\n      if (\\n        pendingModAction === null ||\\n        compareModActions(potentialAction, pendingModAction.action) > 0\\n      ) {\\n        pendingModAction = {\\n          action: potentialAction,\\n          userId: userIdToMod,\\n          detailsForLog: logDetails,\\n          phraseForLog: logPhrase,\\n          messageContent: msgContent,\\n        };\\n      }\\n    };\\n\\n    if (sender) {\\n      // Check Sender is whitelisted; skip all moderation if applicable\\n      const isWhitelisted = await whitelistUserService.isWhitelisted(chatId, sender.id);\\n      if (isWhitelisted) {\\n        return false; // No moderation actions taken\\n      }\\n\\n      // Check for impersonation by sender\\n      const matchedImpersonationRule = await impersonationService.checkUser(chatId, sender);\\n      if (matchedImpersonationRule) {\\n        const displayName = [sender.first_name, sender.last_name].filter(Boolean).join(' ');\\n        const userNames = `${sender.username ? `\\\"@${sender.username}\\\" ` : `ID:${sender.id}`} ${displayName?.length > 0 ? `[[\\\"${displayName}\\\"]]` : ''}`;\\n        const rulePattern = `${matchedImpersonationRule.username ? `\\\"@${matchedImpersonationRule.username}\\\" ` : ''} ${matchedImpersonationRule.displayName ? `[[\\\"${matchedImpersonationRule.displayName}\\\"]]` : ''}`;\\n        const details =\\n          `Impersonation attempt ${userNames} matching rule \\\"${rulePattern}\\\" ${getContextHint()}`.trim();\\n\\n        tryUpdatePendingModeration(\\n          matchedImpersonationRule.action,\\n          sender.id,\\n          details,\\n          undefined,\\n          text\\n        );\\n      }\\n    }\\n\\n    // Check for forwarded story\\n    if (msg.story && msg.chat.id !== msg.story.chat.id && storyAction !== 'none') {\\n      const details = 'Forwarded content: Story';\\n      tryUpdatePendingModeration(storyAction, sender?.id, details, undefined, '[Forwarded Story]');\\n    }\\n\\n    if (msg.forward_from) {\\n      // Check the Original Sender is whitelisted; skip all moderation if applicable\\n      const isWhitelisted = await whitelistUserService.isWhitelisted(chatId, msg.forward_from.id);\\n      if (isWhitelisted) {\\n        return false; // No moderation actions taken\\n      }\\n\\n      // Check impersonation by author of forwarded message\\n      const matchedImpersonationRule = await impersonationService.checkUser(\\n        chatId,\\n        msg.forward_from\\n      );\\n      if (matchedImpersonationRule) {\\n        const displayName = [msg.forward_from.first_name, msg.forward_from.last_name]\\n          .filter(Boolean)\\n          .join(' ');\\n        const userNames = `${msg.forward_from.username ? `\\\"@${msg.forward_from.username}\\\" ` : `ID:${msg.forward_from.id}`} ${displayName?.length > 0 ? `[[\\\"${displayName}\\\"]]` : ''}`;\\n        const rulePattern = `${matchedImpersonationRule.username ? `\\\"@${matchedImpersonationRule.username}\\\" ` : ''} ${matchedImpersonationRule.displayName ? `[[\\\"${matchedImpersonationRule.displayName}\\\"]]` : ''}`;\\n        const details =\\n          `Impersonation attempt by original author ${userNames} of forwarded message, matching rule \\\"${rulePattern}\\\" ${getContextHint()}`.trim();\\n\\n        tryUpdatePendingModeration(\\n          matchedImpersonationRule.action,\\n          sender?.id, // Action is on the forwarder\\n          details,\\n          undefined,\\n          text\\n        );\\n      }\\n    }\\n\\n    // Check text for whitelist match first - if matched, skip all other text checks\\n    if (text) {\\n      const whitelistMatch = await whitelistPhraseService.checkMessage(text, chatId);\\n      if (whitelistMatch) {\\n        return false; // No action was taken\\n      }\\n\\n      const matchedPhrase = await blacklistPhraseService.checkMessage(text, chatId);\\n      if (matchedPhrase) {\\n        const contextHint = getContextHint();\\n        const details = `Blacklisted phrase detected ${contextHint}`.trim();\\n\\n        tryUpdatePendingModeration(\\n          matchedPhrase.action,\\n          sender?.id,\\n          details,\\n          matchedPhrase.phrase,\\n          text\\n        );\\n      }\\n    }\\n\\n    if (fakeSlashAction !== 'none' && msg.entities && msg.entities.length > 0) {\\n      const hasFakeSlash = msg.entities.some(\\n        (entity: MessageEntity) => entity.type === 'text_link' && msg.text![entity.offset] === '/'\\n      );\\n\\n      if (hasFakeSlash) {\\n        const details = `Fake slash command detected ${getContextHint()}`.trim();\\n        tryUpdatePendingModeration(fakeSlashAction, sender?.id, details, undefined, text);\\n      }\\n    }\\n\\n    if (externalReplyAction !== 'none' && msg.external_reply) {\\n      const details = `Message has external reply ${getContextHint()}`.trim();\\n      tryUpdatePendingModeration(externalReplyAction, sender?.id, details, undefined, text);\\n    }\\n\\n    if (linkAction !== 'none' && msg.entities && msg.entities.length > 0) {\\n      const hasLink = msg.entities.some(\\n        (entity: MessageEntity) => entity.type === 'url' || entity.type === 'text_link'\\n      );\\n\\n      if (hasLink) {\\n        const details = `Link detected ${getContextHint()}`.trim();\\n        tryUpdatePendingModeration(linkAction, sender?.id, details, undefined, text);\\n      }\\n    }\\n\\n    if (msg.reply_markup && replyMarkupAction !== 'none') {\\n      const details = `Message contains reply markup ${getContextHint()}`.trim();\\n      tryUpdatePendingModeration(replyMarkupAction, sender?.id, details, undefined, text);\\n    }\\n\\n    if (msg.poll && msg.forward_date && forwardedPollAction !== 'none') {\\n      const details = `Forwarded poll detected ${getContextHint()}`.trim();\\n      tryUpdatePendingModeration(\\n        forwardedPollAction,\\n        sender?.id,\\n        details,\\n        undefined,\\n        `[Forwarded Poll: ${msg.poll.question}]`\\n      );\\n    }\\n\\n    // ToDo check is OCR enabled?\\n    if (msg.photo || msg.sticker) {\\n      const ocrResult = await OCRService.getInstance().handleImage(msg);\\n      if (ocrResult && ocrResult.confidence > activeChat.ocrMinConfidence) {\\n        const whitelistMatch = await whitelistPhraseService.checkMessage(ocrResult.text, chatId);\\n        if (whitelistMatch) {\\n          return false; // No action was taken\\n        }\\n\\n        const matchedPhrase = await blacklistPhraseService.checkMessage(ocrResult.text, chatId);\\n        if (matchedPhrase) {\\n          const details = `Blacklisted phrase found in image (OCR) ${getContextHint()}`.trim();\\n\\n          tryUpdatePendingModeration(\\n            matchedPhrase.action,\\n            sender?.id,\\n            details,\\n            matchedPhrase.phrase,\\n            text\\n          );\\n        }\\n      }\\n    }\\n\\n    // Finally, execute the most severe action if one was determined\\n    if (pendingModAction) {\\n      pendingModAction = pendingModAction as PendingModeration; // hack around TS:strictNullChecks\\n      await handleModerationAction(\\n        bot,\\n        chatId,\\n        messageId,\\n        pendingModAction.userId,\\n        pendingModAction.action,\\n        muteDuration,\\n        msg.chat.type,\\n        botInfo,\\n        pendingModAction.detailsForLog,\\n        pendingModAction.phraseForLog,\\n        pendingModAction.messageContent\\n      );\\n      return true; // An action was taken\\n    }\\n\\n    return false; // No action was taken\\n  }\\n\\n  bot.on('chat_member', async (chatMember: TelegramBot.ChatMemberUpdated) => {\\n    if (!botInfo) {\\n      console.error('Bot info not available in chat_member handler');\\n      return;\\n    }\\n\\n    const chat = chatMember.chat;\\n    const user = chatMember.new_chat_member.user;\\n    const displayName = [user.first_name, user.last_name].filter(Boolean).join(' ');\\n    const oldStatus = chatMember.old_chat_member.status;\\n    const newStatus = chatMember.new_chat_member.status;\\n\\n    if (user.id === botInfo.id) {\\n      console.log('bot member status change?!?!');\\n      let action: AuditLogAction | null = null;\\n      if (oldStatus === 'left' && (newStatus === 'member' || newStatus === 'administrator')) {\\n        action = 'bot_joined';\\n      } else if (\\n        (oldStatus === 'member' || oldStatus === 'administrator') &&\\n        (newStatus === 'left' || newStatus === 'kicked')\\n      ) {\\n        action = 'bot_left';\\n      } else if (oldStatus === 'member' && newStatus === 'administrator') {\\n        action = 'bot_promoted';\\n      } else if (oldStatus === 'administrator' && newStatus === 'member') {\\n        action = 'bot_demoted';\\n      }\\n\\n      if (action) {\\n        await AuditLog.create({\\n          action,\\n          adminUser: { id: chatMember.from.id, username: chatMember.from.username },\\n          chatId: chat.id,\\n          details: `Bot ${action.replace('_', ' ')} by ${chatMember.from.username || chatMember.from.id}`,\\n        });\\n      }\\n\\n      if (newStatus === 'member' || newStatus === 'administrator') {\\n        await ActiveChat.findOneAndUpdate(\\n          { chatId: chat.id },\\n          {\\n            chatId: chat.id,\\n            title: chat.title,\\n            type: chat.type,\\n            joinedAt: new Date(),\\n            lastActivityAt: new Date(),\\n          },\\n          { upsert: true, new: true }\\n        );\\n      } else {\\n        await ActiveChat.findOneAndDelete({ chatId: chat.id });\\n      }\\n    } else if ((oldStatus === 'left' || oldStatus === 'kicked') && newStatus === 'member') {\\n      await updateRecentMember(chat.id, user);\\n\\n      const activeChat = await ActiveChat.findOne({ chatId: chat.id });\\n      const muteDuration = activeChat?.muteDuration || DEFAULT_MUTE_DURATION;\\n\\n      console.log('checking impersonation');\\n      const matchedImpersonationRule = await impersonationService.checkUser(chat.id, user);\\n      if (matchedImpersonationRule) {\\n        const userNames = `${user.username ? `\\\"@${user.username}\\\" ` : `ID:${user.id}`} ${displayName?.length > 0 ? `[[\\\"${displayName}\\\"]]` : ''}`;\\n        const rulePattern = `${matchedImpersonationRule.username ? `\\\"@${matchedImpersonationRule.username}\\\" ` : ''} ${matchedImpersonationRule.displayName ? `[[\\\"${matchedImpersonationRule.displayName}\\\"]]` : ''}`;\\n        const details = `Impersonation attempt by new user ${userNames} matching rule \\\"${rulePattern}\\\"`;\\n        console.log(details);\\n\\n        await AuditLog.create({\\n          action: matchedImpersonationRule.action,\\n          targetUser: { id: user.id, username: user.username },\\n          adminUser: { id: botInfo!.id, username: botInfo!.username },\\n          chatId: chat.id,\\n          details: details,\\n        });\\n\\n        await handleModerationAction(\\n          bot,\\n          chat.id,\\n          undefined,\\n          user.id,\\n          matchedImpersonationRule.action,\\n          muteDuration,\\n          chat.type,\\n          botInfo!,\\n          details\\n        );\\n      }\\n    }\\n  });\\n\\n  bot.on('edited_message', async (msg) => {\\n    if (!botInfo) {\\n      console.error('Bot info not available in edited_message handler');\\n      return;\\n    }\\n\\n    await handleMessageChecks(msg as BotMessage, true);\\n  });\\n\\n  bot.on('message', async (msg) => {\\n    if (!botInfo) {\\n      console.error('Bot info not available in message handler');\\n      return;\\n    }\\n\\n    await RawMessage.create({\\n      chatId: msg.chat.id,\\n      messageId: msg.message_id,\\n      rawData: msg,\\n      timestamp: new Date(),\\n    });\\n\\n    let activeChat = await ActiveChat.findOneAndUpdate(\\n      { chatId: msg.chat.id },\\n      { lastActivityAt: new Date() },\\n      { new: true }\\n    );\\n    if (!activeChat) {\\n      activeChat = await ActiveChat.create({\\n        chatId: msg.chat.id,\\n        title: msg.chat.title,\\n        type: msg.chat.type,\\n        joinedAt: new Date(),\\n        lastActivityAt: new Date(),\\n      });\\n    }\\n\\n    await addRecentMessage(msg.chat.id, msg.message_id, msg.text || msg.caption, msg.from);\\n\\n    if (msg.from) {\\n      await updateRecentMember(msg.chat.id, msg.from);\\n    }\\n\\n    const botMsg = msg as BotMessage;\\n    await handleMessageChecks(botMsg, false);\\n  });\\n\\n  bot.onText(/^\\\\/md$/, async (msg) => {\\n    await moderationCommand(msg, 'delete');\\n  });\\n\\n  bot.onText(/^\\\\/mm$/, async (msg) => {\\n    await moderationCommand(msg, 'mute');\\n  });\\n\\n  bot.onText(/^\\\\/mb$/, async (msg) => {\\n    await moderationCommand(msg, 'ban');\\n  });\\n\\n  async function moderationCommand(msg: TelegramBot.Message, action: ModAction) {\\n    if (!msg.reply_to_message) return; // Command must be a reply\\n\\n    const chatId = msg.chat.id;\\n    const sender = msg.from;\\n    if (!sender) return;\\n\\n    // Check if sender is authorized\\n    if (!(await isAuthorizedToModerate(sender, chatId, bot, action))) {\\n      return;\\n    }\\n\\n    const targetMessage = msg.reply_to_message;\\n    const targetUser = targetMessage.from;\\n    if (!targetUser) return;\\n\\n    // Delete the command message\\n    try {\\n      await bot.deleteMessage(chatId, msg.message_id);\\n    } catch (error) {\\n      console.error('Failed to delete command message:', error);\\n    }\\n\\n    let detail: string;\\n    switch (action) {\\n      case 'ban':\\n        detail = `Admin command: /mb`;\\n        break;\\n      case 'mute':\\n        detail = `Admin command: /mm`;\\n        break;\\n      case 'delete':\\n        detail = `Admin command: /md`;\\n        break;\\n      default:\\n        detail = `Admin command: ${action}`;\\n    }\\n\\n    const activeChat = await ActiveChat.findOne({ chatId });\\n    const muteDuration = activeChat?.muteDuration || DEFAULT_MUTE_DURATION;\\n\\n    await handleModerationAction(\\n      bot,\\n      chatId,\\n      targetMessage.message_id,\\n      targetUser.id,\\n      action,\\n      muteDuration,\\n      msg.chat.type,\\n      sender, // Use command sender as adminUser\\n      detail,\\n      undefined,\\n      targetMessage.text || targetMessage.caption\\n    );\\n  }\\n\\n  const port = process.env.PORT || 3000;\\n  app.listen(port, () => {\\n    console.log(`Server running on port ${port}`);\\n  });\\n\\n  console.log('Bot started successfully');\\n\\n  process.on('SIGTERM', async () => {\\n    await OCRService.getInstance().cleanup();\\n    process.exit(0);\\n  });\\n}\\n\\ninit().catch(console.error);\\n\\n}\"\n      spyOn(websocketAction, 'requestFiles').mockResolvedValue({\n        'src/util/messages.ts': initialContent,\n      })\n      spyOn(websocketAction, 'requestOptionalFile').mockResolvedValue(\n        initialContent,\n      )\n      spyOn(\n        checkTerminalCommandModule,\n        'checkTerminalCommand',\n      ).mockResolvedValue(null)\n\n      // Mock LLM calls\n      spyOn(aisdk, 'promptAiSdk').mockResolvedValue('Mocked non-stream AiSdk')\n\n      const sessionState = getInitialSessionState(mockFileContext)\n      sessionState.mainAgentState.messageHistory.push(\n        {\n          role: 'assistant',\n          content: getToolCallString('read_files', {\n            paths: ['packages/backend/src/index.ts'],\n          }),\n        },\n        {\n          role: 'user',\n          content: renderReadFilesResult(\n            [\n              {\n                path: 'packages/backend/src/index.ts',\n                content: initialContent,\n              },\n            ],\n            {},\n          ),\n        },\n      )\n\n      const action = {\n        type: 'prompt' as const,\n        prompt: \"There's a syntax error. Delete the last } in the file\",\n        sessionState,\n        fingerprintId: 'test-delete-function-integration',\n        costMode: 'normal' as const,\n        promptId: 'test-delete-function-id-integration',\n        toolResults: [],\n      }\n\n      await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session-delete-function-integration',\n        localAgentTemplates: {\n          base: {\n            id: 'base',\n            displayName: 'Base Agent',\n            outputMode: 'last_message',\n            inputSchema: {},\n            spawnerPrompt: '',\n            model: 'gpt-4o-mini',\n            includeMessageHistory: true,\n            toolNames: ['write_file', 'run_terminal_command'],\n            spawnableAgents: [],\n            systemPrompt: '',\n            instructionsPrompt: '',\n            stepPrompt: '',\n          },\n        },\n        onResponseChunk: (chunk: string | PrintModeEvent) => {\n          if (typeof chunk !== 'string') {\n            return\n          }\n          process.stdout.write(chunk)\n        },\n      })\n\n      const requestToolCallSpy = websocketAction.requestToolCall as any\n\n      // Find the write_file tool call\n      const writeFileCall = requestToolCallSpy.mock.calls.find(\n        (call: any) => call[1] === 'write_file',\n      )\n      expect(writeFileCall).toBeDefined()\n      expect(writeFileCall[2].path).toBe('packages/backend/src/index.ts')\n      expect(writeFileCall[2].content.trim()).toBe(\n        `\n@@ -689,6 +689,4 @@\n   });\n }\n \n init().catch(console.error);\n-\n-}\n\\\\ No newline at end of file\n        `.trim(),\n      )\n    }, 60000) // Increase timeout for real LLM call\n  })\n})\n"},{"path":"backend/src/__tests__/main-prompt.test.ts","preContent":"import * as bigquery from '@codebuff/bigquery'\nimport * as analytics from '@codebuff/common/analytics'\nimport { TEST_USER_ID } from '@codebuff/common/old-constants'\nimport {\n  clearMockedModules,\n  mockModule,\n} from '@codebuff/common/testing/mock-modules'\nimport {\n  getToolCallString,\n  renderToolResults,\n} from '@codebuff/common/tools/utils'\nimport {\n  AgentTemplateTypes,\n  getInitialSessionState,\n} from '@codebuff/common/types/session-state'\nimport {\n  afterAll,\n  afterEach,\n  beforeAll,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  mock,\n  spyOn,\n} from 'bun:test'\n\n// Mock imports\nimport * as checkTerminalCommandModule from '../check-terminal-command'\nimport * as requestFilesPrompt from '../find-files/request-files-prompt'\nimport * as getDocumentationForQueryModule from '../get-documentation-for-query'\nimport * as liveUserInputs from '../live-user-inputs'\nimport * as aisdk from '../llm-apis/vercel-ai-sdk/ai-sdk'\nimport { mainPrompt } from '../main-prompt'\nimport * as processFileBlockModule from '../process-file-block'\nimport * as websocketAction from '../websockets/websocket-action'\n\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\nconst mockAgentStream = (streamOutput: string) => {\n  spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n    yield streamOutput\n  })\n}\n\ndescribe('mainPrompt', () => {\n  let mockLocalAgentTemplates: Record<string, any>\n\n  beforeEach(() => {\n    // Setup common mock agent templates\n    mockLocalAgentTemplates = {\n      [AgentTemplateTypes.base]: {\n        id: AgentTemplateTypes.base,\n        displayName: 'Base Agent',\n        outputMode: 'last_message',\n        inputSchema: {},\n        spawnerPrompt: '',\n        model: 'gpt-4o-mini',\n        includeMessageHistory: true,\n        toolNames: ['write_file', 'run_terminal_command'],\n        spawnableAgents: [],\n        systemPrompt: '',\n        instructionsPrompt: '',\n        stepPrompt: '',\n      },\n      [AgentTemplateTypes.base_max]: {\n        id: AgentTemplateTypes.base_max,\n        displayName: 'Base Max Agent',\n        outputMode: 'last_message',\n        inputSchema: {},\n        spawnerPrompt: '',\n        model: 'gpt-4o',\n        includeMessageHistory: true,\n        toolNames: ['write_file', 'run_terminal_command'],\n        spawnableAgents: [],\n        systemPrompt: '',\n        instructionsPrompt: '',\n        stepPrompt: '',\n      },\n    }\n  })\n\n  beforeAll(() => {\n    // Mock logger\n    mockModule('@codebuff/backend/util/logger', () => ({\n      logger: {\n        debug: () => {},\n        error: () => {},\n        info: () => {},\n        warn: () => {},\n      },\n      withLoggerContext: async (context: any, fn: () => Promise<any>) => fn(),\n    }))\n  })\n\n  beforeEach(() => {\n    // Mock analytics and tracing\n    spyOn(analytics, 'initAnalytics').mockImplementation(() => {})\n    analytics.initAnalytics() // Initialize the mock\n    spyOn(analytics, 'trackEvent').mockImplementation(() => {})\n    spyOn(bigquery, 'insertTrace').mockImplementation(() =>\n      Promise.resolve(true),\n    ) // Return Promise<boolean>\n\n    // Mock processFileBlock\n    spyOn(processFileBlockModule, 'processFileBlock').mockImplementation(\n      async (path, instructions, contentPromise, newContent) => {\n        return {\n          tool: 'write_file' as const,\n          path,\n          instructions,\n          content: newContent,\n          patch: undefined,\n          messages: [],\n        }\n      },\n    )\n\n    // Mock LLM APIs\n    spyOn(aisdk, 'promptAiSdk').mockImplementation(() =>\n      Promise.resolve('Test response'),\n    )\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield 'Test response'\n      return\n    })\n\n    // Mock websocket actions\n    spyOn(websocketAction, 'requestFiles').mockImplementation(\n      async (ws: any, paths: string[]) => {\n        const results: Record<string, string | null> = {}\n        paths.forEach((p) => {\n          if (p === 'test.txt') {\n            results[p] = 'mock content for test.txt'\n          } else {\n            results[p] = null\n          }\n        })\n        return results\n      },\n    )\n\n    spyOn(websocketAction, 'requestFile').mockImplementation(\n      async (ws: any, path: string) => {\n        if (path === 'test.txt') {\n          return 'mock content for test.txt'\n        }\n        return null\n      },\n    )\n\n    spyOn(websocketAction, 'requestToolCall').mockImplementation(\n      async (\n        ws: WebSocket,\n        userInputId: string,\n        toolName: string,\n        input: Record<string, any>,\n        timeout: number = 30_000,\n      ) => {\n        return {\n          success: true,\n          result: `Tool call success: ${{ toolName, input }}` as any,\n        }\n      },\n    )\n\n    spyOn(requestFilesPrompt, 'requestRelevantFiles').mockImplementation(\n      async () => [],\n    )\n\n    spyOn(\n      checkTerminalCommandModule,\n      'checkTerminalCommand',\n    ).mockImplementation(async () => null)\n\n    spyOn(\n      getDocumentationForQueryModule,\n      'getDocumentationForQuery',\n    ).mockImplementation(async () => null)\n\n    // Mock live user inputs\n    spyOn(liveUserInputs, 'checkLiveUserInput').mockImplementation(() => true)\n  })\n\n  afterEach(() => {\n    // Clear all mocks after each test\n    mock.restore()\n  })\n\n  afterAll(() => {\n    clearMockedModules()\n  })\n\n  class MockWebSocket {\n    send(msg: string) {}\n    close() {}\n    on(event: string, listener: (...args: any[]) => void) {}\n    removeListener(event: string, listener: (...args: any[]) => void) {}\n  }\n\n  const mockFileContext: ProjectFileContext = {\n    projectRoot: '/test',\n    cwd: '/test',\n    fileTree: [],\n    fileTokenScores: {},\n    knowledgeFiles: {},\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    agentTemplates: {},\n    systemInfo: {\n      platform: 'test',\n      shell: 'test',\n      nodeVersion: 'test',\n      arch: 'test',\n      homedir: '/home/test',\n      cpus: 1,\n    },\n    fileVersions: [],\n  }\n\n  it('should add file updates to tool results in message history', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    // Simulate a previous read_files result being in the history\n    sessionState.mainAgentState.messageHistory.push({\n      role: 'user',\n      content: renderToolResults([\n        {\n          toolCallId: 'prev-read',\n          toolName: 'read_files',\n          output: {\n            type: 'text',\n            value:\n              '<read_file>\\n<path>test.txt</path>\\n<content>old content</content>\\n</read_file>',\n          },\n        },\n      ]),\n    })\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Test prompt causing file update check',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [], // No *new* tool results for this specific turn\n    }\n\n    // Capture the state *after* the prompt call\n    const { sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: {\n          [AgentTemplateTypes.base]: {\n            id: 'base',\n            displayName: 'Base Agent',\n            outputMode: 'last_message',\n            inputSchema: {},\n            spawnerPrompt: '',\n            model: 'gpt-4o-mini',\n            includeMessageHistory: true,\n            toolNames: ['write_file', 'run_terminal_command'],\n            spawnableAgents: [],\n            systemPrompt: '',\n            instructionsPrompt: '',\n            stepPrompt: '',\n          },\n          [AgentTemplateTypes.base_max]: {\n            id: 'base_max',\n            displayName: 'Base Max Agent',\n            outputMode: 'last_message',\n            inputSchema: {},\n            spawnerPrompt: '',\n            model: 'gpt-4o',\n            includeMessageHistory: true,\n            toolNames: ['write_file', 'run_terminal_command'],\n            spawnableAgents: [],\n            systemPrompt: '',\n            instructionsPrompt: '',\n            stepPrompt: '',\n          },\n        },\n      },\n    )\n\n    // Find the user message containing tool results added *during* the mainPrompt execution\n    // This message should contain the 'file_updates' result.\n    // It's usually the message right before the final assistant response.\n    const toolResultMessages =\n      newSessionState.mainAgentState.messageHistory.filter(\n        (m) =>\n          m.role === 'user' &&\n          typeof m.content === 'string' &&\n          m.content.includes('<tool_result>'),\n      )\n\n    // Find the specific tool result message that contains file_updates\n    const fileUpdateMessage = toolResultMessages.find(\n      (m) =>\n        typeof m.content === 'string' &&\n        m.content.includes('<tool>read_files</tool>'),\n    )\n\n    expect(fileUpdateMessage).toBeDefined()\n    expect(fileUpdateMessage?.content).toContain('test.txt')\n    // Check that the content reflects the *new* mock content within the file_updates result\n    expect(fileUpdateMessage?.content).toContain('old content')\n  })\n\n  it('should handle direct terminal command', async () => {\n    // Override the mock to return a terminal command\n    spyOn(\n      checkTerminalCommandModule,\n      'checkTerminalCommand',\n    ).mockImplementation(async () => 'ls -la')\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'ls -la',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { toolCalls, sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    // Verify that requestToolCall was called with the terminal command\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n    expect(requestToolCallSpy).toHaveBeenCalledTimes(1)\n    expect(requestToolCallSpy).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      expect.any(String), // userInputId\n      'run_terminal_command',\n      expect.objectContaining({\n        command: 'ls -la',\n        mode: 'user',\n        process_type: 'SYNC',\n        timeout_seconds: -1,\n      }),\n    )\n\n    // Verify that a tool result was added to message history\n    const toolResultMessages =\n      newSessionState.mainAgentState.messageHistory.filter(\n        (m) =>\n          m.role === 'user' &&\n          typeof m.content === 'string' &&\n          m.content.includes('<tool_result>'),\n      )\n    expect(toolResultMessages.length).toBeGreaterThan(0)\n  })\n\n  it('should handle write_file tool call', async () => {\n    // Mock LLM to return a write_file tool call using getToolCallString\n    const mockResponse =\n      getToolCallString('write_file', {\n        path: 'new-file.txt',\n        instructions: 'Added Hello World',\n        content: 'Hello, world!',\n      }) + getToolCallString('end_turn', {})\n\n    mockAgentStream(mockResponse)\n\n    // Get reference to the spy so we can check if it was called\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Write hello world to new-file.txt',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const, // This causes streamGemini25Pro to be called\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n      userId: TEST_USER_ID,\n      clientSessionId: 'test-session',\n      onResponseChunk: () => {},\n      localAgentTemplates: {\n        [AgentTemplateTypes.base]: {\n          id: 'base',\n          displayName: 'Base Agent',\n          outputMode: 'last_message',\n          inputSchema: {},\n          spawnerPrompt: '',\n          model: 'gpt-4o-mini',\n          includeMessageHistory: true,\n          toolNames: ['write_file', 'run_terminal_command'],\n          spawnableAgents: [],\n          systemPrompt: '',\n          instructionsPrompt: '',\n          stepPrompt: '',\n        },\n        [AgentTemplateTypes.base_max]: {\n          id: 'base-max',\n          displayName: 'Base Max Agent',\n          outputMode: 'last_message',\n          inputSchema: {},\n          spawnerPrompt: '',\n          model: 'gpt-4o',\n          includeMessageHistory: true,\n          toolNames: ['write_file', 'run_terminal_command'],\n          spawnableAgents: [],\n          systemPrompt: '',\n          instructionsPrompt: '',\n          stepPrompt: '',\n        },\n      },\n    })\n\n    // Assert that requestToolCall was called exactly once\n    expect(requestToolCallSpy).toHaveBeenCalledTimes(1)\n\n    // Verify the write_file call was made with the correct arguments\n    expect(requestToolCallSpy).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      expect.any(String), // userInputId\n      'write_file',\n      expect.objectContaining({\n        type: 'file',\n        path: 'new-file.txt',\n        content: 'Hello, world!',\n      }),\n    )\n  })\n\n  it('should force end of response after MAX_CONSECUTIVE_ASSISTANT_MESSAGES', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n\n    // Set up message history with many consecutive assistant messages\n    sessionState.mainAgentState.stepsRemaining = 0\n    sessionState.mainAgentState.messageHistory = [\n      { role: 'user', content: 'Initial prompt' },\n      ...Array(20).fill({ role: 'assistant', content: 'Assistant response' }),\n    ]\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: '', // No new prompt\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { toolCalls } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    expect(toolCalls).toHaveLength(0) // No tool calls expected\n  })\n\n  it('should update consecutiveAssistantMessages when new prompt is received', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    sessionState.mainAgentState.stepsRemaining = 12\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'New user prompt',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    // When there's a new prompt, consecutiveAssistantMessages should be set to 1\n    expect(newSessionState.mainAgentState.stepsRemaining).toBe(\n      sessionState.mainAgentState.stepsRemaining - 1,\n    )\n  })\n\n  it('should increment consecutiveAssistantMessages when no new prompt', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    const initialCount = 5\n    sessionState.mainAgentState.stepsRemaining = initialCount\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: '', // No new prompt\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    // When there's no new prompt, consecutiveAssistantMessages should increment by 1\n    expect(newSessionState.mainAgentState.stepsRemaining).toBe(initialCount - 1)\n  })\n\n  it('should return no tool calls when LLM response is empty', async () => {\n    // Mock the LLM stream to return nothing\n    mockAgentStream('')\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Test prompt leading to empty response',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'normal' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { toolCalls } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    expect(toolCalls).toHaveLength(0) // No tool calls expected for empty response\n  })\n\n  it('should unescape ampersands in run_terminal_command tool calls', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    const userPromptText = 'Run the backend tests'\n    const escapedCommand = 'cd backend && bun test'\n    const expectedCommand = 'cd backend && bun test'\n\n    const mockResponse =\n      getToolCallString('run_terminal_command', {\n        command: escapedCommand,\n        process_type: 'SYNC',\n      }) + getToolCallString('end_turn', {})\n\n    mockAgentStream(mockResponse)\n\n    // Get reference to the spy so we can check if it was called\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: userPromptText,\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n      userId: TEST_USER_ID,\n      clientSessionId: 'test-session',\n      onResponseChunk: () => {},\n      localAgentTemplates: mockLocalAgentTemplates,\n    })\n\n    // Assert that requestToolCall was called exactly once\n    expect(requestToolCallSpy).toHaveBeenCalledTimes(1)\n\n    // Verify the run_terminal_command call was made with the correct arguments\n    expect(requestToolCallSpy).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      expect.any(String), // userInputId\n      'run_terminal_command',\n      expect.objectContaining({\n        command: expectedCommand,\n        process_type: 'SYNC',\n        mode: 'assistant',\n      }),\n    )\n  })\n})\n","postContent":"import * as bigquery from '@codebuff/bigquery'\nimport * as analytics from '@codebuff/common/analytics'\nimport { TEST_USER_ID } from '@codebuff/common/old-constants'\nimport {\n  clearMockedModules,\n  mockModule,\n} from '@codebuff/common/testing/mock-modules'\nimport {\n  getToolCallString,\n  renderToolResults,\n} from '@codebuff/common/tools/utils'\nimport {\n  AgentTemplateTypes,\n  getInitialSessionState,\n} from '@codebuff/common/types/session-state'\nimport {\n  afterAll,\n  afterEach,\n  beforeAll,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  mock,\n  spyOn,\n} from 'bun:test'\n\n// Mock imports\nimport * as checkTerminalCommandModule from '../check-terminal-command'\nimport * as requestFilesPrompt from '../find-files/request-files-prompt'\nimport * as getDocumentationForQueryModule from '../get-documentation-for-query'\nimport * as liveUserInputs from '../live-user-inputs'\nimport * as aisdk from '../llm-apis/vercel-ai-sdk/ai-sdk'\nimport { mainPrompt } from '../main-prompt'\nimport * as processFileBlockModule from '../process-file-block'\nimport * as websocketAction from '../websockets/websocket-action'\n\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\nconst mockAgentStream = (streamOutput: string) => {\n  spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n    yield streamOutput\n  })\n}\n\ndescribe('mainPrompt', () => {\n  let mockLocalAgentTemplates: Record<string, any>\n\n  beforeEach(() => {\n    // Setup common mock agent templates\n    mockLocalAgentTemplates = {\n      [AgentTemplateTypes.base]: {\n        id: AgentTemplateTypes.base,\n        displayName: 'Base Agent',\n        outputMode: 'last_message',\n        inputSchema: {},\n        spawnerPrompt: '',\n        model: 'gpt-4o-mini',\n        includeMessageHistory: true,\n        toolNames: ['write_file', 'run_terminal_command'],\n        spawnableAgents: [],\n        systemPrompt: '',\n        instructionsPrompt: '',\n        stepPrompt: '',\n      },\n      [AgentTemplateTypes.base_max]: {\n        id: AgentTemplateTypes.base_max,\n        displayName: 'Base Max Agent',\n        outputMode: 'last_message',\n        inputSchema: {},\n        spawnerPrompt: '',\n        model: 'gpt-4o',\n        includeMessageHistory: true,\n        toolNames: ['write_file', 'run_terminal_command'],\n        spawnableAgents: [],\n        systemPrompt: '',\n        instructionsPrompt: '',\n        stepPrompt: '',\n      },\n    }\n  })\n\n  beforeAll(() => {\n    // Mock logger\n    mockModule('@codebuff/backend/util/logger', () => ({\n      logger: {\n        debug: () => {},\n        error: () => {},\n        info: () => {},\n        warn: () => {},\n      },\n      withLoggerContext: async (context: any, fn: () => Promise<any>) => fn(),\n    }))\n  })\n\n  beforeEach(() => {\n    // Mock analytics and tracing\n    spyOn(analytics, 'initAnalytics').mockImplementation(() => {})\n    analytics.initAnalytics() // Initialize the mock\n    spyOn(analytics, 'trackEvent').mockImplementation(() => {})\n    spyOn(bigquery, 'insertTrace').mockImplementation(() =>\n      Promise.resolve(true),\n    ) // Return Promise<boolean>\n\n    // Mock processFileBlock\n    spyOn(processFileBlockModule, 'processFileBlock').mockImplementation(\n      async (path, instructions, contentPromise, newContent) => {\n        return {\n          tool: 'write_file' as const,\n          path,\n          instructions,\n          content: newContent,\n          patch: undefined,\n          messages: [],\n        }\n      },\n    )\n\n    // Mock LLM APIs\n    spyOn(aisdk, 'promptAiSdk').mockImplementation(() =>\n      Promise.resolve('Test response'),\n    )\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield 'Test response'\n      return\n    })\n\n    // Mock websocket actions\n    spyOn(websocketAction, 'requestFiles').mockImplementation(\n      async (ws: any, paths: string[]) => {\n        const results: Record<string, string | null> = {}\n        paths.forEach((p) => {\n          if (p === 'test.txt') {\n            results[p] = 'mock content for test.txt'\n          } else {\n            results[p] = null\n          }\n        })\n        return results\n      },\n    )\n\n    spyOn(websocketAction, 'requestFile').mockImplementation(\n      async (ws: any, path: string) => {\n        if (path === 'test.txt') {\n          return 'mock content for test.txt'\n        }\n        return null\n      },\n    )\n\n    spyOn(websocketAction, 'requestToolCall').mockImplementation(\n      async (\n        ws: WebSocket,\n        userInputId: string,\n        toolName: string,\n        input: Record<string, any>,\n        timeout: number = 30_000,\n      ) => {\n        return {\n          success: true,\n          result: `Tool call success: ${{ toolName, input }}` as any,\n        }\n      },\n    )\n\n    spyOn(requestFilesPrompt, 'requestRelevantFiles').mockImplementation(\n      async () => [],\n    )\n\n    spyOn(\n      checkTerminalCommandModule,\n      'checkTerminalCommand',\n    ).mockImplementation(async () => null)\n\n    spyOn(\n      getDocumentationForQueryModule,\n      'getDocumentationForQuery',\n    ).mockImplementation(async () => null)\n\n    // Mock live user inputs\n    spyOn(liveUserInputs, 'checkLiveUserInput').mockImplementation(() => true)\n  })\n\n  afterEach(() => {\n    // Clear all mocks after each test\n    mock.restore()\n  })\n\n  afterAll(() => {\n    clearMockedModules()\n  })\n\n  class MockWebSocket {\n    send(msg: string) {}\n    close() {}\n    on(event: string, listener: (...args: any[]) => void) {}\n    removeListener(event: string, listener: (...args: any[]) => void) {}\n  }\n\n  const mockFileContext: ProjectFileContext = {\n    projectRoot: '/test',\n    cwd: '/test',\n    fileTree: [],\n    fileTokenScores: {},\n    knowledgeFiles: {},\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    agentTemplates: {},\n    customToolDefinitions: {},\n    systemInfo: {\n      platform: 'test',\n      shell: 'test',\n      nodeVersion: 'test',\n      arch: 'test',\n      homedir: '/home/test',\n      cpus: 1,\n    },\n  }\n\n  it('should add file updates to tool results in message history', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    // Simulate a previous read_files result being in the history\n    sessionState.mainAgentState.messageHistory.push({\n      role: 'user',\n      content: renderToolResults([\n        {\n          toolCallId: 'prev-read',\n          toolName: 'read_files',\n          output: {\n            type: 'text',\n            value:\n              '<read_file>\\n<path>test.txt</path>\\n<content>old content</content>\\n</read_file>',\n          },\n        },\n      ]),\n    })\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Test prompt causing file update check',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [], // No *new* tool results for this specific turn\n    }\n\n    // Capture the state *after* the prompt call\n    const { sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: {\n          [AgentTemplateTypes.base]: {\n            id: 'base',\n            displayName: 'Base Agent',\n            outputMode: 'last_message',\n            inputSchema: {},\n            spawnerPrompt: '',\n            model: 'gpt-4o-mini',\n            includeMessageHistory: true,\n            toolNames: ['write_file', 'run_terminal_command'],\n            spawnableAgents: [],\n            systemPrompt: '',\n            instructionsPrompt: '',\n            stepPrompt: '',\n          },\n          [AgentTemplateTypes.base_max]: {\n            id: 'base_max',\n            displayName: 'Base Max Agent',\n            outputMode: 'last_message',\n            inputSchema: {},\n            spawnerPrompt: '',\n            model: 'gpt-4o',\n            includeMessageHistory: true,\n            toolNames: ['write_file', 'run_terminal_command'],\n            spawnableAgents: [],\n            systemPrompt: '',\n            instructionsPrompt: '',\n            stepPrompt: '',\n          },\n        },\n      },\n    )\n\n    // Find the user message containing tool results added *during* the mainPrompt execution\n    // This message should contain the 'file_updates' result.\n    // It's usually the message right before the final assistant response.\n    const toolResultMessages =\n      newSessionState.mainAgentState.messageHistory.filter(\n        (m) =>\n          m.role === 'user' &&\n          typeof m.content === 'string' &&\n          m.content.includes('<tool_result>'),\n      )\n\n    // Find the specific tool result message that contains file_updates\n    const fileUpdateMessage = toolResultMessages.find(\n      (m) =>\n        typeof m.content === 'string' &&\n        m.content.includes('<tool>read_files</tool>'),\n    )\n\n    expect(fileUpdateMessage).toBeDefined()\n    expect(fileUpdateMessage?.content).toContain('test.txt')\n    // Check that the content reflects the *new* mock content within the file_updates result\n    expect(fileUpdateMessage?.content).toContain('old content')\n  })\n\n  it('should handle direct terminal command', async () => {\n    // Override the mock to return a terminal command\n    spyOn(\n      checkTerminalCommandModule,\n      'checkTerminalCommand',\n    ).mockImplementation(async () => 'ls -la')\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'ls -la',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { toolCalls, sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    // Verify that requestToolCall was called with the terminal command\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n    expect(requestToolCallSpy).toHaveBeenCalledTimes(1)\n    expect(requestToolCallSpy).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      expect.any(String), // userInputId\n      'run_terminal_command',\n      expect.objectContaining({\n        command: 'ls -la',\n        mode: 'user',\n        process_type: 'SYNC',\n        timeout_seconds: -1,\n      }),\n    )\n\n    // Verify that a tool result was added to message history\n    const toolResultMessages =\n      newSessionState.mainAgentState.messageHistory.filter(\n        (m) =>\n          m.role === 'user' &&\n          typeof m.content === 'string' &&\n          m.content.includes('<tool_result>'),\n      )\n    expect(toolResultMessages.length).toBeGreaterThan(0)\n  })\n\n  it('should handle write_file tool call', async () => {\n    // Mock LLM to return a write_file tool call using getToolCallString\n    const mockResponse =\n      getToolCallString('write_file', {\n        path: 'new-file.txt',\n        instructions: 'Added Hello World',\n        content: 'Hello, world!',\n      }) + getToolCallString('end_turn', {})\n\n    mockAgentStream(mockResponse)\n\n    // Get reference to the spy so we can check if it was called\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Write hello world to new-file.txt',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const, // This causes streamGemini25Pro to be called\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n      userId: TEST_USER_ID,\n      clientSessionId: 'test-session',\n      onResponseChunk: () => {},\n      localAgentTemplates: {\n        [AgentTemplateTypes.base]: {\n          id: 'base',\n          displayName: 'Base Agent',\n          outputMode: 'last_message',\n          inputSchema: {},\n          spawnerPrompt: '',\n          model: 'gpt-4o-mini',\n          includeMessageHistory: true,\n          toolNames: ['write_file', 'run_terminal_command'],\n          spawnableAgents: [],\n          systemPrompt: '',\n          instructionsPrompt: '',\n          stepPrompt: '',\n        },\n        [AgentTemplateTypes.base_max]: {\n          id: 'base-max',\n          displayName: 'Base Max Agent',\n          outputMode: 'last_message',\n          inputSchema: {},\n          spawnerPrompt: '',\n          model: 'gpt-4o',\n          includeMessageHistory: true,\n          toolNames: ['write_file', 'run_terminal_command'],\n          spawnableAgents: [],\n          systemPrompt: '',\n          instructionsPrompt: '',\n          stepPrompt: '',\n        },\n      },\n    })\n\n    // Assert that requestToolCall was called exactly once\n    expect(requestToolCallSpy).toHaveBeenCalledTimes(1)\n\n    // Verify the write_file call was made with the correct arguments\n    expect(requestToolCallSpy).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      expect.any(String), // userInputId\n      'write_file',\n      expect.objectContaining({\n        type: 'file',\n        path: 'new-file.txt',\n        content: 'Hello, world!',\n      }),\n    )\n  })\n\n  it('should force end of response after MAX_CONSECUTIVE_ASSISTANT_MESSAGES', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n\n    // Set up message history with many consecutive assistant messages\n    sessionState.mainAgentState.stepsRemaining = 0\n    sessionState.mainAgentState.messageHistory = [\n      { role: 'user', content: 'Initial prompt' },\n      ...Array(20).fill({ role: 'assistant', content: 'Assistant response' }),\n    ]\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: '', // No new prompt\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { toolCalls } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    expect(toolCalls).toHaveLength(0) // No tool calls expected\n  })\n\n  it('should update consecutiveAssistantMessages when new prompt is received', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    sessionState.mainAgentState.stepsRemaining = 12\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'New user prompt',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    // When there's a new prompt, consecutiveAssistantMessages should be set to 1\n    expect(newSessionState.mainAgentState.stepsRemaining).toBe(\n      sessionState.mainAgentState.stepsRemaining - 1,\n    )\n  })\n\n  it('should increment consecutiveAssistantMessages when no new prompt', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    const initialCount = 5\n    sessionState.mainAgentState.stepsRemaining = initialCount\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: '', // No new prompt\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { sessionState: newSessionState } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    // When there's no new prompt, consecutiveAssistantMessages should increment by 1\n    expect(newSessionState.mainAgentState.stepsRemaining).toBe(initialCount - 1)\n  })\n\n  it('should return no tool calls when LLM response is empty', async () => {\n    // Mock the LLM stream to return nothing\n    mockAgentStream('')\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const action = {\n      type: 'prompt' as const,\n      prompt: 'Test prompt leading to empty response',\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'normal' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    const { toolCalls } = await mainPrompt(\n      new MockWebSocket() as unknown as WebSocket,\n      action,\n      {\n        userId: TEST_USER_ID,\n        clientSessionId: 'test-session',\n        onResponseChunk: () => {},\n        localAgentTemplates: mockLocalAgentTemplates,\n      },\n    )\n\n    expect(toolCalls).toHaveLength(0) // No tool calls expected for empty response\n  })\n\n  it('should unescape ampersands in run_terminal_command tool calls', async () => {\n    const sessionState = getInitialSessionState(mockFileContext)\n    const userPromptText = 'Run the backend tests'\n    const escapedCommand = 'cd backend && bun test'\n    const expectedCommand = 'cd backend && bun test'\n\n    const mockResponse =\n      getToolCallString('run_terminal_command', {\n        command: escapedCommand,\n        process_type: 'SYNC',\n      }) + getToolCallString('end_turn', {})\n\n    mockAgentStream(mockResponse)\n\n    // Get reference to the spy so we can check if it was called\n    const requestToolCallSpy = websocketAction.requestToolCall as any\n\n    const action = {\n      type: 'prompt' as const,\n      prompt: userPromptText,\n      sessionState,\n      fingerprintId: 'test',\n      costMode: 'max' as const,\n      promptId: 'test',\n      toolResults: [],\n    }\n\n    await mainPrompt(new MockWebSocket() as unknown as WebSocket, action, {\n      userId: TEST_USER_ID,\n      clientSessionId: 'test-session',\n      onResponseChunk: () => {},\n      localAgentTemplates: mockLocalAgentTemplates,\n    })\n\n    // Assert that requestToolCall was called exactly once\n    expect(requestToolCallSpy).toHaveBeenCalledTimes(1)\n\n    // Verify the run_terminal_command call was made with the correct arguments\n    expect(requestToolCallSpy).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      expect.any(String), // userInputId\n      'run_terminal_command',\n      expect.objectContaining({\n        command: expectedCommand,\n        process_type: 'SYNC',\n        mode: 'assistant',\n      }),\n    )\n  })\n})\n"},{"path":"backend/src/__tests__/request-files-prompt.test.ts","preContent":"import { finetunedVertexModels } from '@codebuff/common/old-constants'\nimport {\n  beforeEach,\n  mock as bunMockFn,\n  spyOn as bunSpyOn,\n  describe,\n  expect,\n  it,\n} from 'bun:test'\n\n// Import the entire module to spy on its exports\nimport * as checkNewFilesNecessaryModule from '../find-files/check-new-files-necessary'\nimport * as OriginalRequestFilesPromptModule from '../find-files/request-files-prompt'\nimport * as geminiWithFallbacksModule from '../llm-apis/gemini-with-fallbacks'\n\nimport type { CostMode } from '@codebuff/common/old-constants'\nimport type { CodebuffMessage } from '@codebuff/common/types/message'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { Mock } from 'bun:test'\n\n// Restore module-level mocks using bunMockFn for the mock implementations\nbunMockFn.module('../find-files/check-new-files-necessary', () => ({\n  checkNewFilesNecessary: bunMockFn(() =>\n    Promise.resolve({\n      newFilesNecessary: true,\n      response: 'YES',\n      duration: 100,\n    }),\n  ),\n}))\n\nbunMockFn.module('../llm-apis/gemini-with-fallbacks', () => ({\n  promptFlashWithFallbacks: bunMockFn(() =>\n    Promise.resolve('file1.ts\\nfile2.ts'),\n  ),\n}))\n\nbunMockFn.module('../websockets/request-context', () => ({\n  getRequestContext: bunMockFn(() => ({\n    approvedOrgIdForRepo: 'org123',\n    isRepoApprovedForUserInOrg: true,\n  })),\n}))\n\nbunMockFn.module('../util/logger', () => ({\n  logger: {\n    info: bunMockFn(() => {}),\n    error: bunMockFn(() => {}),\n    warn: bunMockFn(() => {}),\n    debug: bunMockFn(() => {}),\n  },\n}))\n\nbunMockFn.module('@codebuff/common/db', () => ({\n  default: {\n    insert: bunMockFn(() => ({\n      values: bunMockFn(() => ({\n        onConflictDoNothing: bunMockFn(() => Promise.resolve()),\n      })),\n    })),\n  },\n}))\nbunMockFn.module('@codebuff/bigquery', () => ({\n  insertTrace: bunMockFn(() => Promise.resolve()),\n}))\n\ndescribe('requestRelevantFiles', () => {\n  const mockMessages: CodebuffMessage[] = [\n    { role: 'user', content: 'test prompt' },\n  ]\n  const mockSystem = 'test system'\n  const mockFileContext: ProjectFileContext = {\n    projectRoot: '/test/project',\n    cwd: '/test/project',\n    fileTree: [{ name: 'file1.ts', filePath: 'file1.ts', type: 'file' }],\n    fileTokenScores: {},\n    knowledgeFiles: {},\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    systemInfo: {\n      platform: 'darwin',\n      shell: 'fish',\n      nodeVersion: 'v20.0.0',\n      arch: 'arm64',\n      homedir: '/Users/test',\n      cpus: 8,\n    },\n    agentTemplates: {},\n  }\n  const mockAssistantPrompt = null\n  const mockAgentStepId = 'step1'\n  const mockClientSessionId = 'session1'\n  const mockFingerprintId = 'fingerprint1'\n  const mockUserInputId = 'input1'\n  const mockUserId = 'user1'\n  const mockCostMode: CostMode = 'normal'\n  const mockRepoId = 'owner/repo'\n\n  let getCustomFilePickerConfigForOrgSpy: any // Explicitly typed as any\n\n  beforeEach(() => {\n    // If the spy was created in a previous test, restore it\n    if (\n      getCustomFilePickerConfigForOrgSpy &&\n      typeof getCustomFilePickerConfigForOrgSpy.mockRestore === 'function'\n    ) {\n      getCustomFilePickerConfigForOrgSpy.mockRestore()\n      getCustomFilePickerConfigForOrgSpy = undefined\n    }\n\n    // Use the directly imported bunSpyOn\n    getCustomFilePickerConfigForOrgSpy = bunSpyOn(\n      OriginalRequestFilesPromptModule,\n      'getCustomFilePickerConfigForOrg',\n    ).mockResolvedValue(null)\n\n    // Reset behavior and clear call history for module mocks\n    const checkNewFilesNecessaryMock =\n      checkNewFilesNecessaryModule.checkNewFilesNecessary as Mock<\n        typeof checkNewFilesNecessaryModule.checkNewFilesNecessary\n      >\n    checkNewFilesNecessaryMock.mockResolvedValue({\n      newFilesNecessary: true,\n      response: 'YES',\n      duration: 100,\n    })\n    checkNewFilesNecessaryMock.mockClear()\n\n    const promptFlashWithFallbacksMock =\n      geminiWithFallbacksModule.promptFlashWithFallbacks as Mock<\n        typeof geminiWithFallbacksModule.promptFlashWithFallbacks\n      >\n    promptFlashWithFallbacksMock.mockResolvedValue('file1.ts\\nfile2.ts')\n    promptFlashWithFallbacksMock.mockClear()\n  })\n\n  it('should use default file counts and maxFiles when no custom config', async () => {\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalled()\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use custom file counts from config', async () => {\n    const customConfig = {\n      modelName: 'ft_filepicker_005',\n      customFileCounts: { normal: 5 },\n      maxFilesPerRequest: 10,\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalled()\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use custom maxFilesPerRequest from config', async () => {\n    const customConfig = {\n      modelName: 'ft_filepicker_005',\n      maxFilesPerRequest: 3,\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    const result = await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(result).toBeArray()\n    if (result) {\n      expect(result.length).toBeLessThanOrEqual(3)\n    }\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use custom modelName from config', async () => {\n    const customConfig = {\n      modelName: 'ft_filepicker_010',\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({\n        useFinetunedModel: finetunedVertexModels.ft_filepicker_010,\n      }),\n    )\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use default model if custom modelName is invalid', async () => {\n    const customConfig = {\n      modelName: 'invalid-model-name',\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    const expectedModel = finetunedVertexModels.ft_filepicker_010\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({\n        useFinetunedModel: expectedModel,\n      }),\n    )\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should return null if checkNewFilesNecessary returns false', async () => {\n    // Override the module mock for this specific test case\n    ;(\n      checkNewFilesNecessaryModule.checkNewFilesNecessary as Mock<\n        typeof checkNewFilesNecessaryModule.checkNewFilesNecessary\n      >\n    ).mockResolvedValue({\n      newFilesNecessary: false,\n      response: 'NO',\n      duration: 50,\n    })\n\n    const result = await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n\n    expect(result).toBeNull()\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).not.toHaveBeenCalled()\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n})\n","postContent":"import { finetunedVertexModels } from '@codebuff/common/old-constants'\nimport {\n  beforeEach,\n  mock as bunMockFn,\n  spyOn as bunSpyOn,\n  describe,\n  expect,\n  it,\n} from 'bun:test'\n\n// Import the entire module to spy on its exports\nimport * as checkNewFilesNecessaryModule from '../find-files/check-new-files-necessary'\nimport * as OriginalRequestFilesPromptModule from '../find-files/request-files-prompt'\nimport * as geminiWithFallbacksModule from '../llm-apis/gemini-with-fallbacks'\n\nimport type { CostMode } from '@codebuff/common/old-constants'\nimport type { CodebuffMessage } from '@codebuff/common/types/message'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { Mock } from 'bun:test'\n\n// Restore module-level mocks using bunMockFn for the mock implementations\nbunMockFn.module('../find-files/check-new-files-necessary', () => ({\n  checkNewFilesNecessary: bunMockFn(() =>\n    Promise.resolve({\n      newFilesNecessary: true,\n      response: 'YES',\n      duration: 100,\n    }),\n  ),\n}))\n\nbunMockFn.module('../llm-apis/gemini-with-fallbacks', () => ({\n  promptFlashWithFallbacks: bunMockFn(() =>\n    Promise.resolve('file1.ts\\nfile2.ts'),\n  ),\n}))\n\nbunMockFn.module('../websockets/request-context', () => ({\n  getRequestContext: bunMockFn(() => ({\n    approvedOrgIdForRepo: 'org123',\n    isRepoApprovedForUserInOrg: true,\n  })),\n}))\n\nbunMockFn.module('../util/logger', () => ({\n  logger: {\n    info: bunMockFn(() => {}),\n    error: bunMockFn(() => {}),\n    warn: bunMockFn(() => {}),\n    debug: bunMockFn(() => {}),\n  },\n}))\n\nbunMockFn.module('@codebuff/common/db', () => ({\n  default: {\n    insert: bunMockFn(() => ({\n      values: bunMockFn(() => ({\n        onConflictDoNothing: bunMockFn(() => Promise.resolve()),\n      })),\n    })),\n  },\n}))\nbunMockFn.module('@codebuff/bigquery', () => ({\n  insertTrace: bunMockFn(() => Promise.resolve()),\n}))\n\ndescribe('requestRelevantFiles', () => {\n  const mockMessages: CodebuffMessage[] = [\n    { role: 'user', content: 'test prompt' },\n  ]\n  const mockSystem = 'test system'\n  const mockFileContext: ProjectFileContext = {\n    projectRoot: '/test/project',\n    cwd: '/test/project',\n    fileTree: [{ name: 'file1.ts', filePath: 'file1.ts', type: 'file' }],\n    fileTokenScores: {},\n    knowledgeFiles: {},\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    systemInfo: {\n      platform: 'darwin',\n      shell: 'fish',\n      nodeVersion: 'v20.0.0',\n      arch: 'arm64',\n      homedir: '/Users/test',\n      cpus: 8,\n    },\n    agentTemplates: {},\n    customToolDefinitions: {},\n  }\n  const mockAssistantPrompt = null\n  const mockAgentStepId = 'step1'\n  const mockClientSessionId = 'session1'\n  const mockFingerprintId = 'fingerprint1'\n  const mockUserInputId = 'input1'\n  const mockUserId = 'user1'\n  const mockCostMode: CostMode = 'normal'\n  const mockRepoId = 'owner/repo'\n\n  let getCustomFilePickerConfigForOrgSpy: any // Explicitly typed as any\n\n  beforeEach(() => {\n    // If the spy was created in a previous test, restore it\n    if (\n      getCustomFilePickerConfigForOrgSpy &&\n      typeof getCustomFilePickerConfigForOrgSpy.mockRestore === 'function'\n    ) {\n      getCustomFilePickerConfigForOrgSpy.mockRestore()\n      getCustomFilePickerConfigForOrgSpy = undefined\n    }\n\n    // Use the directly imported bunSpyOn\n    getCustomFilePickerConfigForOrgSpy = bunSpyOn(\n      OriginalRequestFilesPromptModule,\n      'getCustomFilePickerConfigForOrg',\n    ).mockResolvedValue(null)\n\n    // Reset behavior and clear call history for module mocks\n    const checkNewFilesNecessaryMock =\n      checkNewFilesNecessaryModule.checkNewFilesNecessary as Mock<\n        typeof checkNewFilesNecessaryModule.checkNewFilesNecessary\n      >\n    checkNewFilesNecessaryMock.mockResolvedValue({\n      newFilesNecessary: true,\n      response: 'YES',\n      duration: 100,\n    })\n    checkNewFilesNecessaryMock.mockClear()\n\n    const promptFlashWithFallbacksMock =\n      geminiWithFallbacksModule.promptFlashWithFallbacks as Mock<\n        typeof geminiWithFallbacksModule.promptFlashWithFallbacks\n      >\n    promptFlashWithFallbacksMock.mockResolvedValue('file1.ts\\nfile2.ts')\n    promptFlashWithFallbacksMock.mockClear()\n  })\n\n  it('should use default file counts and maxFiles when no custom config', async () => {\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalled()\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use custom file counts from config', async () => {\n    const customConfig = {\n      modelName: 'ft_filepicker_005',\n      customFileCounts: { normal: 5 },\n      maxFilesPerRequest: 10,\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalled()\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use custom maxFilesPerRequest from config', async () => {\n    const customConfig = {\n      modelName: 'ft_filepicker_005',\n      maxFilesPerRequest: 3,\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    const result = await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(result).toBeArray()\n    if (result) {\n      expect(result.length).toBeLessThanOrEqual(3)\n    }\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use custom modelName from config', async () => {\n    const customConfig = {\n      modelName: 'ft_filepicker_010',\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({\n        useFinetunedModel: finetunedVertexModels.ft_filepicker_010,\n      }),\n    )\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should use default model if custom modelName is invalid', async () => {\n    const customConfig = {\n      modelName: 'invalid-model-name',\n    }\n    getCustomFilePickerConfigForOrgSpy!.mockResolvedValue(customConfig as any)\n\n    await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n    const expectedModel = finetunedVertexModels.ft_filepicker_010\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).toHaveBeenCalledWith(\n      expect.anything(),\n      expect.objectContaining({\n        useFinetunedModel: expectedModel,\n      }),\n    )\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n\n  it('should return null if checkNewFilesNecessary returns false', async () => {\n    // Override the module mock for this specific test case\n    ;(\n      checkNewFilesNecessaryModule.checkNewFilesNecessary as Mock<\n        typeof checkNewFilesNecessaryModule.checkNewFilesNecessary\n      >\n    ).mockResolvedValue({\n      newFilesNecessary: false,\n      response: 'NO',\n      duration: 50,\n    })\n\n    const result = await OriginalRequestFilesPromptModule.requestRelevantFiles(\n      { messages: mockMessages, system: mockSystem },\n      mockFileContext,\n      mockAssistantPrompt,\n      mockAgentStepId,\n      mockClientSessionId,\n      mockFingerprintId,\n      mockUserInputId,\n      mockUserId,\n      mockRepoId,\n    )\n\n    expect(result).toBeNull()\n    expect(\n      geminiWithFallbacksModule.promptFlashWithFallbacks,\n    ).not.toHaveBeenCalled()\n    expect(getCustomFilePickerConfigForOrgSpy).toHaveBeenCalled()\n  })\n})\n"},{"path":"backend/src/__tests__/run-agent-step-tools.test.ts","preContent":"import * as bigquery from '@codebuff/bigquery'\nimport * as analytics from '@codebuff/common/analytics'\nimport { TEST_USER_ID } from '@codebuff/common/old-constants'\nimport {\n  clearMockedModules,\n  mockModule,\n} from '@codebuff/common/testing/mock-modules'\nimport { getToolCallString } from '@codebuff/common/tools/utils'\nimport { getInitialSessionState } from '@codebuff/common/types/session-state'\nimport {\n  afterAll,\n  afterEach,\n  beforeAll,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  mock,\n  spyOn,\n} from 'bun:test'\n\n// Mock imports\nimport * as liveUserInputs from '../live-user-inputs'\nimport * as aisdk from '../llm-apis/vercel-ai-sdk/ai-sdk'\nimport { runAgentStep } from '../run-agent-step'\nimport { clearAgentGeneratorCache } from '../run-programmatic-step'\nimport * as websocketAction from '../websockets/websocket-action'\n\nimport type { AgentTemplate } from '../templates/types'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\ndescribe('runAgentStep - set_output tool', () => {\n  let testAgent: AgentTemplate\n\n  beforeAll(() => {\n    // Mock logger\n    mockModule('@codebuff/backend/util/logger', () => ({\n      logger: {\n        debug: () => {},\n        error: () => {},\n        info: () => {},\n        warn: () => {},\n      },\n      withLoggerContext: async (context: any, fn: () => Promise<any>) => fn(),\n    }))\n  })\n\n  beforeEach(async () => {\n    // Create a test agent that supports set_output\n    testAgent = {\n      id: 'test-set-output-agent',\n      displayName: 'Test Set Output Agent',\n      spawnerPrompt: 'Testing set_output functionality',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['set_output', 'end_turn'],\n      spawnableAgents: [],\n      systemPrompt: 'Test system prompt',\n      instructionsPrompt: 'Test instructions prompt',\n      stepPrompt: 'Test agent step prompt',\n    }\n\n    // Mock analytics and tracing\n    spyOn(analytics, 'initAnalytics').mockImplementation(() => {})\n    analytics.initAnalytics()\n    spyOn(analytics, 'trackEvent').mockImplementation(() => {})\n    spyOn(bigquery, 'insertTrace').mockImplementation(() =>\n      Promise.resolve(true),\n    )\n\n    // Mock live user inputs to always return true (simulating active session)\n    spyOn(liveUserInputs, 'checkLiveUserInput').mockImplementation(() => true)\n    spyOn(liveUserInputs, 'startUserInput').mockImplementation(() => {})\n    spyOn(liveUserInputs, 'endUserInput').mockImplementation(() => {})\n    spyOn(liveUserInputs, 'setSessionConnected').mockImplementation(() => {})\n\n    spyOn(websocketAction, 'requestFiles').mockImplementation(\n      async (ws: any, paths: string[]) => {\n        const results: Record<string, string | null> = {}\n        paths.forEach((p) => {\n          if (p === 'src/auth.ts') {\n            results[p] = 'export function authenticate() { return true; }'\n          } else if (p === 'src/user.ts') {\n            results[p] = 'export interface User { id: string; name: string; }'\n          } else {\n            results[p] = null\n          }\n        })\n        return results\n      },\n    )\n\n    spyOn(websocketAction, 'requestFile').mockImplementation(\n      async (ws: any, path: string) => {\n        if (path === 'src/auth.ts') {\n          return 'export function authenticate() { return true; }'\n        } else if (path === 'src/user.ts') {\n          return 'export interface User { id: string; name: string; }'\n        }\n        return null\n      },\n    )\n\n    // Don't mock requestToolCall for integration test - let real tool execution happen\n\n    // Mock LLM APIs\n    spyOn(aisdk, 'promptAiSdk').mockImplementation(() =>\n      Promise.resolve('Test response'),\n    )\n    clearAgentGeneratorCache()\n  })\n\n  afterEach(() => {\n    mock.restore()\n  })\n\n  afterAll(() => {\n    clearMockedModules()\n    clearAgentGeneratorCache()\n  })\n\n  class MockWebSocket {\n    send(msg: string) {}\n    close() {}\n    on(event: string, listener: (...args: any[]) => void) {}\n    removeListener(event: string, listener: (...args: any[]) => void) {}\n  }\n\n  const mockFileContext: ProjectFileContext = {\n    projectRoot: '/test',\n    cwd: '/test',\n    fileTree: [],\n    fileTokenScores: {},\n    knowledgeFiles: {},\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    systemInfo: {\n      platform: 'test',\n      shell: 'test',\n      nodeVersion: 'test',\n      arch: 'test',\n      homedir: '/home/test',\n      cpus: 1,\n    },\n    fileVersions: [],\n    agentTemplates: {},\n  }\n\n  it('should set output with simple key-value pair', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {\n        message: 'Hi',\n      }) +\n      '\\n\\n' +\n      getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Analyze the codebase',\n        params: undefined,\n      },\n    )\n\n    expect(result.agentState.output).toEqual({\n      message: 'Hi',\n    })\n    expect(result.shouldEndTurn).toBe(true)\n  })\n\n  it('should set output with complex data', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {\n        message: 'Analysis complete',\n        status: 'success',\n        findings: ['Bug in auth.ts', 'Missing validation'],\n      }) + getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Analyze the codebase',\n        params: undefined,\n      },\n    )\n\n    expect(result.agentState.output).toEqual({\n      message: 'Analysis complete',\n      status: 'success',\n      findings: ['Bug in auth.ts', 'Missing validation'],\n    })\n    expect(result.shouldEndTurn).toBe(true)\n  })\n\n  it('should replace existing output data', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {\n        newField: 'new value',\n        existingField: 'updated value',\n      }) + getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    // Pre-populate the output with existing data\n    agentState.output = {\n      existingField: 'original value',\n      anotherField: 'unchanged',\n    }\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Update the output',\n        params: undefined,\n      },\n    )\n\n    expect(result.agentState.output).toEqual({\n      newField: 'new value',\n      existingField: 'updated value',\n    })\n  })\n\n  it('should handle empty output parameter', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {}) + getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    agentState.output = { existingField: 'value' }\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Update with empty object',\n        params: undefined,\n      },\n    )\n\n    // Should replace with empty object\n    expect(result.agentState.output).toEqual({})\n  })\n\n  it('should handle handleSteps with one tool call and STEP_ALL', async () => {\n    // Create a mock agent template with handleSteps\n    const mockAgentTemplate: AgentTemplate = {\n      id: 'test-handlesteps-agent',\n      displayName: 'Test HandleSteps Agent',\n      spawnerPrompt: 'Testing handleSteps functionality',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['read_files', 'end_turn'],\n      spawnableAgents: [],\n      systemPrompt: 'Test system prompt',\n      instructionsPrompt: 'Test instructions prompt',\n      stepPrompt: 'Test agent step prompt',\n      handleSteps: function* ({ agentState, prompt, params }) {\n        // Yield one tool call\n        yield {\n          toolName: 'read_files',\n          input: { paths: ['src/test.ts'] },\n        }\n        // Then yield STEP_ALL to continue processing\n        yield 'STEP_ALL'\n      },\n    }\n\n    // Mock the agent registry to include our test agent\n    const mockAgentRegistry = {\n      'test-handlesteps-agent': mockAgentTemplate,\n    }\n\n    // Mock requestFiles to return test file content\n    spyOn(websocketAction, 'requestFiles').mockImplementation(\n      async (ws: any, paths: string[]) => {\n        const results: Record<string, string | null> = {}\n        paths.forEach((p) => {\n          if (p === 'src/test.ts') {\n            results[p] = 'export function testFunction() { return \"test\"; }'\n          } else {\n            results[p] = null\n          }\n        })\n        return results\n      },\n    )\n\n    // Mock the LLM stream to return a response that doesn't end the turn\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield 'Continuing with the analysis...' // Non-empty response, no tool calls\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    const initialMessageCount = agentState.messageHistory.length\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-handlesteps-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates: mockAgentRegistry,\n        agentState,\n        prompt: 'Test the handleSteps functionality',\n        params: undefined,\n      },\n    )\n\n    // Should end turn because toolCalls.length === 0 && toolResults.length === 0 from LLM processing\n    // (The programmatic step tool results don't count toward this calculation)\n    expect(result.shouldEndTurn).toBe(true)\n\n    const finalMessages = result.agentState.messageHistory\n\n    // Verify the exact sequence of messages in the final message history\n    // The stepPrompt with timeToLive: 'agentStep' is removed by expireMessages\n    const expectedMessages = [\n      {\n        role: 'user',\n        content: expect.stringContaining('Test the handleSteps functionality'),\n      },\n      {\n        role: 'user',\n        content: expect.stringContaining('Test instructions prompt'),\n      },\n      {\n        role: 'assistant',\n        content: expect.stringContaining('read_files'),\n      },\n      {\n        role: 'user',\n        content: expect.stringContaining('testFunction'),\n      },\n      {\n        role: 'assistant',\n        content: 'Continuing with the analysis...',\n      },\n    ]\n\n    const newMessages = finalMessages.slice(initialMessageCount)\n\n    expectedMessages.forEach((expected, index) => {\n      expect(newMessages[index]).toMatchObject(expected)\n    })\n    expect(newMessages).toHaveLength(expectedMessages.length)\n\n    // Verify requestFiles was called with correct parameters\n    expect(websocketAction.requestFiles).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      ['src/test.ts'],\n    )\n  })\n\n  it('should spawn agent inline that deletes last two assistant messages', async () => {\n    // Create a mock inline agent template that deletes messages\n    const mockInlineAgentTemplate: AgentTemplate = {\n      id: 'message-deleter-agent',\n      displayName: 'Message Deleter Agent',\n      spawnerPrompt: 'Deletes assistant messages',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['set_messages', 'end_turn'],\n      spawnableAgents: [],\n      systemPrompt: 'Delete messages system prompt',\n      instructionsPrompt: 'Delete messages instructions prompt',\n      stepPrompt: 'Delete messages step prompt',\n      handleSteps: function* ({ agentState, prompt, params }) {\n        // Delete the last two assistant messages by doing two iterations\n        const messages = [...agentState.messageHistory]\n\n        // First iteration: find and remove the last assistant message\n        for (let i = messages.length - 1; i >= 0; i--) {\n          if (messages[i].role === 'assistant') {\n            messages.splice(i, 1)\n            break\n          }\n        }\n\n        // Second iteration: find and remove the next-to-last assistant message\n        for (let i = messages.length - 1; i >= 0; i--) {\n          if (messages[i].role === 'assistant') {\n            messages.splice(i, 1)\n            break\n          }\n        }\n\n        // Set the updated messages\n        yield {\n          toolName: 'set_messages',\n          input: { messages },\n        }\n      },\n    }\n\n    // Create a parent agent template that can spawn the inline agent\n    const mockParentAgentTemplate: AgentTemplate = {\n      id: 'parent-agent',\n      displayName: 'Parent Agent',\n      spawnerPrompt: 'Parent agent that spawns inline agents',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['spawn_agent_inline', 'end_turn'],\n      spawnableAgents: ['message-deleter-agent'],\n      systemPrompt: 'Parent system prompt',\n      instructionsPrompt: 'Parent instructions prompt',\n      stepPrompt: 'Parent step prompt',\n    }\n\n    // Mock the agent registry to include both agents\n    const mockAgentRegistry = {\n      'parent-agent': mockParentAgentTemplate,\n      'message-deleter-agent': mockInlineAgentTemplate,\n    }\n\n    // Mock the LLM stream to spawn the inline agent\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield getToolCallString('spawn_agent_inline', {\n        agent_type: 'message-deleter-agent',\n        prompt: 'Delete the last two assistant messages',\n      })\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n\n    // Add some initial messages including assistant messages to delete\n    agentState.messageHistory = [\n      { role: 'user', content: 'Hello' },\n      { role: 'assistant', content: 'Hi there!' },\n      { role: 'user', content: 'How are you?' },\n      { role: 'assistant', content: 'I am doing well, thank you!' },\n      { role: 'user', content: 'Can you help me?' },\n      { role: 'assistant', content: 'Of course, I would be happy to help!' },\n    ]\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'parent-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates: mockAgentRegistry,\n        agentState,\n        prompt: 'Spawn an inline agent to clean up messages',\n        params: undefined,\n      },\n    )\n\n    const finalMessages = result.agentState.messageHistory\n\n    // This integration test demonstrates that spawn_agent_inline tool calls are executed successfully!\n    // The inline agent runs its handleSteps function and executes tool calls\n\n    // Verify the exact sequence of messages in the final message history\n    // The inline agent's instructionsPrompt and stepPrompt should be removed by expireMessages\n    const expectedMessages = [\n      { role: 'user', content: 'Hello' },\n      { role: 'assistant', content: 'Hi there!' },\n      { role: 'user', content: 'How are you?' },\n      { role: 'assistant', content: 'I am doing well, thank you!' },\n      { role: 'user', content: 'Can you help me?' },\n      {\n        role: 'user',\n        content: expect.stringContaining(\n          'Spawn an inline agent to clean up messages',\n        ),\n      },\n      {\n        role: 'user',\n        content: expect.stringContaining(\n          'Delete the last two assistant messages',\n        ),\n      },\n    ]\n\n    expectedMessages.forEach((expected, index) => {\n      expect(finalMessages[index]).toMatchObject(expected)\n    })\n    expect(finalMessages).toHaveLength(expectedMessages.length)\n  })\n})\n","postContent":"import * as bigquery from '@codebuff/bigquery'\nimport * as analytics from '@codebuff/common/analytics'\nimport { TEST_USER_ID } from '@codebuff/common/old-constants'\nimport {\n  clearMockedModules,\n  mockModule,\n} from '@codebuff/common/testing/mock-modules'\nimport { getToolCallString } from '@codebuff/common/tools/utils'\nimport { getInitialSessionState } from '@codebuff/common/types/session-state'\nimport {\n  afterAll,\n  afterEach,\n  beforeAll,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  mock,\n  spyOn,\n} from 'bun:test'\n\n// Mock imports\nimport * as liveUserInputs from '../live-user-inputs'\nimport * as aisdk from '../llm-apis/vercel-ai-sdk/ai-sdk'\nimport { runAgentStep } from '../run-agent-step'\nimport { clearAgentGeneratorCache } from '../run-programmatic-step'\nimport * as websocketAction from '../websockets/websocket-action'\n\nimport type { AgentTemplate } from '../templates/types'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\ndescribe('runAgentStep - set_output tool', () => {\n  let testAgent: AgentTemplate\n\n  beforeAll(() => {\n    // Mock logger\n    mockModule('@codebuff/backend/util/logger', () => ({\n      logger: {\n        debug: () => {},\n        error: () => {},\n        info: () => {},\n        warn: () => {},\n      },\n      withLoggerContext: async (context: any, fn: () => Promise<any>) => fn(),\n    }))\n  })\n\n  beforeEach(async () => {\n    // Create a test agent that supports set_output\n    testAgent = {\n      id: 'test-set-output-agent',\n      displayName: 'Test Set Output Agent',\n      spawnerPrompt: 'Testing set_output functionality',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['set_output', 'end_turn'],\n      spawnableAgents: [],\n      systemPrompt: 'Test system prompt',\n      instructionsPrompt: 'Test instructions prompt',\n      stepPrompt: 'Test agent step prompt',\n    }\n\n    // Mock analytics and tracing\n    spyOn(analytics, 'initAnalytics').mockImplementation(() => {})\n    analytics.initAnalytics()\n    spyOn(analytics, 'trackEvent').mockImplementation(() => {})\n    spyOn(bigquery, 'insertTrace').mockImplementation(() =>\n      Promise.resolve(true),\n    )\n\n    // Mock live user inputs to always return true (simulating active session)\n    spyOn(liveUserInputs, 'checkLiveUserInput').mockImplementation(() => true)\n    spyOn(liveUserInputs, 'startUserInput').mockImplementation(() => {})\n    spyOn(liveUserInputs, 'endUserInput').mockImplementation(() => {})\n    spyOn(liveUserInputs, 'setSessionConnected').mockImplementation(() => {})\n\n    spyOn(websocketAction, 'requestFiles').mockImplementation(\n      async (ws: any, paths: string[]) => {\n        const results: Record<string, string | null> = {}\n        paths.forEach((p) => {\n          if (p === 'src/auth.ts') {\n            results[p] = 'export function authenticate() { return true; }'\n          } else if (p === 'src/user.ts') {\n            results[p] = 'export interface User { id: string; name: string; }'\n          } else {\n            results[p] = null\n          }\n        })\n        return results\n      },\n    )\n\n    spyOn(websocketAction, 'requestFile').mockImplementation(\n      async (ws: any, path: string) => {\n        if (path === 'src/auth.ts') {\n          return 'export function authenticate() { return true; }'\n        } else if (path === 'src/user.ts') {\n          return 'export interface User { id: string; name: string; }'\n        }\n        return null\n      },\n    )\n\n    // Don't mock requestToolCall for integration test - let real tool execution happen\n\n    // Mock LLM APIs\n    spyOn(aisdk, 'promptAiSdk').mockImplementation(() =>\n      Promise.resolve('Test response'),\n    )\n    clearAgentGeneratorCache()\n  })\n\n  afterEach(() => {\n    mock.restore()\n  })\n\n  afterAll(() => {\n    clearMockedModules()\n    clearAgentGeneratorCache()\n  })\n\n  class MockWebSocket {\n    send(msg: string) {}\n    close() {}\n    on(event: string, listener: (...args: any[]) => void) {}\n    removeListener(event: string, listener: (...args: any[]) => void) {}\n  }\n\n  const mockFileContext: ProjectFileContext = {\n    projectRoot: '/test',\n    cwd: '/test',\n    fileTree: [],\n    fileTokenScores: {},\n    knowledgeFiles: {},\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    systemInfo: {\n      platform: 'test',\n      shell: 'test',\n      nodeVersion: 'test',\n      arch: 'test',\n      homedir: '/home/test',\n      cpus: 1,\n    },\n    agentTemplates: {},\n    customToolDefinitions: {},\n  }\n\n  it('should set output with simple key-value pair', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {\n        message: 'Hi',\n      }) +\n      '\\n\\n' +\n      getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Analyze the codebase',\n        params: undefined,\n      },\n    )\n\n    expect(result.agentState.output).toEqual({\n      message: 'Hi',\n    })\n    expect(result.shouldEndTurn).toBe(true)\n  })\n\n  it('should set output with complex data', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {\n        message: 'Analysis complete',\n        status: 'success',\n        findings: ['Bug in auth.ts', 'Missing validation'],\n      }) + getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Analyze the codebase',\n        params: undefined,\n      },\n    )\n\n    expect(result.agentState.output).toEqual({\n      message: 'Analysis complete',\n      status: 'success',\n      findings: ['Bug in auth.ts', 'Missing validation'],\n    })\n    expect(result.shouldEndTurn).toBe(true)\n  })\n\n  it('should replace existing output data', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {\n        newField: 'new value',\n        existingField: 'updated value',\n      }) + getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    // Pre-populate the output with existing data\n    agentState.output = {\n      existingField: 'original value',\n      anotherField: 'unchanged',\n    }\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Update the output',\n        params: undefined,\n      },\n    )\n\n    expect(result.agentState.output).toEqual({\n      newField: 'new value',\n      existingField: 'updated value',\n    })\n  })\n\n  it('should handle empty output parameter', async () => {\n    const mockResponse =\n      getToolCallString('set_output', {}) + getToolCallString('end_turn', {})\n\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield mockResponse\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    agentState.output = { existingField: 'value' }\n    const localAgentTemplates = {\n      'test-set-output-agent': testAgent,\n    }\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-set-output-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates,\n        agentState,\n        prompt: 'Update with empty object',\n        params: undefined,\n      },\n    )\n\n    // Should replace with empty object\n    expect(result.agentState.output).toEqual({})\n  })\n\n  it('should handle handleSteps with one tool call and STEP_ALL', async () => {\n    // Create a mock agent template with handleSteps\n    const mockAgentTemplate: AgentTemplate = {\n      id: 'test-handlesteps-agent',\n      displayName: 'Test HandleSteps Agent',\n      spawnerPrompt: 'Testing handleSteps functionality',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['read_files', 'end_turn'],\n      spawnableAgents: [],\n      systemPrompt: 'Test system prompt',\n      instructionsPrompt: 'Test instructions prompt',\n      stepPrompt: 'Test agent step prompt',\n      handleSteps: function* ({ agentState, prompt, params }) {\n        // Yield one tool call\n        yield {\n          toolName: 'read_files',\n          input: { paths: ['src/test.ts'] },\n        }\n        // Then yield STEP_ALL to continue processing\n        yield 'STEP_ALL'\n      },\n    }\n\n    // Mock the agent registry to include our test agent\n    const mockAgentRegistry = {\n      'test-handlesteps-agent': mockAgentTemplate,\n    }\n\n    // Mock requestFiles to return test file content\n    spyOn(websocketAction, 'requestFiles').mockImplementation(\n      async (ws: any, paths: string[]) => {\n        const results: Record<string, string | null> = {}\n        paths.forEach((p) => {\n          if (p === 'src/test.ts') {\n            results[p] = 'export function testFunction() { return \"test\"; }'\n          } else {\n            results[p] = null\n          }\n        })\n        return results\n      },\n    )\n\n    // Mock the LLM stream to return a response that doesn't end the turn\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield 'Continuing with the analysis...' // Non-empty response, no tool calls\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n    const initialMessageCount = agentState.messageHistory.length\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'test-handlesteps-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates: mockAgentRegistry,\n        agentState,\n        prompt: 'Test the handleSteps functionality',\n        params: undefined,\n      },\n    )\n\n    // Should end turn because toolCalls.length === 0 && toolResults.length === 0 from LLM processing\n    // (The programmatic step tool results don't count toward this calculation)\n    expect(result.shouldEndTurn).toBe(true)\n\n    const finalMessages = result.agentState.messageHistory\n\n    // Verify the exact sequence of messages in the final message history\n    // The stepPrompt with timeToLive: 'agentStep' is removed by expireMessages\n    const expectedMessages = [\n      {\n        role: 'user',\n        content: expect.stringContaining('Test the handleSteps functionality'),\n      },\n      {\n        role: 'user',\n        content: expect.stringContaining('Test instructions prompt'),\n      },\n      {\n        role: 'assistant',\n        content: expect.stringContaining('read_files'),\n      },\n      {\n        role: 'user',\n        content: expect.stringContaining('testFunction'),\n      },\n      {\n        role: 'assistant',\n        content: 'Continuing with the analysis...',\n      },\n    ]\n\n    const newMessages = finalMessages.slice(initialMessageCount)\n\n    expectedMessages.forEach((expected, index) => {\n      expect(newMessages[index]).toMatchObject(expected)\n    })\n    expect(newMessages).toHaveLength(expectedMessages.length)\n\n    // Verify requestFiles was called with correct parameters\n    expect(websocketAction.requestFiles).toHaveBeenCalledWith(\n      expect.any(Object), // WebSocket\n      ['src/test.ts'],\n    )\n  })\n\n  it('should spawn agent inline that deletes last two assistant messages', async () => {\n    // Create a mock inline agent template that deletes messages\n    const mockInlineAgentTemplate: AgentTemplate = {\n      id: 'message-deleter-agent',\n      displayName: 'Message Deleter Agent',\n      spawnerPrompt: 'Deletes assistant messages',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['set_messages', 'end_turn'],\n      spawnableAgents: [],\n      systemPrompt: 'Delete messages system prompt',\n      instructionsPrompt: 'Delete messages instructions prompt',\n      stepPrompt: 'Delete messages step prompt',\n      handleSteps: function* ({ agentState, prompt, params }) {\n        // Delete the last two assistant messages by doing two iterations\n        const messages = [...agentState.messageHistory]\n\n        // First iteration: find and remove the last assistant message\n        for (let i = messages.length - 1; i >= 0; i--) {\n          if (messages[i].role === 'assistant') {\n            messages.splice(i, 1)\n            break\n          }\n        }\n\n        // Second iteration: find and remove the next-to-last assistant message\n        for (let i = messages.length - 1; i >= 0; i--) {\n          if (messages[i].role === 'assistant') {\n            messages.splice(i, 1)\n            break\n          }\n        }\n\n        // Set the updated messages\n        yield {\n          toolName: 'set_messages',\n          input: { messages },\n        }\n      },\n    }\n\n    // Create a parent agent template that can spawn the inline agent\n    const mockParentAgentTemplate: AgentTemplate = {\n      id: 'parent-agent',\n      displayName: 'Parent Agent',\n      spawnerPrompt: 'Parent agent that spawns inline agents',\n      model: 'claude-3-5-sonnet-20241022',\n      inputSchema: {},\n      outputMode: 'structured_output' as const,\n      includeMessageHistory: true,\n      toolNames: ['spawn_agent_inline', 'end_turn'],\n      spawnableAgents: ['message-deleter-agent'],\n      systemPrompt: 'Parent system prompt',\n      instructionsPrompt: 'Parent instructions prompt',\n      stepPrompt: 'Parent step prompt',\n    }\n\n    // Mock the agent registry to include both agents\n    const mockAgentRegistry = {\n      'parent-agent': mockParentAgentTemplate,\n      'message-deleter-agent': mockInlineAgentTemplate,\n    }\n\n    // Mock the LLM stream to spawn the inline agent\n    spyOn(aisdk, 'promptAiSdkStream').mockImplementation(async function* () {\n      yield getToolCallString('spawn_agent_inline', {\n        agent_type: 'message-deleter-agent',\n        prompt: 'Delete the last two assistant messages',\n      })\n    })\n\n    const sessionState = getInitialSessionState(mockFileContext)\n    const agentState = sessionState.mainAgentState\n\n    // Add some initial messages including assistant messages to delete\n    agentState.messageHistory = [\n      { role: 'user', content: 'Hello' },\n      { role: 'assistant', content: 'Hi there!' },\n      { role: 'user', content: 'How are you?' },\n      { role: 'assistant', content: 'I am doing well, thank you!' },\n      { role: 'user', content: 'Can you help me?' },\n      { role: 'assistant', content: 'Of course, I would be happy to help!' },\n    ]\n\n    const result = await runAgentStep(\n      new MockWebSocket() as unknown as WebSocket,\n      {\n        userId: TEST_USER_ID,\n        userInputId: 'test-input',\n        clientSessionId: 'test-session',\n        fingerprintId: 'test-fingerprint',\n        onResponseChunk: () => {},\n        agentType: 'parent-agent',\n        fileContext: mockFileContext,\n        localAgentTemplates: mockAgentRegistry,\n        agentState,\n        prompt: 'Spawn an inline agent to clean up messages',\n        params: undefined,\n      },\n    )\n\n    const finalMessages = result.agentState.messageHistory\n\n    // This integration test demonstrates that spawn_agent_inline tool calls are executed successfully!\n    // The inline agent runs its handleSteps function and executes tool calls\n\n    // Verify the exact sequence of messages in the final message history\n    // The inline agent's instructionsPrompt and stepPrompt should be removed by expireMessages\n    const expectedMessages = [\n      { role: 'user', content: 'Hello' },\n      { role: 'assistant', content: 'Hi there!' },\n      { role: 'user', content: 'How are you?' },\n      { role: 'assistant', content: 'I am doing well, thank you!' },\n      { role: 'user', content: 'Can you help me?' },\n      {\n        role: 'user',\n        content: expect.stringContaining(\n          'Spawn an inline agent to clean up messages',\n        ),\n      },\n      {\n        role: 'user',\n        content: expect.stringContaining(\n          'Delete the last two assistant messages',\n        ),\n      },\n    ]\n\n    expectedMessages.forEach((expected, index) => {\n      expect(finalMessages[index]).toMatchObject(expected)\n    })\n    expect(finalMessages).toHaveLength(expectedMessages.length)\n  })\n})\n"},{"path":"backend/src/__tests__/test-utils.ts","preContent":"import type { ProjectFileContext } from '@codebuff/common/util/file'\n\nexport class MockWebSocket {\n  send(msg: string) {}\n  close() {}\n  on(event: string, listener: (...args: any[]) => void) {}\n  removeListener(event: string, listener: (...args: any[]) => void) {}\n}\n\nexport const mockFileContext: ProjectFileContext = {\n  projectRoot: '/test',\n  cwd: '/test',\n  fileTree: [],\n  fileTokenScores: {},\n  knowledgeFiles: {},\n  userKnowledgeFiles: {},\n  agentTemplates: {},\n  gitChanges: {\n    status: '',\n    diff: '',\n    diffCached: '',\n    lastCommitMessages: '',\n  },\n  changesSinceLastChat: {},\n  shellConfigFiles: {},\n  systemInfo: {\n    platform: 'test',\n    shell: 'test',\n    nodeVersion: 'test',\n    arch: 'test',\n    homedir: '/home/test',\n    cpus: 1,\n  },\n  fileVersions: [],\n}\n","postContent":"import type { ProjectFileContext } from '@codebuff/common/util/file'\n\nexport class MockWebSocket {\n  send(msg: string) {}\n  close() {}\n  on(event: string, listener: (...args: any[]) => void) {}\n  removeListener(event: string, listener: (...args: any[]) => void) {}\n}\n\nexport const mockFileContext: ProjectFileContext = {\n  projectRoot: '/test',\n  cwd: '/test',\n  fileTree: [],\n  fileTokenScores: {},\n  knowledgeFiles: {},\n  userKnowledgeFiles: {},\n  agentTemplates: {},\n  customToolDefinitions: {},\n  gitChanges: {\n    status: '',\n    diff: '',\n    diffCached: '',\n    lastCommitMessages: '',\n  },\n  changesSinceLastChat: {},\n  shellConfigFiles: {},\n  systemInfo: {\n    platform: 'test',\n    shell: 'test',\n    nodeVersion: 'test',\n    arch: 'test',\n    homedir: '/home/test',\n    cpus: 1,\n  },\n}\n"},{"path":"backend/src/templates/strings.ts","preContent":"import { CodebuffConfigSchema } from '@codebuff/common/json-config/constants'\nimport { renderToolResults } from '@codebuff/common/tools/utils'\nimport { escapeString, generateCompactId } from '@codebuff/common/util/string'\nimport { schemaToJsonStr } from '@codebuff/common/util/zod-schema'\nimport { z } from 'zod/v4'\n\nimport { getAgentTemplate } from './agent-registry'\nimport { buildSpawnableAgentsDescription } from './prompts'\nimport { PLACEHOLDER, placeholderValues } from './types'\nimport {\n  getGitChangesPrompt,\n  getProjectFileTreePrompt,\n  getSystemInfoPrompt,\n} from '../system-prompt/prompts'\nimport {\n  getShortToolInstructions,\n  getToolsInstructions,\n} from '../tools/prompts'\nimport { parseUserMessage } from '../util/messages'\n\nimport type { AgentTemplate, PlaceholderValue } from './types'\nimport type { ToolName } from '@codebuff/common/tools/constants'\nimport type {\n  AgentState,\n  AgentTemplateType,\n} from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\n\nexport async function formatPrompt(\n  prompt: string,\n  fileContext: ProjectFileContext,\n  agentState: AgentState,\n  tools: ToolName[],\n  spawnableAgents: AgentTemplateType[],\n  agentTemplates: Record<string, AgentTemplate>,\n  intitialAgentPrompt?: string,\n): Promise<string> {\n  const { messageHistory } = agentState\n  const lastUserMessage = messageHistory.findLast(\n    ({ role, content }) =>\n      role === 'user' &&\n      typeof content === 'string' &&\n      parseUserMessage(content),\n  )\n  const lastUserInput = lastUserMessage\n    ? parseUserMessage(lastUserMessage.content as string)\n    : undefined\n\n  const agentTemplate = agentState.agentType\n    ? await getAgentTemplate(agentState.agentType, agentTemplates)\n    : null\n\n  const toInject: Record<PlaceholderValue, string> = {\n    [PLACEHOLDER.AGENT_NAME]: agentTemplate\n      ? agentTemplate.displayName || 'Unknown Agent'\n      : 'Buffy',\n    [PLACEHOLDER.CONFIG_SCHEMA]: schemaToJsonStr(CodebuffConfigSchema),\n    [PLACEHOLDER.FILE_TREE_PROMPT]: getProjectFileTreePrompt(\n      fileContext,\n      20_000,\n      'agent',\n    ),\n    [PLACEHOLDER.GIT_CHANGES_PROMPT]: getGitChangesPrompt(fileContext),\n    [PLACEHOLDER.REMAINING_STEPS]: `${agentState.stepsRemaining!}`,\n    [PLACEHOLDER.PROJECT_ROOT]: fileContext.projectRoot,\n    [PLACEHOLDER.SYSTEM_INFO_PROMPT]: getSystemInfoPrompt(fileContext),\n    [PLACEHOLDER.TOOLS_PROMPT]: getToolsInstructions(tools),\n    [PLACEHOLDER.AGENTS_PROMPT]: await buildSpawnableAgentsDescription(\n      spawnableAgents,\n      agentTemplates,\n    ),\n    [PLACEHOLDER.USER_CWD]: fileContext.cwd,\n    [PLACEHOLDER.USER_INPUT_PROMPT]: escapeString(lastUserInput ?? ''),\n    [PLACEHOLDER.INITIAL_AGENT_PROMPT]: escapeString(intitialAgentPrompt ?? ''),\n    [PLACEHOLDER.KNOWLEDGE_FILES_CONTENTS]: renderToolResults(\n      Object.entries({\n        ...Object.fromEntries(\n          Object.entries(fileContext.knowledgeFiles)\n            .filter(([path]) =>\n              [\n                'knowledge.md',\n                'CLAUDE.md',\n                'codebuff.json',\n                'codebuff.jsonc',\n              ].includes(path),\n            )\n            .map(([path, content]) => [path, content.trim()]),\n        ),\n        ...fileContext.userKnowledgeFiles,\n      }).map(([path, content]) => ({\n        toolName: 'read_files',\n        toolCallId: generateCompactId(),\n        output: { type: 'text', value: JSON.stringify({ path, content }) },\n      })),\n    ),\n  }\n\n  for (const varName of placeholderValues) {\n    if (toInject[varName]) {\n      prompt = prompt.replaceAll(varName, toInject[varName])\n    }\n  }\n  return prompt\n}\ntype StringField = 'systemPrompt' | 'instructionsPrompt' | 'stepPrompt'\n\nexport async function collectParentInstructions(\n  agentType: string,\n  agentTemplates: Record<string, AgentTemplate>,\n): Promise<string[]> {\n  const instructions: string[] = []\n\n  for (const template of Object.values(agentTemplates)) {\n    if (template.parentInstructions) {\n      const instruction = template.parentInstructions[agentType]\n      if (instruction) {\n        instructions.push(instruction)\n      }\n    }\n  }\n\n  return instructions\n}\n\nconst additionalPlaceholders = {\n  systemPrompt: [PLACEHOLDER.TOOLS_PROMPT, PLACEHOLDER.AGENTS_PROMPT],\n  instructionsPrompt: [],\n  stepPrompt: [],\n} satisfies Record<StringField, string[]>\nexport async function getAgentPrompt<T extends StringField>(\n  agentTemplate: AgentTemplate,\n  promptType: { type: T },\n  fileContext: ProjectFileContext,\n  agentState: AgentState,\n  agentTemplates: Record<string, AgentTemplate>,\n): Promise<string | undefined> {\n  let promptValue = agentTemplate[promptType.type]\n  for (const placeholder of additionalPlaceholders[promptType.type]) {\n    if (!promptValue.includes(placeholder)) {\n      promptValue += `\\n\\n${placeholder}`\n    }\n  }\n\n  if (promptValue === undefined) {\n    return undefined\n  }\n\n  const prompt = await formatPrompt(\n    promptValue,\n    fileContext,\n    agentState,\n    agentTemplate.toolNames,\n    agentTemplate.spawnableAgents,\n    agentTemplates,\n    '',\n  )\n\n  let addendum = ''\n\n  // Add tool instructions, spawnable agents, and output schema prompts to instructionsPrompt\n  if (promptType.type === 'instructionsPrompt' && agentState.agentType) {\n    addendum +=\n      '\\n\\n' +\n      getShortToolInstructions(agentTemplate.toolNames) +\n      '\\n\\n' +\n      (await buildSpawnableAgentsDescription(\n        agentTemplate.spawnableAgents,\n        agentTemplates,\n      ))\n\n    const parentInstructions = await collectParentInstructions(\n      agentState.agentType,\n      agentTemplates,\n    )\n\n    if (parentInstructions.length > 0) {\n      addendum += '\\n\\n## Additional Instructions for Spawning Agents\\n\\n'\n      addendum += parentInstructions\n        .map((instruction) => `- ${instruction}`)\n        .join('\\n')\n    }\n\n    // Add output schema information if defined\n    if (agentTemplate.outputSchema) {\n      addendum += '\\n\\n## Output Schema\\n\\n'\n      addendum +=\n        'When using the set_output tool, your output must conform to this schema:\\n\\n'\n      addendum += '```json\\n'\n      try {\n        // Convert Zod schema to JSON schema for display\n        const jsonSchema = z.toJSONSchema(agentTemplate.outputSchema, {\n          io: 'input',\n        })\n        delete jsonSchema['$schema'] // Remove the $schema field for cleaner display\n        addendum += JSON.stringify(jsonSchema, null, 2)\n      } catch {\n        // Fallback to a simple description\n        addendum += JSON.stringify(\n          { type: 'object', description: 'Output schema validation enabled' },\n          null,\n          2,\n        )\n      }\n      addendum += '\\n```'\n    }\n  }\n\n  return prompt + addendum\n}\n","postContent":"import { CodebuffConfigSchema } from '@codebuff/common/json-config/constants'\nimport { renderToolResults } from '@codebuff/common/tools/utils'\nimport { escapeString, generateCompactId } from '@codebuff/common/util/string'\nimport { schemaToJsonStr } from '@codebuff/common/util/zod-schema'\nimport { z } from 'zod/v4'\n\nimport { getAgentTemplate } from './agent-registry'\nimport { buildSpawnableAgentsDescription } from './prompts'\nimport { PLACEHOLDER, placeholderValues } from './types'\nimport {\n  getGitChangesPrompt,\n  getProjectFileTreePrompt,\n  getSystemInfoPrompt,\n} from '../system-prompt/prompts'\nimport {\n  getShortToolInstructions,\n  getToolsInstructions,\n} from '../tools/prompts'\nimport { parseUserMessage } from '../util/messages'\n\nimport type { AgentTemplate, PlaceholderValue } from './types'\nimport type {\n  AgentState,\n  AgentTemplateType,\n} from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\n\nexport async function formatPrompt(\n  prompt: string,\n  fileContext: ProjectFileContext,\n  agentState: AgentState,\n  tools: readonly string[],\n  spawnableAgents: AgentTemplateType[],\n  agentTemplates: Record<string, AgentTemplate>,\n  intitialAgentPrompt?: string,\n): Promise<string> {\n  const { messageHistory } = agentState\n  const lastUserMessage = messageHistory.findLast(\n    ({ role, content }) =>\n      role === 'user' &&\n      typeof content === 'string' &&\n      parseUserMessage(content),\n  )\n  const lastUserInput = lastUserMessage\n    ? parseUserMessage(lastUserMessage.content as string)\n    : undefined\n\n  const agentTemplate = agentState.agentType\n    ? await getAgentTemplate(agentState.agentType, agentTemplates)\n    : null\n\n  const toInject: Record<PlaceholderValue, string> = {\n    [PLACEHOLDER.AGENT_NAME]: agentTemplate\n      ? agentTemplate.displayName || 'Unknown Agent'\n      : 'Buffy',\n    [PLACEHOLDER.CONFIG_SCHEMA]: schemaToJsonStr(CodebuffConfigSchema),\n    [PLACEHOLDER.FILE_TREE_PROMPT]: getProjectFileTreePrompt(\n      fileContext,\n      20_000,\n      'agent',\n    ),\n    [PLACEHOLDER.GIT_CHANGES_PROMPT]: getGitChangesPrompt(fileContext),\n    [PLACEHOLDER.REMAINING_STEPS]: `${agentState.stepsRemaining!}`,\n    [PLACEHOLDER.PROJECT_ROOT]: fileContext.projectRoot,\n    [PLACEHOLDER.SYSTEM_INFO_PROMPT]: getSystemInfoPrompt(fileContext),\n    [PLACEHOLDER.TOOLS_PROMPT]: getToolsInstructions(\n      tools,\n      fileContext.customToolDefinitions,\n    ),\n    [PLACEHOLDER.AGENTS_PROMPT]: await buildSpawnableAgentsDescription(\n      spawnableAgents,\n      agentTemplates,\n    ),\n    [PLACEHOLDER.USER_CWD]: fileContext.cwd,\n    [PLACEHOLDER.USER_INPUT_PROMPT]: escapeString(lastUserInput ?? ''),\n    [PLACEHOLDER.INITIAL_AGENT_PROMPT]: escapeString(intitialAgentPrompt ?? ''),\n    [PLACEHOLDER.KNOWLEDGE_FILES_CONTENTS]: renderToolResults(\n      Object.entries({\n        ...Object.fromEntries(\n          Object.entries(fileContext.knowledgeFiles)\n            .filter(([path]) =>\n              [\n                'knowledge.md',\n                'CLAUDE.md',\n                'codebuff.json',\n                'codebuff.jsonc',\n              ].includes(path),\n            )\n            .map(([path, content]) => [path, content.trim()]),\n        ),\n        ...fileContext.userKnowledgeFiles,\n      }).map(([path, content]) => ({\n        toolName: 'read_files',\n        toolCallId: generateCompactId(),\n        output: { type: 'text', value: JSON.stringify({ path, content }) },\n      })),\n    ),\n  }\n\n  for (const varName of placeholderValues) {\n    if (toInject[varName]) {\n      prompt = prompt.replaceAll(varName, toInject[varName])\n    }\n  }\n  return prompt\n}\ntype StringField = 'systemPrompt' | 'instructionsPrompt' | 'stepPrompt'\n\nexport async function collectParentInstructions(\n  agentType: string,\n  agentTemplates: Record<string, AgentTemplate>,\n): Promise<string[]> {\n  const instructions: string[] = []\n\n  for (const template of Object.values(agentTemplates)) {\n    if (template.parentInstructions) {\n      const instruction = template.parentInstructions[agentType]\n      if (instruction) {\n        instructions.push(instruction)\n      }\n    }\n  }\n\n  return instructions\n}\n\nconst additionalPlaceholders = {\n  systemPrompt: [PLACEHOLDER.TOOLS_PROMPT, PLACEHOLDER.AGENTS_PROMPT],\n  instructionsPrompt: [],\n  stepPrompt: [],\n} satisfies Record<StringField, string[]>\nexport async function getAgentPrompt<T extends StringField>(\n  agentTemplate: AgentTemplate,\n  promptType: { type: T },\n  fileContext: ProjectFileContext,\n  agentState: AgentState,\n  agentTemplates: Record<string, AgentTemplate>,\n): Promise<string | undefined> {\n  let promptValue = agentTemplate[promptType.type]\n  for (const placeholder of additionalPlaceholders[promptType.type]) {\n    if (!promptValue.includes(placeholder)) {\n      promptValue += `\\n\\n${placeholder}`\n    }\n  }\n\n  if (promptValue === undefined) {\n    return undefined\n  }\n\n  const prompt = await formatPrompt(\n    promptValue,\n    fileContext,\n    agentState,\n    agentTemplate.toolNames,\n    agentTemplate.spawnableAgents,\n    agentTemplates,\n    '',\n  )\n\n  let addendum = ''\n\n  // Add tool instructions, spawnable agents, and output schema prompts to instructionsPrompt\n  if (promptType.type === 'instructionsPrompt' && agentState.agentType) {\n    addendum +=\n      '\\n\\n' +\n      getShortToolInstructions(\n        agentTemplate.toolNames,\n        fileContext.customToolDefinitions,\n      ) +\n      '\\n\\n' +\n      (await buildSpawnableAgentsDescription(\n        agentTemplate.spawnableAgents,\n        agentTemplates,\n      ))\n\n    const parentInstructions = await collectParentInstructions(\n      agentState.agentType,\n      agentTemplates,\n    )\n\n    if (parentInstructions.length > 0) {\n      addendum += '\\n\\n## Additional Instructions for Spawning Agents\\n\\n'\n      addendum += parentInstructions\n        .map((instruction) => `- ${instruction}`)\n        .join('\\n')\n    }\n\n    // Add output schema information if defined\n    if (agentTemplate.outputSchema) {\n      addendum += '\\n\\n## Output Schema\\n\\n'\n      addendum +=\n        'When using the set_output tool, your output must conform to this schema:\\n\\n'\n      addendum += '```json\\n'\n      try {\n        // Convert Zod schema to JSON schema for display\n        const jsonSchema = z.toJSONSchema(agentTemplate.outputSchema, {\n          io: 'input',\n        })\n        delete jsonSchema['$schema'] // Remove the $schema field for cleaner display\n        addendum += JSON.stringify(jsonSchema, null, 2)\n      } catch {\n        // Fallback to a simple description\n        addendum += JSON.stringify(\n          { type: 'object', description: 'Output schema validation enabled' },\n          null,\n          2,\n        )\n      }\n      addendum += '\\n```'\n    }\n  }\n\n  return prompt + addendum\n}\n"},{"path":"backend/src/tools/definitions/tool/add-message.ts","preContent":"import { getToolCallString } from '@codebuff/common/tools/utils'\n\nimport type { ToolDescription } from '../tool-def-type'\n\nconst toolName = 'add_message'\nexport const addMessageTool = {\n  toolName,\n  description: `\nExample:\n    ${getToolCallString(toolName, {\n      role: 'user',\n      content: 'Hello, how are you?',\n    })}\n  `.trim(),\n} satisfies ToolDescription\n","postContent":"import { getToolCallString } from '@codebuff/common/tools/utils'\n\nimport type { ToolDescription } from '../tool-def-type'\n\nconst toolName = 'add_message'\nexport const addMessageTool = {\n  toolName,\n  description: `\nExample:\n${getToolCallString(toolName, {\n  role: 'user',\n  content: 'Hello, how are you?',\n})}\n  `.trim(),\n} satisfies ToolDescription\n"},{"path":"backend/src/tools/definitions/tool/set-messages.ts","preContent":"import { getToolCallString } from '@codebuff/common/tools/utils'\n\nimport type { ToolDescription } from '../tool-def-type'\n\nconst toolName = 'set_messages'\nconst endsAgentStep = true\nexport const setMessagesTool = {\n  toolName,\n  description: `\nExample:\n    ${getToolCallString(toolName, {\n      messages: [\n        {\n          role: 'user',\n          content: 'Hello, how are you?',\n        },\n        {\n          role: 'assistant',\n          content: 'I am fine, thank you.',\n        },\n      ],\n    })}\n  `.trim(),\n} satisfies ToolDescription\n","postContent":"import { getToolCallString } from '@codebuff/common/tools/utils'\n\nimport type { ToolDescription } from '../tool-def-type'\n\nconst toolName = 'set_messages'\nconst endsAgentStep = true\nexport const setMessagesTool = {\n  toolName,\n  description: `\nExample:\n${getToolCallString(toolName, {\n  messages: [\n    {\n      role: 'user',\n      content: 'Hello, how are you?',\n    },\n    {\n      role: 'assistant',\n      content: 'I am fine, thank you.',\n    },\n  ],\n})}\n  `.trim(),\n} satisfies ToolDescription\n"},{"path":"backend/src/tools/prompts.ts","preContent":"import { endsAgentStepParam } from '@codebuff/common/tools/constants'\nimport { getToolCallString } from '@codebuff/common/tools/utils'\nimport { buildArray } from '@codebuff/common/util/array'\nimport z from 'zod/v4'\n\nimport { codebuffToolDefs } from './definitions/list'\n\nimport type { ToolName } from '@codebuff/common/tools/constants'\n\nfunction paramsSection(schema: z.ZodObject, endsAgentStep: boolean) {\n  const schemaWithEndsAgentStepParam = endsAgentStep\n    ? schema.extend({\n        [endsAgentStepParam]: z\n          .literal(endsAgentStep)\n          .describe('Easp flag must be set to true'),\n      })\n    : schema\n  const jsonSchema = z.toJSONSchema(schemaWithEndsAgentStepParam, {\n    io: 'input',\n  })\n  delete jsonSchema.description\n  delete jsonSchema['$schema']\n  const paramsDescription = Object.keys(jsonSchema.properties ?? {}).length\n    ? JSON.stringify(jsonSchema, null, 2)\n    : 'None'\n\n  let paramsSection = ''\n  if (paramsDescription.length === 1 && paramsDescription[0] === 'None') {\n    paramsSection = 'Params: None'\n  } else if (paramsDescription.length > 0) {\n    paramsSection = `Params: ${paramsDescription}`\n  }\n  return paramsSection\n}\n\n// Helper function to build the full tool description markdown\nfunction buildToolDescription(\n  toolName: string,\n  schema: z.ZodObject,\n  description: string = '',\n  endsAgentStep: boolean,\n): string {\n  return buildArray([\n    `### ${toolName}`,\n    schema.description || '',\n    paramsSection(schema, endsAgentStep),\n    description,\n  ]).join('\\n\\n')\n}\n\nexport const toolDescriptions = Object.fromEntries(\n  Object.entries(codebuffToolDefs).map(([name, config]) => [\n    name,\n    buildToolDescription(\n      name,\n      config.parameters,\n      config.description,\n      config.endsAgentStep,\n    ),\n  ]),\n) as Record<keyof typeof codebuffToolDefs, string>\n\nfunction buildShortToolDescription(\n  toolName: string,\n  schema: z.ZodObject,\n  endsAgentStep: boolean,\n): string {\n  return `${toolName}:\\n${paramsSection(schema, endsAgentStep)}`\n}\n\nexport const getToolsInstructions = (toolNames: readonly ToolName[]) =>\n  `\n# Tools\n\nYou (Buffy) have access to the following tools. Call them when needed.\n\n## [CRITICAL] Formatting Requirements\n\nTool calls use a specific XML and JSON-like format. Adhere *precisely* to this nested element structure:\n\n${getToolCallString(\n  '{tool_name}',\n  {\n    parameter1: 'value1',\n    parameter2: 123,\n  },\n  false,\n)}\n\n### Commentary\n\nProvide commentary *around* your tool calls (explaining your actions).\n\nHowever, **DO NOT** narrate the tool or parameter names themselves.\n\n### Example\n\nUser: can you update the console logs in example/file.ts?\nAssistant: Sure thing! Let's update that file!\n\n${getToolCallString('str_replace', {\n  path: 'path/to/example/file.ts',\n  replacements: [\n    {\n      old: \"console.log('Hello world!');\\n\",\n      new: \"console.log('Hello from Buffy!');\\n\",\n    },\n  ],\n})}\n\nAll done with the update!\nUser: thanks it worked! :)\n\n## Working Directory\n\nAll tools will be run from the **project root**.\n\nHowever, most of the time, the user will refer to files from their own cwd. You must be cognizant of the user's cwd at all times, including but not limited to:\n- Writing to files (write out the entire relative path)\n- Running terminal commands (use the \\`cwd\\` parameter)\n\n## Optimizations\n\nAll tools are very slow, with runtime scaling with the amount of text in the parameters. Prefer to write AS LITTLE TEXT AS POSSIBLE to accomplish the task.\n\nWhen using write_file, make sure to only include a few lines of context and not the entire file.\n\n## Tool Results\n\nTool results will be provided by the user's *system* (and **NEVER** by the assistant).\n\nThe user does not know about any system messages or system instructions, including tool results.\n\n## List of Tools\n\nThese are the tools that you (Buffy) can use. The user cannot see these descriptions, so you should not reference any tool names, parameters, or descriptions.\n\n${toolNames.map((name) => toolDescriptions[name]).join('\\n\\n')}`.trim()\n\nexport const getShortToolInstructions = (toolNames: readonly ToolName[]) => {\n  const toolDescriptions = toolNames.map((name) => {\n    const tool = codebuffToolDefs[name]\n    return buildShortToolDescription(name, tool.parameters, tool.endsAgentStep)\n  })\n\n  return `## Tools\nUse the tools below to complete the user request, if applicable.\n\nTool calls use a specific XML and JSON-like format. Adhere *precisely* to this nested element structure:\n\n${getToolCallString(\n  '{tool_name}',\n  {\n    parameter1: 'value1',\n    parameter2: 123,\n  },\n  false,\n)}\n\n${toolDescriptions.join('\\n\\n')}`.trim()\n}\n","postContent":"import { endsAgentStepParam } from '@codebuff/common/tools/constants'\nimport { getToolCallString } from '@codebuff/common/tools/utils'\nimport { buildArray } from '@codebuff/common/util/array'\nimport { pluralize } from '@codebuff/common/util/string'\nimport z from 'zod/v4'\n\nimport { codebuffToolDefs } from './definitions/list'\n\nimport type { ToolName } from '@codebuff/common/tools/constants'\nimport type { customToolDefinitionsSchema } from '@codebuff/common/util/file'\nimport type { JSONSchema } from 'zod/v4/core'\n\nfunction paramsSection(\n  schema:\n    | { type: 'zod'; value: z.ZodObject }\n    | { type: 'json'; value: JSONSchema.BaseSchema },\n  endsAgentStep: boolean,\n) {\n  const schemaWithEndsAgentStepParam =\n    schema.type === 'zod'\n      ? z.toJSONSchema(\n          endsAgentStep\n            ? schema.value.extend({\n                [endsAgentStepParam]: z\n                  .literal(endsAgentStep)\n                  .describe('Easp flag must be set to true'),\n              })\n            : schema.value,\n          { io: 'input' },\n        )\n      : JSON.parse(JSON.stringify(schema.value))\n  if (schema.type === 'json') {\n    if (!schemaWithEndsAgentStepParam.properties) {\n      schemaWithEndsAgentStepParam.properties = {}\n    }\n    schemaWithEndsAgentStepParam.properties[endsAgentStepParam] = {\n      const: true,\n      type: 'boolean',\n      description: 'Easp flag must be set to true',\n    }\n    if (!schemaWithEndsAgentStepParam.required) {\n      schemaWithEndsAgentStepParam.required = []\n    }\n    schemaWithEndsAgentStepParam.required.push(endsAgentStepParam)\n  }\n\n  const jsonSchema = schemaWithEndsAgentStepParam\n  delete jsonSchema.description\n  delete jsonSchema['$schema']\n  const paramsDescription = Object.keys(jsonSchema.properties ?? {}).length\n    ? JSON.stringify(jsonSchema, null, 2)\n    : 'None'\n\n  let paramsSection = ''\n  if (paramsDescription.length === 1 && paramsDescription[0] === 'None') {\n    paramsSection = 'Params: None'\n  } else if (paramsDescription.length > 0) {\n    paramsSection = `Params: ${paramsDescription}`\n  }\n  return paramsSection\n}\n\n// Helper function to build the full tool description markdown\nexport function buildToolDescription(\n  toolName: string,\n  schema:\n    | { type: 'zod'; value: z.ZodObject }\n    | { type: 'json'; value: JSONSchema.BaseSchema },\n  description: string = '',\n  endsAgentStep: boolean,\n  exampleInputs: any[] = [],\n): string {\n  const descriptionWithExamples = buildArray(\n    description,\n    exampleInputs.length > 0\n      ? `${pluralize(exampleInputs.length, 'Example')}:`\n      : '',\n    ...exampleInputs.map((example) =>\n      getToolCallString(toolName, example, endsAgentStep),\n    ),\n  ).join('\\n\\n')\n  return buildArray([\n    `### ${toolName}`,\n    schema.value.description || '',\n    paramsSection(schema, endsAgentStep),\n    descriptionWithExamples,\n  ]).join('\\n\\n')\n}\n\nexport const toolDescriptions = Object.fromEntries(\n  Object.entries(codebuffToolDefs).map(([name, config]) => [\n    name,\n    buildToolDescription(\n      name,\n      { type: 'zod', value: config.parameters },\n      config.description,\n      config.endsAgentStep,\n    ),\n  ]),\n) as Record<keyof typeof codebuffToolDefs, string>\n\nfunction buildShortToolDescription(\n  toolName: string,\n  schema:\n    | { type: 'zod'; value: z.ZodObject }\n    | { type: 'json'; value: JSONSchema.BaseSchema },\n  endsAgentStep: boolean,\n): string {\n  return `${toolName}:\\n${paramsSection(schema, endsAgentStep)}`\n}\n\nexport const getToolsInstructions = (\n  toolNames: readonly string[],\n  customToolDefinitions: z.infer<typeof customToolDefinitionsSchema>,\n) =>\n  `\n# Tools\n\nYou (Buffy) have access to the following tools. Call them when needed.\n\n## [CRITICAL] Formatting Requirements\n\nTool calls use a specific XML and JSON-like format. Adhere *precisely* to this nested element structure:\n\n${getToolCallString(\n  '{tool_name}',\n  {\n    parameter1: 'value1',\n    parameter2: 123,\n  },\n  false,\n)}\n\n### Commentary\n\nProvide commentary *around* your tool calls (explaining your actions).\n\nHowever, **DO NOT** narrate the tool or parameter names themselves.\n\n### Example\n\nUser: can you update the console logs in example/file.ts?\nAssistant: Sure thing! Let's update that file!\n\n${getToolCallString('str_replace', {\n  path: 'path/to/example/file.ts',\n  replacements: [\n    {\n      old: \"// some context\\nconsole.log('Hello world!');\\n\",\n      new: \"// some context\\nconsole.log('Hello from Buffy!');\\n\",\n    },\n  ],\n})}\n\nAll done with the update!\nUser: thanks it worked! :)\n\n## Working Directory\n\nAll tools will be run from the **project root**.\n\nHowever, most of the time, the user will refer to files from their own cwd. You must be cognizant of the user's cwd at all times, including but not limited to:\n- Writing to files (write out the entire relative path)\n- Running terminal commands (use the \\`cwd\\` parameter)\n\n## Optimizations\n\nAll tools are very slow, with runtime scaling with the amount of text in the parameters. Prefer to write AS LITTLE TEXT AS POSSIBLE to accomplish the task.\n\nWhen using write_file, make sure to only include a few lines of context and not the entire file.\n\n## Tool Results\n\nTool results will be provided by the user's *system* (and **NEVER** by the assistant).\n\nThe user does not know about any system messages or system instructions, including tool results.\n\n## List of Tools\n\nThese are the tools that you (Buffy) can use. The user cannot see these descriptions, so you should not reference any tool names, parameters, or descriptions.\n\n${[\n  ...(\n    toolNames.filter((toolName) =>\n      toolNames.includes(toolName as ToolName),\n    ) as ToolName[]\n  ).map((name) => toolDescriptions[name]),\n  ...toolNames\n    .filter((toolName) => toolName in customToolDefinitions)\n    .map((toolName) => {\n      const toolDef = customToolDefinitions[toolName]\n      return buildToolDescription(\n        toolName,\n        { type: 'json', value: toolDef.inputJsonSchema },\n        toolDef.description,\n        toolDef.endsAgentStep,\n        toolDef.exampleInputs,\n      )\n    }),\n].join('\\n\\n')}`.trim()\n\nexport const getShortToolInstructions = (\n  toolNames: readonly string[],\n  customToolDefinitions: z.infer<typeof customToolDefinitionsSchema>,\n) => {\n  const toolDescriptions = [\n    ...(\n      toolNames.filter(\n        (name) => (name as keyof typeof codebuffToolDefs) in codebuffToolDefs,\n      ) as (keyof typeof codebuffToolDefs)[]\n    ).map((name) => {\n      const tool = codebuffToolDefs[name]\n      return buildShortToolDescription(\n        name,\n        { type: 'zod', value: tool.parameters },\n        tool.endsAgentStep,\n      )\n    }),\n    ...toolNames\n      .filter((name) => name in customToolDefinitions)\n      .map((name) => {\n        const { inputJsonSchema, endsAgentStep } = customToolDefinitions[name]\n        return buildShortToolDescription(\n          name,\n          { type: 'json', value: inputJsonSchema },\n          endsAgentStep,\n        )\n      }),\n  ]\n\n  return `## Tools\nUse the tools below to complete the user request, if applicable.\n\nTool calls use a specific XML and JSON-like format. Adhere *precisely* to this nested element structure:\n\n${getToolCallString(\n  '{tool_name}',\n  {\n    parameter1: 'value1',\n    parameter2: 123,\n  },\n  false,\n)}\n\n${toolDescriptions.join('\\n\\n')}`.trim()\n}\n"},{"path":"backend/src/tools/stream-parser.ts","preContent":"import { toolNames } from '@codebuff/common/tools/constants'\nimport { buildArray } from '@codebuff/common/util/array'\nimport { generateCompactId } from '@codebuff/common/util/string'\n\nimport { expireMessages } from '../util/messages'\nimport { sendAction } from '../websockets/websocket-action'\nimport { processStreamWithTags } from '../xml-stream-parser'\nimport { executeToolCall } from './tool-executor'\n\nimport type { AgentTemplate } from '../templates/types'\nimport type { ToolName } from '@codebuff/common/tools/constants'\nimport type { CodebuffToolCall } from '@codebuff/common/tools/list'\nimport type { CodebuffMessage } from '@codebuff/common/types/message'\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type {\n  AgentState,\n  Subgoal,\n  ToolResult,\n} from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { ToolCallPart } from 'ai'\nimport type { WebSocket } from 'ws'\n\nexport type ToolCallError = {\n  toolName?: string\n  args: Record<string, unknown>\n  error: string\n} & Omit<ToolCallPart, 'type'>\n\nexport async function processStreamWithTools<T extends string>(options: {\n  stream: AsyncGenerator<T> | ReadableStream<T>\n  ws: WebSocket\n  agentStepId: string\n  clientSessionId: string\n  fingerprintId: string\n  userInputId: string\n  userId: string | undefined\n  repoId: string | undefined\n  agentTemplate: AgentTemplate\n  localAgentTemplates: Record<string, AgentTemplate>\n  fileContext: ProjectFileContext\n  messages: CodebuffMessage[]\n  agentState: AgentState\n  agentContext: Record<string, Subgoal>\n  onResponseChunk: (chunk: string | PrintModeEvent) => void\n  fullResponse: string\n}) {\n  const {\n    stream,\n    ws,\n    agentStepId,\n    clientSessionId,\n    fingerprintId,\n    userInputId,\n    userId,\n    repoId,\n    agentTemplate,\n    localAgentTemplates,\n    fileContext,\n    agentContext,\n    agentState,\n    onResponseChunk,\n  } = options\n  const fullResponseChunks: string[] = [options.fullResponse]\n\n  const messages = [...options.messages]\n\n  const toolResults: ToolResult[] = []\n  const toolCalls: CodebuffToolCall[] = []\n  const { promise: streamDonePromise, resolve: resolveStreamDonePromise } =\n    Promise.withResolvers<void>()\n  let previousToolCallFinished = streamDonePromise\n  const state: Record<string, any> = {\n    ws,\n    fingerprintId,\n    userId,\n    repoId,\n    agentTemplate,\n    localAgentTemplates,\n    sendSubagentChunk: (data: {\n      userInputId: string\n      agentId: string\n      agentType: string\n      chunk: string\n      prompt?: string\n    }) => {\n      sendAction(ws, {\n        type: 'subagent-response-chunk',\n        ...data,\n      })\n    },\n\n    agentState,\n    agentContext,\n    messages,\n  }\n\n  function toolCallback<T extends ToolName>(toolName: T) {\n    return {\n      onTagStart: () => {},\n      onTagEnd: async (_: string, input: Record<string, string>) => {\n        // delegated to reusable helper\n        previousToolCallFinished = executeToolCall({\n          toolName,\n          input,\n          toolCalls,\n          toolResults,\n          previousToolCallFinished,\n          ws,\n          agentTemplate,\n          fileContext,\n          agentStepId,\n          clientSessionId,\n          userInputId,\n          fullResponse: fullResponseChunks.join(''),\n          onResponseChunk,\n          state,\n          userId,\n        })\n      },\n    }\n  }\n\n  const streamWithTags = processStreamWithTags(\n    stream,\n    Object.fromEntries(\n      toolNames.map((toolName) => [toolName, toolCallback(toolName)]),\n    ),\n    (toolName, error) => {\n      toolResults.push({\n        toolName,\n        toolCallId: generateCompactId(),\n        output: { type: 'text', value: error },\n      })\n    },\n    onResponseChunk,\n    {\n      userId,\n      model: agentTemplate.model,\n      agentName: agentTemplate.id,\n    },\n  )\n\n  for await (const chunk of streamWithTags) {\n    onResponseChunk(chunk)\n    fullResponseChunks.push(chunk)\n  }\n\n  state.messages = buildArray<CodebuffMessage>([\n    ...expireMessages(state.messages, 'agentStep'),\n    fullResponseChunks.length > 0 && {\n      role: 'assistant' as const,\n      content: fullResponseChunks.join(''),\n    },\n  ])\n\n  resolveStreamDonePromise()\n  await previousToolCallFinished\n\n  return {\n    toolCalls,\n    toolResults,\n    state,\n    fullResponse: fullResponseChunks.join(''),\n    fullResponseChunks,\n  }\n}\n","postContent":"import { toolNames } from '@codebuff/common/tools/constants'\nimport { buildArray } from '@codebuff/common/util/array'\nimport { generateCompactId } from '@codebuff/common/util/string'\n\nimport { expireMessages } from '../util/messages'\nimport { sendAction } from '../websockets/websocket-action'\nimport { processStreamWithTags } from '../xml-stream-parser'\nimport { executeCustomToolCall, executeToolCall } from './tool-executor'\n\nimport type { CustomToolCall } from './tool-executor'\nimport type { AgentTemplate } from '../templates/types'\nimport type { ToolName } from '@codebuff/common/tools/constants'\nimport type { CodebuffToolCall } from '@codebuff/common/tools/list'\nimport type { CodebuffMessage } from '@codebuff/common/types/message'\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type {\n  AgentState,\n  Subgoal,\n  ToolResult,\n} from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { ToolCallPart } from 'ai'\nimport type { WebSocket } from 'ws'\n\nexport type ToolCallError = {\n  toolName?: string\n  args: Record<string, unknown>\n  error: string\n} & Omit<ToolCallPart, 'type'>\n\nexport async function processStreamWithTools<T extends string>(options: {\n  stream: AsyncGenerator<T> | ReadableStream<T>\n  ws: WebSocket\n  agentStepId: string\n  clientSessionId: string\n  fingerprintId: string\n  userInputId: string\n  userId: string | undefined\n  repoId: string | undefined\n  agentTemplate: AgentTemplate\n  localAgentTemplates: Record<string, AgentTemplate>\n  fileContext: ProjectFileContext\n  messages: CodebuffMessage[]\n  agentState: AgentState\n  agentContext: Record<string, Subgoal>\n  onResponseChunk: (chunk: string | PrintModeEvent) => void\n  fullResponse: string\n}) {\n  const {\n    stream,\n    ws,\n    agentStepId,\n    clientSessionId,\n    fingerprintId,\n    userInputId,\n    userId,\n    repoId,\n    agentTemplate,\n    localAgentTemplates,\n    fileContext,\n    agentContext,\n    agentState,\n    onResponseChunk,\n  } = options\n  const fullResponseChunks: string[] = [options.fullResponse]\n\n  const messages = [...options.messages]\n\n  const toolResults: ToolResult[] = []\n  const toolCalls: (CodebuffToolCall | CustomToolCall)[] = []\n  const { promise: streamDonePromise, resolve: resolveStreamDonePromise } =\n    Promise.withResolvers<void>()\n  let previousToolCallFinished = streamDonePromise\n  const state: Record<string, any> = {\n    ws,\n    fingerprintId,\n    userId,\n    repoId,\n    agentTemplate,\n    localAgentTemplates,\n    sendSubagentChunk: (data: {\n      userInputId: string\n      agentId: string\n      agentType: string\n      chunk: string\n      prompt?: string\n    }) => {\n      sendAction(ws, {\n        type: 'subagent-response-chunk',\n        ...data,\n      })\n    },\n\n    agentState,\n    agentContext,\n    messages,\n  }\n\n  function toolCallback<T extends ToolName>(toolName: T) {\n    return {\n      onTagStart: () => {},\n      onTagEnd: async (_: string, input: Record<string, string>) => {\n        // delegated to reusable helper\n        previousToolCallFinished = executeToolCall({\n          toolName,\n          input,\n          toolCalls,\n          toolResults,\n          previousToolCallFinished,\n          ws,\n          agentTemplate,\n          fileContext,\n          agentStepId,\n          clientSessionId,\n          userInputId,\n          fullResponse: fullResponseChunks.join(''),\n          onResponseChunk,\n          state,\n          userId,\n        })\n      },\n    }\n  }\n  function customToolCallback(toolName: string) {\n    return {\n      onTagStart: () => {},\n      onTagEnd: async (_: string, input: Record<string, string>) => {\n        // delegated to reusable helper\n        previousToolCallFinished = executeCustomToolCall({\n          toolName,\n          input,\n          toolCalls,\n          toolResults,\n          previousToolCallFinished,\n          ws,\n          agentTemplate,\n          fileContext,\n          agentStepId,\n          clientSessionId,\n          userInputId,\n          fullResponse: fullResponseChunks.join(''),\n          onResponseChunk,\n          state,\n          userId,\n        })\n      },\n    }\n  }\n\n  const streamWithTags = processStreamWithTags(\n    stream,\n    Object.fromEntries([\n      ...toolNames.map((toolName) => [toolName, toolCallback(toolName)]),\n      ...Object.keys(fileContext.customToolDefinitions).map((toolName) => [\n        toolName,\n        customToolCallback(toolName),\n      ]),\n    ]),\n    (toolName, error) => {\n      toolResults.push({\n        toolName,\n        toolCallId: generateCompactId(),\n        output: { type: 'text', value: error },\n      })\n    },\n    onResponseChunk,\n    {\n      userId,\n      model: agentTemplate.model,\n      agentName: agentTemplate.id,\n    },\n  )\n\n  for await (const chunk of streamWithTags) {\n    onResponseChunk(chunk)\n    fullResponseChunks.push(chunk)\n  }\n\n  state.messages = buildArray<CodebuffMessage>([\n    ...expireMessages(state.messages, 'agentStep'),\n    fullResponseChunks.length > 0 && {\n      role: 'assistant' as const,\n      content: fullResponseChunks.join(''),\n    },\n  ])\n\n  resolveStreamDonePromise()\n  await previousToolCallFinished\n\n  return {\n    toolCalls,\n    toolResults,\n    state,\n    fullResponse: fullResponseChunks.join(''),\n    fullResponseChunks,\n  }\n}\n"},{"path":"backend/src/tools/tool-executor.ts","preContent":"import { endsAgentStepParam } from '@codebuff/common/tools/constants'\nimport { renderToolResults } from '@codebuff/common/tools/utils'\nimport { generateCompactId } from '@codebuff/common/util/string'\nimport z from 'zod/v4'\n\nimport { checkLiveUserInput } from '../live-user-inputs'\nimport { logger } from '../util/logger'\nimport { asSystemMessage } from '../util/messages'\nimport { requestToolCall } from '../websockets/websocket-action'\nimport { codebuffToolDefs } from './definitions/list'\nimport { codebuffToolHandlers } from './handlers/list'\n\nimport type { CodebuffToolHandlerFunction } from './handlers/handler-function-type'\nimport type { AgentTemplate } from '../templates/types'\nimport type { ToolName } from '@codebuff/common/tools/constants'\nimport type {\n  ClientToolCall,\n  ClientToolName,\n  CodebuffToolCall,\n} from '@codebuff/common/tools/list'\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type { ToolResult } from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\nexport type ToolCallError = {\n  toolName?: string\n  input: Record<string, unknown>\n  error: string\n} & Pick<CodebuffToolCall, 'toolCallId'>\n\nexport function parseRawToolCall<T extends ToolName = ToolName>(\n  rawToolCall: {\n    toolName: T\n    toolCallId: string\n    input: Record<string, unknown>\n  },\n  autoInsertEndStepParam: boolean = false,\n): CodebuffToolCall<T> | ToolCallError {\n  const toolName = rawToolCall.toolName\n\n  if (!(toolName in codebuffToolDefs)) {\n    return {\n      toolName,\n      toolCallId: rawToolCall.toolCallId,\n      input: rawToolCall.input,\n      error: `Tool ${toolName} not found`,\n    }\n  }\n  const validName = toolName as T\n\n  const processedParameters: Record<string, any> = {}\n  for (const [param, val] of Object.entries(rawToolCall.input ?? {})) {\n    processedParameters[param] = val\n  }\n\n  // Add the required codebuff_end_step parameter with the correct value for this tool if requested\n  if (autoInsertEndStepParam) {\n    processedParameters[endsAgentStepParam] =\n      codebuffToolDefs[validName].endsAgentStep\n  }\n\n  const paramsSchema = codebuffToolDefs[validName].endsAgentStep\n    ? (\n        codebuffToolDefs[validName]\n          .parameters satisfies z.ZodObject as z.ZodObject\n      ).extend({\n        [endsAgentStepParam]: z.literal(\n          codebuffToolDefs[validName].endsAgentStep,\n        ),\n      })\n    : codebuffToolDefs[validName].parameters\n  const result = paramsSchema.safeParse(processedParameters)\n\n  if (!result.success) {\n    return {\n      toolName: validName,\n      toolCallId: rawToolCall.toolCallId,\n      input: rawToolCall.input,\n      error: `Invalid parameters for ${validName}: ${JSON.stringify(\n        result.error.issues,\n        null,\n        2,\n      )}`,\n    }\n  }\n\n  if (endsAgentStepParam in result.data) {\n    delete result.data[endsAgentStepParam]\n  }\n\n  return {\n    toolName: validName,\n    input: result.data,\n    toolCallId: rawToolCall.toolCallId,\n  } as CodebuffToolCall<T>\n}\n\nexport interface ExecuteToolCallParams<T extends ToolName = ToolName> {\n  toolName: T\n  input: Record<string, unknown>\n  toolCalls: CodebuffToolCall[]\n  toolResults: ToolResult[]\n  previousToolCallFinished: Promise<void>\n  ws: WebSocket\n  agentTemplate: AgentTemplate\n  fileContext: ProjectFileContext\n  agentStepId: string\n  clientSessionId: string\n  userInputId: string\n  fullResponse: string\n  onResponseChunk: (chunk: string | PrintModeEvent) => void\n  state: Record<string, any>\n  userId: string | undefined\n  autoInsertEndStepParam?: boolean\n}\n\nexport function executeToolCall<T extends ToolName>({\n  toolName,\n  input,\n  toolCalls,\n  toolResults,\n  previousToolCallFinished,\n  ws,\n  agentTemplate,\n  fileContext,\n  agentStepId,\n  clientSessionId,\n  userInputId,\n  fullResponse,\n  onResponseChunk,\n  state,\n  userId,\n  autoInsertEndStepParam = false,\n}: ExecuteToolCallParams<T>): Promise<void> {\n  const toolCall: CodebuffToolCall<T> | ToolCallError = parseRawToolCall<T>(\n    {\n      toolName,\n      toolCallId: generateCompactId(),\n      input,\n    },\n    autoInsertEndStepParam,\n  )\n  if ('error' in toolCall) {\n    toolResults.push({\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text',\n        value: toolCall.error,\n      },\n    })\n    logger.debug(\n      { toolCall, error: toolCall.error },\n      `${toolName} error: ${toolCall.error}`,\n    )\n    return previousToolCallFinished\n  }\n\n  onResponseChunk({\n    type: 'tool_call',\n    toolCallId: toolCall.toolCallId,\n    toolName,\n    input: toolCall.input,\n  })\n\n  logger.debug(\n    { toolCall },\n    `${toolName} (${toolCall.toolCallId}) tool call detected in stream`,\n  )\n  toolCalls.push(toolCall)\n\n  // Filter out restricted tools in ask mode unless exporting summary\n  if (!agentTemplate.toolNames.includes(toolCall.toolName)) {\n    toolResults.push({\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text',\n        value: `Tool \\`${toolName}\\` is not currently available. Make sure to only use tools listed in the system instructions.`,\n      },\n    })\n    return previousToolCallFinished\n  }\n\n  const { result: toolResultPromise, state: stateUpdate } = (\n    codebuffToolHandlers[toolName] as CodebuffToolHandlerFunction<T>\n  )({\n    previousToolCallFinished,\n    fileContext,\n    agentStepId,\n    clientSessionId,\n    userInputId,\n    fullResponse,\n    writeToClient: onResponseChunk,\n    requestClientToolCall: async (\n      clientToolCall: ClientToolCall<T extends ClientToolName ? T : never>,\n    ) => {\n      if (!checkLiveUserInput(userId, userInputId, clientSessionId)) {\n        return ''\n      }\n\n      const clientToolResult = await requestToolCall(\n        ws,\n        userInputId,\n        clientToolCall.toolName,\n        clientToolCall.input,\n      )\n      return (\n        clientToolResult.error ??\n        (clientToolResult.output?.type === 'text'\n          ? clientToolResult.output.value\n          : 'undefined')\n      )\n    },\n    toolCall,\n    getLatestState: () => state,\n    state,\n  })\n\n  for (const [key, value] of Object.entries(stateUpdate ?? {})) {\n    if (key === 'agentState' && typeof value === 'object' && value !== null) {\n      // Replace the agentState reference to ensure all updates are captured\n      state.agentState = value\n    } else {\n      state[key] = value\n    }\n  }\n\n  return toolResultPromise.then((result) => {\n    const toolResult = {\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text' as const,\n        value: result as string,\n      },\n    }\n    logger.debug(\n      { toolResult },\n      `${toolName} (${toolResult.toolCallId}) tool result for tool`,\n    )\n    if (result === undefined) {\n      return\n    }\n\n    onResponseChunk({\n      type: 'tool_result',\n      toolCallId: toolResult.toolCallId,\n      output: toolResult.output,\n    })\n\n    toolResults.push(toolResult)\n\n    state.messages.push({\n      role: 'user' as const,\n      content: asSystemMessage(renderToolResults([toolResult])),\n    })\n  })\n}\n","postContent":"import { endsAgentStepParam } from '@codebuff/common/tools/constants'\nimport { renderToolResults } from '@codebuff/common/tools/utils'\nimport { generateCompactId } from '@codebuff/common/util/string'\nimport z from 'zod/v4'\nimport { convertJsonSchemaToZod } from 'zod-from-json-schema'\n\nimport { checkLiveUserInput } from '../live-user-inputs'\nimport { logger } from '../util/logger'\nimport { asSystemMessage } from '../util/messages'\nimport { requestToolCall } from '../websockets/websocket-action'\nimport { codebuffToolDefs } from './definitions/list'\nimport { codebuffToolHandlers } from './handlers/list'\n\nimport type { CodebuffToolHandlerFunction } from './handlers/handler-function-type'\nimport type { AgentTemplate } from '../templates/types'\nimport type { ToolName } from '@codebuff/common/tools/constants'\nimport type {\n  ClientToolCall,\n  ClientToolName,\n  CodebuffToolCall,\n} from '@codebuff/common/tools/list'\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type { ToolResult } from '@codebuff/common/types/session-state'\nimport type {\n  customToolDefinitionsSchema,\n  ProjectFileContext,\n} from '@codebuff/common/util/file'\nimport type { ToolCallPart } from 'ai'\nimport type { WebSocket } from 'ws'\n\nexport type CustomToolCall = {\n  toolName: string\n  input: Record<string, unknown>\n} & Omit<ToolCallPart, 'type'>\n\nexport type ToolCallError = {\n  toolName?: string\n  input: Record<string, unknown>\n  error: string\n} & Pick<CodebuffToolCall, 'toolCallId'>\n\nexport function parseRawToolCall<T extends ToolName = ToolName>(\n  rawToolCall: {\n    toolName: T\n    toolCallId: string\n    input: Record<string, unknown>\n  },\n  autoInsertEndStepParam: boolean = false,\n): CodebuffToolCall<T> | ToolCallError {\n  const toolName = rawToolCall.toolName\n\n  if (!(toolName in codebuffToolDefs)) {\n    return {\n      toolName,\n      toolCallId: rawToolCall.toolCallId,\n      input: rawToolCall.input,\n      error: `Tool ${toolName} not found`,\n    }\n  }\n  const validName = toolName as T\n\n  const processedParameters: Record<string, any> = {}\n  for (const [param, val] of Object.entries(rawToolCall.input ?? {})) {\n    processedParameters[param] = val\n  }\n\n  // Add the required codebuff_end_step parameter with the correct value for this tool if requested\n  if (autoInsertEndStepParam) {\n    processedParameters[endsAgentStepParam] =\n      codebuffToolDefs[validName].endsAgentStep\n  }\n\n  const paramsSchema = codebuffToolDefs[validName].endsAgentStep\n    ? (\n        codebuffToolDefs[validName]\n          .parameters satisfies z.ZodObject as z.ZodObject\n      ).extend({\n        [endsAgentStepParam]: z.literal(\n          codebuffToolDefs[validName].endsAgentStep,\n        ),\n      })\n    : codebuffToolDefs[validName].parameters\n  const result = paramsSchema.safeParse(processedParameters)\n\n  if (!result.success) {\n    return {\n      toolName: validName,\n      toolCallId: rawToolCall.toolCallId,\n      input: rawToolCall.input,\n      error: `Invalid parameters for ${validName}: ${JSON.stringify(\n        result.error.issues,\n        null,\n        2,\n      )}`,\n    }\n  }\n\n  if (endsAgentStepParam in result.data) {\n    delete result.data[endsAgentStepParam]\n  }\n\n  return {\n    toolName: validName,\n    input: result.data,\n    toolCallId: rawToolCall.toolCallId,\n  } as CodebuffToolCall<T>\n}\n\nexport interface ExecuteToolCallParams<T extends string = ToolName> {\n  toolName: T\n  input: Record<string, unknown>\n  toolCalls: (CodebuffToolCall | CustomToolCall)[]\n  toolResults: ToolResult[]\n  previousToolCallFinished: Promise<void>\n  ws: WebSocket\n  agentTemplate: AgentTemplate\n  fileContext: ProjectFileContext\n  agentStepId: string\n  clientSessionId: string\n  userInputId: string\n  fullResponse: string\n  onResponseChunk: (chunk: string | PrintModeEvent) => void\n  state: Record<string, any>\n  userId: string | undefined\n  autoInsertEndStepParam?: boolean\n}\n\nexport function executeToolCall<T extends ToolName>({\n  toolName,\n  input,\n  toolCalls,\n  toolResults,\n  previousToolCallFinished,\n  ws,\n  agentTemplate,\n  fileContext,\n  agentStepId,\n  clientSessionId,\n  userInputId,\n  fullResponse,\n  onResponseChunk,\n  state,\n  userId,\n  autoInsertEndStepParam = false,\n}: ExecuteToolCallParams<T>): Promise<void> {\n  const toolCall: CodebuffToolCall<T> | ToolCallError = parseRawToolCall<T>(\n    {\n      toolName,\n      toolCallId: generateCompactId(),\n      input,\n    },\n    autoInsertEndStepParam,\n  )\n  if ('error' in toolCall) {\n    toolResults.push({\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text',\n        value: toolCall.error,\n      },\n    })\n    logger.debug(\n      { toolCall, error: toolCall.error },\n      `${toolName} error: ${toolCall.error}`,\n    )\n    return previousToolCallFinished\n  }\n\n  onResponseChunk({\n    type: 'tool_call',\n    toolCallId: toolCall.toolCallId,\n    toolName,\n    input: toolCall.input,\n  })\n\n  logger.debug(\n    { toolCall },\n    `${toolName} (${toolCall.toolCallId}) tool call detected in stream`,\n  )\n  toolCalls.push(toolCall)\n\n  // Filter out restricted tools in ask mode unless exporting summary\n  if (!agentTemplate.toolNames.includes(toolCall.toolName)) {\n    toolResults.push({\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text',\n        value: `Tool \\`${toolName}\\` is not currently available. Make sure to only use tools listed in the system instructions.`,\n      },\n    })\n    return previousToolCallFinished\n  }\n\n  const { result: toolResultPromise, state: stateUpdate } = (\n    codebuffToolHandlers[toolName] as CodebuffToolHandlerFunction<T>\n  )({\n    previousToolCallFinished,\n    fileContext,\n    agentStepId,\n    clientSessionId,\n    userInputId,\n    fullResponse,\n    writeToClient: onResponseChunk,\n    requestClientToolCall: async (\n      clientToolCall: ClientToolCall<T extends ClientToolName ? T : never>,\n    ) => {\n      if (!checkLiveUserInput(userId, userInputId, clientSessionId)) {\n        return ''\n      }\n\n      const clientToolResult = await requestToolCall(\n        ws,\n        userInputId,\n        clientToolCall.toolName,\n        clientToolCall.input,\n      )\n      return (\n        clientToolResult.error ??\n        (clientToolResult.output?.type === 'text'\n          ? clientToolResult.output.value\n          : 'undefined')\n      )\n    },\n    toolCall,\n    getLatestState: () => state,\n    state,\n  })\n\n  for (const [key, value] of Object.entries(stateUpdate ?? {})) {\n    if (key === 'agentState' && typeof value === 'object' && value !== null) {\n      // Replace the agentState reference to ensure all updates are captured\n      state.agentState = value\n    } else {\n      state[key] = value\n    }\n  }\n\n  return toolResultPromise.then((result) => {\n    const toolResult = {\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text' as const,\n        value: result as string,\n      },\n    }\n    logger.debug(\n      { toolResult },\n      `${toolName} (${toolResult.toolCallId}) tool result for tool`,\n    )\n    if (result === undefined) {\n      return\n    }\n\n    onResponseChunk({\n      type: 'tool_result',\n      toolCallId: toolResult.toolCallId,\n      output: toolResult.output,\n    })\n\n    toolResults.push(toolResult)\n\n    state.messages.push({\n      role: 'user' as const,\n      content: asSystemMessage(renderToolResults([toolResult])),\n    })\n  })\n}\n\nexport function parseRawCustomToolCall(\n  customToolDefs: z.infer<typeof customToolDefinitionsSchema>,\n  rawToolCall: {\n    toolName: string\n    toolCallId: string\n    input: Record<string, unknown>\n  },\n  autoInsertEndStepParam: boolean = false,\n): CustomToolCall | ToolCallError {\n  const toolName = rawToolCall.toolName\n\n  if (!(toolName in customToolDefs)) {\n    return {\n      toolName,\n      toolCallId: rawToolCall.toolCallId,\n      input: rawToolCall.input,\n      error: `Tool ${toolName} not found`,\n    }\n  }\n\n  const processedParameters: Record<string, any> = {}\n  for (const [param, val] of Object.entries(rawToolCall.input ?? {})) {\n    processedParameters[param] = val\n  }\n\n  // Add the required codebuff_end_step parameter with the correct value for this tool if requested\n  if (autoInsertEndStepParam) {\n    processedParameters[endsAgentStepParam] =\n      customToolDefs[toolName].endsAgentStep\n  }\n\n  const jsonSchema = JSON.parse(\n    JSON.stringify(customToolDefs[toolName].inputJsonSchema),\n  )\n  if (customToolDefs[toolName].endsAgentStep) {\n    if (!jsonSchema.properties) {\n      jsonSchema.properties = {}\n    }\n    jsonSchema.properties[endsAgentStepParam] = {\n      const: true,\n      type: 'boolean',\n      description: 'Easp flag must be set to true',\n    }\n    if (!jsonSchema.required) {\n      jsonSchema.required = []\n    }\n    jsonSchema.required.push(endsAgentStepParam)\n  }\n  const paramsSchema = convertJsonSchemaToZod(jsonSchema)\n  const result = paramsSchema.safeParse(\n    processedParameters,\n  ) as z.ZodSafeParseResult<any>\n\n  if (!result.success) {\n    return {\n      toolName: toolName,\n      toolCallId: rawToolCall.toolCallId,\n      input: rawToolCall.input,\n      error: `Invalid parameters for ${toolName}: ${JSON.stringify(\n        result.error.issues,\n        null,\n        2,\n      )}`,\n    }\n  }\n\n  if (endsAgentStepParam in result.data) {\n    delete result.data[endsAgentStepParam]\n  }\n\n  return {\n    toolName: toolName,\n    input: result.data,\n    toolCallId: rawToolCall.toolCallId,\n  }\n}\n\nexport function executeCustomToolCall({\n  toolName,\n  input,\n  toolCalls,\n  toolResults,\n  previousToolCallFinished,\n  ws,\n  agentTemplate,\n  fileContext,\n  clientSessionId,\n  userInputId,\n  onResponseChunk,\n  state,\n  userId,\n  autoInsertEndStepParam = false,\n}: ExecuteToolCallParams<string>): Promise<void> {\n  const toolCall: CustomToolCall | ToolCallError = parseRawCustomToolCall(\n    fileContext.customToolDefinitions,\n    {\n      toolName,\n      toolCallId: generateCompactId(),\n      input,\n    },\n    autoInsertEndStepParam,\n  )\n  if ('error' in toolCall) {\n    toolResults.push({\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text',\n        value: toolCall.error,\n      },\n    })\n    logger.debug(\n      { toolCall, error: toolCall.error },\n      `${toolName} error: ${toolCall.error}`,\n    )\n    return previousToolCallFinished\n  }\n\n  onResponseChunk({\n    type: 'tool_call',\n    toolCallId: toolCall.toolCallId,\n    toolName,\n    input: toolCall.input,\n  })\n\n  logger.debug(\n    { toolCall },\n    `${toolName} (${toolCall.toolCallId}) custom tool call detected in stream`,\n  )\n  toolCalls.push(toolCall)\n\n  // Filter out restricted tools in ask mode unless exporting summary\n  if (!(agentTemplate.toolNames as string[]).includes(toolCall.toolName)) {\n    toolResults.push({\n      toolName,\n      toolCallId: toolCall.toolCallId,\n      output: {\n        type: 'text',\n        value: `Tool \\`${toolName}\\` is not currently available. Make sure to only use tools listed in the system instructions.`,\n      },\n    })\n    return previousToolCallFinished\n  }\n\n  return previousToolCallFinished\n    .then(async () => {\n      if (!checkLiveUserInput(userId, userInputId, clientSessionId)) {\n        return ''\n      }\n\n      const clientToolResult = await requestToolCall(\n        ws,\n        userInputId,\n        toolCall.toolName,\n        toolCall.input,\n      )\n      return (\n        clientToolResult.error ??\n        (clientToolResult.output?.type === 'text'\n          ? clientToolResult.output.value\n          : 'undefined')\n      )\n    })\n    .then((result) => {\n      const toolResult = {\n        toolName,\n        toolCallId: toolCall.toolCallId,\n        output: {\n          type: 'text' as const,\n          value: result as string,\n        },\n      }\n      logger.debug(\n        { toolResult },\n        `${toolName} (${toolResult.toolCallId}) custom tool result for tool`,\n      )\n      if (result === undefined) {\n        return\n      }\n\n      onResponseChunk({\n        type: 'tool_result',\n        toolCallId: toolResult.toolCallId,\n        output: toolResult.output,\n      })\n\n      toolResults.push(toolResult)\n\n      state.messages.push({\n        role: 'user' as const,\n        content: asSystemMessage(renderToolResults([toolResult])),\n      })\n    })\n}\n"},{"path":"bun.lock","preContent":"{\n  \"lockfileVersion\": 1,\n  \"workspaces\": {\n    \"\": {\n      \"name\": \"codebuff-project\",\n      \"dependencies\": {\n        \"@t3-oss/env-nextjs\": \"^0.7.3\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@tanstack/react-query\": \"^5.59.16\",\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/lodash\": \"4.17.7\",\n        \"@types/node\": \"^22.9.0\",\n        \"@types/node-fetch\": \"^2.6.12\",\n        \"@types/parse-path\": \"^7.1.0\",\n        \"@typescript-eslint/eslint-plugin\": \"^6.17\",\n        \"bun-types\": \"^1.2.2\",\n        \"eslint-config-prettier\": \"^9.1.0\",\n        \"eslint-plugin-import\": \"^2.29.1\",\n        \"eslint-plugin-unused-imports\": \"^4.1.4\",\n        \"ignore\": \"^6.0.2\",\n        \"lodash\": \"4.17.21\",\n        \"prettier\": \"3.3.2\",\n        \"ts-node\": \"^10.9.2\",\n        \"ts-pattern\": \"^5.5.0\",\n        \"tsc-alias\": \"1.7.0\",\n        \"tsconfig-paths\": \"4.2.0\",\n        \"types\": \"^0.1.1\",\n        \"typescript\": \"5.5.4\",\n        \"typescript-eslint\": \"^7.17.0\",\n      },\n    },\n    \".agents\": {\n      \"name\": \"@codebuff/agents\",\n      \"version\": \"0.0.0\",\n    },\n    \"backend\": {\n      \"name\": \"@codebuff/backend\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@ai-sdk/google-vertex\": \"3.0.6\",\n        \"@ai-sdk/openai\": \"2.0.11\",\n        \"@codebuff/billing\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@codebuff/internal\": \"workspace:*\",\n        \"@google-cloud/vertexai\": \"1.10.0\",\n        \"@google/generative-ai\": \"0.24.1\",\n        \"@jitl/quickjs-wasmfile-release-sync\": \"0.31.0\",\n        \"@openrouter/ai-sdk-provider\": \"1.1.2\",\n        \"ai\": \"5.0.0\",\n        \"cors\": \"^2.8.5\",\n        \"diff\": \"5.2.0\",\n        \"dotenv\": \"16.4.5\",\n        \"express\": \"4.19.2\",\n        \"gpt-tokenizer\": \"2.8.1\",\n        \"ignore\": \"5.3.2\",\n        \"lodash\": \"*\",\n        \"openai\": \"^4.78.1\",\n        \"pino\": \"9.4.0\",\n        \"postgres\": \"3.4.4\",\n        \"posthog-node\": \"^4.14.0\",\n        \"quickjs-emscripten-core\": \"0.31.0\",\n        \"ts-pattern\": \"5.3.1\",\n        \"ws\": \"8.18.0\",\n        \"zod\": \"3.25.67\",\n        \"zod-from-json-schema\": \"0.4.2\",\n      },\n      \"devDependencies\": {\n        \"@types/cors\": \"^2.8.19\",\n        \"@types/diff\": \"^5.0.3\",\n        \"@types/express\": \"^4.17.13\",\n        \"@types/ws\": \"^8.5.5\",\n      },\n    },\n    \"common\": {\n      \"name\": \"@codebuff/common\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@auth/drizzle-adapter\": \"^1.5.0\",\n        \"@types/pg\": \"^8.11.10\",\n        \"@types/readable-stream\": \"^4.0.18\",\n        \"@types/seedrandom\": \"^3.0.8\",\n        \"ai\": \"5.0.0\",\n        \"drizzle-kit\": \"0.28.1\",\n        \"drizzle-orm\": \"0.36.4\",\n        \"ignore\": \"5.3.2\",\n        \"lodash\": \"*\",\n        \"next-auth\": \"^4.24.7\",\n        \"partial-json\": \"^0.1.7\",\n        \"pg\": \"^8.14.1\",\n        \"readable-stream\": \"^4.7.0\",\n        \"seedrandom\": \"^3.0.5\",\n        \"stripe\": \"^16.11.0\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@types/parse-path\": \"^7.1.0\",\n      },\n    },\n    \"evals\": {\n      \"name\": \"@codebuff/evals\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/backend\": \"workspace:*\",\n        \"@codebuff/code-map\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@codebuff/internal\": \"workspace:*\",\n        \"@codebuff/npm-app\": \"workspace:*\",\n        \"@oclif/core\": \"^4.4.0\",\n        \"@oclif/parser\": \"^3.8.17\",\n        \"async\": \"^3.2.6\",\n        \"lodash\": \"^4.17.21\",\n        \"p-limit\": \"^6.2.0\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@types/async\": \"^3.2.24\",\n      },\n    },\n    \"npm-app\": {\n      \"name\": \"@codebuff/npm-app\",\n      \"version\": \"1.0.0\",\n      \"bin\": {\n        \"codebuff\": \"dist/index.js\",\n      },\n      \"dependencies\": {\n        \"@codebuff/code-map\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@types/diff\": \"5.2.1\",\n        \"@types/micromatch\": \"^4.0.9\",\n        \"@vscode/ripgrep\": \"1.15.9\",\n        \"ai\": \"5.0.0\",\n        \"axios\": \"1.7.4\",\n        \"commander\": \"^13.1.0\",\n        \"diff\": \"5.2.0\",\n        \"git-url-parse\": \"^16.1.0\",\n        \"ignore\": \"7.0.3\",\n        \"isomorphic-git\": \"^1.29.0\",\n        \"lodash\": \"*\",\n        \"micromatch\": \"^4.0.8\",\n        \"nanoid\": \"5.0.7\",\n        \"onetime\": \"5.1.2\",\n        \"picocolors\": \"1.1.0\",\n        \"pino\": \"9.4.0\",\n        \"posthog-node\": \"4.17.2\",\n        \"puppeteer-core\": \"^24.2.0\",\n        \"string-width\": \"^7.2.0\",\n        \"systeminformation\": \"5.23.4\",\n        \"ts-pattern\": \"5.3.1\",\n        \"wrap-ansi\": \"^9.0.0\",\n        \"ws\": \"8.18.0\",\n        \"zod\": \"3.25.67\",\n      },\n    },\n    \"packages/bigquery\": {\n      \"name\": \"@codebuff/bigquery\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/common\": \"workspace:*\",\n        \"@google-cloud/bigquery\": \"^7.9.4\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"packages/billing\": {\n      \"name\": \"@codebuff/billing\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/common\": \"workspace:*\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"packages/build-tools\": {\n      \"name\": \"@codebuff/build-tools\",\n      \"version\": \"1.0.0\",\n      \"devDependencies\": {\n        \"@nx/devkit\": \"^20.8.1\",\n        \"typescript\": \"5.5.4\",\n      },\n    },\n    \"packages/code-map\": {\n      \"name\": \"@codebuff/code-map\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@vscode/tree-sitter-wasm\": \"0.1.4\",\n        \"web-tree-sitter\": \"0.25.6\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"packages/internal\": {\n      \"name\": \"@codebuff/internal\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/common\": \"workspace:*\",\n        \"drizzle-orm\": \"*\",\n        \"loops\": \"^5.0.1\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"scripts\": {\n      \"name\": \"@codebuff/scripts\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/backend\": \"workspace:*\",\n        \"@codebuff/bigquery\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"lodash\": \"^4.17.21\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/lodash\": \"^4.14.195\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"sdk\": {\n      \"name\": \"@codebuff/sdk\",\n      \"version\": \"0.1.9\",\n      \"dependencies\": {\n        \"ai\": \"^5.0.0\",\n        \"zod\": \"^3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"web\": {\n      \"name\": \"@codebuff/web\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@auth/drizzle-adapter\": \"^1.8.0\",\n        \"@codebuff/billing\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@codebuff/internal\": \"workspace:*\",\n        \"@emotion/is-prop-valid\": \"^1.3.1\",\n        \"@hookform/resolvers\": \"^3.9.0\",\n        \"@mdx-js/loader\": \"^3.1.0\",\n        \"@mdx-js/react\": \"^3.1.0\",\n        \"@next/mdx\": \"^15.2.4\",\n        \"@radix-ui/react-collapsible\": \"^1.1.3\",\n        \"@radix-ui/react-dialog\": \"^1.1.6\",\n        \"@radix-ui/react-dropdown-menu\": \"^2.1.6\",\n        \"@radix-ui/react-label\": \"^2.1.2\",\n        \"@radix-ui/react-progress\": \"^1.1.7\",\n        \"@radix-ui/react-radio-group\": \"^1.2.4\",\n        \"@radix-ui/react-select\": \"^2.2.5\",\n        \"@radix-ui/react-separator\": \"^1.1.2\",\n        \"@radix-ui/react-slider\": \"^1.2.4\",\n        \"@radix-ui/react-slot\": \"^1.1.2\",\n        \"@radix-ui/react-switch\": \"^1.1.4\",\n        \"@radix-ui/react-tabs\": \"^1.1.3\",\n        \"@radix-ui/react-toast\": \"^1.2.6\",\n        \"@radix-ui/react-tooltip\": \"^1.1.8\",\n        \"@react-three/drei\": \"^9.112.0\",\n        \"@react-three/fiber\": \"^8.17.7\",\n        \"@stripe/stripe-js\": \"^4.4.0\",\n        \"@tanstack/react-query\": \"^5.80.6\",\n        \"@tanstack/react-virtual\": \"^3.13.6\",\n        \"aceternity-ui\": \"^0.2.2\",\n        \"class-variance-authority\": \"^0.7.1\",\n        \"clsx\": \"^2.1.1\",\n        \"cobe\": \"^0.6.3\",\n        \"contentlayer\": \"0.3.4\",\n        \"discord.js\": \"^14.18.0\",\n        \"dotenv\": \"^16.4.7\",\n        \"framer-motion\": \"^11.13.3\",\n        \"lucide-react\": \"^0.487.0\",\n        \"mermaid\": \"^11.8.1\",\n        \"next\": \"14.2.13\",\n        \"next-auth\": \"^4.24.11\",\n        \"next-contentlayer\": \"0.3.4\",\n        \"next-themes\": \"^0.3.0\",\n        \"nextjs-linkedin-insight-tag\": \"^0.0.6\",\n        \"pg\": \"^8.14.1\",\n        \"pino\": \"^9.6.0\",\n        \"posthog-js\": \"^1.234.10\",\n        \"react\": \"^18\",\n        \"react-dom\": \"^18\",\n        \"react-hook-form\": \"^7.55.0\",\n        \"react-spring\": \"^9.7.5\",\n        \"server-only\": \"^0.0.1\",\n        \"shadcn-ui\": \"^0.9.4\",\n        \"stripe\": \"^16.11.0\",\n        \"tailwind-merge\": \"^2.5.2\",\n        \"three\": \"^0.168.0\",\n        \"three-globe\": \"^2.42.3\",\n        \"ts-pattern\": \"^5.7.0\",\n        \"use-debounce\": \"^10.0.4\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@commitlint/cli\": \"^19.8.0\",\n        \"@commitlint/config-conventional\": \"^19.8.0\",\n        \"@mdx-js/mdx\": \"^3.1.0\",\n        \"@playwright/test\": \"^1.51.1\",\n        \"@shadcn/ui\": \"^0.0.4\",\n        \"@tailwindcss/typography\": \"^0.5.15\",\n        \"@testing-library/jest-dom\": \"^6.6.3\",\n        \"@testing-library/react\": \"^16.3.0\",\n        \"@types/jest\": \"^29.5.14\",\n        \"@types/node\": \"^22.14.0\",\n        \"@types/pg\": \"^8.11.11\",\n        \"@types/react\": \"^18\",\n        \"@types/react-dom\": \"^18\",\n        \"@typescript-eslint/eslint-plugin\": \"^8.29.1\",\n        \"@typescript-eslint/parser\": \"^8.29.1\",\n        \"autoprefixer\": \"^10.4.21\",\n        \"eslint\": \"^8.57.0\",\n        \"eslint-config-next\": \"14.2.11\",\n        \"eslint-config-prettier\": \"^9.1.0\",\n        \"eslint-plugin-prettier\": \"^5.2.6\",\n        \"eslint-plugin-tailwindcss\": \"^3.18.0\",\n        \"husky\": \"^9.1.7\",\n        \"jest\": \"^29.7.0\",\n        \"jest-environment-jsdom\": \"^29.7.0\",\n        \"lint-staged\": \"^15.5.0\",\n        \"postcss\": \"^8\",\n        \"prettier\": \"^3.5.3\",\n        \"remark-mdx\": \"^3.1.0\",\n        \"remark-parse\": \"^11.0.0\",\n        \"remark-stringify\": \"^11.0.0\",\n        \"tailwindcss\": \"^3.4.11\",\n        \"tailwindcss-animate\": \"^1.0.7\",\n        \"to-vfile\": \"^8.0.0\",\n        \"typescript\": \"^5\",\n        \"unified\": \"^11.0.5\",\n        \"unist-util-visit\": \"^5.0.0\",\n        \"vfile-matter\": \"^5.0.1\",\n      },\n    },\n  },\n  \"overrides\": {\n    \"zod\": \"3.25.67\",\n  },\n  \"packages\": {\n    \"@adobe/css-tools\": [\"@adobe/css-tools@4.4.3\", \"\", {}, \"sha512-VQKMkwriZbaOgVCby1UDY/LDk5fIjhQicCvVPFqfe+69fWaPWydbWJ3wRt59/YzIwda1I81loas3oCoHxnqvdA==\"],\n\n    \"@ai-sdk/anthropic\": [\"@ai-sdk/anthropic@2.0.2\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-R3xmEbbntgdKo/S3TDuW77RYALpo/OKQm4oSjQmryDAFiVGB6X6guZAr7FWt48C4fKGROScAu+y1MJTbzisfOQ==\"],\n\n    \"@ai-sdk/gateway\": [\"@ai-sdk/gateway@1.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.0\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-VEm87DyRx1yIPywbTy8ntoyh4jEDv1rJ88m+2I7zOm08jJI5BhFtAWh0OF6YzZu1Vu4NxhOWO4ssGdsqydDQ3A==\"],\n\n    \"@ai-sdk/google\": [\"@ai-sdk/google@2.0.5\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-jZjfD5MwVbujFxy4RJFIysNHRpfOomFFlq1rMDFSHwSdDkT1r3SQN0ORDu5RR750lss6W2PiujbH6cum/o/y3w==\"],\n\n    \"@ai-sdk/google-vertex\": [\"@ai-sdk/google-vertex@3.0.6\", \"\", { \"dependencies\": { \"@ai-sdk/anthropic\": \"2.0.2\", \"@ai-sdk/google\": \"2.0.5\", \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\", \"google-auth-library\": \"^9.15.0\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-8p+sLhv5JLcfi/V+6wdE6xdLf6Upn5COfSkkiEgg5YCDzotrgX6gudd80Ev6GjrJGK+2N0cCm49BFznh8PEFNQ==\"],\n\n    \"@ai-sdk/openai\": [\"@ai-sdk/openai@2.0.11\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-t4i+vS825EC0Gc2DdTsC5UkXIu1ScOi363noTD8DuFZp6WFPHRnW6HCyEQKxEm6cNjv3BW89rdXWqq932IFJhA==\"],\n\n    \"@ai-sdk/provider\": [\"@ai-sdk/provider@2.0.0\", \"\", { \"dependencies\": { \"json-schema\": \"^0.4.0\" } }, \"sha512-6o7Y2SeO9vFKB8lArHXehNuusnpddKPk7xqL7T2/b+OvXMRIXUO1rR4wcv1hAFUAT9avGZshty3Wlua/XA7TvA==\"],\n\n    \"@ai-sdk/provider-utils\": [\"@ai-sdk/provider-utils@3.0.2\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@standard-schema/spec\": \"^1.0.0\", \"eventsource-parser\": \"^3.0.3\", \"zod-to-json-schema\": \"^3.24.1\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-0a5a6VafkV6+0irdpqnub8WE6qzG2VMsDBpXb9NQIz8c4TG8fI+GSTFIL9sqrLEwXrHdiRj7fwJsrir4jClL0w==\"],\n\n    \"@alloc/quick-lru\": [\"@alloc/quick-lru@5.2.0\", \"\", {}, \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\"],\n\n    \"@ampproject/remapping\": [\"@ampproject/remapping@2.3.0\", \"\", { \"dependencies\": { \"@jridgewell/gen-mapping\": \"^0.3.5\", \"@jridgewell/trace-mapping\": \"^0.3.24\" } }, \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\"],\n\n    \"@antfu/install-pkg\": [\"@antfu/install-pkg@1.1.0\", \"\", { \"dependencies\": { \"package-manager-detector\": \"^1.3.0\", \"tinyexec\": \"^1.0.1\" } }, \"sha512-MGQsmw10ZyI+EJo45CdSER4zEb+p31LpDAFp2Z3gkSd1yqVZGi0Ebx++YTEMonJy4oChEMLsxZ64j8FH6sSqtQ==\"],\n\n    \"@antfu/ni\": [\"@antfu/ni@0.21.12\", \"\", { \"bin\": { \"na\": \"bin/na.mjs\", \"ni\": \"bin/ni.mjs\", \"nr\": \"bin/nr.mjs\", \"nu\": \"bin/nu.mjs\", \"nci\": \"bin/nci.mjs\", \"nlx\": \"bin/nlx.mjs\", \"nun\": \"bin/nun.mjs\" } }, \"sha512-2aDL3WUv8hMJb2L3r/PIQWsTLyq7RQr3v9xD16fiz6O8ys1xEyLhhTOv8gxtZvJiTzjTF5pHoArvRdesGL1DMQ==\"],\n\n    \"@antfu/utils\": [\"@antfu/utils@8.1.1\", \"\", {}, \"sha512-Mex9nXf9vR6AhcXmMrlz/HVgYYZpVGJ6YlPgwl7UnaFpnshXs6EK/oa5Gpf3CzENMjkvEx2tQtntGnb7UtSTOQ==\"],\n\n    \"@auth/core\": [\"@auth/core@0.40.0\", \"\", { \"dependencies\": { \"@panva/hkdf\": \"^1.2.1\", \"jose\": \"^6.0.6\", \"oauth4webapi\": \"^3.3.0\", \"preact\": \"10.24.3\", \"preact-render-to-string\": \"6.5.11\" }, \"peerDependencies\": { \"@simplewebauthn/browser\": \"^9.0.1\", \"@simplewebauthn/server\": \"^9.0.2\", \"nodemailer\": \"^6.8.0\" }, \"optionalPeers\": [\"@simplewebauthn/browser\", \"@simplewebauthn/server\", \"nodemailer\"] }, \"sha512-n53uJE0RH5SqZ7N1xZoMKekbHfQgjd0sAEyUbE+IYJnmuQkbvuZnXItCU7d+i7Fj8VGOgqvNO7Mw4YfBTlZeQw==\"],\n\n    \"@auth/drizzle-adapter\": [\"@auth/drizzle-adapter@1.10.0\", \"\", { \"dependencies\": { \"@auth/core\": \"0.40.0\" } }, \"sha512-3MKsdAINTfvV4QKev8PFMNG93HJEUHh9sggDXnmUmriFogRf8qLvgqnPsTlfUyWcLwTzzrrYjeu8CGM+4IxHwQ==\"],\n\n    \"@babel/code-frame\": [\"@babel/code-frame@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-validator-identifier\": \"^7.27.1\", \"js-tokens\": \"^4.0.0\", \"picocolors\": \"^1.1.1\" } }, \"sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==\"],\n\n    \"@babel/compat-data\": [\"@babel/compat-data@7.28.0\", \"\", {}, \"sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==\"],\n\n    \"@babel/core\": [\"@babel/core@7.28.0\", \"\", { \"dependencies\": { \"@ampproject/remapping\": \"^2.2.0\", \"@babel/code-frame\": \"^7.27.1\", \"@babel/generator\": \"^7.28.0\", \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-module-transforms\": \"^7.27.3\", \"@babel/helpers\": \"^7.27.6\", \"@babel/parser\": \"^7.28.0\", \"@babel/template\": \"^7.27.2\", \"@babel/traverse\": \"^7.28.0\", \"@babel/types\": \"^7.28.0\", \"convert-source-map\": \"^2.0.0\", \"debug\": \"^4.1.0\", \"gensync\": \"^1.0.0-beta.2\", \"json5\": \"^2.2.3\", \"semver\": \"^6.3.1\" } }, \"sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==\"],\n\n    \"@babel/generator\": [\"@babel/generator@7.28.0\", \"\", { \"dependencies\": { \"@babel/parser\": \"^7.28.0\", \"@babel/types\": \"^7.28.0\", \"@jridgewell/gen-mapping\": \"^0.3.12\", \"@jridgewell/trace-mapping\": \"^0.3.28\", \"jsesc\": \"^3.0.2\" } }, \"sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==\"],\n\n    \"@babel/helper-annotate-as-pure\": [\"@babel/helper-annotate-as-pure@7.27.3\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.27.3\" } }, \"sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==\"],\n\n    \"@babel/helper-compilation-targets\": [\"@babel/helper-compilation-targets@7.27.2\", \"\", { \"dependencies\": { \"@babel/compat-data\": \"^7.27.2\", \"@babel/helper-validator-option\": \"^7.27.1\", \"browserslist\": \"^4.24.0\", \"lru-cache\": \"^5.1.1\", \"semver\": \"^6.3.1\" } }, \"sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==\"],\n\n    \"@babel/helper-create-class-features-plugin\": [\"@babel/helper-create-class-features-plugin@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-member-expression-to-functions\": \"^7.27.1\", \"@babel/helper-optimise-call-expression\": \"^7.27.1\", \"@babel/helper-replace-supers\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-QwGAmuvM17btKU5VqXfb+Giw4JcN0hjuufz3DYnpeVDvZLAObloM77bhMXiqry3Iio+Ai4phVRDwl6WU10+r5A==\"],\n\n    \"@babel/helper-create-regexp-features-plugin\": [\"@babel/helper-create-regexp-features-plugin@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"regexpu-core\": \"^6.2.0\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-uVDC72XVf8UbrH5qQTc18Agb8emwjTiZrQE11Nv3CuBEZmVvTwwE9CBUEvHku06gQCAyYf8Nv6ja1IN+6LMbxQ==\"],\n\n    \"@babel/helper-define-polyfill-provider\": [\"@babel/helper-define-polyfill-provider@0.6.5\", \"\", { \"dependencies\": { \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"debug\": \"^4.4.1\", \"lodash.debounce\": \"^4.0.8\", \"resolve\": \"^1.22.10\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-uJnGFcPsWQK8fvjgGP5LZUZZsYGIoPeRjSF5PGwrelYgq7Q15/Ft9NGFp1zglwgIv//W0uG4BevRuSJRyylZPg==\"],\n\n    \"@babel/helper-globals\": [\"@babel/helper-globals@7.28.0\", \"\", {}, \"sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==\"],\n\n    \"@babel/helper-member-expression-to-functions\": [\"@babel/helper-member-expression-to-functions@7.27.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==\"],\n\n    \"@babel/helper-module-imports\": [\"@babel/helper-module-imports@7.27.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==\"],\n\n    \"@babel/helper-module-transforms\": [\"@babel/helper-module-transforms@7.27.3\", \"\", { \"dependencies\": { \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-validator-identifier\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.3\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==\"],\n\n    \"@babel/helper-optimise-call-expression\": [\"@babel/helper-optimise-call-expression@7.27.1\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.27.1\" } }, \"sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==\"],\n\n    \"@babel/helper-plugin-utils\": [\"@babel/helper-plugin-utils@7.27.1\", \"\", {}, \"sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==\"],\n\n    \"@babel/helper-remap-async-to-generator\": [\"@babel/helper-remap-async-to-generator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-wrap-function\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-7fiA521aVw8lSPeI4ZOD3vRFkoqkJcS+z4hFo82bFSH/2tNd6eJ5qCVMS5OzDmZh/kaHQeBaeyxK6wljcPtveA==\"],\n\n    \"@babel/helper-replace-supers\": [\"@babel/helper-replace-supers@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-member-expression-to-functions\": \"^7.27.1\", \"@babel/helper-optimise-call-expression\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==\"],\n\n    \"@babel/helper-skip-transparent-expression-wrappers\": [\"@babel/helper-skip-transparent-expression-wrappers@7.27.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==\"],\n\n    \"@babel/helper-string-parser\": [\"@babel/helper-string-parser@7.27.1\", \"\", {}, \"sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==\"],\n\n    \"@babel/helper-validator-identifier\": [\"@babel/helper-validator-identifier@7.27.1\", \"\", {}, \"sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==\"],\n\n    \"@babel/helper-validator-option\": [\"@babel/helper-validator-option@7.27.1\", \"\", {}, \"sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==\"],\n\n    \"@babel/helper-wrap-function\": [\"@babel/helper-wrap-function@7.27.1\", \"\", { \"dependencies\": { \"@babel/template\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-NFJK2sHUvrjo8wAU/nQTWU890/zB2jj0qBcCbZbbf+005cAsv6tMjXz31fBign6M5ov1o0Bllu+9nbqkfsjjJQ==\"],\n\n    \"@babel/helpers\": [\"@babel/helpers@7.28.2\", \"\", { \"dependencies\": { \"@babel/template\": \"^7.27.2\", \"@babel/types\": \"^7.28.2\" } }, \"sha512-/V9771t+EgXz62aCcyofnQhGM8DQACbRhvzKFsXKC9QM+5MadF8ZmIm0crDMaz3+o0h0zXfJnd4EhbYbxsrcFw==\"],\n\n    \"@babel/parser\": [\"@babel/parser@7.28.0\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.28.0\" }, \"bin\": \"./bin/babel-parser.js\" }, \"sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==\"],\n\n    \"@babel/plugin-proposal-export-default-from\": [\"@babel/plugin-proposal-export-default-from@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-hjlsMBl1aJc5lp8MoCDEZCiYzlgdRAShOjAfRw6X+GlpLpUPU7c3XNLsKFZbQk/1cRzBlJ7CXg3xJAJMrFa1Uw==\"],\n\n    \"@babel/plugin-syntax-async-generators\": [\"@babel/plugin-syntax-async-generators@7.8.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\"],\n\n    \"@babel/plugin-syntax-bigint\": [\"@babel/plugin-syntax-bigint@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==\"],\n\n    \"@babel/plugin-syntax-class-properties\": [\"@babel/plugin-syntax-class-properties@7.12.13\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.12.13\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\"],\n\n    \"@babel/plugin-syntax-class-static-block\": [\"@babel/plugin-syntax-class-static-block@7.14.5\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\"],\n\n    \"@babel/plugin-syntax-dynamic-import\": [\"@babel/plugin-syntax-dynamic-import@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\"],\n\n    \"@babel/plugin-syntax-export-default-from\": [\"@babel/plugin-syntax-export-default-from@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-eBC/3KSekshx19+N40MzjWqJd7KTEdOoLesAfa4IDFI8eRz5a47i5Oszus6zG/cwIXN63YhgLOMSSNJx49sENg==\"],\n\n    \"@babel/plugin-syntax-flow\": [\"@babel/plugin-syntax-flow@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-p9OkPbZ5G7UT1MofwYFigGebnrzGJacoBSQM0/6bi/PUMVE+qlWDD/OalvQKbwgQzU6dl0xAv6r4X7Jme0RYxA==\"],\n\n    \"@babel/plugin-syntax-import-attributes\": [\"@babel/plugin-syntax-import-attributes@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==\"],\n\n    \"@babel/plugin-syntax-import-meta\": [\"@babel/plugin-syntax-import-meta@7.10.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.10.4\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\"],\n\n    \"@babel/plugin-syntax-json-strings\": [\"@babel/plugin-syntax-json-strings@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\"],\n\n    \"@babel/plugin-syntax-jsx\": [\"@babel/plugin-syntax-jsx@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-y8YTNIeKoyhGd9O0Jiyzyyqk8gdjnumGTQPsz0xOZOQ2RmkVJeZ1vmmfIvFEKqucBG6axJGBZDE/7iI5suUI/w==\"],\n\n    \"@babel/plugin-syntax-logical-assignment-operators\": [\"@babel/plugin-syntax-logical-assignment-operators@7.10.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.10.4\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\"],\n\n    \"@babel/plugin-syntax-nullish-coalescing-operator\": [\"@babel/plugin-syntax-nullish-coalescing-operator@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\"],\n\n    \"@babel/plugin-syntax-numeric-separator\": [\"@babel/plugin-syntax-numeric-separator@7.10.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.10.4\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\"],\n\n    \"@babel/plugin-syntax-object-rest-spread\": [\"@babel/plugin-syntax-object-rest-spread@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\"],\n\n    \"@babel/plugin-syntax-optional-catch-binding\": [\"@babel/plugin-syntax-optional-catch-binding@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\"],\n\n    \"@babel/plugin-syntax-optional-chaining\": [\"@babel/plugin-syntax-optional-chaining@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\"],\n\n    \"@babel/plugin-syntax-private-property-in-object\": [\"@babel/plugin-syntax-private-property-in-object@7.14.5\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\"],\n\n    \"@babel/plugin-syntax-top-level-await\": [\"@babel/plugin-syntax-top-level-await@7.14.5\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\"],\n\n    \"@babel/plugin-syntax-typescript\": [\"@babel/plugin-syntax-typescript@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==\"],\n\n    \"@babel/plugin-transform-arrow-functions\": [\"@babel/plugin-transform-arrow-functions@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-8Z4TGic6xW70FKThA5HYEKKyBpOOsucTOD1DjU3fZxDg+K3zBJcXMFnt/4yQiZnf5+MiOMSXQ9PaEK/Ilh1DeA==\"],\n\n    \"@babel/plugin-transform-async-generator-functions\": [\"@babel/plugin-transform-async-generator-functions@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-remap-async-to-generator\": \"^7.27.1\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-BEOdvX4+M765icNPZeidyADIvQ1m1gmunXufXxvRESy/jNNyfovIqUyE7MVgGBjWktCoJlzvFA1To2O4ymIO3Q==\"],\n\n    \"@babel/plugin-transform-async-to-generator\": [\"@babel/plugin-transform-async-to-generator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-remap-async-to-generator\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-NREkZsZVJS4xmTr8qzE5y8AfIPqsdQfRuUiLRTEzb7Qii8iFWCyDKaUV2c0rCuh4ljDZ98ALHP/PetiBV2nddA==\"],\n\n    \"@babel/plugin-transform-block-scoping\": [\"@babel/plugin-transform-block-scoping@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-gKKnwjpdx5sER/wl0WN0efUBFzF/56YZO0RJrSYP4CljXnP31ByY7fol89AzomdlLNzI36AvOTmYHsnZTCkq8Q==\"],\n\n    \"@babel/plugin-transform-class-properties\": [\"@babel/plugin-transform-class-properties@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-D0VcalChDMtuRvJIu3U/fwWjf8ZMykz5iZsg77Nuj821vCKI3zCyRLwRdWbsuJ/uRwZhZ002QtCqIkwC/ZkvbA==\"],\n\n    \"@babel/plugin-transform-classes\": [\"@babel/plugin-transform-classes@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.3\", \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-globals\": \"^7.28.0\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-replace-supers\": \"^7.27.1\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-IjM1IoJNw72AZFlj33Cu8X0q2XK/6AaVC3jQu+cgQ5lThWD5ajnuUAml80dqRmOhmPkTH8uAwnpMu9Rvj0LTRA==\"],\n\n    \"@babel/plugin-transform-computed-properties\": [\"@babel/plugin-transform-computed-properties@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/template\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-lj9PGWvMTVksbWiDT2tW68zGS/cyo4AkZ/QTp0sQT0mjPopCmrSkzxeXkznjqBxzDI6TclZhOJbBmbBLjuOZUw==\"],\n\n    \"@babel/plugin-transform-destructuring\": [\"@babel/plugin-transform-destructuring@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-v1nrSMBiKcodhsyJ4Gf+Z0U/yawmJDBOTpEB3mcQY52r9RIyPneGyAS/yM6seP/8I+mWI3elOMtT5dB8GJVs+A==\"],\n\n    \"@babel/plugin-transform-flow-strip-types\": [\"@babel/plugin-transform-flow-strip-types@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/plugin-syntax-flow\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-G5eDKsu50udECw7DL2AcsysXiQyB7Nfg521t2OAJ4tbfTJ27doHLeF/vlI1NZGlLdbb/v+ibvtL1YBQqYOwJGg==\"],\n\n    \"@babel/plugin-transform-for-of\": [\"@babel/plugin-transform-for-of@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-BfbWFFEJFQzLCQ5N8VocnCtA8J1CLkNTe2Ms2wocj75dd6VpiqS5Z5quTYcUoo4Yq+DN0rtikODccuv7RU81sw==\"],\n\n    \"@babel/plugin-transform-function-name\": [\"@babel/plugin-transform-function-name@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-compilation-targets\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-1bQeydJF9Nr1eBCMMbC+hdwmRlsv5XYOMu03YSWFwNs0HsAmtSxxF1fyuYPqemVldVyFmlCU7w8UE14LupUSZQ==\"],\n\n    \"@babel/plugin-transform-literals\": [\"@babel/plugin-transform-literals@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-0HCFSepIpLTkLcsi86GG3mTUzxV5jpmbv97hTETW3yzrAij8aqlD36toB1D0daVFJM8NK6GvKO0gslVQmm+zZA==\"],\n\n    \"@babel/plugin-transform-logical-assignment-operators\": [\"@babel/plugin-transform-logical-assignment-operators@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-SJvDs5dXxiae4FbSL1aBJlG4wvl594N6YEVVn9e3JGulwioy6z3oPjx/sQBO3Y4NwUu5HNix6KJ3wBZoewcdbw==\"],\n\n    \"@babel/plugin-transform-modules-commonjs\": [\"@babel/plugin-transform-modules-commonjs@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-module-transforms\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-OJguuwlTYlN0gBZFRPqwOGNWssZjfIUdS7HMYtN8c1KmwpwHFBwTeFZrg9XZa+DFTitWOW5iTAG7tyCUPsCCyw==\"],\n\n    \"@babel/plugin-transform-named-capturing-groups-regex\": [\"@babel/plugin-transform-named-capturing-groups-regex@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-regexp-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-SstR5JYy8ddZvD6MhV0tM/j16Qds4mIpJTOd1Yu9J9pJjH93bxHECF7pgtc28XvkzTD6Pxcm/0Z73Hvk7kb3Ng==\"],\n\n    \"@babel/plugin-transform-nullish-coalescing-operator\": [\"@babel/plugin-transform-nullish-coalescing-operator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-aGZh6xMo6q9vq1JGcw58lZ1Z0+i0xB2x0XaauNIUXd6O1xXc3RwoWEBlsTQrY4KQ9Jf0s5rgD6SiNkaUdJegTA==\"],\n\n    \"@babel/plugin-transform-numeric-separator\": [\"@babel/plugin-transform-numeric-separator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-fdPKAcujuvEChxDBJ5c+0BTaS6revLV7CJL08e4m3de8qJfNIuCc2nc7XJYOjBoTMJeqSmwXJ0ypE14RCjLwaw==\"],\n\n    \"@babel/plugin-transform-object-rest-spread\": [\"@babel/plugin-transform-object-rest-spread@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/plugin-transform-destructuring\": \"^7.28.0\", \"@babel/plugin-transform-parameters\": \"^7.27.7\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-9VNGikXxzu5eCiQjdE4IZn8sb9q7Xsk5EXLDBKUYg1e/Tve8/05+KJEtcxGxAgCY5t/BpKQM+JEL/yT4tvgiUA==\"],\n\n    \"@babel/plugin-transform-optional-catch-binding\": [\"@babel/plugin-transform-optional-catch-binding@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-txEAEKzYrHEX4xSZN4kJ+OfKXFVSWKB2ZxM9dpcE3wT7smwkNmXo5ORRlVzMVdJbD+Q8ILTgSD7959uj+3Dm3Q==\"],\n\n    \"@babel/plugin-transform-optional-chaining\": [\"@babel/plugin-transform-optional-chaining@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-BQmKPPIuc8EkZgNKsv0X4bPmOoayeu4F1YCwx2/CfmDSXDbp7GnzlUH+/ul5VGfRg1AoFPsrIThlEBj2xb4CAg==\"],\n\n    \"@babel/plugin-transform-parameters\": [\"@babel/plugin-transform-parameters@7.27.7\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-qBkYTYCb76RRxUM6CcZA5KRu8K4SM8ajzVeUgVdMVO9NN9uI/GaVmBg/WKJJGnNokV9SY8FxNOVWGXzqzUidBg==\"],\n\n    \"@babel/plugin-transform-private-methods\": [\"@babel/plugin-transform-private-methods@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-10FVt+X55AjRAYI9BrdISN9/AQWHqldOeZDUoLyif1Kn05a56xVBXb8ZouL8pZ9jem8QpXaOt8TS7RHUIS+GPA==\"],\n\n    \"@babel/plugin-transform-private-property-in-object\": [\"@babel/plugin-transform-private-property-in-object@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-5J+IhqTi1XPa0DXF83jYOaARrX+41gOewWbkPyjMNRDqgOCqdffGh8L3f/Ek5utaEBZExjSAzcyjmV9SSAWObQ==\"],\n\n    \"@babel/plugin-transform-react-display-name\": [\"@babel/plugin-transform-react-display-name@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-D6Eujc2zMxKjfa4Zxl4GHMsmhKKZ9VpcqIchJLvwTxad9zWIYulwYItBovpDOoNLISpcZSXoDJ5gaGbQUDqViA==\"],\n\n    \"@babel/plugin-transform-react-jsx\": [\"@babel/plugin-transform-react-jsx@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/plugin-syntax-jsx\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-2KH4LWGSrJIkVf5tSiBFYuXDAoWRq2MMwgivCf+93dd0GQi8RXLjKA/0EvRnVV5G0hrHczsquXuD01L8s6dmBw==\"],\n\n    \"@babel/plugin-transform-react-jsx-self\": [\"@babel/plugin-transform-react-jsx-self@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==\"],\n\n    \"@babel/plugin-transform-react-jsx-source\": [\"@babel/plugin-transform-react-jsx-source@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==\"],\n\n    \"@babel/plugin-transform-regenerator\": [\"@babel/plugin-transform-regenerator@7.28.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-P0QiV/taaa3kXpLY+sXla5zec4E+4t4Aqc9ggHlfZ7a2cp8/x/Gv08jfwEtn9gnnYIMvHx6aoOZ8XJL8eU71Dg==\"],\n\n    \"@babel/plugin-transform-runtime\": [\"@babel/plugin-transform-runtime@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"babel-plugin-polyfill-corejs2\": \"^0.4.14\", \"babel-plugin-polyfill-corejs3\": \"^0.13.0\", \"babel-plugin-polyfill-regenerator\": \"^0.6.5\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-dGopk9nZrtCs2+nfIem25UuHyt5moSJamArzIoh9/vezUQPmYDOzjaHDCkAzuGJibCIkPup8rMT2+wYB6S73cA==\"],\n\n    \"@babel/plugin-transform-shorthand-properties\": [\"@babel/plugin-transform-shorthand-properties@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-N/wH1vcn4oYawbJ13Y/FxcQrWk63jhfNa7jef0ih7PHSIHX2LB7GWE1rkPrOnka9kwMxb6hMl19p7lidA+EHmQ==\"],\n\n    \"@babel/plugin-transform-spread\": [\"@babel/plugin-transform-spread@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-kpb3HUqaILBJcRFVhFUs6Trdd4mkrzcGXss+6/mxUd273PfbWqSDHRzMT2234gIg2QYfAjvXLSquP1xECSg09Q==\"],\n\n    \"@babel/plugin-transform-sticky-regex\": [\"@babel/plugin-transform-sticky-regex@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-lhInBO5bi/Kowe2/aLdBAawijx+q1pQzicSgnkB6dUPc1+RC8QmJHKf2OjvU+NZWitguJHEaEmbV6VWEouT58g==\"],\n\n    \"@babel/plugin-transform-typescript\": [\"@babel/plugin-transform-typescript@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.3\", \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\", \"@babel/plugin-syntax-typescript\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-4AEiDEBPIZvLQaWlc9liCavE0xRM0dNca41WtBeM3jgFptfUOSG9z0uteLhq6+3rq+WB6jIvUwKDTpXEHPJ2Vg==\"],\n\n    \"@babel/plugin-transform-unicode-regex\": [\"@babel/plugin-transform-unicode-regex@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-regexp-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-xvINq24TRojDuyt6JGtHmkVkrfVV3FPT16uytxImLeBZqW3/H52yN+kM1MGuyPkIQxrzKwPHs5U/MP3qKyzkGw==\"],\n\n    \"@babel/runtime\": [\"@babel/runtime@7.28.2\", \"\", {}, \"sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA==\"],\n\n    \"@babel/template\": [\"@babel/template@7.27.2\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.27.1\", \"@babel/parser\": \"^7.27.2\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==\"],\n\n    \"@babel/traverse\": [\"@babel/traverse@7.28.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.27.1\", \"@babel/generator\": \"^7.28.0\", \"@babel/helper-globals\": \"^7.28.0\", \"@babel/parser\": \"^7.28.0\", \"@babel/template\": \"^7.27.2\", \"@babel/types\": \"^7.28.0\", \"debug\": \"^4.3.1\" } }, \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\"],\n\n    \"@babel/traverse--for-generate-function-map\": [\"@babel/traverse@7.28.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.27.1\", \"@babel/generator\": \"^7.28.0\", \"@babel/helper-globals\": \"^7.28.0\", \"@babel/parser\": \"^7.28.0\", \"@babel/template\": \"^7.27.2\", \"@babel/types\": \"^7.28.0\", \"debug\": \"^4.3.1\" } }, \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\"],\n\n    \"@babel/types\": [\"@babel/types@7.28.2\", \"\", { \"dependencies\": { \"@babel/helper-string-parser\": \"^7.27.1\", \"@babel/helper-validator-identifier\": \"^7.27.1\" } }, \"sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ==\"],\n\n    \"@bcoe/v8-coverage\": [\"@bcoe/v8-coverage@0.2.3\", \"\", {}, \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\"],\n\n    \"@braintree/sanitize-url\": [\"@braintree/sanitize-url@7.1.1\", \"\", {}, \"sha512-i1L7noDNxtFyL5DmZafWy1wRVhGehQmzZaz1HiN5e7iylJMSZR7ekOV7NsIqa5qBldlLrsKv4HbgFUVlQrz8Mw==\"],\n\n    \"@chevrotain/cst-dts-gen\": [\"@chevrotain/cst-dts-gen@11.0.3\", \"\", { \"dependencies\": { \"@chevrotain/gast\": \"11.0.3\", \"@chevrotain/types\": \"11.0.3\", \"lodash-es\": \"4.17.21\" } }, \"sha512-BvIKpRLeS/8UbfxXxgC33xOumsacaeCKAjAeLyOn7Pcp95HiRbrpl14S+9vaZLolnbssPIUuiUd8IvgkRyt6NQ==\"],\n\n    \"@chevrotain/gast\": [\"@chevrotain/gast@11.0.3\", \"\", { \"dependencies\": { \"@chevrotain/types\": \"11.0.3\", \"lodash-es\": \"4.17.21\" } }, \"sha512-+qNfcoNk70PyS/uxmj3li5NiECO+2YKZZQMbmjTqRI3Qchu8Hig/Q9vgkHpI3alNjr7M+a2St5pw5w5F6NL5/Q==\"],\n\n    \"@chevrotain/regexp-to-ast\": [\"@chevrotain/regexp-to-ast@11.0.3\", \"\", {}, \"sha512-1fMHaBZxLFvWI067AVbGJav1eRY7N8DDvYCTwGBiE/ytKBgP8azTdgyrKyWZ9Mfh09eHWb5PgTSO8wi7U824RA==\"],\n\n    \"@chevrotain/types\": [\"@chevrotain/types@11.0.3\", \"\", {}, \"sha512-gsiM3G8b58kZC2HaWR50gu6Y1440cHiJ+i3JUvcp/35JchYejb2+5MVeJK0iKThYpAa/P2PYFV4hoi44HD+aHQ==\"],\n\n    \"@chevrotain/utils\": [\"@chevrotain/utils@11.0.3\", \"\", {}, \"sha512-YslZMgtJUyuMbZ+aKvfF3x1f5liK4mWNxghFRv7jqRR9C3R3fAOGTTKvxXDa2Y1s9zSbcpuO0cAxDYsc9SrXoQ==\"],\n\n    \"@codebuff/agents\": [\"@codebuff/agents@workspace:.agents\"],\n\n    \"@codebuff/backend\": [\"@codebuff/backend@workspace:backend\"],\n\n    \"@codebuff/bigquery\": [\"@codebuff/bigquery@workspace:packages/bigquery\"],\n\n    \"@codebuff/billing\": [\"@codebuff/billing@workspace:packages/billing\"],\n\n    \"@codebuff/build-tools\": [\"@codebuff/build-tools@workspace:packages/build-tools\"],\n\n    \"@codebuff/code-map\": [\"@codebuff/code-map@workspace:packages/code-map\"],\n\n    \"@codebuff/common\": [\"@codebuff/common@workspace:common\"],\n\n    \"@codebuff/evals\": [\"@codebuff/evals@workspace:evals\"],\n\n    \"@codebuff/internal\": [\"@codebuff/internal@workspace:packages/internal\"],\n\n    \"@codebuff/npm-app\": [\"@codebuff/npm-app@workspace:npm-app\"],\n\n    \"@codebuff/scripts\": [\"@codebuff/scripts@workspace:scripts\"],\n\n    \"@codebuff/sdk\": [\"@codebuff/sdk@workspace:sdk\"],\n\n    \"@codebuff/web\": [\"@codebuff/web@workspace:web\"],\n\n    \"@commitlint/cli\": [\"@commitlint/cli@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/format\": \"^19.8.1\", \"@commitlint/lint\": \"^19.8.1\", \"@commitlint/load\": \"^19.8.1\", \"@commitlint/read\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"tinyexec\": \"^1.0.0\", \"yargs\": \"^17.0.0\" }, \"bin\": { \"commitlint\": \"./cli.js\" } }, \"sha512-LXUdNIkspyxrlV6VDHWBmCZRtkEVRpBKxi2Gtw3J54cGWhLCTouVD/Q6ZSaSvd2YaDObWK8mDjrz3TIKtaQMAA==\"],\n\n    \"@commitlint/config-conventional\": [\"@commitlint/config-conventional@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"conventional-changelog-conventionalcommits\": \"^7.0.2\" } }, \"sha512-/AZHJL6F6B/G959CsMAzrPKKZjeEiAVifRyEwXxcT6qtqbPwGw+iQxmNS+Bu+i09OCtdNRW6pNpBvgPrtMr9EQ==\"],\n\n    \"@commitlint/config-validator\": [\"@commitlint/config-validator@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"ajv\": \"^8.11.0\" } }, \"sha512-0jvJ4u+eqGPBIzzSdqKNX1rvdbSU1lPNYlfQQRIFnBgLy26BtC0cFnr7c/AyuzExMxWsMOte6MkTi9I3SQ3iGQ==\"],\n\n    \"@commitlint/ensure\": [\"@commitlint/ensure@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"lodash.camelcase\": \"^4.3.0\", \"lodash.kebabcase\": \"^4.1.1\", \"lodash.snakecase\": \"^4.1.1\", \"lodash.startcase\": \"^4.4.0\", \"lodash.upperfirst\": \"^4.3.1\" } }, \"sha512-mXDnlJdvDzSObafjYrOSvZBwkD01cqB4gbnnFuVyNpGUM5ijwU/r/6uqUmBXAAOKRfyEjpkGVZxaDsCVnHAgyw==\"],\n\n    \"@commitlint/execute-rule\": [\"@commitlint/execute-rule@19.8.1\", \"\", {}, \"sha512-YfJyIqIKWI64Mgvn/sE7FXvVMQER/Cd+s3hZke6cI1xgNT/f6ZAz5heND0QtffH+KbcqAwXDEE1/5niYayYaQA==\"],\n\n    \"@commitlint/format\": [\"@commitlint/format@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"chalk\": \"^5.3.0\" } }, \"sha512-kSJj34Rp10ItP+Eh9oCItiuN/HwGQMXBnIRk69jdOwEW9llW9FlyqcWYbHPSGofmjsqeoxa38UaEA5tsbm2JWw==\"],\n\n    \"@commitlint/is-ignored\": [\"@commitlint/is-ignored@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"semver\": \"^7.6.0\" } }, \"sha512-AceOhEhekBUQ5dzrVhDDsbMaY5LqtN8s1mqSnT2Kz1ERvVZkNihrs3Sfk1Je/rxRNbXYFzKZSHaPsEJJDJV8dg==\"],\n\n    \"@commitlint/lint\": [\"@commitlint/lint@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/is-ignored\": \"^19.8.1\", \"@commitlint/parse\": \"^19.8.1\", \"@commitlint/rules\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\" } }, \"sha512-52PFbsl+1EvMuokZXLRlOsdcLHf10isTPlWwoY1FQIidTsTvjKXVXYb7AvtpWkDzRO2ZsqIgPK7bI98x8LRUEw==\"],\n\n    \"@commitlint/load\": [\"@commitlint/load@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/config-validator\": \"^19.8.1\", \"@commitlint/execute-rule\": \"^19.8.1\", \"@commitlint/resolve-extends\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"chalk\": \"^5.3.0\", \"cosmiconfig\": \"^9.0.0\", \"cosmiconfig-typescript-loader\": \"^6.1.0\", \"lodash.isplainobject\": \"^4.0.6\", \"lodash.merge\": \"^4.6.2\", \"lodash.uniq\": \"^4.5.0\" } }, \"sha512-9V99EKG3u7z+FEoe4ikgq7YGRCSukAcvmKQuTtUyiYPnOd9a2/H9Ak1J9nJA1HChRQp9OA/sIKPugGS+FK/k1A==\"],\n\n    \"@commitlint/message\": [\"@commitlint/message@19.8.1\", \"\", {}, \"sha512-+PMLQvjRXiU+Ae0Wc+p99EoGEutzSXFVwQfa3jRNUZLNW5odZAyseb92OSBTKCu+9gGZiJASt76Cj3dLTtcTdg==\"],\n\n    \"@commitlint/parse\": [\"@commitlint/parse@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"conventional-changelog-angular\": \"^7.0.0\", \"conventional-commits-parser\": \"^5.0.0\" } }, \"sha512-mmAHYcMBmAgJDKWdkjIGq50X4yB0pSGpxyOODwYmoexxxiUCy5JJT99t1+PEMK7KtsCtzuWYIAXYAiKR+k+/Jw==\"],\n\n    \"@commitlint/read\": [\"@commitlint/read@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/top-level\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"git-raw-commits\": \"^4.0.0\", \"minimist\": \"^1.2.8\", \"tinyexec\": \"^1.0.0\" } }, \"sha512-03Jbjb1MqluaVXKHKRuGhcKWtSgh3Jizqy2lJCRbRrnWpcM06MYm8th59Xcns8EqBYvo0Xqb+2DoZFlga97uXQ==\"],\n\n    \"@commitlint/resolve-extends\": [\"@commitlint/resolve-extends@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/config-validator\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"global-directory\": \"^4.0.1\", \"import-meta-resolve\": \"^4.0.0\", \"lodash.mergewith\": \"^4.6.2\", \"resolve-from\": \"^5.0.0\" } }, \"sha512-GM0mAhFk49I+T/5UCYns5ayGStkTt4XFFrjjf0L4S26xoMTSkdCf9ZRO8en1kuopC4isDFuEm7ZOm/WRVeElVg==\"],\n\n    \"@commitlint/rules\": [\"@commitlint/rules@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/ensure\": \"^19.8.1\", \"@commitlint/message\": \"^19.8.1\", \"@commitlint/to-lines\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\" } }, \"sha512-Hnlhd9DyvGiGwjfjfToMi1dsnw1EXKGJNLTcsuGORHz6SS9swRgkBsou33MQ2n51/boIDrbsg4tIBbRpEWK2kw==\"],\n\n    \"@commitlint/to-lines\": [\"@commitlint/to-lines@19.8.1\", \"\", {}, \"sha512-98Mm5inzbWTKuZQr2aW4SReY6WUukdWXuZhrqf1QdKPZBCCsXuG87c+iP0bwtD6DBnmVVQjgp4whoHRVixyPBg==\"],\n\n    \"@commitlint/top-level\": [\"@commitlint/top-level@19.8.1\", \"\", { \"dependencies\": { \"find-up\": \"^7.0.0\" } }, \"sha512-Ph8IN1IOHPSDhURCSXBz44+CIu+60duFwRsg6HqaISFHQHbmBtxVw4ZrFNIYUzEP7WwrNPxa2/5qJ//NK1FGcw==\"],\n\n    \"@commitlint/types\": [\"@commitlint/types@19.8.1\", \"\", { \"dependencies\": { \"@types/conventional-commits-parser\": \"^5.0.0\", \"chalk\": \"^5.3.0\" } }, \"sha512-/yCrWGCoA1SVKOks25EGadP9Pnj0oAIHGpl2wH2M2Y46dPM2ueb8wyCVOD7O3WCTkaJ0IkKvzhl1JY7+uCT2Dw==\"],\n\n    \"@contentlayer/cli\": [\"@contentlayer/cli@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\", \"clipanion\": \"^3.2.1\", \"typanion\": \"^3.12.1\" } }, \"sha512-vNDwgLuhYNu+m70NZ3XK9kexKNguuxPXg7Yvzj3B34cEilQjjzSrcTY/i+AIQm9V7uT5GGshx9ukzPf+SmoszQ==\"],\n\n    \"@contentlayer/client\": [\"@contentlayer/client@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\" } }, \"sha512-QSlLyc3y4PtdC5lFw0L4wTZUH8BQnv2nk37hNCsPAqGf+dRO7TLAzdc+2/mVIRgK+vSH+pSOzjLsQpFxxXRTZA==\"],\n\n    \"@contentlayer/core\": [\"@contentlayer/core@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/utils\": \"0.3.4\", \"camel-case\": \"^4.1.2\", \"comment-json\": \"^4.2.3\", \"esbuild\": \"0.17.x || 0.18.x\", \"gray-matter\": \"^4.0.3\", \"mdx-bundler\": \"^9.2.1\", \"rehype-stringify\": \"^9.0.3\", \"remark-frontmatter\": \"^4.0.1\", \"remark-parse\": \"^10.0.2\", \"remark-rehype\": \"^10.1.0\", \"source-map-support\": \"^0.5.21\", \"type-fest\": \"^3.12.0\", \"unified\": \"^10.1.2\" }, \"peerDependencies\": { \"markdown-wasm\": \"1.x\" }, \"optionalPeers\": [\"markdown-wasm\"] }, \"sha512-o68oBLwfYZ+2vtgfk1lgHxOl3LoxvRNiUfeQ8IWFWy/L4wnIkKIqLZX01zlRE5IzYM+ZMMN5V0cKQlO7DsyR9g==\"],\n\n    \"@contentlayer/source-files\": [\"@contentlayer/source-files@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\", \"chokidar\": \"^3.5.3\", \"fast-glob\": \"^3.2.12\", \"gray-matter\": \"^4.0.3\", \"imagescript\": \"^1.2.16\", \"micromatch\": \"^4.0.5\", \"ts-pattern\": \"^4.3.0\", \"unified\": \"^10.1.2\", \"yaml\": \"^2.3.1\", \"zod\": \"^3.21.4\" } }, \"sha512-4njyn0OFPu7WY4tAjMxiJgWOKeiHuBOGdQ36EYE03iij/pPPRbiWbL+cmLccYXUFEW58mDwpqROZZm6pnxjRDQ==\"],\n\n    \"@contentlayer/source-remote-files\": [\"@contentlayer/source-remote-files@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/source-files\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\" } }, \"sha512-cyiv4sNUySZvR0uAKlM+kSAELzNd2h2QT1R2e41dRKbwOUVxeLfmGiLugr0aVac6Q3xYcD99dbHyR1xWPV+w9w==\"],\n\n    \"@contentlayer/utils\": [\"@contentlayer/utils@0.3.4\", \"\", { \"dependencies\": { \"@effect-ts/core\": \"^0.60.5\", \"@effect-ts/otel\": \"^0.15.1\", \"@effect-ts/otel-exporter-trace-otlp-grpc\": \"^0.15.1\", \"@effect-ts/otel-sdk-trace-node\": \"^0.15.1\", \"@js-temporal/polyfill\": \"^0.4.4\", \"@opentelemetry/api\": \"^1.4.1\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/exporter-trace-otlp-grpc\": \"^0.39.1\", \"@opentelemetry/resources\": \"^1.13.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\", \"@opentelemetry/sdk-trace-node\": \"^1.13.0\", \"@opentelemetry/semantic-conventions\": \"^1.13.0\", \"chokidar\": \"^3.5.3\", \"hash-wasm\": \"^4.9.0\", \"inflection\": \"^2.0.1\", \"memfs\": \"^3.5.1\", \"oo-ascii-tree\": \"^1.84.0\", \"ts-pattern\": \"^4.3.0\", \"type-fest\": \"^3.12.0\" } }, \"sha512-ZWWOhbUWYQ2QHoLIlcUnEo7X4ZbwcyFPuzVQWWMkK43BxCveyQtZwBIzfyx54sqVzi0GUmKP8bHzsLQT0QxaLQ==\"],\n\n    \"@cspotcode/source-map-support\": [\"@cspotcode/source-map-support@0.8.1\", \"\", { \"dependencies\": { \"@jridgewell/trace-mapping\": \"0.3.9\" } }, \"sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==\"],\n\n    \"@dimforge/rapier3d-compat\": [\"@dimforge/rapier3d-compat@0.12.0\", \"\", {}, \"sha512-uekIGetywIgopfD97oDL5PfeezkFpNhwlzlaEYNOA0N6ghdsOvh/HYjSMek5Q2O1PYvRSDFcqFVJl4r4ZBwOow==\"],\n\n    \"@discordjs/builders\": [\"@discordjs/builders@1.11.3\", \"\", { \"dependencies\": { \"@discordjs/formatters\": \"^0.6.1\", \"@discordjs/util\": \"^1.1.1\", \"@sapphire/shapeshift\": \"^4.0.0\", \"discord-api-types\": \"^0.38.16\", \"fast-deep-equal\": \"^3.1.3\", \"ts-mixer\": \"^6.0.4\", \"tslib\": \"^2.6.3\" } }, \"sha512-p3kf5eV49CJiRTfhtutUCeivSyQ/l2JlKodW1ZquRwwvlOWmG9+6jFShX6x8rUiYhnP6wKI96rgN/SXMy5e5aw==\"],\n\n    \"@discordjs/collection\": [\"@discordjs/collection@1.5.3\", \"\", {}, \"sha512-SVb428OMd3WO1paV3rm6tSjM4wC+Kecaa1EUGX7vc6/fddvw/6lg90z4QtCqm21zvVe92vMMDt9+DkIvjXImQQ==\"],\n\n    \"@discordjs/formatters\": [\"@discordjs/formatters@0.6.1\", \"\", { \"dependencies\": { \"discord-api-types\": \"^0.38.1\" } }, \"sha512-5cnX+tASiPCqCWtFcFslxBVUaCetB0thvM/JyavhbXInP1HJIEU+Qv/zMrnuwSsX3yWH2lVXNJZeDK3EiP4HHg==\"],\n\n    \"@discordjs/rest\": [\"@discordjs/rest@2.5.1\", \"\", { \"dependencies\": { \"@discordjs/collection\": \"^2.1.1\", \"@discordjs/util\": \"^1.1.1\", \"@sapphire/async-queue\": \"^1.5.3\", \"@sapphire/snowflake\": \"^3.5.3\", \"@vladfrangu/async_event_emitter\": \"^2.4.6\", \"discord-api-types\": \"^0.38.1\", \"magic-bytes.js\": \"^1.10.0\", \"tslib\": \"^2.6.3\", \"undici\": \"6.21.3\" } }, \"sha512-Tg9840IneBcbrAjcGaQzHUJWFNq1MMWZjTdjJ0WS/89IffaNKc++iOvffucPxQTF/gviO9+9r8kEPea1X5J2Dw==\"],\n\n    \"@discordjs/util\": [\"@discordjs/util@1.1.1\", \"\", {}, \"sha512-eddz6UnOBEB1oITPinyrB2Pttej49M9FZQY8NxgEvc3tq6ZICZ19m70RsmzRdDHk80O9NoYN/25AqJl8vPVf/g==\"],\n\n    \"@discordjs/ws\": [\"@discordjs/ws@1.2.3\", \"\", { \"dependencies\": { \"@discordjs/collection\": \"^2.1.0\", \"@discordjs/rest\": \"^2.5.1\", \"@discordjs/util\": \"^1.1.0\", \"@sapphire/async-queue\": \"^1.5.2\", \"@types/ws\": \"^8.5.10\", \"@vladfrangu/async_event_emitter\": \"^2.2.4\", \"discord-api-types\": \"^0.38.1\", \"tslib\": \"^2.6.2\", \"ws\": \"^8.17.0\" } }, \"sha512-wPlQDxEmlDg5IxhJPuxXr3Vy9AjYq5xCvFWGJyD7w7Np8ZGu+Mc+97LCoEc/+AYCo2IDpKioiH0/c/mj5ZR9Uw==\"],\n\n    \"@drizzle-team/brocli\": [\"@drizzle-team/brocli@0.10.2\", \"\", {}, \"sha512-z33Il7l5dKjUgGULTqBsQBQwckHh5AbIuxhdsIxDDiZAzBOrZO6q9ogcWC65kU382AfynTfgNumVcNIjuIua6w==\"],\n\n    \"@effect-ts/core\": [\"@effect-ts/core@0.60.5\", \"\", { \"dependencies\": { \"@effect-ts/system\": \"^0.57.5\" } }, \"sha512-qi1WrtJA90XLMnj2hnUszW9Sx4dXP03ZJtCc5DiUBIOhF4Vw7plfb65/bdBySPoC9s7zy995TdUX1XBSxUkl5w==\"],\n\n    \"@effect-ts/otel\": [\"@effect-ts/otel@0.15.1\", \"\", { \"peerDependencies\": { \"@effect-ts/core\": \"^0.60.2\", \"@opentelemetry/api\": \"^1.4.0\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\" } }, \"sha512-AmZJHl7t0+Peh7Yb2+hqn6r9+rd9/UfeA4AMV9h0YGTdOyouyFfD3wzWlxnAUzAQ4Lrod4kC7Noruret4EpqpA==\"],\n\n    \"@effect-ts/otel-exporter-trace-otlp-grpc\": [\"@effect-ts/otel-exporter-trace-otlp-grpc@0.15.1\", \"\", { \"dependencies\": { \"@effect-ts/otel\": \"^0.15.1\" }, \"peerDependencies\": { \"@effect-ts/core\": \"^0.60.2\", \"@opentelemetry/api\": \"^1.4.0\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/exporter-trace-otlp-grpc\": \"^0.39.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\" } }, \"sha512-47gAg0O2pW5Jlo86jfzjdkwL5a7Bzb+Kj5WTmdu4CxYRfWn9ytKjuuYIfsNDW8neuhdKzn+P5wCddgEh0glYyQ==\"],\n\n    \"@effect-ts/otel-sdk-trace-node\": [\"@effect-ts/otel-sdk-trace-node@0.15.1\", \"\", { \"dependencies\": { \"@effect-ts/otel\": \"^0.15.1\" }, \"peerDependencies\": { \"@effect-ts/core\": \"^0.60.2\", \"@opentelemetry/api\": \"^1.4.0\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\", \"@opentelemetry/sdk-trace-node\": \"^1.13.0\" } }, \"sha512-a2sF0ylmn8xOJs8fNeT/spJ1gUcsksAJCALxo9WOfuTCMtTwMVtVhCKEPEeQoL7wFqU+JgPkVdP91+FJ/Rkeow==\"],\n\n    \"@effect-ts/system\": [\"@effect-ts/system@0.57.5\", \"\", {}, \"sha512-/crHGujo0xnuHIYNc1VgP0HGJGFSoSqq88JFXe6FmFyXPpWt8Xu39LyLg7rchsxfXFeEdA9CrIZvLV5eswXV5g==\"],\n\n    \"@emnapi/core\": [\"@emnapi/core@1.4.5\", \"\", { \"dependencies\": { \"@emnapi/wasi-threads\": \"1.0.4\", \"tslib\": \"^2.4.0\" } }, \"sha512-XsLw1dEOpkSX/WucdqUhPWP7hDxSvZiY+fsUC14h+FtQ2Ifni4znbBt8punRX+Uj2JG/uDb8nEHVKvrVlvdZ5Q==\"],\n\n    \"@emnapi/runtime\": [\"@emnapi/runtime@1.4.5\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-++LApOtY0pEEz1zrd9vy1/zXVaVJJ/EbAF3u0fXIzPJEDtnITsBGbbK0EkM72amhl/R5b+5xx0Y/QhcVOpuulg==\"],\n\n    \"@emnapi/wasi-threads\": [\"@emnapi/wasi-threads@1.0.4\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-PJR+bOmMOPH8AtcTGAyYNiuJ3/Fcoj2XN/gBEWzDIKh254XO+mM9XoXHk5GNEhodxeMznbg7BlRojVbKN+gC6g==\"],\n\n    \"@emotion/is-prop-valid\": [\"@emotion/is-prop-valid@1.3.1\", \"\", { \"dependencies\": { \"@emotion/memoize\": \"^0.9.0\" } }, \"sha512-/ACwoqx7XQi9knQs/G0qKvv5teDMhD7bXYns9N/wM8ah8iNb8jZ2uNO0YOgiq2o2poIvVtJS2YALasQuMSQ7Kw==\"],\n\n    \"@emotion/memoize\": [\"@emotion/memoize@0.9.0\", \"\", {}, \"sha512-30FAj7/EoJ5mwVPOWhAyCX+FPfMDrVecJAM+Iw9NRoSl4BBAQeqj4cApHHUXOVvIPgLVDsCFoz/hGD+5QQD1GQ==\"],\n\n    \"@esbuild-kit/core-utils\": [\"@esbuild-kit/core-utils@3.3.2\", \"\", { \"dependencies\": { \"esbuild\": \"~0.18.20\", \"source-map-support\": \"^0.5.21\" } }, \"sha512-sPRAnw9CdSsRmEtnsl2WXWdyquogVpB3yZ3dgwJfe8zrOzTsV7cJvmwrKVa+0ma5BoiGJ+BoqkMvawbayKUsqQ==\"],\n\n    \"@esbuild-kit/esm-loader\": [\"@esbuild-kit/esm-loader@2.6.5\", \"\", { \"dependencies\": { \"@esbuild-kit/core-utils\": \"^3.3.2\", \"get-tsconfig\": \"^4.7.0\" } }, \"sha512-FxEMIkJKnodyA1OaCUoEvbYRkoZlLZ4d/eXFu9Fh8CbBBgP5EmZxrfTRyN0qpXZ4vOvqnE5YdRdcrmUUXuU+dA==\"],\n\n    \"@esbuild-plugins/node-resolve\": [\"@esbuild-plugins/node-resolve@0.1.4\", \"\", { \"dependencies\": { \"@types/resolve\": \"^1.17.1\", \"debug\": \"^4.3.1\", \"escape-string-regexp\": \"^4.0.0\", \"resolve\": \"^1.19.0\" }, \"peerDependencies\": { \"esbuild\": \"*\" } }, \"sha512-haFQ0qhxEpqtWWY0kx1Y5oE3sMyO1PcoSiWEPrAw6tm/ZOOLXjSs6Q+v1v9eyuVF0nNt50YEvrcrvENmyoMv5g==\"],\n\n    \"@esbuild/aix-ppc64\": [\"@esbuild/aix-ppc64@0.19.12\", \"\", { \"os\": \"aix\", \"cpu\": \"ppc64\" }, \"sha512-bmoCYyWdEL3wDQIVbcyzRyeKLgk2WtWLTWz1ZIAZF/EGbNOwSA6ew3PftJ1PqMiOOGu0OyFMzG53L0zqIpPeNA==\"],\n\n    \"@esbuild/android-arm\": [\"@esbuild/android-arm@0.19.12\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-qg/Lj1mu3CdQlDEEiWrlC4eaPZ1KztwGJ9B6J+/6G+/4ewxJg7gqj8eVYWvao1bXrqGiW2rsBZFSX3q2lcW05w==\"],\n\n    \"@esbuild/android-arm64\": [\"@esbuild/android-arm64@0.19.12\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-P0UVNGIienjZv3f5zq0DP3Nt2IE/3plFzuaS96vihvD0Hd6H/q4WXUGpCxD/E8YrSXfNyRPbpTq+T8ZQioSuPA==\"],\n\n    \"@esbuild/android-x64\": [\"@esbuild/android-x64@0.19.12\", \"\", { \"os\": \"android\", \"cpu\": \"x64\" }, \"sha512-3k7ZoUW6Q6YqhdhIaq/WZ7HwBpnFBlW905Fa4s4qWJyiNOgT1dOqDiVAQFwBH7gBRZr17gLrlFCRzF6jFh7Kew==\"],\n\n    \"@esbuild/darwin-arm64\": [\"@esbuild/darwin-arm64@0.19.12\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-B6IeSgZgtEzGC42jsI+YYu9Z3HKRxp8ZT3cqhvliEHovq8HSX2YX8lNocDn79gCKJXOSaEot9MVYky7AKjCs8g==\"],\n\n    \"@esbuild/darwin-x64\": [\"@esbuild/darwin-x64@0.19.12\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-hKoVkKzFiToTgn+41qGhsUJXFlIjxI/jSYeZf3ugemDYZldIXIxhvwN6erJGlX4t5h417iFuheZ7l+YVn05N3A==\"],\n\n    \"@esbuild/freebsd-arm64\": [\"@esbuild/freebsd-arm64@0.19.12\", \"\", { \"os\": \"freebsd\", \"cpu\": \"arm64\" }, \"sha512-4aRvFIXmwAcDBw9AueDQ2YnGmz5L6obe5kmPT8Vd+/+x/JMVKCgdcRwH6APrbpNXsPz+K653Qg8HB/oXvXVukA==\"],\n\n    \"@esbuild/freebsd-x64\": [\"@esbuild/freebsd-x64@0.19.12\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-EYoXZ4d8xtBoVN7CEwWY2IN4ho76xjYXqSXMNccFSx2lgqOG/1TBPW0yPx1bJZk94qu3tX0fycJeeQsKovA8gg==\"],\n\n    \"@esbuild/linux-arm\": [\"@esbuild/linux-arm@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-J5jPms//KhSNv+LO1S1TX1UWp1ucM6N6XuL6ITdKWElCu8wXP72l9MM0zDTzzeikVyqFE6U8YAV9/tFyj0ti+w==\"],\n\n    \"@esbuild/linux-arm64\": [\"@esbuild/linux-arm64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-EoTjyYyLuVPfdPLsGVVVC8a0p1BFFvtpQDB/YLEhaXyf/5bczaGeN15QkR+O4S5LeJ92Tqotve7i1jn35qwvdA==\"],\n\n    \"@esbuild/linux-ia32\": [\"@esbuild/linux-ia32@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"ia32\" }, \"sha512-Thsa42rrP1+UIGaWz47uydHSBOgTUnwBwNq59khgIwktK6x60Hivfbux9iNR0eHCHzOLjLMLfUMLCypBkZXMHA==\"],\n\n    \"@esbuild/linux-loong64\": [\"@esbuild/linux-loong64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-LiXdXA0s3IqRRjm6rV6XaWATScKAXjI4R4LoDlvO7+yQqFdlr1Bax62sRwkVvRIrwXxvtYEHHI4dm50jAXkuAA==\"],\n\n    \"@esbuild/linux-mips64el\": [\"@esbuild/linux-mips64el@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-fEnAuj5VGTanfJ07ff0gOA6IPsvrVHLVb6Lyd1g2/ed67oU1eFzL0r9WL7ZzscD+/N6i3dWumGE1Un4f7Amf+w==\"],\n\n    \"@esbuild/linux-ppc64\": [\"@esbuild/linux-ppc64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-nYJA2/QPimDQOh1rKWedNOe3Gfc8PabU7HT3iXWtNUbRzXS9+vgB0Fjaqr//XNbd82mCxHzik2qotuI89cfixg==\"],\n\n    \"@esbuild/linux-riscv64\": [\"@esbuild/linux-riscv64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-2MueBrlPQCw5dVJJpQdUYgeqIzDQgw3QtiAHUC4RBz9FXPrskyyU3VI1hw7C0BSKB9OduwSJ79FTCqtGMWqJHg==\"],\n\n    \"@esbuild/linux-s390x\": [\"@esbuild/linux-s390x@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-+Pil1Nv3Umes4m3AZKqA2anfhJiVmNCYkPchwFJNEJN5QxmTs1uzyy4TvmDrCRNT2ApwSari7ZIgrPeUx4UZDg==\"],\n\n    \"@esbuild/linux-x64\": [\"@esbuild/linux-x64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-B71g1QpxfwBvNrfyJdVDexenDIt1CiDN1TIXLbhOw0KhJzE78KIFGX6OJ9MrtC0oOqMWf+0xop4qEU8JrJTwCg==\"],\n\n    \"@esbuild/netbsd-x64\": [\"@esbuild/netbsd-x64@0.19.12\", \"\", { \"os\": \"none\", \"cpu\": \"x64\" }, \"sha512-3ltjQ7n1owJgFbuC61Oj++XhtzmymoCihNFgT84UAmJnxJfm4sYCiSLTXZtE00VWYpPMYc+ZQmB6xbSdVh0JWA==\"],\n\n    \"@esbuild/openbsd-x64\": [\"@esbuild/openbsd-x64@0.19.12\", \"\", { \"os\": \"openbsd\", \"cpu\": \"x64\" }, \"sha512-RbrfTB9SWsr0kWmb9srfF+L933uMDdu9BIzdA7os2t0TXhCRjrQyCeOt6wVxr79CKD4c+p+YhCj31HBkYcXebw==\"],\n\n    \"@esbuild/sunos-x64\": [\"@esbuild/sunos-x64@0.19.12\", \"\", { \"os\": \"sunos\", \"cpu\": \"x64\" }, \"sha512-HKjJwRrW8uWtCQnQOz9qcU3mUZhTUQvi56Q8DPTLLB+DawoiQdjsYq+j+D3s9I8VFtDr+F9CjgXKKC4ss89IeA==\"],\n\n    \"@esbuild/win32-arm64\": [\"@esbuild/win32-arm64@0.19.12\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-URgtR1dJnmGvX864pn1B2YUYNzjmXkuJOIqG2HdU62MVS4EHpU2946OZoTMnRUHklGtJdJZ33QfzdjGACXhn1A==\"],\n\n    \"@esbuild/win32-ia32\": [\"@esbuild/win32-ia32@0.19.12\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-+ZOE6pUkMOJfmxmBZElNOx72NKpIa/HFOMGzu8fqzQJ5kgf6aTGrcJaFsNiVMH4JKpMipyK+7k0n2UXN7a8YKQ==\"],\n\n    \"@esbuild/win32-x64\": [\"@esbuild/win32-x64@0.19.12\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-T1QyPSDCyMXaO3pzBkF96E8xMkiRYbUEZADd29SyPGabqxMViNoii+NcK7eWJAEoU6RZyEm5lVSIjTmcdoB9HA==\"],\n\n    \"@eslint-community/eslint-utils\": [\"@eslint-community/eslint-utils@4.7.0\", \"\", { \"dependencies\": { \"eslint-visitor-keys\": \"^3.4.3\" }, \"peerDependencies\": { \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\" } }, \"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\"],\n\n    \"@eslint-community/regexpp\": [\"@eslint-community/regexpp@4.12.1\", \"\", {}, \"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\"],\n\n    \"@eslint/eslintrc\": [\"@eslint/eslintrc@2.1.4\", \"\", { \"dependencies\": { \"ajv\": \"^6.12.4\", \"debug\": \"^4.3.2\", \"espree\": \"^9.6.0\", \"globals\": \"^13.19.0\", \"ignore\": \"^5.2.0\", \"import-fresh\": \"^3.2.1\", \"js-yaml\": \"^4.1.0\", \"minimatch\": \"^3.1.2\", \"strip-json-comments\": \"^3.1.1\" } }, \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\"],\n\n    \"@eslint/js\": [\"@eslint/js@8.57.1\", \"\", {}, \"sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==\"],\n\n    \"@fal-works/esbuild-plugin-global-externals\": [\"@fal-works/esbuild-plugin-global-externals@2.1.2\", \"\", {}, \"sha512-cEee/Z+I12mZcFJshKcCqC8tuX5hG3s+d+9nZ3LabqKF1vKdF41B92pJVCBggjAGORAeOzyyDDKrZwIkLffeOQ==\"],\n\n    \"@floating-ui/core\": [\"@floating-ui/core@1.7.3\", \"\", { \"dependencies\": { \"@floating-ui/utils\": \"^0.2.10\" } }, \"sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==\"],\n\n    \"@floating-ui/dom\": [\"@floating-ui/dom@1.7.3\", \"\", { \"dependencies\": { \"@floating-ui/core\": \"^1.7.3\", \"@floating-ui/utils\": \"^0.2.10\" } }, \"sha512-uZA413QEpNuhtb3/iIKoYMSK07keHPYeXF02Zhd6e213j+d1NamLix/mCLxBUDW/Gx52sPH2m+chlUsyaBs/Ag==\"],\n\n    \"@floating-ui/react-dom\": [\"@floating-ui/react-dom@2.1.5\", \"\", { \"dependencies\": { \"@floating-ui/dom\": \"^1.7.3\" }, \"peerDependencies\": { \"react\": \">=16.8.0\", \"react-dom\": \">=16.8.0\" } }, \"sha512-HDO/1/1oH9fjj4eLgegrlH3dklZpHtUYYFiVwMUwfGvk9jWDRWqkklA2/NFScknrcNSspbV868WjXORvreDX+Q==\"],\n\n    \"@floating-ui/utils\": [\"@floating-ui/utils@0.2.10\", \"\", {}, \"sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==\"],\n\n    \"@google-cloud/bigquery\": [\"@google-cloud/bigquery@7.9.4\", \"\", { \"dependencies\": { \"@google-cloud/common\": \"^5.0.0\", \"@google-cloud/paginator\": \"^5.0.2\", \"@google-cloud/precise-date\": \"^4.0.0\", \"@google-cloud/promisify\": \"4.0.0\", \"arrify\": \"^2.0.1\", \"big.js\": \"^6.0.0\", \"duplexify\": \"^4.0.0\", \"extend\": \"^3.0.2\", \"is\": \"^3.3.0\", \"stream-events\": \"^1.0.5\", \"uuid\": \"^9.0.0\" } }, \"sha512-C7jeI+9lnCDYK3cRDujcBsPgiwshWKn/f0BiaJmClplfyosCLfWE83iGQ0eKH113UZzjR9c9q7aZQg0nU388sw==\"],\n\n    \"@google-cloud/common\": [\"@google-cloud/common@5.0.2\", \"\", { \"dependencies\": { \"@google-cloud/projectify\": \"^4.0.0\", \"@google-cloud/promisify\": \"^4.0.0\", \"arrify\": \"^2.0.1\", \"duplexify\": \"^4.1.1\", \"extend\": \"^3.0.2\", \"google-auth-library\": \"^9.0.0\", \"html-entities\": \"^2.5.2\", \"retry-request\": \"^7.0.0\", \"teeny-request\": \"^9.0.0\" } }, \"sha512-V7bmBKYQyu0eVG2BFejuUjlBt+zrya6vtsKdY+JxMM/dNntPF41vZ9+LhOshEUH01zOHEqBSvI7Dad7ZS6aUeA==\"],\n\n    \"@google-cloud/paginator\": [\"@google-cloud/paginator@5.0.2\", \"\", { \"dependencies\": { \"arrify\": \"^2.0.0\", \"extend\": \"^3.0.2\" } }, \"sha512-DJS3s0OVH4zFDB1PzjxAsHqJT6sKVbRwwML0ZBP9PbU7Yebtu/7SWMRzvO2J3nUi9pRNITCfu4LJeooM2w4pjg==\"],\n\n    \"@google-cloud/precise-date\": [\"@google-cloud/precise-date@4.0.0\", \"\", {}, \"sha512-1TUx3KdaU3cN7nfCdNf+UVqA/PSX29Cjcox3fZZBtINlRrXVTmUkQnCKv2MbBUbCopbK4olAT1IHl76uZyCiVA==\"],\n\n    \"@google-cloud/projectify\": [\"@google-cloud/projectify@4.0.0\", \"\", {}, \"sha512-MmaX6HeSvyPbWGwFq7mXdo0uQZLGBYCwziiLIGq5JVX+/bdI3SAq6bP98trV5eTWfLuvsMcIC1YJOF2vfteLFA==\"],\n\n    \"@google-cloud/promisify\": [\"@google-cloud/promisify@4.0.0\", \"\", {}, \"sha512-Orxzlfb9c67A15cq2JQEyVc7wEsmFBmHjZWZYQMUyJ1qivXyMwdyNOs9odi79hze+2zqdTtu1E19IM/FtqZ10g==\"],\n\n    \"@google-cloud/vertexai\": [\"@google-cloud/vertexai@1.10.0\", \"\", { \"dependencies\": { \"google-auth-library\": \"^9.1.0\" } }, \"sha512-HqYqoivNtkq59po8m7KI0n+lWKdz4kabENncYQXZCX/hBWJfXtKAfR/2nUQsP+TwSfHKoA7zDL2RrJYIv/j3VQ==\"],\n\n    \"@google/generative-ai\": [\"@google/generative-ai@0.24.1\", \"\", {}, \"sha512-MqO+MLfM6kjxcKoy0p1wRzG3b4ZZXtPI+z2IE26UogS2Cm/XHO+7gGRBh6gcJsOiIVoH93UwKvW4HdgiOZCy9Q==\"],\n\n    \"@grpc/grpc-js\": [\"@grpc/grpc-js@1.13.4\", \"\", { \"dependencies\": { \"@grpc/proto-loader\": \"^0.7.13\", \"@js-sdsl/ordered-map\": \"^4.4.2\" } }, \"sha512-GsFaMXCkMqkKIvwCQjCrwH+GHbPKBjhwo/8ZuUkWHqbI73Kky9I+pQltrlT0+MWpedCoosda53lgjYfyEPgxBg==\"],\n\n    \"@grpc/proto-loader\": [\"@grpc/proto-loader@0.7.15\", \"\", { \"dependencies\": { \"lodash.camelcase\": \"^4.3.0\", \"long\": \"^5.0.0\", \"protobufjs\": \"^7.2.5\", \"yargs\": \"^17.7.2\" }, \"bin\": { \"proto-loader-gen-types\": \"build/bin/proto-loader-gen-types.js\" } }, \"sha512-tMXdRCfYVixjuFK+Hk0Q1s38gV9zDiDJfWL3h1rv4Qc39oILCu1TRTDt7+fGUI8K4G1Fj125Hx/ru3azECWTyQ==\"],\n\n    \"@hookform/resolvers\": [\"@hookform/resolvers@3.10.0\", \"\", { \"peerDependencies\": { \"react-hook-form\": \"^7.0.0\" } }, \"sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==\"],\n\n    \"@humanwhocodes/config-array\": [\"@humanwhocodes/config-array@0.13.0\", \"\", { \"dependencies\": { \"@humanwhocodes/object-schema\": \"^2.0.3\", \"debug\": \"^4.3.1\", \"minimatch\": \"^3.0.5\" } }, \"sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==\"],\n\n    \"@humanwhocodes/module-importer\": [\"@humanwhocodes/module-importer@1.0.1\", \"\", {}, \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\"],\n\n    \"@humanwhocodes/object-schema\": [\"@humanwhocodes/object-schema@2.0.3\", \"\", {}, \"sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==\"],\n\n    \"@iconify/types\": [\"@iconify/types@2.0.0\", \"\", {}, \"sha512-+wluvCrRhXrhyOmRDJ3q8mux9JkKy5SJ/v8ol2tu4FVjyYvtEzkc/3pK15ET6RKg4b4w4BmTk1+gsCUhf21Ykg==\"],\n\n    \"@iconify/utils\": [\"@iconify/utils@2.3.0\", \"\", { \"dependencies\": { \"@antfu/install-pkg\": \"^1.0.0\", \"@antfu/utils\": \"^8.1.0\", \"@iconify/types\": \"^2.0.0\", \"debug\": \"^4.4.0\", \"globals\": \"^15.14.0\", \"kolorist\": \"^1.8.0\", \"local-pkg\": \"^1.0.0\", \"mlly\": \"^1.7.4\" } }, \"sha512-GmQ78prtwYW6EtzXRU1rY+KwOKfz32PD7iJh6Iyqw68GiKuoZ2A6pRtzWONz5VQJbp50mEjXh/7NkumtrAgRKA==\"],\n\n    \"@isaacs/cliui\": [\"@isaacs/cliui@8.0.2\", \"\", { \"dependencies\": { \"string-width\": \"^5.1.2\", \"string-width-cjs\": \"npm:string-width@^4.2.0\", \"strip-ansi\": \"^7.0.1\", \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\", \"wrap-ansi\": \"^8.1.0\", \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\" } }, \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\"],\n\n    \"@isaacs/ttlcache\": [\"@isaacs/ttlcache@1.4.1\", \"\", {}, \"sha512-RQgQ4uQ+pLbqXfOmieB91ejmLwvSgv9nLx6sT6sD83s7umBypgg+OIBOBbEUiJXrfpnp9j0mRhYYdzp9uqq3lA==\"],\n\n    \"@istanbuljs/load-nyc-config\": [\"@istanbuljs/load-nyc-config@1.1.0\", \"\", { \"dependencies\": { \"camelcase\": \"^5.3.1\", \"find-up\": \"^4.1.0\", \"get-package-type\": \"^0.1.0\", \"js-yaml\": \"^3.13.1\", \"resolve-from\": \"^5.0.0\" } }, \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\"],\n\n    \"@istanbuljs/schema\": [\"@istanbuljs/schema@0.1.3\", \"\", {}, \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\"],\n\n    \"@jest/console\": [\"@jest/console@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"slash\": \"^3.0.0\" } }, \"sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==\"],\n\n    \"@jest/core\": [\"@jest/core@29.7.0\", \"\", { \"dependencies\": { \"@jest/console\": \"^29.7.0\", \"@jest/reporters\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"ansi-escapes\": \"^4.2.1\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^3.2.0\", \"exit\": \"^0.1.2\", \"graceful-fs\": \"^4.2.9\", \"jest-changed-files\": \"^29.7.0\", \"jest-config\": \"^29.7.0\", \"jest-haste-map\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-regex-util\": \"^29.6.3\", \"jest-resolve\": \"^29.7.0\", \"jest-resolve-dependencies\": \"^29.7.0\", \"jest-runner\": \"^29.7.0\", \"jest-runtime\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"jest-watcher\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"pretty-format\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"strip-ansi\": \"^6.0.0\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"] }, \"sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==\"],\n\n    \"@jest/create-cache-key-function\": [\"@jest/create-cache-key-function@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\" } }, \"sha512-4QqS3LY5PBmTRHj9sAg1HLoPzqAI0uOX6wI/TRqHIcOxlFidy6YEmCQJk6FSZjNLGCeubDMfmkWL+qaLKhSGQA==\"],\n\n    \"@jest/diff-sequences\": [\"@jest/diff-sequences@30.0.1\", \"\", {}, \"sha512-n5H8QLDJ47QqbCNn5SuFjCRDrOLEZ0h8vAHCK5RL9Ls7Xa8AQLa/YxAc9UjFqoEDM48muwtBGjtMY5cr0PLDCw==\"],\n\n    \"@jest/environment\": [\"@jest/environment@29.7.0\", \"\", { \"dependencies\": { \"@jest/fake-timers\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"jest-mock\": \"^29.7.0\" } }, \"sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==\"],\n\n    \"@jest/expect\": [\"@jest/expect@29.7.0\", \"\", { \"dependencies\": { \"expect\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\" } }, \"sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==\"],\n\n    \"@jest/expect-utils\": [\"@jest/expect-utils@29.7.0\", \"\", { \"dependencies\": { \"jest-get-type\": \"^29.6.3\" } }, \"sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==\"],\n\n    \"@jest/fake-timers\": [\"@jest/fake-timers@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@sinonjs/fake-timers\": \"^10.0.2\", \"@types/node\": \"*\", \"jest-message-util\": \"^29.7.0\", \"jest-mock\": \"^29.7.0\", \"jest-util\": \"^29.7.0\" } }, \"sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==\"],\n\n    \"@jest/get-type\": [\"@jest/get-type@30.0.1\", \"\", {}, \"sha512-AyYdemXCptSRFirI5EPazNxyPwAL0jXt3zceFjaj8NFiKP9pOi0bfXonf6qkf82z2t3QWPeLCWWw4stPBzctLw==\"],\n\n    \"@jest/globals\": [\"@jest/globals@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/expect\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"jest-mock\": \"^29.7.0\" } }, \"sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==\"],\n\n    \"@jest/reporters\": [\"@jest/reporters@29.7.0\", \"\", { \"dependencies\": { \"@bcoe/v8-coverage\": \"^0.2.3\", \"@jest/console\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@jridgewell/trace-mapping\": \"^0.3.18\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"collect-v8-coverage\": \"^1.0.0\", \"exit\": \"^0.1.2\", \"glob\": \"^7.1.3\", \"graceful-fs\": \"^4.2.9\", \"istanbul-lib-coverage\": \"^3.0.0\", \"istanbul-lib-instrument\": \"^6.0.0\", \"istanbul-lib-report\": \"^3.0.0\", \"istanbul-lib-source-maps\": \"^4.0.0\", \"istanbul-reports\": \"^3.1.3\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-worker\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"string-length\": \"^4.0.1\", \"strip-ansi\": \"^6.0.0\", \"v8-to-istanbul\": \"^9.0.1\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"] }, \"sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==\"],\n\n    \"@jest/schemas\": [\"@jest/schemas@29.6.3\", \"\", { \"dependencies\": { \"@sinclair/typebox\": \"^0.27.8\" } }, \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\"],\n\n    \"@jest/source-map\": [\"@jest/source-map@29.6.3\", \"\", { \"dependencies\": { \"@jridgewell/trace-mapping\": \"^0.3.18\", \"callsites\": \"^3.0.0\", \"graceful-fs\": \"^4.2.9\" } }, \"sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==\"],\n\n    \"@jest/test-result\": [\"@jest/test-result@29.7.0\", \"\", { \"dependencies\": { \"@jest/console\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/istanbul-lib-coverage\": \"^2.0.0\", \"collect-v8-coverage\": \"^1.0.0\" } }, \"sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==\"],\n\n    \"@jest/test-sequencer\": [\"@jest/test-sequencer@29.7.0\", \"\", { \"dependencies\": { \"@jest/test-result\": \"^29.7.0\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"slash\": \"^3.0.0\" } }, \"sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==\"],\n\n    \"@jest/transform\": [\"@jest/transform@29.7.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.11.6\", \"@jest/types\": \"^29.6.3\", \"@jridgewell/trace-mapping\": \"^0.3.18\", \"babel-plugin-istanbul\": \"^6.1.1\", \"chalk\": \"^4.0.0\", \"convert-source-map\": \"^2.0.0\", \"fast-json-stable-stringify\": \"^2.1.0\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"jest-regex-util\": \"^29.6.3\", \"jest-util\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"pirates\": \"^4.0.4\", \"slash\": \"^3.0.0\", \"write-file-atomic\": \"^4.0.2\" } }, \"sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\"],\n\n    \"@jest/types\": [\"@jest/types@29.6.3\", \"\", { \"dependencies\": { \"@jest/schemas\": \"^29.6.3\", \"@types/istanbul-lib-coverage\": \"^2.0.0\", \"@types/istanbul-reports\": \"^3.0.0\", \"@types/node\": \"*\", \"@types/yargs\": \"^17.0.8\", \"chalk\": \"^4.0.0\" } }, \"sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\"],\n\n    \"@jitl/quickjs-ffi-types\": [\"@jitl/quickjs-ffi-types@0.31.0\", \"\", {}, \"sha512-1yrgvXlmXH2oNj3eFTrkwacGJbmM0crwipA3ohCrjv52gBeDaD7PsTvFYinlAnqU8iPME3LGP437yk05a2oejw==\"],\n\n    \"@jitl/quickjs-wasmfile-release-sync\": [\"@jitl/quickjs-wasmfile-release-sync@0.31.0\", \"\", { \"dependencies\": { \"@jitl/quickjs-ffi-types\": \"0.31.0\" } }, \"sha512-hYduecOByj9AsAfsJhZh5nA6exokmuFC8cls39+lYmTCGY51bgjJJJwReEu7Ff7vBWaQCL6TeDdVlnp2WYz0jw==\"],\n\n    \"@jridgewell/gen-mapping\": [\"@jridgewell/gen-mapping@0.3.13\", \"\", { \"dependencies\": { \"@jridgewell/sourcemap-codec\": \"^1.5.0\", \"@jridgewell/trace-mapping\": \"^0.3.24\" } }, \"sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==\"],\n\n    \"@jridgewell/resolve-uri\": [\"@jridgewell/resolve-uri@3.1.2\", \"\", {}, \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\"],\n\n    \"@jridgewell/source-map\": [\"@jridgewell/source-map@0.3.11\", \"\", { \"dependencies\": { \"@jridgewell/gen-mapping\": \"^0.3.5\", \"@jridgewell/trace-mapping\": \"^0.3.25\" } }, \"sha512-ZMp1V8ZFcPG5dIWnQLr3NSI1MiCU7UETdS/A0G8V/XWHvJv3ZsFqutJn1Y5RPmAPX6F3BiE397OqveU/9NCuIA==\"],\n\n    \"@jridgewell/sourcemap-codec\": [\"@jridgewell/sourcemap-codec@1.5.5\", \"\", {}, \"sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==\"],\n\n    \"@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.9\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.0.3\", \"@jridgewell/sourcemap-codec\": \"^1.4.10\" } }, \"sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==\"],\n\n    \"@js-sdsl/ordered-map\": [\"@js-sdsl/ordered-map@4.4.2\", \"\", {}, \"sha512-iUKgm52T8HOE/makSxjqoWhe95ZJA1/G1sYsGev2JDKUSS14KAgg1LHb+Ba+IPow0xflbnSkOsZcO08C7w1gYw==\"],\n\n    \"@js-temporal/polyfill\": [\"@js-temporal/polyfill@0.4.4\", \"\", { \"dependencies\": { \"jsbi\": \"^4.3.0\", \"tslib\": \"^2.4.1\" } }, \"sha512-2X6bvghJ/JAoZO52lbgyAPFj8uCflhTo2g7nkFzEQdXd/D8rEeD4HtmTEpmtGCva260fcd66YNXBOYdnmHqSOg==\"],\n\n    \"@mdx-js/esbuild\": [\"@mdx-js/esbuild@2.3.0\", \"\", { \"dependencies\": { \"@mdx-js/mdx\": \"^2.0.0\", \"node-fetch\": \"^3.0.0\", \"vfile\": \"^5.0.0\" }, \"peerDependencies\": { \"esbuild\": \">=0.11.0\" } }, \"sha512-r/vsqsM0E+U4Wr0DK+0EfmABE/eg+8ITW4DjvYdh3ve/tK2safaqHArNnaqbOk1DjYGrhxtoXoGaM3BY8fGBTA==\"],\n\n    \"@mdx-js/loader\": [\"@mdx-js/loader@3.1.0\", \"\", { \"dependencies\": { \"@mdx-js/mdx\": \"^3.0.0\", \"source-map\": \"^0.7.0\" }, \"peerDependencies\": { \"webpack\": \">=5\" }, \"optionalPeers\": [\"webpack\"] }, \"sha512-xU/lwKdOyfXtQGqn3VnJjlDrmKXEvMi1mgYxVmukEUtVycIz1nh7oQ40bKTd4cA7rLStqu0740pnhGYxGoqsCg==\"],\n\n    \"@mdx-js/mdx\": [\"@mdx-js/mdx@3.1.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdx\": \"^2.0.0\", \"collapse-white-space\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"estree-util-scope\": \"^1.0.0\", \"estree-walker\": \"^3.0.0\", \"hast-util-to-jsx-runtime\": \"^2.0.0\", \"markdown-extensions\": \"^2.0.0\", \"recma-build-jsx\": \"^1.0.0\", \"recma-jsx\": \"^1.0.0\", \"recma-stringify\": \"^1.0.0\", \"rehype-recma\": \"^1.0.0\", \"remark-mdx\": \"^3.0.0\", \"remark-parse\": \"^11.0.0\", \"remark-rehype\": \"^11.0.0\", \"source-map\": \"^0.7.0\", \"unified\": \"^11.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\", \"unist-util-stringify-position\": \"^4.0.0\", \"unist-util-visit\": \"^5.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-/QxEhPAvGwbQmy1Px8F899L5Uc2KZ6JtXwlCgJmjSTBedwOZkByYcBG4GceIGPXRDsmfxhHazuS+hlOShRLeDw==\"],\n\n    \"@mdx-js/react\": [\"@mdx-js/react@3.1.0\", \"\", { \"dependencies\": { \"@types/mdx\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \">=16\", \"react\": \">=16\" } }, \"sha512-QjHtSaoameoalGnKDT3FoIl4+9RwyTmo9ZJGBdLOks/YOiWHoRDI3PUwEzOE7kEmGcV3AFcp9K6dYu9rEuKLAQ==\"],\n\n    \"@mediapipe/tasks-vision\": [\"@mediapipe/tasks-vision@0.10.17\", \"\", {}, \"sha512-CZWV/q6TTe8ta61cZXjfnnHsfWIdFhms03M9T7Cnd5y2mdpylJM0rF1qRq+wsQVRMLz1OYPVEBU9ph2Bx8cxrg==\"],\n\n    \"@mermaid-js/parser\": [\"@mermaid-js/parser@0.6.2\", \"\", { \"dependencies\": { \"langium\": \"3.3.1\" } }, \"sha512-+PO02uGF6L6Cs0Bw8RpGhikVvMWEysfAyl27qTlroUB8jSWr1lL0Sf6zi78ZxlSnmgSY2AMMKVgghnN9jTtwkQ==\"],\n\n    \"@monogrid/gainmap-js\": [\"@monogrid/gainmap-js@3.1.0\", \"\", { \"dependencies\": { \"promise-worker-transferable\": \"^1.0.4\" }, \"peerDependencies\": { \"three\": \">= 0.159.0\" } }, \"sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==\"],\n\n    \"@napi-rs/wasm-runtime\": [\"@napi-rs/wasm-runtime@0.2.4\", \"\", { \"dependencies\": { \"@emnapi/core\": \"^1.1.0\", \"@emnapi/runtime\": \"^1.1.0\", \"@tybys/wasm-util\": \"^0.9.0\" } }, \"sha512-9zESzOO5aDByvhIAsOy9TbpZ0Ur2AJbUI7UT73kcUTS2mxAMHOBaa1st/jAymNoCtvrit99kkzT1FZuXVcgfIQ==\"],\n\n    \"@next/env\": [\"@next/env@14.2.13\", \"\", {}, \"sha512-s3lh6K8cbW1h5Nga7NNeXrbe0+2jIIYK9YaA9T7IufDWnZpozdFUp6Hf0d5rNWUKu4fEuSX2rCKlGjCrtylfDw==\"],\n\n    \"@next/eslint-plugin-next\": [\"@next/eslint-plugin-next@14.2.11\", \"\", { \"dependencies\": { \"glob\": \"10.3.10\" } }, \"sha512-7mw+xW7Y03Ph4NTCcAzYe+vu4BNjEHZUfZayyF3Y1D9RX6c5NIe25m1grHEAkyUuaqjRxOYhnCNeglOkIqLkBA==\"],\n\n    \"@next/mdx\": [\"@next/mdx@15.4.6\", \"\", { \"dependencies\": { \"source-map\": \"^0.7.0\" }, \"peerDependencies\": { \"@mdx-js/loader\": \">=0.15.0\", \"@mdx-js/react\": \">=0.15.0\" }, \"optionalPeers\": [\"@mdx-js/loader\", \"@mdx-js/react\"] }, \"sha512-PpJcNWNDq3WctJI2LY7Jur6qTdWklZ3BmbBlS9zG9MvmphcU91MoF/udPmRS1huRSVibGGteXMELu8MXYxjU9g==\"],\n\n    \"@next/swc-darwin-arm64\": [\"@next/swc-darwin-arm64@14.2.13\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-IkAmQEa2Htq+wHACBxOsslt+jMoV3msvxCn0WFSfJSkv/scy+i/EukBKNad36grRxywaXUYJc9mxEGkeIs8Bzg==\"],\n\n    \"@next/swc-darwin-x64\": [\"@next/swc-darwin-x64@14.2.13\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-Dv1RBGs2TTjkwEnFMVL5XIfJEavnLqqwYSD6LXgTPdEy/u6FlSrLBSSfe1pcfqhFEXRAgVL3Wpjibe5wXJzWog==\"],\n\n    \"@next/swc-linux-arm64-gnu\": [\"@next/swc-linux-arm64-gnu@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-yB1tYEFFqo4ZNWkwrJultbsw7NPAAxlPXURXioRl9SdW6aIefOLS+0TEsKrWBtbJ9moTDgU3HRILL6QBQnMevg==\"],\n\n    \"@next/swc-linux-arm64-musl\": [\"@next/swc-linux-arm64-musl@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-v5jZ/FV/eHGoWhMKYrsAweQ7CWb8xsWGM/8m1mwwZQ/sutJjoFaXchwK4pX8NqwImILEvQmZWyb8pPTcP7htWg==\"],\n\n    \"@next/swc-linux-x64-gnu\": [\"@next/swc-linux-x64-gnu@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-aVc7m4YL7ViiRv7SOXK3RplXzOEe/qQzRA5R2vpXboHABs3w8vtFslGTz+5tKiQzWUmTmBNVW0UQdhkKRORmGA==\"],\n\n    \"@next/swc-linux-x64-musl\": [\"@next/swc-linux-x64-musl@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-4wWY7/OsSaJOOKvMsu1Teylku7vKyTuocvDLTZQq0TYv9OjiYYWt63PiE1nTuZnqQ4RPvME7Xai+9enoiN0Wrg==\"],\n\n    \"@next/swc-win32-arm64-msvc\": [\"@next/swc-win32-arm64-msvc@14.2.13\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-uP1XkqCqV2NVH9+g2sC7qIw+w2tRbcMiXFEbMihkQ8B1+V6m28sshBwAB0SDmOe0u44ne1vFU66+gx/28RsBVQ==\"],\n\n    \"@next/swc-win32-ia32-msvc\": [\"@next/swc-win32-ia32-msvc@14.2.13\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-V26ezyjPqQpDBV4lcWIh8B/QICQ4v+M5Bo9ykLN+sqeKKBxJVDpEc6biDVyluTXTC40f5IqCU0ttth7Es2ZuMw==\"],\n\n    \"@next/swc-win32-x64-msvc\": [\"@next/swc-win32-x64-msvc@14.2.13\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-WwzOEAFBGhlDHE5Z73mNU8CO8mqMNLqaG+AO9ETmzdCQlJhVtWZnOl2+rqgVQS+YHunjOWptdFmNfbpwcUuEsw==\"],\n\n    \"@nodelib/fs.scandir\": [\"@nodelib/fs.scandir@2.1.5\", \"\", { \"dependencies\": { \"@nodelib/fs.stat\": \"2.0.5\", \"run-parallel\": \"^1.1.9\" } }, \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\"],\n\n    \"@nodelib/fs.stat\": [\"@nodelib/fs.stat@2.0.5\", \"\", {}, \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\"],\n\n    \"@nodelib/fs.walk\": [\"@nodelib/fs.walk@1.2.8\", \"\", { \"dependencies\": { \"@nodelib/fs.scandir\": \"2.1.5\", \"fastq\": \"^1.6.0\" } }, \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\"],\n\n    \"@nolyfill/is-core-module\": [\"@nolyfill/is-core-module@1.0.39\", \"\", {}, \"sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==\"],\n\n    \"@nx/devkit\": [\"@nx/devkit@20.8.2\", \"\", { \"dependencies\": { \"ejs\": \"^3.1.7\", \"enquirer\": \"~2.3.6\", \"ignore\": \"^5.0.4\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.3\", \"tmp\": \"~0.2.1\", \"tslib\": \"^2.3.0\", \"yargs-parser\": \"21.1.1\" }, \"peerDependencies\": { \"nx\": \">= 19 <= 21\" } }, \"sha512-rr9p2/tZDQivIpuBUpZaFBK6bZ+b5SAjZk75V4tbCUqGW3+5OPuVvBPm+X+7PYwUF6rwSpewxkjWNeGskfCe+Q==\"],\n\n    \"@nx/nx-darwin-arm64\": [\"@nx/nx-darwin-arm64@21.3.11\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-qXZrW6kfsfGG9n4cWugR2v8ys7P1SsbQuFahlbNSTd7g+ZxozaOnc7tyxW9XuY84KQ35HwP/QSu1E13fK5CXwQ==\"],\n\n    \"@nx/nx-darwin-x64\": [\"@nx/nx-darwin-x64@21.3.11\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-6NJEIGRITpFZYptJtr/wdnVuidAS/wONMMSwX5rgAqh5A9teI0vxZVOgG6n5f6NQyqEDvZ9ytcIvLsQWA4kJFg==\"],\n\n    \"@nx/nx-freebsd-x64\": [\"@nx/nx-freebsd-x64@21.3.11\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-9VZOM9mutzuZCUgijHXrIl3NgKt2CWuH/awLqDS8ijhLs6WfI5TYTa+mFwx90dfZZ4y/jy6XWXa2Ee3OShf7Hg==\"],\n\n    \"@nx/nx-linux-arm-gnueabihf\": [\"@nx/nx-linux-arm-gnueabihf@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-a05tAySKDEWt0TGoSnWp/l5+HL/CDJQkHfI9pXho85oDSkVRzhOInAn1EeZB/F+Q3PnJFsMHMhbuu2/nm3uYJA==\"],\n\n    \"@nx/nx-linux-arm64-gnu\": [\"@nx/nx-linux-arm64-gnu@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-MPeivf0ptNpzQYvww6zHIqVbE5dTT2isl/WqzGyy7NgSeYDpFXmouDCQaeKxo5WytMVRCvCw/NnWTQuCK6TjnA==\"],\n\n    \"@nx/nx-linux-arm64-musl\": [\"@nx/nx-linux-arm64-musl@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-/hJpc4VJsbxDEreXt5Ka9HJ3TBEHgIa9y/i+H9MmWOeapCdH1Edhx58Heuv9OaX7kK8Y8q0cSicv0dJCghiTjA==\"],\n\n    \"@nx/nx-linux-x64-gnu\": [\"@nx/nx-linux-x64-gnu@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-pTBHuloqTxpTHa/fdKjHkFFsfW16mEcTp37HDtoQpjPfcd9nO8CYO8OClaewr9khNqCnSbCLfSoIg/alnb7BWw==\"],\n\n    \"@nx/nx-linux-x64-musl\": [\"@nx/nx-linux-x64-musl@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-OhFjURB68rd6xld8t8fiNpopF2E7v+8/jfbpsku9c0gdV2UhzoxCeZwooe7qhQjCcjVO8JNOs4dAf7qs1VtpMw==\"],\n\n    \"@nx/nx-win32-arm64-msvc\": [\"@nx/nx-win32-arm64-msvc@21.3.11\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-pGE2Td13oEj7aeogwCL+2fjmpabQVSduKfGOTlt4YoMlM0w0bXYSWqwiGBMKbMA50qkhnVapwwkuWF38PgCIxg==\"],\n\n    \"@nx/nx-win32-x64-msvc\": [\"@nx/nx-win32-x64-msvc@21.3.11\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-KJqLL/Zyx96hs+7pKbo/fsU7ZTFSLeZLnYQu05o6fvJJ5I1+p85t212/7vkbKKWJncyMospQdzLr3zLG3A/u8A==\"],\n\n    \"@oclif/core\": [\"@oclif/core@4.5.2\", \"\", { \"dependencies\": { \"ansi-escapes\": \"^4.3.2\", \"ansis\": \"^3.17.0\", \"clean-stack\": \"^3.0.1\", \"cli-spinners\": \"^2.9.2\", \"debug\": \"^4.4.0\", \"ejs\": \"^3.1.10\", \"get-package-type\": \"^0.1.0\", \"indent-string\": \"^4.0.0\", \"is-wsl\": \"^2.2.0\", \"lilconfig\": \"^3.1.3\", \"minimatch\": \"^9.0.5\", \"semver\": \"^7.6.3\", \"string-width\": \"^4.2.3\", \"supports-color\": \"^8\", \"tinyglobby\": \"^0.2.14\", \"widest-line\": \"^3.1.0\", \"wordwrap\": \"^1.0.0\", \"wrap-ansi\": \"^7.0.0\" } }, \"sha512-eQcKyrEcDYeZJKu4vUWiu0ii/1Gfev6GF4FsLSgNez5/+aQyAUCjg3ZWlurf491WiYZTXCWyKAxyPWk8DKv2MA==\"],\n\n    \"@oclif/errors\": [\"@oclif/errors@1.3.6\", \"\", { \"dependencies\": { \"clean-stack\": \"^3.0.0\", \"fs-extra\": \"^8.1\", \"indent-string\": \"^4.0.0\", \"strip-ansi\": \"^6.0.1\", \"wrap-ansi\": \"^7.0.0\" } }, \"sha512-fYaU4aDceETd89KXP+3cLyg9EHZsLD3RxF2IU9yxahhBpspWjkWi3Dy3bTgcwZ3V47BgxQaGapzJWDM33XIVDQ==\"],\n\n    \"@oclif/linewrap\": [\"@oclif/linewrap@1.0.0\", \"\", {}, \"sha512-Ups2dShK52xXa8w6iBWLgcjPJWjais6KPJQq3gQ/88AY6BXoTX+MIGFPrWQO1KLMiQfoTpcLnUwloN4brrVUHw==\"],\n\n    \"@oclif/parser\": [\"@oclif/parser@3.8.17\", \"\", { \"dependencies\": { \"@oclif/errors\": \"^1.3.6\", \"@oclif/linewrap\": \"^1.0.0\", \"chalk\": \"^4.1.0\", \"tslib\": \"^2.6.2\" } }, \"sha512-l04iSd0xoh/16TGVpXb81Gg3z7tlQGrEup16BrVLsZBK6SEYpYHRJZnM32BwZrHI97ZSFfuSwVlzoo6HdsaK8A==\"],\n\n    \"@openrouter/ai-sdk-provider\": [\"@openrouter/ai-sdk-provider@1.1.2\", \"\", { \"peerDependencies\": { \"ai\": \"^5.0.0\", \"zod\": \"^3.24.1 || ^v4\" } }, \"sha512-cfiKVpNygGFaJojBHFvtTf7UiF458Xh9yPcTg4FXF7bGYN5V33Rxx9dXNE12fjv6lHeC5C7jwQHDrzUIFol1iQ==\"],\n\n    \"@opentelemetry/api\": [\"@opentelemetry/api@1.9.0\", \"\", {}, \"sha512-3giAOQvZiH5F9bMlMiv8+GSPMeqg0dbaeo58/0SlA9sxSqZhnUtxzX9/2FzyhS9sWQf5S0GJE0AKBrFqjpeYcg==\"],\n\n    \"@opentelemetry/api-logs\": [\"@opentelemetry/api-logs@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-9BJ8lMcOzEN0lu+Qji801y707oFO4xT3db6cosPvl+k7ItUHKN5ofWqtSbM9gbt1H4JJ/4/2TVrqI9Rq7hNv6Q==\"],\n\n    \"@opentelemetry/context-async-hooks\": [\"@opentelemetry/context-async-hooks@1.30.1\", \"\", { \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-s5vvxXPVdjqS3kTLKMeBMvop9hbWkwzBpu+mUO2M7sZtlkyDJGwFe33wRKnbaYDo8ExRVBIIdwIGrqpxHuKttA==\"],\n\n    \"@opentelemetry/core\": [\"@opentelemetry/core@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.28.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-OOCM2C/QIURhJMuKaekP3TRBxBKxG/TWWA0TL2J6nXUtDnuCtccy49LUJF8xPFXMX+0LMcxFpCo8M9cGY1W6rQ==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc\": [\"@opentelemetry/exporter-trace-otlp-grpc@0.39.1\", \"\", { \"dependencies\": { \"@grpc/grpc-js\": \"^1.7.1\", \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/otlp-grpc-exporter-base\": \"0.39.1\", \"@opentelemetry/otlp-transformer\": \"0.39.1\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/sdk-trace-base\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-l5RhLKx6U+yuLhMrtgavTDthX50E1mZM3/SSySC7OPZiArFHV/b/9x9jxAzrOgIQUDxyj4N0V9aLKSA2t7Qzxg==\"],\n\n    \"@opentelemetry/otlp-exporter-base\": [\"@opentelemetry/otlp-exporter-base@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-Pv5X8fbi6jD/RJBePyn7MnCSuE6MbPB6dl+7YYBWJ5RcMGYMwvLXjd4h2jWsPV2TSUg38H/RoSP0aXvQ06Y7iw==\"],\n\n    \"@opentelemetry/otlp-grpc-exporter-base\": [\"@opentelemetry/otlp-grpc-exporter-base@0.39.1\", \"\", { \"dependencies\": { \"@grpc/grpc-js\": \"^1.7.1\", \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/otlp-exporter-base\": \"0.39.1\", \"protobufjs\": \"^7.2.2\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-u3ErFRQqQFKjjIMuwLWxz/tLPYInfmiAmSy//fGSCzCh2ZdJgqQjMOAxBgqFtCF2xFL+OmMhyuC2ThMzceGRWA==\"],\n\n    \"@opentelemetry/otlp-transformer\": [\"@opentelemetry/otlp-transformer@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/api-logs\": \"0.39.1\", \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/sdk-logs\": \"0.39.1\", \"@opentelemetry/sdk-metrics\": \"1.13.0\", \"@opentelemetry/sdk-trace-base\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.3.0 <1.5.0\" } }, \"sha512-0hgVnXXz5efI382B/24NxD4b6Zxlh7nxCdJkxkdmQMbn0yRiwoq/ZT+QG8eUL6JNzsBAV1WJlF5aJNsL8skHvw==\"],\n\n    \"@opentelemetry/propagator-b3\": [\"@opentelemetry/propagator-b3@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-oATwWWDIJzybAZ4pO76ATN5N6FFbOA1otibAVlS8v90B4S1wClnhRUk7K+2CHAwN1JKYuj4jh/lpCEG5BAqFuQ==\"],\n\n    \"@opentelemetry/propagator-jaeger\": [\"@opentelemetry/propagator-jaeger@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-Pj/BfnYEKIOImirH76M4hDaBSx6HyZ2CXUqk+Kj02m6BB80c/yo4BdWkn/1gDFfU+YPY+bPR2U0DKBfdxCKwmg==\"],\n\n    \"@opentelemetry/resources\": [\"@opentelemetry/resources@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\", \"@opentelemetry/semantic-conventions\": \"1.28.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-5UxZqiAgLYGFjS4s9qm5mBVo433u+dSPUFWVWXmLAD4wB65oMCoXaJP1KJa9DIYYMeHu3z4BZcStG3LC593cWA==\"],\n\n    \"@opentelemetry/sdk-logs\": [\"@opentelemetry/sdk-logs@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.4.0 <1.5.0\", \"@opentelemetry/api-logs\": \">=0.38.0\" } }, \"sha512-/gmgKfZ1ZVFporKuwsewqIyvaUIGpv76JZ7lBpHQQPb37IMpaXO6pdqFI4ebHAWfNIm3akMyhmdtzivcgF3lgw==\"],\n\n    \"@opentelemetry/sdk-metrics\": [\"@opentelemetry/sdk-metrics@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"lodash.merge\": \"4.6.2\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.3.0 <1.5.0\" } }, \"sha512-MOjZX6AnSOqLliCcZUrb+DQKjAWXBiGeICGbHAGe5w0BB18PJIeIo995lO5JSaFfHpmUMgJButTPfJJD27W3Vg==\"],\n\n    \"@opentelemetry/sdk-trace-base\": [\"@opentelemetry/sdk-trace-base@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\", \"@opentelemetry/resources\": \"1.30.1\", \"@opentelemetry/semantic-conventions\": \"1.28.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-jVPgBbH1gCy2Lb7X0AVQ8XAfgg0pJ4nvl8/IiQA6nxOsPvS+0zMJaFSs2ltXe0J6C8dqjcnpyqINDJmU30+uOg==\"],\n\n    \"@opentelemetry/sdk-trace-node\": [\"@opentelemetry/sdk-trace-node@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/context-async-hooks\": \"1.30.1\", \"@opentelemetry/core\": \"1.30.1\", \"@opentelemetry/propagator-b3\": \"1.30.1\", \"@opentelemetry/propagator-jaeger\": \"1.30.1\", \"@opentelemetry/sdk-trace-base\": \"1.30.1\", \"semver\": \"^7.5.2\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-cBjYOINt1JxXdpw1e5MlHmFRc5fgj4GW/86vsKFxJCJ8AL4PdVtYH41gWwl4qd4uQjqEL1oJVrXkSy5cnduAnQ==\"],\n\n    \"@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.36.0\", \"\", {}, \"sha512-TtxJSRD8Ohxp6bKkhrm27JRHAxPczQA7idtcTOMYI+wQRRrfgqxHv1cFbCApcSnNjtXkmzFozn6jQtFrOmbjPQ==\"],\n\n    \"@panva/hkdf\": [\"@panva/hkdf@1.2.1\", \"\", {}, \"sha512-6oclG6Y3PiDFcoyk8srjLfVKyMfVCKJ27JwNPViuXziFpmdz+MZnZN/aKY0JGXgYuO/VghU0jcOAZgWXZ1Dmrw==\"],\n\n    \"@pkgjs/parseargs\": [\"@pkgjs/parseargs@0.11.0\", \"\", {}, \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\"],\n\n    \"@pkgr/core\": [\"@pkgr/core@0.2.9\", \"\", {}, \"sha512-QNqXyfVS2wm9hweSYD2O7F0G06uurj9kZ96TRQE5Y9hU7+tgdZwIkbAKc5Ocy1HxEY2kuDQa6cQ1WRs/O5LFKA==\"],\n\n    \"@playwright/test\": [\"@playwright/test@1.54.2\", \"\", { \"dependencies\": { \"playwright\": \"1.54.2\" }, \"bin\": { \"playwright\": \"cli.js\" } }, \"sha512-A+znathYxPf+72riFd1r1ovOLqsIIB0jKIoPjyK2kqEIe30/6jF6BC7QNluHuwUmsD2tv1XZVugN8GqfTMOxsA==\"],\n\n    \"@protobufjs/aspromise\": [\"@protobufjs/aspromise@1.1.2\", \"\", {}, \"sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==\"],\n\n    \"@protobufjs/base64\": [\"@protobufjs/base64@1.1.2\", \"\", {}, \"sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==\"],\n\n    \"@protobufjs/codegen\": [\"@protobufjs/codegen@2.0.4\", \"\", {}, \"sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==\"],\n\n    \"@protobufjs/eventemitter\": [\"@protobufjs/eventemitter@1.1.0\", \"\", {}, \"sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==\"],\n\n    \"@protobufjs/fetch\": [\"@protobufjs/fetch@1.1.0\", \"\", { \"dependencies\": { \"@protobufjs/aspromise\": \"^1.1.1\", \"@protobufjs/inquire\": \"^1.1.0\" } }, \"sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==\"],\n\n    \"@protobufjs/float\": [\"@protobufjs/float@1.0.2\", \"\", {}, \"sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==\"],\n\n    \"@protobufjs/inquire\": [\"@protobufjs/inquire@1.1.0\", \"\", {}, \"sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==\"],\n\n    \"@protobufjs/path\": [\"@protobufjs/path@1.1.2\", \"\", {}, \"sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==\"],\n\n    \"@protobufjs/pool\": [\"@protobufjs/pool@1.1.0\", \"\", {}, \"sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==\"],\n\n    \"@protobufjs/utf8\": [\"@protobufjs/utf8@1.1.0\", \"\", {}, \"sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==\"],\n\n    \"@puppeteer/browsers\": [\"@puppeteer/browsers@2.10.6\", \"\", { \"dependencies\": { \"debug\": \"^4.4.1\", \"extract-zip\": \"^2.0.1\", \"progress\": \"^2.0.3\", \"proxy-agent\": \"^6.5.0\", \"semver\": \"^7.7.2\", \"tar-fs\": \"^3.1.0\", \"yargs\": \"^17.7.2\" }, \"bin\": { \"browsers\": \"lib/cjs/main-cli.js\" } }, \"sha512-pHUn6ZRt39bP3698HFQlu2ZHCkS/lPcpv7fVQcGBSzNNygw171UXAKrCUhy+TEMw4lEttOKDgNpb04hwUAJeiQ==\"],\n\n    \"@radix-ui/number\": [\"@radix-ui/number@1.1.1\", \"\", {}, \"sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==\"],\n\n    \"@radix-ui/primitive\": [\"@radix-ui/primitive@1.1.2\", \"\", {}, \"sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==\"],\n\n    \"@radix-ui/react-arrow\": [\"@radix-ui/react-arrow@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==\"],\n\n    \"@radix-ui/react-collapsible\": [\"@radix-ui/react-collapsible@1.1.11\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==\"],\n\n    \"@radix-ui/react-collection\": [\"@radix-ui/react-collection@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==\"],\n\n    \"@radix-ui/react-compose-refs\": [\"@radix-ui/react-compose-refs@1.1.2\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==\"],\n\n    \"@radix-ui/react-context\": [\"@radix-ui/react-context@1.1.2\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==\"],\n\n    \"@radix-ui/react-dialog\": [\"@radix-ui/react-dialog@1.1.14\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-focus-guards\": \"1.1.2\", \"@radix-ui/react-focus-scope\": \"1.1.7\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"aria-hidden\": \"^1.2.4\", \"react-remove-scroll\": \"^2.6.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==\"],\n\n    \"@radix-ui/react-direction\": [\"@radix-ui/react-direction@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==\"],\n\n    \"@radix-ui/react-dismissable-layer\": [\"@radix-ui/react-dismissable-layer@1.1.10\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-escape-keydown\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==\"],\n\n    \"@radix-ui/react-dropdown-menu\": [\"@radix-ui/react-dropdown-menu@2.1.15\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-menu\": \"2.1.15\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==\"],\n\n    \"@radix-ui/react-focus-guards\": [\"@radix-ui/react-focus-guards@1.1.2\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==\"],\n\n    \"@radix-ui/react-focus-scope\": [\"@radix-ui/react-focus-scope@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==\"],\n\n    \"@radix-ui/react-id\": [\"@radix-ui/react-id@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==\"],\n\n    \"@radix-ui/react-label\": [\"@radix-ui/react-label@2.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==\"],\n\n    \"@radix-ui/react-menu\": [\"@radix-ui/react-menu@2.1.15\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-focus-guards\": \"1.1.2\", \"@radix-ui/react-focus-scope\": \"1.1.7\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-popper\": \"1.2.7\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-roving-focus\": \"1.1.10\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"aria-hidden\": \"^1.2.4\", \"react-remove-scroll\": \"^2.6.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==\"],\n\n    \"@radix-ui/react-popper\": [\"@radix-ui/react-popper@1.2.7\", \"\", { \"dependencies\": { \"@floating-ui/react-dom\": \"^2.0.0\", \"@radix-ui/react-arrow\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-use-rect\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\", \"@radix-ui/rect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==\"],\n\n    \"@radix-ui/react-portal\": [\"@radix-ui/react-portal@1.1.9\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==\"],\n\n    \"@radix-ui/react-presence\": [\"@radix-ui/react-presence@1.1.4\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==\"],\n\n    \"@radix-ui/react-primitive\": [\"@radix-ui/react-primitive@2.1.3\", \"\", { \"dependencies\": { \"@radix-ui/react-slot\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==\"],\n\n    \"@radix-ui/react-progress\": [\"@radix-ui/react-progress@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==\"],\n\n    \"@radix-ui/react-radio-group\": [\"@radix-ui/react-radio-group@1.3.7\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-roving-focus\": \"1.1.10\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-9w5XhD0KPOrm92OTTE0SysH3sYzHsSTHNvZgUBo/VZ80VdYyB5RneDbc0dKpURS24IxkoFRu/hI0i4XyfFwY6g==\"],\n\n    \"@radix-ui/react-roving-focus\": [\"@radix-ui/react-roving-focus@1.1.10\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==\"],\n\n    \"@radix-ui/react-select\": [\"@radix-ui/react-select@2.2.5\", \"\", { \"dependencies\": { \"@radix-ui/number\": \"1.1.1\", \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-focus-guards\": \"1.1.2\", \"@radix-ui/react-focus-scope\": \"1.1.7\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-popper\": \"1.2.7\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-visually-hidden\": \"1.2.3\", \"aria-hidden\": \"^1.2.4\", \"react-remove-scroll\": \"^2.6.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==\"],\n\n    \"@radix-ui/react-separator\": [\"@radix-ui/react-separator@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==\"],\n\n    \"@radix-ui/react-slider\": [\"@radix-ui/react-slider@1.3.5\", \"\", { \"dependencies\": { \"@radix-ui/number\": \"1.1.1\", \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-rkfe2pU2NBAYfGaxa3Mqosi7VZEWX5CxKaanRv0vZd4Zhl9fvQrg0VM93dv3xGLGfrHuoTRF3JXH8nb9g+B3fw==\"],\n\n    \"@radix-ui/react-slot\": [\"@radix-ui/react-slot@1.2.3\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==\"],\n\n    \"@radix-ui/react-switch\": [\"@radix-ui/react-switch@1.2.5\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==\"],\n\n    \"@radix-ui/react-tabs\": [\"@radix-ui/react-tabs@1.1.12\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-roving-focus\": \"1.1.10\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==\"],\n\n    \"@radix-ui/react-toast\": [\"@radix-ui/react-toast@1.2.14\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-visually-hidden\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-nAP5FBxBJGQ/YfUB+r+O6USFVkWq3gAInkxyEnmvEV5jtSbfDhfa4hwX8CraCnbjMLsE7XSf/K75l9xXY7joWg==\"],\n\n    \"@radix-ui/react-tooltip\": [\"@radix-ui/react-tooltip@1.2.7\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-popper\": \"1.2.7\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-visually-hidden\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==\"],\n\n    \"@radix-ui/react-use-callback-ref\": [\"@radix-ui/react-use-callback-ref@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==\"],\n\n    \"@radix-ui/react-use-controllable-state\": [\"@radix-ui/react-use-controllable-state@1.2.2\", \"\", { \"dependencies\": { \"@radix-ui/react-use-effect-event\": \"0.0.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==\"],\n\n    \"@radix-ui/react-use-effect-event\": [\"@radix-ui/react-use-effect-event@0.0.2\", \"\", { \"dependencies\": { \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==\"],\n\n    \"@radix-ui/react-use-escape-keydown\": [\"@radix-ui/react-use-escape-keydown@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/react-use-callback-ref\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==\"],\n\n    \"@radix-ui/react-use-layout-effect\": [\"@radix-ui/react-use-layout-effect@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==\"],\n\n    \"@radix-ui/react-use-previous\": [\"@radix-ui/react-use-previous@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==\"],\n\n    \"@radix-ui/react-use-rect\": [\"@radix-ui/react-use-rect@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/rect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==\"],\n\n    \"@radix-ui/react-use-size\": [\"@radix-ui/react-use-size@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==\"],\n\n    \"@radix-ui/react-visually-hidden\": [\"@radix-ui/react-visually-hidden@1.2.3\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==\"],\n\n    \"@radix-ui/rect\": [\"@radix-ui/rect@1.1.1\", \"\", {}, \"sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==\"],\n\n    \"@react-native/assets-registry\": [\"@react-native/assets-registry@0.81.0\", \"\", {}, \"sha512-rZs8ziQ1YRV3Z5Mw5AR7YcgI3q1Ya9NIx6nyuZAT9wDSSjspSi+bww+Hargh/a4JfV2Ajcxpn9X9UiFJr1ddPw==\"],\n\n    \"@react-native/babel-plugin-codegen\": [\"@react-native/babel-plugin-codegen@0.81.0\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.25.3\", \"@react-native/codegen\": \"0.81.0\" } }, \"sha512-MEMlW91+2Kk9GiObRP1Nc6oTdiyvmSEbPMSC6kzUzDyouxnh5/x28uyNySmB2nb6ivcbmQ0lxaU059+CZSkKXQ==\"],\n\n    \"@react-native/babel-preset\": [\"@react-native/babel-preset@0.81.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@babel/plugin-proposal-export-default-from\": \"^7.24.7\", \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\", \"@babel/plugin-syntax-export-default-from\": \"^7.24.7\", \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\", \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\", \"@babel/plugin-transform-arrow-functions\": \"^7.24.7\", \"@babel/plugin-transform-async-generator-functions\": \"^7.25.4\", \"@babel/plugin-transform-async-to-generator\": \"^7.24.7\", \"@babel/plugin-transform-block-scoping\": \"^7.25.0\", \"@babel/plugin-transform-class-properties\": \"^7.25.4\", \"@babel/plugin-transform-classes\": \"^7.25.4\", \"@babel/plugin-transform-computed-properties\": \"^7.24.7\", \"@babel/plugin-transform-destructuring\": \"^7.24.8\", \"@babel/plugin-transform-flow-strip-types\": \"^7.25.2\", \"@babel/plugin-transform-for-of\": \"^7.24.7\", \"@babel/plugin-transform-function-name\": \"^7.25.1\", \"@babel/plugin-transform-literals\": \"^7.25.2\", \"@babel/plugin-transform-logical-assignment-operators\": \"^7.24.7\", \"@babel/plugin-transform-modules-commonjs\": \"^7.24.8\", \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.24.7\", \"@babel/plugin-transform-nullish-coalescing-operator\": \"^7.24.7\", \"@babel/plugin-transform-numeric-separator\": \"^7.24.7\", \"@babel/plugin-transform-object-rest-spread\": \"^7.24.7\", \"@babel/plugin-transform-optional-catch-binding\": \"^7.24.7\", \"@babel/plugin-transform-optional-chaining\": \"^7.24.8\", \"@babel/plugin-transform-parameters\": \"^7.24.7\", \"@babel/plugin-transform-private-methods\": \"^7.24.7\", \"@babel/plugin-transform-private-property-in-object\": \"^7.24.7\", \"@babel/plugin-transform-react-display-name\": \"^7.24.7\", \"@babel/plugin-transform-react-jsx\": \"^7.25.2\", \"@babel/plugin-transform-react-jsx-self\": \"^7.24.7\", \"@babel/plugin-transform-react-jsx-source\": \"^7.24.7\", \"@babel/plugin-transform-regenerator\": \"^7.24.7\", \"@babel/plugin-transform-runtime\": \"^7.24.7\", \"@babel/plugin-transform-shorthand-properties\": \"^7.24.7\", \"@babel/plugin-transform-spread\": \"^7.24.7\", \"@babel/plugin-transform-sticky-regex\": \"^7.24.7\", \"@babel/plugin-transform-typescript\": \"^7.25.2\", \"@babel/plugin-transform-unicode-regex\": \"^7.24.7\", \"@babel/template\": \"^7.25.0\", \"@react-native/babel-plugin-codegen\": \"0.81.0\", \"babel-plugin-syntax-hermes-parser\": \"0.29.1\", \"babel-plugin-transform-flow-enums\": \"^0.0.2\", \"react-refresh\": \"^0.14.0\" } }, \"sha512-RKMgCUGsso/2b32kgg24lB68LJ6qr2geLoSQTbisY6Usye0uXeXCgbZZDbILIX9upL4uzU4staMldRZ0v08F1g==\"],\n\n    \"@react-native/codegen\": [\"@react-native/codegen@0.81.0\", \"\", { \"dependencies\": { \"glob\": \"^7.1.1\", \"hermes-parser\": \"0.29.1\", \"invariant\": \"^2.2.4\", \"nullthrows\": \"^1.1.1\", \"yargs\": \"^17.6.2\" }, \"peerDependencies\": { \"@babel/core\": \"*\" } }, \"sha512-gPFutgtj8YqbwKKt3YpZKamUBGd9YZJV51Jq2aiDZ9oThkg1frUBa20E+Jdi7jKn982wjBMxAklAR85QGQ4xMA==\"],\n\n    \"@react-native/community-cli-plugin\": [\"@react-native/community-cli-plugin@0.81.0\", \"\", { \"dependencies\": { \"@react-native/dev-middleware\": \"0.81.0\", \"debug\": \"^4.4.0\", \"invariant\": \"^2.2.4\", \"metro\": \"^0.83.1\", \"metro-config\": \"^0.83.1\", \"metro-core\": \"^0.83.1\", \"semver\": \"^7.1.3\" }, \"peerDependencies\": { \"@react-native-community/cli\": \"*\", \"@react-native/metro-config\": \"*\" }, \"optionalPeers\": [\"@react-native-community/cli\"] }, \"sha512-n04ACkCaLR54NmA/eWiDpjC16pHr7+yrbjQ6OEdRoXbm5EfL8FEre2kDAci7pfFdiSMpxdRULDlKpfQ+EV/GAQ==\"],\n\n    \"@react-native/debugger-frontend\": [\"@react-native/debugger-frontend@0.81.0\", \"\", {}, \"sha512-N/8uL2CGQfwiQRYFUNfmaYxRDSoSeOmFb56rb0PDnP3XbS5+X9ee7X4bdnukNHLGfkRdH7sVjlB8M5zE8XJOhw==\"],\n\n    \"@react-native/dev-middleware\": [\"@react-native/dev-middleware@0.81.0\", \"\", { \"dependencies\": { \"@isaacs/ttlcache\": \"^1.4.1\", \"@react-native/debugger-frontend\": \"0.81.0\", \"chrome-launcher\": \"^0.15.2\", \"chromium-edge-launcher\": \"^0.2.0\", \"connect\": \"^3.6.5\", \"debug\": \"^4.4.0\", \"invariant\": \"^2.2.4\", \"nullthrows\": \"^1.1.1\", \"open\": \"^7.0.3\", \"serve-static\": \"^1.16.2\", \"ws\": \"^6.2.3\" } }, \"sha512-J/HeC/+VgRyGECPPr9rAbe5S0OL6MCIrvrC/kgNKSME5+ZQLCiTpt3pdAoAMXwXiF9a02Nmido0DnyM1acXTIA==\"],\n\n    \"@react-native/gradle-plugin\": [\"@react-native/gradle-plugin@0.81.0\", \"\", {}, \"sha512-LGNtPXO1RKLws5ORRb4Q4YULi2qxM4qZRuARtwqM/1f2wyZVggqapoV0OXlaXaz+GiEd2ll3ROE4CcLN6J93jg==\"],\n\n    \"@react-native/js-polyfills\": [\"@react-native/js-polyfills@0.81.0\", \"\", {}, \"sha512-whXZWIogzoGpqdyTjqT89M6DXmlOkWqNpWoVOAwVi8XFCMO+L7WTk604okIgO6gdGZcP1YtFpQf9JusbKrv/XA==\"],\n\n    \"@react-native/metro-babel-transformer\": [\"@react-native/metro-babel-transformer@0.81.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@react-native/babel-preset\": \"0.81.0\", \"hermes-parser\": \"0.29.1\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-Mwovr4jJ3JTnbHEQLhdcMvS82LjijpqCydXl1aH2N16WVCrE5oSNFiqTt6NpZBw9zkJX7nijsY+xeCy6m+KK3Q==\"],\n\n    \"@react-native/metro-config\": [\"@react-native/metro-config@0.81.0\", \"\", { \"dependencies\": { \"@react-native/js-polyfills\": \"0.81.0\", \"@react-native/metro-babel-transformer\": \"0.81.0\", \"metro-config\": \"^0.83.1\", \"metro-runtime\": \"^0.83.1\" } }, \"sha512-5eqLP4TCERHGRYDJSZa//O98CGDFNNEwHVvhs65Msfy6hAoSdw5pAAuTrsQwmbTBp0Fkvu7Bx8BZDhiferZsHg==\"],\n\n    \"@react-native/normalize-colors\": [\"@react-native/normalize-colors@0.81.0\", \"\", {}, \"sha512-3gEu/29uFgz+81hpUgdlOojM4rjHTIPwxpfygFNY60V6ywZih3eLDTS8kAjNZfPFHQbcYrNorJzwnL5yFF/uLw==\"],\n\n    \"@react-native/virtualized-lists\": [\"@react-native/virtualized-lists@0.81.0\", \"\", { \"dependencies\": { \"invariant\": \"^2.2.4\", \"nullthrows\": \"^1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"^19.1.0\", \"react\": \"*\", \"react-native\": \"*\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-p14QC5INHkbMZ96158sUxkSwN6zp138W11G+CRGoLJY4Q9WRJBCe7wHR5Owyy3XczQXrIih/vxAXwgYeZ2XByg==\"],\n\n    \"@react-spring/animated\": [\"@react-spring/animated@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-Tqrwz7pIlsSDITzxoLS3n/v/YCUHQdOIKtOJf4yL6kYVSDTSmVK1LI1Q3M/uu2Sx4X3pIWF3xLUhlsA6SPNTNg==\"],\n\n    \"@react-spring/core\": [\"@react-spring/core@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-rmEqcxRcu7dWh7MnCcMXLvrf6/SDlSokLaLTxiPlAYi11nN3B5oiCUAblO72o+9z/87j2uzxa2Inm8UbLjXA+w==\"],\n\n    \"@react-spring/konva\": [\"@react-spring/konva@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"konva\": \">=2.6\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-konva\": \"^16.8.0 || ^16.8.7-0 || ^16.9.0-0 || ^16.10.1-0 || ^16.12.0-0 || ^16.13.0-0 || ^17.0.0-0 || ^17.0.1-0 || ^17.0.2-0 || ^18.0.0-0\" } }, \"sha512-BelrmyY6w0FGoNSEfSJltjQDUoW0Prxf+FzGjyLuLs+V9M9OM/aHnYqOlvQEfQsZx6C/ZiDOn5BZl8iH8SDf+Q==\"],\n\n    \"@react-spring/native\": [\"@react-spring/native@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"16.8.0  || >=17.0.0 || >=18.0.0\", \"react-native\": \">=0.58\" } }, \"sha512-C1S500BNP1I05MftElyLv2nIqaWQ0MAByOAK/p4vuXcUK3XcjFaAJ385gVLgV2rgKfvkqRoz97PSwbh+ZCETEg==\"],\n\n    \"@react-spring/rafz\": [\"@react-spring/rafz@9.7.5\", \"\", {}, \"sha512-5ZenDQMC48wjUzPAm1EtwQ5Ot3bLIAwwqP2w2owG5KoNdNHpEJV263nGhCeKKmuA3vG2zLLOdu3or6kuDjA6Aw==\"],\n\n    \"@react-spring/shared\": [\"@react-spring/shared@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/rafz\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-wdtoJrhUeeyD/PP/zo+np2s1Z820Ohr/BbuVYv+3dVLW7WctoiN7std8rISoYoHpUXtbkpesSKuPIw/6U1w1Pw==\"],\n\n    \"@react-spring/three\": [\"@react-spring/three@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"@react-three/fiber\": \">=6.0\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"three\": \">=0.126\" } }, \"sha512-RxIsCoQfUqOS3POmhVHa1wdWS0wyHAUway73uRLp3GAL5U2iYVNdnzQsep6M2NZ994BlW8TcKuMtQHUqOsy6WA==\"],\n\n    \"@react-spring/types\": [\"@react-spring/types@9.7.5\", \"\", {}, \"sha512-HVj7LrZ4ReHWBimBvu2SKND3cDVUPWKLqRTmWe/fNY6o1owGOX0cAHbdPDTMelgBlVbrTKrre6lFkhqGZErK/g==\"],\n\n    \"@react-spring/web\": [\"@react-spring/web@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-lmvqGwpe+CSttsWNZVr+Dg62adtKhauGwLyGE/RRyZ8AAMLgb9x3NDMA5RMElXo+IMyTkPp7nxTB8ZQlmhb6JQ==\"],\n\n    \"@react-spring/zdog\": [\"@react-spring/zdog@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-zdog\": \">=1.0\", \"zdog\": \">=1.0\" } }, \"sha512-VV7vmb52wGHgDA1ry6hv+QgxTs78fqjKEQnj+M8hiBg+dwOsTtqqM24ADtc4cMAhPW+eZhVps8ZNKtjt8ouHFA==\"],\n\n    \"@react-three/drei\": [\"@react-three/drei@9.122.0\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.26.0\", \"@mediapipe/tasks-vision\": \"0.10.17\", \"@monogrid/gainmap-js\": \"^3.0.6\", \"@react-spring/three\": \"~9.7.5\", \"@use-gesture/react\": \"^10.3.1\", \"camera-controls\": \"^2.9.0\", \"cross-env\": \"^7.0.3\", \"detect-gpu\": \"^5.0.56\", \"glsl-noise\": \"^0.0.0\", \"hls.js\": \"^1.5.17\", \"maath\": \"^0.10.8\", \"meshline\": \"^3.3.1\", \"react-composer\": \"^5.0.3\", \"stats-gl\": \"^2.2.8\", \"stats.js\": \"^0.17.0\", \"suspend-react\": \"^0.1.3\", \"three-mesh-bvh\": \"^0.7.8\", \"three-stdlib\": \"^2.35.6\", \"troika-three-text\": \"^0.52.0\", \"tunnel-rat\": \"^0.1.2\", \"utility-types\": \"^3.11.0\", \"zustand\": \"^5.0.1\" }, \"peerDependencies\": { \"@react-three/fiber\": \"^8\", \"react\": \"^18\", \"react-dom\": \"^18\", \"three\": \">=0.137\" }, \"optionalPeers\": [\"react-dom\"] }, \"sha512-SEO/F/rBCTjlLez7WAlpys+iGe9hty4rNgjZvgkQeXFSiwqD4Hbk/wNHMAbdd8vprO2Aj81mihv4dF5bC7D0CA==\"],\n\n    \"@react-three/fiber\": [\"@react-three/fiber@8.18.0\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.17.8\", \"@types/react-reconciler\": \"^0.26.7\", \"@types/webxr\": \"*\", \"base64-js\": \"^1.5.1\", \"buffer\": \"^6.0.3\", \"its-fine\": \"^1.0.6\", \"react-reconciler\": \"^0.27.0\", \"react-use-measure\": \"^2.1.7\", \"scheduler\": \"^0.21.0\", \"suspend-react\": \"^0.1.3\", \"zustand\": \"^3.7.1\" }, \"peerDependencies\": { \"expo\": \">=43.0\", \"expo-asset\": \">=8.4\", \"expo-file-system\": \">=11.0\", \"expo-gl\": \">=11.0\", \"react\": \">=18 <19\", \"react-dom\": \">=18 <19\", \"react-native\": \">=0.64\", \"three\": \">=0.133\" }, \"optionalPeers\": [\"expo\", \"expo-asset\", \"expo-file-system\", \"expo-gl\", \"react-dom\", \"react-native\"] }, \"sha512-FYZZqD0UUHUswKz3LQl2Z7H24AhD14XGTsIRw3SJaXUxyfVMi+1yiZGmqTcPt/CkPpdU7rrxqcyQ1zJE5DjvIQ==\"],\n\n    \"@rtsao/scc\": [\"@rtsao/scc@1.1.0\", \"\", {}, \"sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==\"],\n\n    \"@rushstack/eslint-patch\": [\"@rushstack/eslint-patch@1.12.0\", \"\", {}, \"sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==\"],\n\n    \"@sapphire/async-queue\": [\"@sapphire/async-queue@1.5.5\", \"\", {}, \"sha512-cvGzxbba6sav2zZkH8GPf2oGk9yYoD5qrNWdu9fRehifgnFZJMV+nuy2nON2roRO4yQQ+v7MK/Pktl/HgfsUXg==\"],\n\n    \"@sapphire/shapeshift\": [\"@sapphire/shapeshift@4.0.0\", \"\", { \"dependencies\": { \"fast-deep-equal\": \"^3.1.3\", \"lodash\": \"^4.17.21\" } }, \"sha512-d9dUmWVA7MMiKobL3VpLF8P2aeanRTu6ypG2OIaEv/ZHH/SUQ2iHOVyi5wAPjQ+HmnMuL0whK9ez8I/raWbtIg==\"],\n\n    \"@sapphire/snowflake\": [\"@sapphire/snowflake@3.5.3\", \"\", {}, \"sha512-jjmJywLAFoWeBi1W7994zZyiNWPIiqRRNAmSERxyg93xRGzNYvGjlZ0gR6x0F4gPRi2+0O6S71kOZYyr3cxaIQ==\"],\n\n    \"@shadcn/ui\": [\"@shadcn/ui@0.0.4\", \"\", { \"dependencies\": { \"chalk\": \"5.2.0\", \"commander\": \"^10.0.0\", \"execa\": \"^7.0.0\", \"fs-extra\": \"^11.1.0\", \"node-fetch\": \"^3.3.0\", \"ora\": \"^6.1.2\", \"prompts\": \"^2.4.2\", \"zod\": \"^3.20.2\" }, \"bin\": { \"ui\": \"dist/index.js\" } }, \"sha512-0dtu/5ApsOZ24qgaZwtif8jVwqol7a4m1x5AxPuM1k5wxhqU7t/qEfBGtaSki1R8VlbTQfCj5PAlO45NKCa7Gg==\"],\n\n    \"@sinclair/typebox\": [\"@sinclair/typebox@0.27.8\", \"\", {}, \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\"],\n\n    \"@sinonjs/commons\": [\"@sinonjs/commons@3.0.1\", \"\", { \"dependencies\": { \"type-detect\": \"4.0.8\" } }, \"sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==\"],\n\n    \"@sinonjs/fake-timers\": [\"@sinonjs/fake-timers@10.3.0\", \"\", { \"dependencies\": { \"@sinonjs/commons\": \"^3.0.0\" } }, \"sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==\"],\n\n    \"@standard-schema/spec\": [\"@standard-schema/spec@1.0.0\", \"\", {}, \"sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==\"],\n\n    \"@stripe/stripe-js\": [\"@stripe/stripe-js@4.10.0\", \"\", {}, \"sha512-KrMOL+sH69htCIXCaZ4JluJ35bchuCCznyPyrbN8JXSGQfwBI1SuIEMZNwvy8L8ykj29t6sa5BAAiL7fNoLZ8A==\"],\n\n    \"@swc/counter\": [\"@swc/counter@0.1.3\", \"\", {}, \"sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==\"],\n\n    \"@swc/helpers\": [\"@swc/helpers@0.5.5\", \"\", { \"dependencies\": { \"@swc/counter\": \"^0.1.3\", \"tslib\": \"^2.4.0\" } }, \"sha512-KGYxvIOXcceOAbEk4bi/dVLEK9z8sZ0uBB3Il5b1rhfClSpcX0yfRO0KmTkqR2cnQDymwLB+25ZyMzICg/cm/A==\"],\n\n    \"@t3-oss/env-core\": [\"@t3-oss/env-core@0.7.3\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.7.2\", \"zod\": \"^3.0.0\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-hhtj59TKC6TKVdwJ0CcbKsvkr9R8Pc/SNKd4IgGUIC9T9X6moB8EZZ3FTJdABA/h9UABCK4J+KsF8gzmvMvHPg==\"],\n\n    \"@t3-oss/env-nextjs\": [\"@t3-oss/env-nextjs@0.7.3\", \"\", { \"dependencies\": { \"@t3-oss/env-core\": \"0.7.3\" }, \"peerDependencies\": { \"typescript\": \">=4.7.2\", \"zod\": \"^3.0.0\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-90TNffS17vjkQwfYyMUb4Zw9yqHwFV40f78qFug4JiQa5+N6DydTdlLOpzOcj8Cna/qpAVDwMSypofF/TVQDuA==\"],\n\n    \"@tailwindcss/typography\": [\"@tailwindcss/typography@0.5.16\", \"\", { \"dependencies\": { \"lodash.castarray\": \"^4.4.0\", \"lodash.isplainobject\": \"^4.0.6\", \"lodash.merge\": \"^4.6.2\", \"postcss-selector-parser\": \"6.0.10\" }, \"peerDependencies\": { \"tailwindcss\": \">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1\" } }, \"sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==\"],\n\n    \"@tanstack/query-core\": [\"@tanstack/query-core@5.83.1\", \"\", {}, \"sha512-OG69LQgT7jSp+5pPuCfzltq/+7l2xoweggjme9vlbCPa/d7D7zaqv5vN/S82SzSYZ4EDLTxNO1PWrv49RAS64Q==\"],\n\n    \"@tanstack/react-query\": [\"@tanstack/react-query@5.85.0\", \"\", { \"dependencies\": { \"@tanstack/query-core\": \"5.83.1\" }, \"peerDependencies\": { \"react\": \"^18 || ^19\" } }, \"sha512-t1HMfToVMGfwEJRya6GG7gbK0luZJd+9IySFNePL1BforU1F3LqQ3tBC2Rpvr88bOrlU6PXyMLgJD0Yzn4ztUw==\"],\n\n    \"@tanstack/react-virtual\": [\"@tanstack/react-virtual@3.13.12\", \"\", { \"dependencies\": { \"@tanstack/virtual-core\": \"3.13.12\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\" } }, \"sha512-Gd13QdxPSukP8ZrkbgS2RwoZseTTbQPLnQEn7HY/rqtM+8Zt95f7xKC7N0EsKs7aoz0WzZ+fditZux+F8EzYxA==\"],\n\n    \"@tanstack/virtual-core\": [\"@tanstack/virtual-core@3.13.12\", \"\", {}, \"sha512-1YBOJfRHV4sXUmWsFSf5rQor4Ss82G8dQWLRbnk3GA4jeP8hQt1hxXh0tmflpC0dz3VgEv/1+qwPyLeWkQuPFA==\"],\n\n    \"@testing-library/dom\": [\"@testing-library/dom@10.4.1\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.10.4\", \"@babel/runtime\": \"^7.12.5\", \"@types/aria-query\": \"^5.0.1\", \"aria-query\": \"5.3.0\", \"dom-accessibility-api\": \"^0.5.9\", \"lz-string\": \"^1.5.0\", \"picocolors\": \"1.1.1\", \"pretty-format\": \"^27.0.2\" } }, \"sha512-o4PXJQidqJl82ckFaXUeoAW+XysPLauYI43Abki5hABd853iMhitooc6znOnczgbTYmEP6U6/y1ZyKAIsvMKGg==\"],\n\n    \"@testing-library/jest-dom\": [\"@testing-library/jest-dom@6.6.4\", \"\", { \"dependencies\": { \"@adobe/css-tools\": \"^4.4.0\", \"aria-query\": \"^5.0.0\", \"css.escape\": \"^1.5.1\", \"dom-accessibility-api\": \"^0.6.3\", \"lodash\": \"^4.17.21\", \"picocolors\": \"^1.1.1\", \"redent\": \"^3.0.0\" } }, \"sha512-xDXgLjVunjHqczScfkCJ9iyjdNOVHvvCdqHSSxwM9L0l/wHkTRum67SDc020uAlCoqktJplgO2AAQeLP1wgqDQ==\"],\n\n    \"@testing-library/react\": [\"@testing-library/react@16.3.0\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.12.5\" }, \"peerDependencies\": { \"@testing-library/dom\": \"^10.0.0\", \"@types/react\": \"^18.0.0 || ^19.0.0\", \"@types/react-dom\": \"^18.0.0 || ^19.0.0\", \"react\": \"^18.0.0 || ^19.0.0\", \"react-dom\": \"^18.0.0 || ^19.0.0\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-kFSyxiEDwv1WLl2fgsq6pPBbw5aWKrsY2/noi1Id0TK0UParSF62oFQFGHXIyaG4pp2tEub/Zlel+fjjZILDsw==\"],\n\n    \"@tootallnate/once\": [\"@tootallnate/once@2.0.0\", \"\", {}, \"sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==\"],\n\n    \"@tootallnate/quickjs-emscripten\": [\"@tootallnate/quickjs-emscripten@0.23.0\", \"\", {}, \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\"],\n\n    \"@ts-morph/common\": [\"@ts-morph/common@0.19.0\", \"\", { \"dependencies\": { \"fast-glob\": \"^3.2.12\", \"minimatch\": \"^7.4.3\", \"mkdirp\": \"^2.1.6\", \"path-browserify\": \"^1.0.1\" } }, \"sha512-Unz/WHmd4pGax91rdIKWi51wnVUW11QttMEPpBiBgIewnc9UQIX7UDLxr5vRlqeByXCwhkF6VabSsI0raWcyAQ==\"],\n\n    \"@tsconfig/node10\": [\"@tsconfig/node10@1.0.11\", \"\", {}, \"sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==\"],\n\n    \"@tsconfig/node12\": [\"@tsconfig/node12@1.0.11\", \"\", {}, \"sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==\"],\n\n    \"@tsconfig/node14\": [\"@tsconfig/node14@1.0.3\", \"\", {}, \"sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==\"],\n\n    \"@tsconfig/node16\": [\"@tsconfig/node16@1.0.4\", \"\", {}, \"sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==\"],\n\n    \"@turf/boolean-point-in-polygon\": [\"@turf/boolean-point-in-polygon@7.2.0\", \"\", { \"dependencies\": { \"@turf/helpers\": \"^7.2.0\", \"@turf/invariant\": \"^7.2.0\", \"@types/geojson\": \"^7946.0.10\", \"point-in-polygon-hao\": \"^1.1.0\", \"tslib\": \"^2.8.1\" } }, \"sha512-lvEOjxeXIp+wPXgl9kJA97dqzMfNexjqHou+XHVcfxQgolctoJiRYmcVCWGpiZ9CBf/CJha1KmD1qQoRIsjLaA==\"],\n\n    \"@turf/helpers\": [\"@turf/helpers@7.2.0\", \"\", { \"dependencies\": { \"@types/geojson\": \"^7946.0.10\", \"tslib\": \"^2.8.1\" } }, \"sha512-cXo7bKNZoa7aC7ydLmUR02oB3IgDe7MxiPuRz3cCtYQHn+BJ6h1tihmamYDWWUlPHgSNF0i3ATc4WmDECZafKw==\"],\n\n    \"@turf/invariant\": [\"@turf/invariant@7.2.0\", \"\", { \"dependencies\": { \"@turf/helpers\": \"^7.2.0\", \"@types/geojson\": \"^7946.0.10\", \"tslib\": \"^2.8.1\" } }, \"sha512-kV4u8e7Gkpq+kPbAKNC21CmyrXzlbBgFjO1PhrHPgEdNqXqDawoZ3i6ivE3ULJj2rSesCjduUaC/wyvH/sNr2Q==\"],\n\n    \"@tweenjs/tween.js\": [\"@tweenjs/tween.js@25.0.0\", \"\", {}, \"sha512-XKLA6syeBUaPzx4j3qwMqzzq+V4uo72BnlbOjmuljLrRqdsd3qnzvZZoxvMHZ23ndsRS4aufU6JOZYpCbU6T1A==\"],\n\n    \"@tybys/wasm-util\": [\"@tybys/wasm-util@0.9.0\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-6+7nlbMVX/PVDCwaIQ8nTOPveOcFLSt8GcXdx8hD0bt39uWxYT88uXzqTd4fTvqta7oeUJqudepapKNt2DYJFw==\"],\n\n    \"@types/acorn\": [\"@types/acorn@4.0.6\", \"\", { \"dependencies\": { \"@types/estree\": \"*\" } }, \"sha512-veQTnWP+1D/xbxVrPC3zHnCZRjSrKfhbMUlEA43iMZLu7EsnTtkJklIuwrCPbOi8YkvDQAiW05VQQFvvz9oieQ==\"],\n\n    \"@types/aria-query\": [\"@types/aria-query@5.0.4\", \"\", {}, \"sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==\"],\n\n    \"@types/async\": [\"@types/async@3.2.25\", \"\", {}, \"sha512-O6Th/DI18XjrL9TX8LO9F/g26qAz5vynmQqlXt/qLGrskvzCKXKc5/tATz3G2N6lM8eOf3M8/StB14FncAmocg==\"],\n\n    \"@types/babel__core\": [\"@types/babel__core@7.20.5\", \"\", { \"dependencies\": { \"@babel/parser\": \"^7.20.7\", \"@babel/types\": \"^7.20.7\", \"@types/babel__generator\": \"*\", \"@types/babel__template\": \"*\", \"@types/babel__traverse\": \"*\" } }, \"sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==\"],\n\n    \"@types/babel__generator\": [\"@types/babel__generator@7.27.0\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.0.0\" } }, \"sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==\"],\n\n    \"@types/babel__template\": [\"@types/babel__template@7.4.4\", \"\", { \"dependencies\": { \"@babel/parser\": \"^7.1.0\", \"@babel/types\": \"^7.0.0\" } }, \"sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==\"],\n\n    \"@types/babel__traverse\": [\"@types/babel__traverse@7.28.0\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.28.2\" } }, \"sha512-8PvcXf70gTDZBgt9ptxJ8elBeBjcLOAcOtoO/mPJjtji1+CdGbHgm77om1GrsPxsiE+uXIpNSK64UYaIwQXd4Q==\"],\n\n    \"@types/body-parser\": [\"@types/body-parser@1.19.6\", \"\", { \"dependencies\": { \"@types/connect\": \"*\", \"@types/node\": \"*\" } }, \"sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==\"],\n\n    \"@types/braces\": [\"@types/braces@3.0.5\", \"\", {}, \"sha512-SQFof9H+LXeWNz8wDe7oN5zu7ket0qwMu5vZubW4GCJ8Kkeh6nBWUz87+KTz/G3Kqsrp0j/W253XJb3KMEeg3w==\"],\n\n    \"@types/bun\": [\"@types/bun@1.2.20\", \"\", { \"dependencies\": { \"bun-types\": \"1.2.20\" } }, \"sha512-dX3RGzQ8+KgmMw7CsW4xT5ITBSCrSbfHc36SNT31EOUg/LA9JWq0VDdEXDRSe1InVWpd2yLUM1FUF/kEOyTzYA==\"],\n\n    \"@types/caseless\": [\"@types/caseless@0.12.5\", \"\", {}, \"sha512-hWtVTC2q7hc7xZ/RLbxapMvDMgUnDvKvMOpKal4DrMyfGBUfB1oKaZlIRr6mJL+If3bAP6sV/QneGzF6tJjZDg==\"],\n\n    \"@types/connect\": [\"@types/connect@3.4.38\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==\"],\n\n    \"@types/conventional-commits-parser\": [\"@types/conventional-commits-parser@5.0.1\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-7uz5EHdzz2TqoMfV7ee61Egf5y6NkcO4FB/1iCCQnbeiI1F3xzv3vK5dBCXUCLQgGYS+mUeigK1iKQzvED+QnQ==\"],\n\n    \"@types/cors\": [\"@types/cors@2.8.19\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-mFNylyeyqN93lfe/9CSxOGREz8cpzAhH+E93xJ4xWQf62V8sQ/24reV2nyzUWM6H6Xji+GGHpkbLe7pVoUEskg==\"],\n\n    \"@types/d3\": [\"@types/d3@7.4.3\", \"\", { \"dependencies\": { \"@types/d3-array\": \"*\", \"@types/d3-axis\": \"*\", \"@types/d3-brush\": \"*\", \"@types/d3-chord\": \"*\", \"@types/d3-color\": \"*\", \"@types/d3-contour\": \"*\", \"@types/d3-delaunay\": \"*\", \"@types/d3-dispatch\": \"*\", \"@types/d3-drag\": \"*\", \"@types/d3-dsv\": \"*\", \"@types/d3-ease\": \"*\", \"@types/d3-fetch\": \"*\", \"@types/d3-force\": \"*\", \"@types/d3-format\": \"*\", \"@types/d3-geo\": \"*\", \"@types/d3-hierarchy\": \"*\", \"@types/d3-interpolate\": \"*\", \"@types/d3-path\": \"*\", \"@types/d3-polygon\": \"*\", \"@types/d3-quadtree\": \"*\", \"@types/d3-random\": \"*\", \"@types/d3-scale\": \"*\", \"@types/d3-scale-chromatic\": \"*\", \"@types/d3-selection\": \"*\", \"@types/d3-shape\": \"*\", \"@types/d3-time\": \"*\", \"@types/d3-time-format\": \"*\", \"@types/d3-timer\": \"*\", \"@types/d3-transition\": \"*\", \"@types/d3-zoom\": \"*\" } }, \"sha512-lZXZ9ckh5R8uiFVt8ogUNf+pIrK4EsWrx2Np75WvF/eTpJ0FMHNhjXk8CKEx/+gpHbNQyJWehbFaTvqmHWB3ww==\"],\n\n    \"@types/d3-array\": [\"@types/d3-array@3.2.1\", \"\", {}, \"sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==\"],\n\n    \"@types/d3-axis\": [\"@types/d3-axis@3.0.6\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-pYeijfZuBd87T0hGn0FO1vQ/cgLk6E1ALJjfkC0oJ8cbwkZl3TpgS8bVBLZN+2jjGgg38epgxb2zmoGtSfvgMw==\"],\n\n    \"@types/d3-brush\": [\"@types/d3-brush@3.0.6\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-nH60IZNNxEcrh6L1ZSMNA28rj27ut/2ZmI3r96Zd+1jrZD++zD3LsMIjWlvg4AYrHn/Pqz4CF3veCxGjtbqt7A==\"],\n\n    \"@types/d3-chord\": [\"@types/d3-chord@3.0.6\", \"\", {}, \"sha512-LFYWWd8nwfwEmTZG9PfQxd17HbNPksHBiJHaKuY1XeqscXacsS2tyoo6OdRsjf+NQYeB6XrNL3a25E3gH69lcg==\"],\n\n    \"@types/d3-color\": [\"@types/d3-color@3.1.3\", \"\", {}, \"sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==\"],\n\n    \"@types/d3-contour\": [\"@types/d3-contour@3.0.6\", \"\", { \"dependencies\": { \"@types/d3-array\": \"*\", \"@types/geojson\": \"*\" } }, \"sha512-BjzLgXGnCWjUSYGfH1cpdo41/hgdWETu4YxpezoztawmqsvCeep+8QGfiY6YbDvfgHz/DkjeIkkZVJavB4a3rg==\"],\n\n    \"@types/d3-delaunay\": [\"@types/d3-delaunay@6.0.4\", \"\", {}, \"sha512-ZMaSKu4THYCU6sV64Lhg6qjf1orxBthaC161plr5KuPHo3CNm8DTHiLw/5Eq2b6TsNP0W0iJrUOFscY6Q450Hw==\"],\n\n    \"@types/d3-dispatch\": [\"@types/d3-dispatch@3.0.7\", \"\", {}, \"sha512-5o9OIAdKkhN1QItV2oqaE5KMIiXAvDWBDPrD85e58Qlz1c1kI/J0NcqbEG88CoTwJrYe7ntUCVfeUl2UJKbWgA==\"],\n\n    \"@types/d3-drag\": [\"@types/d3-drag@3.0.7\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-HE3jVKlzU9AaMazNufooRJ5ZpWmLIoc90A37WU2JMmeq28w1FQqCZswHZ3xR+SuxYftzHq6WU6KJHvqxKzTxxQ==\"],\n\n    \"@types/d3-dsv\": [\"@types/d3-dsv@3.0.7\", \"\", {}, \"sha512-n6QBF9/+XASqcKK6waudgL0pf/S5XHPPI8APyMLLUHd8NqouBGLsU8MgtO7NINGtPBtk9Kko/W4ea0oAspwh9g==\"],\n\n    \"@types/d3-ease\": [\"@types/d3-ease@3.0.2\", \"\", {}, \"sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==\"],\n\n    \"@types/d3-fetch\": [\"@types/d3-fetch@3.0.7\", \"\", { \"dependencies\": { \"@types/d3-dsv\": \"*\" } }, \"sha512-fTAfNmxSb9SOWNB9IoG5c8Hg6R+AzUHDRlsXsDZsNp6sxAEOP0tkP3gKkNSO/qmHPoBFTxNrjDprVHDQDvo5aA==\"],\n\n    \"@types/d3-force\": [\"@types/d3-force@3.0.10\", \"\", {}, \"sha512-ZYeSaCF3p73RdOKcjj+swRlZfnYpK1EbaDiYICEEp5Q6sUiqFaFQ9qgoshp5CzIyyb/yD09kD9o2zEltCexlgw==\"],\n\n    \"@types/d3-format\": [\"@types/d3-format@3.0.4\", \"\", {}, \"sha512-fALi2aI6shfg7vM5KiR1wNJnZ7r6UuggVqtDA+xiEdPZQwy/trcQaHnwShLuLdta2rTymCNpxYTiMZX/e09F4g==\"],\n\n    \"@types/d3-geo\": [\"@types/d3-geo@3.1.0\", \"\", { \"dependencies\": { \"@types/geojson\": \"*\" } }, \"sha512-856sckF0oP/diXtS4jNsiQw/UuK5fQG8l/a9VVLeSouf1/PPbBE1i1W852zVwKwYCBkFJJB7nCFTbk6UMEXBOQ==\"],\n\n    \"@types/d3-hierarchy\": [\"@types/d3-hierarchy@3.1.7\", \"\", {}, \"sha512-tJFtNoYBtRtkNysX1Xq4sxtjK8YgoWUNpIiUee0/jHGRwqvzYxkq0hGVbbOGSz+JgFxxRu4K8nb3YpG3CMARtg==\"],\n\n    \"@types/d3-interpolate\": [\"@types/d3-interpolate@3.0.4\", \"\", { \"dependencies\": { \"@types/d3-color\": \"*\" } }, \"sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==\"],\n\n    \"@types/d3-path\": [\"@types/d3-path@3.1.1\", \"\", {}, \"sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==\"],\n\n    \"@types/d3-polygon\": [\"@types/d3-polygon@3.0.2\", \"\", {}, \"sha512-ZuWOtMaHCkN9xoeEMr1ubW2nGWsp4nIql+OPQRstu4ypeZ+zk3YKqQT0CXVe/PYqrKpZAi+J9mTs05TKwjXSRA==\"],\n\n    \"@types/d3-quadtree\": [\"@types/d3-quadtree@3.0.6\", \"\", {}, \"sha512-oUzyO1/Zm6rsxKRHA1vH0NEDG58HrT5icx/azi9MF1TWdtttWl0UIUsjEQBBh+SIkrpd21ZjEv7ptxWys1ncsg==\"],\n\n    \"@types/d3-random\": [\"@types/d3-random@3.0.3\", \"\", {}, \"sha512-Imagg1vJ3y76Y2ea0871wpabqp613+8/r0mCLEBfdtqC7xMSfj9idOnmBYyMoULfHePJyxMAw3nWhJxzc+LFwQ==\"],\n\n    \"@types/d3-scale\": [\"@types/d3-scale@4.0.9\", \"\", { \"dependencies\": { \"@types/d3-time\": \"*\" } }, \"sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==\"],\n\n    \"@types/d3-scale-chromatic\": [\"@types/d3-scale-chromatic@3.1.0\", \"\", {}, \"sha512-iWMJgwkK7yTRmWqRB5plb1kadXyQ5Sj8V/zYlFGMUBbIPKQScw+Dku9cAAMgJG+z5GYDoMjWGLVOvjghDEFnKQ==\"],\n\n    \"@types/d3-selection\": [\"@types/d3-selection@3.0.11\", \"\", {}, \"sha512-bhAXu23DJWsrI45xafYpkQ4NtcKMwWnAC/vKrd2l+nxMFuvOT3XMYTIj2opv8vq8AO5Yh7Qac/nSeP/3zjTK0w==\"],\n\n    \"@types/d3-shape\": [\"@types/d3-shape@3.1.7\", \"\", { \"dependencies\": { \"@types/d3-path\": \"*\" } }, \"sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==\"],\n\n    \"@types/d3-time\": [\"@types/d3-time@3.0.4\", \"\", {}, \"sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==\"],\n\n    \"@types/d3-time-format\": [\"@types/d3-time-format@4.0.3\", \"\", {}, \"sha512-5xg9rC+wWL8kdDj153qZcsJ0FWiFt0J5RB6LYUNZjwSnesfblqrI/bJ1wBdJ8OQfncgbJG5+2F+qfqnqyzYxyg==\"],\n\n    \"@types/d3-timer\": [\"@types/d3-timer@3.0.2\", \"\", {}, \"sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==\"],\n\n    \"@types/d3-transition\": [\"@types/d3-transition@3.0.9\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-uZS5shfxzO3rGlu0cC3bjmMFKsXv+SmZZcgp0KD22ts4uGXp5EVYGzu/0YdwZeKmddhcAccYtREJKkPfXkZuCg==\"],\n\n    \"@types/d3-zoom\": [\"@types/d3-zoom@3.0.8\", \"\", { \"dependencies\": { \"@types/d3-interpolate\": \"*\", \"@types/d3-selection\": \"*\" } }, \"sha512-iqMC4/YlFCSlO8+2Ii1GGGliCAY4XdeG748w5vQUbevlbDu0zSjH/+jojorQVBK/se0j6DUFNPBGSqD3YWYnDw==\"],\n\n    \"@types/debug\": [\"@types/debug@4.1.12\", \"\", { \"dependencies\": { \"@types/ms\": \"*\" } }, \"sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==\"],\n\n    \"@types/diff\": [\"@types/diff@5.2.3\", \"\", {}, \"sha512-K0Oqlrq3kQMaO2RhfrNQX5trmt+XLyom88zS0u84nnIcLvFnRUMRRHmrGny5GSM+kNO9IZLARsdQHDzkhAgmrQ==\"],\n\n    \"@types/draco3d\": [\"@types/draco3d@1.4.10\", \"\", {}, \"sha512-AX22jp8Y7wwaBgAixaSvkoG4M/+PlAcm3Qs4OW8yT9DM4xUpWKeFhLueTAyZF39pviAdcDdeJoACapiAceqNcw==\"],\n\n    \"@types/estree\": [\"@types/estree@1.0.8\", \"\", {}, \"sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==\"],\n\n    \"@types/estree-jsx\": [\"@types/estree-jsx@1.0.5\", \"\", { \"dependencies\": { \"@types/estree\": \"*\" } }, \"sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==\"],\n\n    \"@types/express\": [\"@types/express@4.17.23\", \"\", { \"dependencies\": { \"@types/body-parser\": \"*\", \"@types/express-serve-static-core\": \"^4.17.33\", \"@types/qs\": \"*\", \"@types/serve-static\": \"*\" } }, \"sha512-Crp6WY9aTYP3qPi2wGDo9iUe/rceX01UMhnF1jmwDcKCFM6cx7YhGP/Mpr3y9AASpfHixIG0E6azCcL5OcDHsQ==\"],\n\n    \"@types/express-serve-static-core\": [\"@types/express-serve-static-core@4.19.6\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"@types/qs\": \"*\", \"@types/range-parser\": \"*\", \"@types/send\": \"*\" } }, \"sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==\"],\n\n    \"@types/geojson\": [\"@types/geojson@7946.0.16\", \"\", {}, \"sha512-6C8nqWur3j98U6+lXDfTUWIfgvZU+EumvpHKcYjujKH7woYyLj2sUmff0tRhrqM7BohUw7Pz3ZB1jj2gW9Fvmg==\"],\n\n    \"@types/graceful-fs\": [\"@types/graceful-fs@4.1.9\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==\"],\n\n    \"@types/hast\": [\"@types/hast@3.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"*\" } }, \"sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==\"],\n\n    \"@types/http-errors\": [\"@types/http-errors@2.0.5\", \"\", {}, \"sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==\"],\n\n    \"@types/istanbul-lib-coverage\": [\"@types/istanbul-lib-coverage@2.0.6\", \"\", {}, \"sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==\"],\n\n    \"@types/istanbul-lib-report\": [\"@types/istanbul-lib-report@3.0.3\", \"\", { \"dependencies\": { \"@types/istanbul-lib-coverage\": \"*\" } }, \"sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==\"],\n\n    \"@types/istanbul-reports\": [\"@types/istanbul-reports@3.0.4\", \"\", { \"dependencies\": { \"@types/istanbul-lib-report\": \"*\" } }, \"sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==\"],\n\n    \"@types/jest\": [\"@types/jest@29.5.14\", \"\", { \"dependencies\": { \"expect\": \"^29.0.0\", \"pretty-format\": \"^29.0.0\" } }, \"sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==\"],\n\n    \"@types/jsdom\": [\"@types/jsdom@20.0.1\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"@types/tough-cookie\": \"*\", \"parse5\": \"^7.0.0\" } }, \"sha512-d0r18sZPmMQr1eG35u12FZfhIXNrnsPU/g5wvRKCUf/tOGilKKwYMYGqh33BNR6ba+2gkHw1EUiHoN3mn7E5IQ==\"],\n\n    \"@types/json-schema\": [\"@types/json-schema@7.0.15\", \"\", {}, \"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\"],\n\n    \"@types/json5\": [\"@types/json5@0.0.29\", \"\", {}, \"sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==\"],\n\n    \"@types/lodash\": [\"@types/lodash@4.17.7\", \"\", {}, \"sha512-8wTvZawATi/lsmNu10/j2hk1KEP0IvjubqPE3cu1Xz7xfXXt5oCq3SNUz4fMIP4XGF9Ky+Ue2tBA3hcS7LSBlA==\"],\n\n    \"@types/mdast\": [\"@types/mdast@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"*\" } }, \"sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==\"],\n\n    \"@types/mdx\": [\"@types/mdx@2.0.13\", \"\", {}, \"sha512-+OWZQfAYyio6YkJb3HLxDrvnx6SWWDbC0zVPfBRzUk0/nqoDyf6dNxQi3eArPe8rJ473nobTMQ/8Zk+LxJ+Yuw==\"],\n\n    \"@types/micromatch\": [\"@types/micromatch@4.0.9\", \"\", { \"dependencies\": { \"@types/braces\": \"*\" } }, \"sha512-7V+8ncr22h4UoYRLnLXSpTxjQrNUXtWHGeMPRJt1nULXI57G9bIcpyrHlmrQ7QK24EyyuXvYcSSWAM8GA9nqCg==\"],\n\n    \"@types/mime\": [\"@types/mime@1.3.5\", \"\", {}, \"sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==\"],\n\n    \"@types/ms\": [\"@types/ms@2.1.0\", \"\", {}, \"sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==\"],\n\n    \"@types/node\": [\"@types/node@22.17.1\", \"\", { \"dependencies\": { \"undici-types\": \"~6.21.0\" } }, \"sha512-y3tBaz+rjspDTylNjAX37jEC3TETEFGNJL6uQDxwF9/8GLLIjW1rvVHlynyuUKMnMr1Roq8jOv3vkopBjC4/VA==\"],\n\n    \"@types/node-fetch\": [\"@types/node-fetch@2.6.13\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"form-data\": \"^4.0.4\" } }, \"sha512-QGpRVpzSaUs30JBSGPjOg4Uveu384erbHBoT1zeONvyCfwQxIkUshLAOqN/k9EjGviPRmWTTe6aH2qySWKTVSw==\"],\n\n    \"@types/offscreencanvas\": [\"@types/offscreencanvas@2019.7.3\", \"\", {}, \"sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==\"],\n\n    \"@types/parse-path\": [\"@types/parse-path@7.1.0\", \"\", { \"dependencies\": { \"parse-path\": \"*\" } }, \"sha512-EULJ8LApcVEPbrfND0cRQqutIOdiIgJ1Mgrhpy755r14xMohPTEpkV/k28SJvuOs9bHRFW8x+KeDAEPiGQPB9Q==\"],\n\n    \"@types/parse5\": [\"@types/parse5@6.0.3\", \"\", {}, \"sha512-SuT16Q1K51EAVPz1K29DJ/sXjhSQ0zjvsypYJ6tlwVsRV9jwW5Adq2ch8Dq8kDBCkYnELS7N7VNCSB5nC56t/g==\"],\n\n    \"@types/pg\": [\"@types/pg@8.15.5\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"pg-protocol\": \"*\", \"pg-types\": \"^2.2.0\" } }, \"sha512-LF7lF6zWEKxuT3/OR8wAZGzkg4ENGXFNyiV/JeOt9z5B+0ZVwbql9McqX5c/WStFq1GaGso7H1AzP/qSzmlCKQ==\"],\n\n    \"@types/prop-types\": [\"@types/prop-types@15.7.15\", \"\", {}, \"sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==\"],\n\n    \"@types/qs\": [\"@types/qs@6.14.0\", \"\", {}, \"sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==\"],\n\n    \"@types/range-parser\": [\"@types/range-parser@1.2.7\", \"\", {}, \"sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==\"],\n\n    \"@types/react\": [\"@types/react@18.3.23\", \"\", { \"dependencies\": { \"@types/prop-types\": \"*\", \"csstype\": \"^3.0.2\" } }, \"sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==\"],\n\n    \"@types/react-dom\": [\"@types/react-dom@18.3.7\", \"\", { \"peerDependencies\": { \"@types/react\": \"^18.0.0\" } }, \"sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==\"],\n\n    \"@types/react-reconciler\": [\"@types/react-reconciler@0.26.7\", \"\", { \"dependencies\": { \"@types/react\": \"*\" } }, \"sha512-mBDYl8x+oyPX/VBb3E638N0B7xG+SPk/EAMcVPeexqus/5aTpTphQi0curhhshOqRrc9t6OPoJfEUkbymse/lQ==\"],\n\n    \"@types/readable-stream\": [\"@types/readable-stream@4.0.21\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-19eKVv9tugr03IgfXlA9UVUVRbW6IuqRO5B92Dl4a6pT7K8uaGrNS0GkxiZD0BOk6PLuXl5FhWl//eX/pzYdTQ==\"],\n\n    \"@types/request\": [\"@types/request@2.48.13\", \"\", { \"dependencies\": { \"@types/caseless\": \"*\", \"@types/node\": \"*\", \"@types/tough-cookie\": \"*\", \"form-data\": \"^2.5.5\" } }, \"sha512-FGJ6udDNUCjd19pp0Q3iTiDkwhYup7J8hpMW9c4k53NrccQFFWKRho6hvtPPEhnXWKvukfwAlB6DbDz4yhH5Gg==\"],\n\n    \"@types/resolve\": [\"@types/resolve@1.20.6\", \"\", {}, \"sha512-A4STmOXPhMUtHH+S6ymgE2GiBSMqf4oTvcQZMcHzokuTLVYzXTB8ttjcgxOVaAp2lGwEdzZ0J+cRbbeevQj1UQ==\"],\n\n    \"@types/seedrandom\": [\"@types/seedrandom@3.0.8\", \"\", {}, \"sha512-TY1eezMU2zH2ozQoAFAQFOPpvP15g+ZgSfTZt31AUUH/Rxtnz3H+A/Sv1Snw2/amp//omibc+AEkTaA8KUeOLQ==\"],\n\n    \"@types/semver\": [\"@types/semver@7.7.0\", \"\", {}, \"sha512-k107IF4+Xr7UHjwDc7Cfd6PRQfbdkiRabXGRjo07b4WyPahFBZCZ1sE+BNxYIJPPg73UkfOsVOLwqVc/6ETrIA==\"],\n\n    \"@types/send\": [\"@types/send@0.17.5\", \"\", { \"dependencies\": { \"@types/mime\": \"^1\", \"@types/node\": \"*\" } }, \"sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==\"],\n\n    \"@types/serve-static\": [\"@types/serve-static@1.15.8\", \"\", { \"dependencies\": { \"@types/http-errors\": \"*\", \"@types/node\": \"*\", \"@types/send\": \"*\" } }, \"sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==\"],\n\n    \"@types/stack-utils\": [\"@types/stack-utils@2.0.3\", \"\", {}, \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\"],\n\n    \"@types/stats.js\": [\"@types/stats.js@0.17.4\", \"\", {}, \"sha512-jIBvWWShCvlBqBNIZt0KAshWpvSjhkwkEu4ZUcASoAvhmrgAUI2t1dXrjSL4xXVLB4FznPrIsX3nKXFl/Dt4vA==\"],\n\n    \"@types/three\": [\"@types/three@0.179.0\", \"\", { \"dependencies\": { \"@dimforge/rapier3d-compat\": \"~0.12.0\", \"@tweenjs/tween.js\": \"~23.1.3\", \"@types/stats.js\": \"*\", \"@types/webxr\": \"*\", \"@webgpu/types\": \"*\", \"fflate\": \"~0.8.2\", \"meshoptimizer\": \"~0.22.0\" } }, \"sha512-VgbFG2Pgsm84BqdegZzr7w2aKbQxmgzIu4Dy7/75ygiD/0P68LKmp5ie08KMPNqGTQwIge8s6D1guZf1RnZE0A==\"],\n\n    \"@types/tinycolor2\": [\"@types/tinycolor2@1.4.6\", \"\", {}, \"sha512-iEN8J0BoMnsWBqjVbWH/c0G0Hh7O21lpR2/+PrvAVgWdzL7eexIFm4JN/Wn10PTcmNdtS6U67r499mlWMXOxNw==\"],\n\n    \"@types/tough-cookie\": [\"@types/tough-cookie@4.0.5\", \"\", {}, \"sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA==\"],\n\n    \"@types/trusted-types\": [\"@types/trusted-types@2.0.7\", \"\", {}, \"sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==\"],\n\n    \"@types/unist\": [\"@types/unist@3.0.3\", \"\", {}, \"sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==\"],\n\n    \"@types/webxr\": [\"@types/webxr@0.5.22\", \"\", {}, \"sha512-Vr6Stjv5jPRqH690f5I5GLjVk8GSsoQSYJ2FVd/3jJF7KaqfwPi3ehfBS96mlQ2kPCwZaX6U0rG2+NGHBKkA/A==\"],\n\n    \"@types/ws\": [\"@types/ws@8.18.1\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==\"],\n\n    \"@types/yargs\": [\"@types/yargs@17.0.33\", \"\", { \"dependencies\": { \"@types/yargs-parser\": \"*\" } }, \"sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==\"],\n\n    \"@types/yargs-parser\": [\"@types/yargs-parser@21.0.3\", \"\", {}, \"sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==\"],\n\n    \"@types/yauzl\": [\"@types/yauzl@2.10.3\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\"],\n\n    \"@typescript-eslint/eslint-plugin\": [\"@typescript-eslint/eslint-plugin@6.21.0\", \"\", { \"dependencies\": { \"@eslint-community/regexpp\": \"^4.5.1\", \"@typescript-eslint/scope-manager\": \"6.21.0\", \"@typescript-eslint/type-utils\": \"6.21.0\", \"@typescript-eslint/utils\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\", \"debug\": \"^4.3.4\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^5.2.4\", \"natural-compare\": \"^1.4.0\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" }, \"peerDependencies\": { \"@typescript-eslint/parser\": \"^6.0.0 || ^6.0.0-alpha\", \"eslint\": \"^7.0.0 || ^8.0.0\" } }, \"sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==\"],\n\n    \"@typescript-eslint/parser\": [\"@typescript-eslint/parser@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/scope-manager\": \"8.39.1\", \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/typescript-estree\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-pUXGCuHnnKw6PyYq93lLRiZm3vjuslIy7tus1lIQTYVK9bL8XBgJnCWm8a0KcTtHC84Yya1Q6rtll+duSMj0dg==\"],\n\n    \"@typescript-eslint/project-service\": [\"@typescript-eslint/project-service@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/tsconfig-utils\": \"^8.39.1\", \"@typescript-eslint/types\": \"^8.39.1\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-8fZxek3ONTwBu9ptw5nCKqZOSkXshZB7uAxuFF0J/wTMkKydjXCzqqga7MlFMpHi9DoG4BadhmTkITBcg8Aybw==\"],\n\n    \"@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\" } }, \"sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==\"],\n\n    \"@typescript-eslint/tsconfig-utils\": [\"@typescript-eslint/tsconfig-utils@8.39.1\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-ePUPGVtTMR8XMU2Hee8kD0Pu4NDE1CN9Q1sxGSGd/mbOtGZDM7pnhXNJnzW63zk/q+Z54zVzj44HtwXln5CvHA==\"],\n\n    \"@typescript-eslint/type-utils\": [\"@typescript-eslint/type-utils@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/typescript-estree\": \"6.21.0\", \"@typescript-eslint/utils\": \"6.21.0\", \"debug\": \"^4.3.4\", \"ts-api-utils\": \"^1.0.1\" }, \"peerDependencies\": { \"eslint\": \"^7.0.0 || ^8.0.0\" } }, \"sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==\"],\n\n    \"@typescript-eslint/types\": [\"@typescript-eslint/types@8.39.1\", \"\", {}, \"sha512-7sPDKQQp+S11laqTrhHqeAbsCfMkwJMrV7oTDvtDds4mEofJYir414bYKUEb8YPUm9QL3U+8f6L6YExSoAGdQw==\"],\n\n    \"@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/project-service\": \"8.39.1\", \"@typescript-eslint/tsconfig-utils\": \"8.39.1\", \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\", \"debug\": \"^4.3.4\", \"fast-glob\": \"^3.3.2\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^2.1.0\" }, \"peerDependencies\": { \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-EKkpcPuIux48dddVDXyQBlKdeTPMmALqBUbEk38McWv0qVEZwOpVJBi7ugK5qVNgeuYjGNQxrrnoM/5+TI/BPw==\"],\n\n    \"@typescript-eslint/utils\": [\"@typescript-eslint/utils@6.21.0\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.4.0\", \"@types/json-schema\": \"^7.0.12\", \"@types/semver\": \"^7.5.0\", \"@typescript-eslint/scope-manager\": \"6.21.0\", \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/typescript-estree\": \"6.21.0\", \"semver\": \"^7.5.4\" }, \"peerDependencies\": { \"eslint\": \"^7.0.0 || ^8.0.0\" } }, \"sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==\"],\n\n    \"@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"eslint-visitor-keys\": \"^3.4.1\" } }, \"sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==\"],\n\n    \"@ungap/structured-clone\": [\"@ungap/structured-clone@1.3.0\", \"\", {}, \"sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==\"],\n\n    \"@unrs/resolver-binding-android-arm-eabi\": [\"@unrs/resolver-binding-android-arm-eabi@1.11.1\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==\"],\n\n    \"@unrs/resolver-binding-android-arm64\": [\"@unrs/resolver-binding-android-arm64@1.11.1\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==\"],\n\n    \"@unrs/resolver-binding-darwin-arm64\": [\"@unrs/resolver-binding-darwin-arm64@1.11.1\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==\"],\n\n    \"@unrs/resolver-binding-darwin-x64\": [\"@unrs/resolver-binding-darwin-x64@1.11.1\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==\"],\n\n    \"@unrs/resolver-binding-freebsd-x64\": [\"@unrs/resolver-binding-freebsd-x64@1.11.1\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==\"],\n\n    \"@unrs/resolver-binding-linux-arm-gnueabihf\": [\"@unrs/resolver-binding-linux-arm-gnueabihf@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==\"],\n\n    \"@unrs/resolver-binding-linux-arm-musleabihf\": [\"@unrs/resolver-binding-linux-arm-musleabihf@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==\"],\n\n    \"@unrs/resolver-binding-linux-arm64-gnu\": [\"@unrs/resolver-binding-linux-arm64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==\"],\n\n    \"@unrs/resolver-binding-linux-arm64-musl\": [\"@unrs/resolver-binding-linux-arm64-musl@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==\"],\n\n    \"@unrs/resolver-binding-linux-ppc64-gnu\": [\"@unrs/resolver-binding-linux-ppc64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==\"],\n\n    \"@unrs/resolver-binding-linux-riscv64-gnu\": [\"@unrs/resolver-binding-linux-riscv64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==\"],\n\n    \"@unrs/resolver-binding-linux-riscv64-musl\": [\"@unrs/resolver-binding-linux-riscv64-musl@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==\"],\n\n    \"@unrs/resolver-binding-linux-s390x-gnu\": [\"@unrs/resolver-binding-linux-s390x-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==\"],\n\n    \"@unrs/resolver-binding-linux-x64-gnu\": [\"@unrs/resolver-binding-linux-x64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==\"],\n\n    \"@unrs/resolver-binding-linux-x64-musl\": [\"@unrs/resolver-binding-linux-x64-musl@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==\"],\n\n    \"@unrs/resolver-binding-wasm32-wasi\": [\"@unrs/resolver-binding-wasm32-wasi@1.11.1\", \"\", { \"dependencies\": { \"@napi-rs/wasm-runtime\": \"^0.2.11\" }, \"cpu\": \"none\" }, \"sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==\"],\n\n    \"@unrs/resolver-binding-win32-arm64-msvc\": [\"@unrs/resolver-binding-win32-arm64-msvc@1.11.1\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==\"],\n\n    \"@unrs/resolver-binding-win32-ia32-msvc\": [\"@unrs/resolver-binding-win32-ia32-msvc@1.11.1\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==\"],\n\n    \"@unrs/resolver-binding-win32-x64-msvc\": [\"@unrs/resolver-binding-win32-x64-msvc@1.11.1\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==\"],\n\n    \"@use-gesture/core\": [\"@use-gesture/core@10.3.1\", \"\", {}, \"sha512-WcINiDt8WjqBdUXye25anHiNxPc0VOrlT8F6LLkU6cycrOGUDyY/yyFmsg3k8i5OLvv25llc0QC45GhR/C8llw==\"],\n\n    \"@use-gesture/react\": [\"@use-gesture/react@10.3.1\", \"\", { \"dependencies\": { \"@use-gesture/core\": \"10.3.1\" }, \"peerDependencies\": { \"react\": \">= 16.8.0\" } }, \"sha512-Yy19y6O2GJq8f7CHf7L0nxL8bf4PZCPaVOCgJrusOeFHY1LvHgYXnmnXg6N5iwAnbgbZCDjo60SiM6IPJi9C5g==\"],\n\n    \"@vladfrangu/async_event_emitter\": [\"@vladfrangu/async_event_emitter@2.4.6\", \"\", {}, \"sha512-RaI5qZo6D2CVS6sTHFKg1v5Ohq/+Bo2LZ5gzUEwZ/WkHhwtGTCB/sVLw8ijOkAUxasZ+WshN/Rzj4ywsABJ5ZA==\"],\n\n    \"@vscode/ripgrep\": [\"@vscode/ripgrep@1.15.9\", \"\", { \"dependencies\": { \"https-proxy-agent\": \"^7.0.2\", \"proxy-from-env\": \"^1.1.0\", \"yauzl\": \"^2.9.2\" } }, \"sha512-4q2PXRvUvr3bF+LsfrifmUZgSPmCNcUZo6SbEAZgArIChchkezaxLoIeQMJe/z3CCKStvaVKpBXLxN3Z8lQjFQ==\"],\n\n    \"@vscode/tree-sitter-wasm\": [\"@vscode/tree-sitter-wasm@0.1.4\", \"\", {}, \"sha512-kQVVg/CamCYDM+/XYCZuNTQyixjZd8ts/Gf84UzjEY0eRnbg6kiy5I9z2/2i3XdqwhI87iG07rkMR2KwhqcSbA==\"],\n\n    \"@webgpu/types\": [\"@webgpu/types@0.1.64\", \"\", {}, \"sha512-84kRIAGV46LJTlJZWxShiOrNL30A+9KokD7RB3dRCIqODFjodS5tCD5yyiZ8kIReGVZSDfA3XkkwyyOIF6K62A==\"],\n\n    \"@yarnpkg/lockfile\": [\"@yarnpkg/lockfile@1.1.0\", \"\", {}, \"sha512-GpSwvyXOcOOlV70vbnzjj4fW5xW/FdUF6nQEt1ENy7m4ZCczi1+/buVUPAqmGfqznsORNFzUMjctTIp8a9tuCQ==\"],\n\n    \"@yarnpkg/parsers\": [\"@yarnpkg/parsers@3.0.2\", \"\", { \"dependencies\": { \"js-yaml\": \"^3.10.0\", \"tslib\": \"^2.4.0\" } }, \"sha512-/HcYgtUSiJiot/XWGLOlGxPYUG65+/31V8oqk17vZLW1xlCoR4PampyePljOxY2n8/3jz9+tIFzICsyGujJZoA==\"],\n\n    \"@zkochan/js-yaml\": [\"@zkochan/js-yaml@0.0.7\", \"\", { \"dependencies\": { \"argparse\": \"^2.0.1\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-nrUSn7hzt7J6JWgWGz78ZYI8wj+gdIJdk0Ynjpp8l+trkn58Uqsf6RYrYkEK+3X18EX+TNdtJI0WxAtc+L84SQ==\"],\n\n    \"JSONStream\": [\"JSONStream@1.3.5\", \"\", { \"dependencies\": { \"jsonparse\": \"^1.2.0\", \"through\": \">=2.2.7 <3\" }, \"bin\": { \"JSONStream\": \"./bin.js\" } }, \"sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==\"],\n\n    \"abab\": [\"abab@2.0.6\", \"\", {}, \"sha512-j2afSsaIENvHZN2B8GOpF566vZ5WVk5opAiMTvWgaQT8DkbOqsTfvNAvHoRGU2zzP8cPoqys+xHTRDWW8L+/BA==\"],\n\n    \"abort-controller\": [\"abort-controller@3.0.0\", \"\", { \"dependencies\": { \"event-target-shim\": \"^5.0.0\" } }, \"sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==\"],\n\n    \"accepts\": [\"accepts@1.3.8\", \"\", { \"dependencies\": { \"mime-types\": \"~2.1.34\", \"negotiator\": \"0.6.3\" } }, \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\"],\n\n    \"accessor-fn\": [\"accessor-fn@1.5.3\", \"\", {}, \"sha512-rkAofCwe/FvYFUlMB0v0gWmhqtfAtV1IUkdPbfhTUyYniu5LrC0A0UJkTH0Jv3S8SvwkmfuAlY+mQIJATdocMA==\"],\n\n    \"aceternity-ui\": [\"aceternity-ui@0.2.2\", \"\", { \"dependencies\": { \"@antfu/ni\": \"^0.21.4\", \"@babel/core\": \"^7.22.1\", \"@babel/parser\": \"^7.22.6\", \"@babel/plugin-transform-typescript\": \"^7.22.5\", \"chalk\": \"5.2.0\", \"commander\": \"^10.0.0\", \"configstore\": \"^6.0.0\", \"cosmiconfig\": \"^8.1.3\", \"diff\": \"^5.1.0\", \"dotenv\": \"^16.4.5\", \"execa\": \"^7.0.0\", \"fast-glob\": \"^3.3.2\", \"fs-extra\": \"^11.1.0\", \"gradient-string\": \"^2.0.2\", \"https-proxy-agent\": \"^6.2.0\", \"lodash.template\": \"^4.5.0\", \"node-fetch\": \"^3.3.0\", \"ora\": \"^6.1.2\", \"posthog-node\": \"^4.0.1\", \"prompts\": \"^2.4.2\", \"recast\": \"^0.23.2\", \"ts-morph\": \"^18.0.0\", \"tsconfig-paths\": \"^4.2.0\", \"zod\": \"^3.20.2\" }, \"bin\": { \"aceternity-ui\": \"dist/index.js\" } }, \"sha512-Z+3dearhf4+NilAf4fCqM4POAMNsWkUNNFjj/2YilNfd4DIghbZk3IU5eu7nsECkMFFzWup2JLKcprNURp0Big==\"],\n\n    \"acorn\": [\"acorn@8.15.0\", \"\", { \"bin\": { \"acorn\": \"bin/acorn\" } }, \"sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\"],\n\n    \"acorn-globals\": [\"acorn-globals@7.0.1\", \"\", { \"dependencies\": { \"acorn\": \"^8.1.0\", \"acorn-walk\": \"^8.0.2\" } }, \"sha512-umOSDSDrfHbTNPuNpC2NSnnA3LUrqpevPb4T9jRx4MagXNS0rs+gwiTcAvqCRmsD6utzsrzNt+ebm00SNWiC3Q==\"],\n\n    \"acorn-jsx\": [\"acorn-jsx@5.3.2\", \"\", { \"peerDependencies\": { \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\" } }, \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\"],\n\n    \"acorn-walk\": [\"acorn-walk@8.3.4\", \"\", { \"dependencies\": { \"acorn\": \"^8.11.0\" } }, \"sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==\"],\n\n    \"agent-base\": [\"agent-base@7.1.4\", \"\", {}, \"sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==\"],\n\n    \"agentkeepalive\": [\"agentkeepalive@4.6.0\", \"\", { \"dependencies\": { \"humanize-ms\": \"^1.2.1\" } }, \"sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==\"],\n\n    \"ai\": [\"ai@5.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/gateway\": \"1.0.0\", \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.0\", \"@opentelemetry/api\": \"1.9.0\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-F4jOhOSeiZD8lXpF4l1hRqyM1jbqoLKGVZNxAP467wmQCsWUtElMa3Ki5PrDMq6qvUNC3deUKfERDAsfj7IDlg==\"],\n\n    \"ajv\": [\"ajv@6.12.6\", \"\", { \"dependencies\": { \"fast-deep-equal\": \"^3.1.1\", \"fast-json-stable-stringify\": \"^2.0.0\", \"json-schema-traverse\": \"^0.4.1\", \"uri-js\": \"^4.2.2\" } }, \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\"],\n\n    \"anser\": [\"anser@1.4.10\", \"\", {}, \"sha512-hCv9AqTQ8ycjpSd3upOJd7vFwW1JaoYQ7tpham03GJ1ca8/65rqn0RpaWpItOAd6ylW9wAw6luXYPJIyPFVOww==\"],\n\n    \"ansi-colors\": [\"ansi-colors@4.1.3\", \"\", {}, \"sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==\"],\n\n    \"ansi-escapes\": [\"ansi-escapes@4.3.2\", \"\", { \"dependencies\": { \"type-fest\": \"^0.21.3\" } }, \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\"],\n\n    \"ansi-regex\": [\"ansi-regex@6.1.0\", \"\", {}, \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\"],\n\n    \"ansi-styles\": [\"ansi-styles@6.2.1\", \"\", {}, \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\"],\n\n    \"ansis\": [\"ansis@3.17.0\", \"\", {}, \"sha512-0qWUglt9JEqLFr3w1I1pbrChn1grhaiAR2ocX1PP/flRmxgtwTzPFFFnfIlD6aMOLQZgSuCRlidD70lvx8yhzg==\"],\n\n    \"any-promise\": [\"any-promise@1.3.0\", \"\", {}, \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\"],\n\n    \"anymatch\": [\"anymatch@3.1.3\", \"\", { \"dependencies\": { \"normalize-path\": \"^3.0.0\", \"picomatch\": \"^2.0.4\" } }, \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\"],\n\n    \"arg\": [\"arg@4.1.3\", \"\", {}, \"sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==\"],\n\n    \"argparse\": [\"argparse@2.0.1\", \"\", {}, \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"],\n\n    \"aria-hidden\": [\"aria-hidden@1.2.6\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.0\" } }, \"sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==\"],\n\n    \"aria-query\": [\"aria-query@5.3.2\", \"\", {}, \"sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==\"],\n\n    \"array-buffer-byte-length\": [\"array-buffer-byte-length@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"is-array-buffer\": \"^3.0.5\" } }, \"sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==\"],\n\n    \"array-flatten\": [\"array-flatten@1.1.1\", \"\", {}, \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"],\n\n    \"array-ify\": [\"array-ify@1.0.0\", \"\", {}, \"sha512-c5AMf34bKdvPhQ7tBGhqkgKNUzMr4WUs+WDtC2ZUGOUncbxKMTvqxYctiseW3+L4bA8ec+GcZ6/A/FW4m8ukng==\"],\n\n    \"array-includes\": [\"array-includes@3.1.9\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.24.0\", \"es-object-atoms\": \"^1.1.1\", \"get-intrinsic\": \"^1.3.0\", \"is-string\": \"^1.1.1\", \"math-intrinsics\": \"^1.1.0\" } }, \"sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==\"],\n\n    \"array-timsort\": [\"array-timsort@1.0.3\", \"\", {}, \"sha512-/+3GRL7dDAGEfM6TseQk/U+mi18TU2Ms9I3UlLdUMhz2hbvGNTKdj9xniwXfUqgYhHxRx0+8UnKkvlNwVU+cWQ==\"],\n\n    \"array-union\": [\"array-union@2.1.0\", \"\", {}, \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\"],\n\n    \"array.prototype.findlast\": [\"array.prototype.findlast@1.2.5\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.2\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==\"],\n\n    \"array.prototype.findlastindex\": [\"array.prototype.findlastindex@1.2.6\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.9\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.1.1\", \"es-shim-unscopables\": \"^1.1.0\" } }, \"sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==\"],\n\n    \"array.prototype.flat\": [\"array.prototype.flat@1.3.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==\"],\n\n    \"array.prototype.flatmap\": [\"array.prototype.flatmap@1.3.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==\"],\n\n    \"array.prototype.tosorted\": [\"array.prototype.tosorted@1.1.4\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.3\", \"es-errors\": \"^1.3.0\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==\"],\n\n    \"arraybuffer.prototype.slice\": [\"arraybuffer.prototype.slice@1.0.4\", \"\", { \"dependencies\": { \"array-buffer-byte-length\": \"^1.0.1\", \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.6\", \"is-array-buffer\": \"^3.0.4\" } }, \"sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==\"],\n\n    \"arrify\": [\"arrify@2.0.1\", \"\", {}, \"sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==\"],\n\n    \"asap\": [\"asap@2.0.6\", \"\", {}, \"sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==\"],\n\n    \"ast-types\": [\"ast-types@0.16.1\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.1\" } }, \"sha512-6t10qk83GOG8p0vKmaCr8eiilZwO171AvbROMtvvNiwrTly62t+7XkA8RdIIVbpMhCASAsxgAzdRSwh6nw/5Dg==\"],\n\n    \"ast-types-flow\": [\"ast-types-flow@0.0.8\", \"\", {}, \"sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==\"],\n\n    \"astring\": [\"astring@1.9.0\", \"\", { \"bin\": { \"astring\": \"bin/astring\" } }, \"sha512-LElXdjswlqjWrPpJFg1Fx4wpkOCxj1TDHlSV4PlaRxHGWko024xICaa97ZkMfs6DRKlCguiAI+rbXv5GWwXIkg==\"],\n\n    \"async\": [\"async@3.2.6\", \"\", {}, \"sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\"],\n\n    \"async-function\": [\"async-function@1.0.0\", \"\", {}, \"sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==\"],\n\n    \"async-limiter\": [\"async-limiter@1.0.1\", \"\", {}, \"sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==\"],\n\n    \"async-lock\": [\"async-lock@1.4.1\", \"\", {}, \"sha512-Az2ZTpuytrtqENulXwO3GGv1Bztugx6TT37NIo7imr/Qo0gsYiGtSdBa2B6fsXhTpVZDNfu1Qn3pk531e3q+nQ==\"],\n\n    \"asynckit\": [\"asynckit@0.4.0\", \"\", {}, \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\"],\n\n    \"atomic-sleep\": [\"atomic-sleep@1.0.0\", \"\", {}, \"sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==\"],\n\n    \"autoprefixer\": [\"autoprefixer@10.4.21\", \"\", { \"dependencies\": { \"browserslist\": \"^4.24.4\", \"caniuse-lite\": \"^1.0.30001702\", \"fraction.js\": \"^4.3.7\", \"normalize-range\": \"^0.1.2\", \"picocolors\": \"^1.1.1\", \"postcss-value-parser\": \"^4.2.0\" }, \"peerDependencies\": { \"postcss\": \"^8.1.0\" }, \"bin\": { \"autoprefixer\": \"bin/autoprefixer\" } }, \"sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==\"],\n\n    \"available-typed-arrays\": [\"available-typed-arrays@1.0.7\", \"\", { \"dependencies\": { \"possible-typed-array-names\": \"^1.0.0\" } }, \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\"],\n\n    \"axe-core\": [\"axe-core@4.10.3\", \"\", {}, \"sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==\"],\n\n    \"axios\": [\"axios@1.7.4\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.0\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-DukmaFRnY6AzAALSH4J2M3k6PkaC+MfaAGdEERRWcC9q3/TWQwLpHR8ZRLKTdQ3aBDL64EdluRDjJqKw+BPZEw==\"],\n\n    \"axobject-query\": [\"axobject-query@4.1.0\", \"\", {}, \"sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==\"],\n\n    \"b4a\": [\"b4a@1.6.7\", \"\", {}, \"sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==\"],\n\n    \"babel-jest\": [\"babel-jest@29.7.0\", \"\", { \"dependencies\": { \"@jest/transform\": \"^29.7.0\", \"@types/babel__core\": \"^7.1.14\", \"babel-plugin-istanbul\": \"^6.1.1\", \"babel-preset-jest\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"graceful-fs\": \"^4.2.9\", \"slash\": \"^3.0.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.8.0\" } }, \"sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\"],\n\n    \"babel-plugin-istanbul\": [\"babel-plugin-istanbul@6.1.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.0.0\", \"@istanbuljs/load-nyc-config\": \"^1.0.0\", \"@istanbuljs/schema\": \"^0.1.2\", \"istanbul-lib-instrument\": \"^5.0.4\", \"test-exclude\": \"^6.0.0\" } }, \"sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==\"],\n\n    \"babel-plugin-jest-hoist\": [\"babel-plugin-jest-hoist@29.6.3\", \"\", { \"dependencies\": { \"@babel/template\": \"^7.3.3\", \"@babel/types\": \"^7.3.3\", \"@types/babel__core\": \"^7.1.14\", \"@types/babel__traverse\": \"^7.0.6\" } }, \"sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==\"],\n\n    \"babel-plugin-polyfill-corejs2\": [\"babel-plugin-polyfill-corejs2@0.4.14\", \"\", { \"dependencies\": { \"@babel/compat-data\": \"^7.27.7\", \"@babel/helper-define-polyfill-provider\": \"^0.6.5\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-Co2Y9wX854ts6U8gAAPXfn0GmAyctHuK8n0Yhfjd6t30g7yvKjspvvOo9yG+z52PZRgFErt7Ka2pYnXCjLKEpg==\"],\n\n    \"babel-plugin-polyfill-corejs3\": [\"babel-plugin-polyfill-corejs3@0.13.0\", \"\", { \"dependencies\": { \"@babel/helper-define-polyfill-provider\": \"^0.6.5\", \"core-js-compat\": \"^3.43.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-U+GNwMdSFgzVmfhNm8GJUX88AadB3uo9KpJqS3FaqNIPKgySuvMb+bHPsOmmuWyIcuqZj/pzt1RUIUZns4y2+A==\"],\n\n    \"babel-plugin-polyfill-regenerator\": [\"babel-plugin-polyfill-regenerator@0.6.5\", \"\", { \"dependencies\": { \"@babel/helper-define-polyfill-provider\": \"^0.6.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-ISqQ2frbiNU9vIJkzg7dlPpznPZ4jOiUQ1uSmB0fEHeowtN3COYRsXr/xexn64NpU13P06jc/L5TgiJXOgrbEg==\"],\n\n    \"babel-plugin-syntax-hermes-parser\": [\"babel-plugin-syntax-hermes-parser@0.29.1\", \"\", { \"dependencies\": { \"hermes-parser\": \"0.29.1\" } }, \"sha512-2WFYnoWGdmih1I1J5eIqxATOeycOqRwYxAQBu3cUu/rhwInwHUg7k60AFNbuGjSDL8tje5GDrAnxzRLcu2pYcA==\"],\n\n    \"babel-plugin-transform-flow-enums\": [\"babel-plugin-transform-flow-enums@0.0.2\", \"\", { \"dependencies\": { \"@babel/plugin-syntax-flow\": \"^7.12.1\" } }, \"sha512-g4aaCrDDOsWjbm0PUUeVnkcVd6AKJsVc/MbnPhEotEpkeJQP6b8nzewohQi7+QS8UyPehOhGWn0nOwjvWpmMvQ==\"],\n\n    \"babel-preset-current-node-syntax\": [\"babel-preset-current-node-syntax@1.2.0\", \"\", { \"dependencies\": { \"@babel/plugin-syntax-async-generators\": \"^7.8.4\", \"@babel/plugin-syntax-bigint\": \"^7.8.3\", \"@babel/plugin-syntax-class-properties\": \"^7.12.13\", \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\", \"@babel/plugin-syntax-import-attributes\": \"^7.24.7\", \"@babel/plugin-syntax-import-meta\": \"^7.10.4\", \"@babel/plugin-syntax-json-strings\": \"^7.8.3\", \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\", \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\", \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\", \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\", \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\", \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\", \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\", \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0 || ^8.0.0-0\" } }, \"sha512-E/VlAEzRrsLEb2+dv8yp3bo4scof3l9nR4lrld+Iy5NyVqgVYUJnDAmunkhPMisRI32Qc4iRiz425d8vM++2fg==\"],\n\n    \"babel-preset-jest\": [\"babel-preset-jest@29.6.3\", \"\", { \"dependencies\": { \"babel-plugin-jest-hoist\": \"^29.6.3\", \"babel-preset-current-node-syntax\": \"^1.0.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==\"],\n\n    \"bail\": [\"bail@2.0.2\", \"\", {}, \"sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==\"],\n\n    \"balanced-match\": [\"balanced-match@1.0.2\", \"\", {}, \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"],\n\n    \"bare-events\": [\"bare-events@2.6.1\", \"\", {}, \"sha512-AuTJkq9XmE6Vk0FJVNq5QxETrSA/vKHarWVBG5l/JbdCL1prJemiyJqUS0jrlXO0MftuPq4m3YVYhoNc5+aE/g==\"],\n\n    \"bare-fs\": [\"bare-fs@4.2.0\", \"\", { \"dependencies\": { \"bare-events\": \"^2.5.4\", \"bare-path\": \"^3.0.0\", \"bare-stream\": \"^2.6.4\" }, \"peerDependencies\": { \"bare-buffer\": \"*\" }, \"optionalPeers\": [\"bare-buffer\"] }, \"sha512-oRfrw7gwwBVAWx9S5zPMo2iiOjxyiZE12DmblmMQREgcogbNO0AFaZ+QBxxkEXiPspcpvO/Qtqn8LabUx4uYXg==\"],\n\n    \"bare-os\": [\"bare-os@3.6.1\", \"\", {}, \"sha512-uaIjxokhFidJP+bmmvKSgiMzj2sV5GPHaZVAIktcxcpCyBFFWO+YlikVAdhmUo2vYFvFhOXIAlldqV29L8126g==\"],\n\n    \"bare-path\": [\"bare-path@3.0.0\", \"\", { \"dependencies\": { \"bare-os\": \"^3.0.1\" } }, \"sha512-tyfW2cQcB5NN8Saijrhqn0Zh7AnFNsnczRcuWODH0eYAXBsJ5gVxAUuNr7tsHSC6IZ77cA0SitzT+s47kot8Mw==\"],\n\n    \"bare-stream\": [\"bare-stream@2.6.5\", \"\", { \"dependencies\": { \"streamx\": \"^2.21.0\" }, \"peerDependencies\": { \"bare-buffer\": \"*\", \"bare-events\": \"*\" }, \"optionalPeers\": [\"bare-buffer\", \"bare-events\"] }, \"sha512-jSmxKJNJmHySi6hC42zlZnq00rga4jjxcgNZjY9N5WlOe/iOoGRtdwGsHzQv2RlH2KOYMwGUXhf2zXd32BA9RA==\"],\n\n    \"base64-js\": [\"base64-js@1.5.1\", \"\", {}, \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\"],\n\n    \"basic-ftp\": [\"basic-ftp@5.0.5\", \"\", {}, \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\"],\n\n    \"bidi-js\": [\"bidi-js@1.0.3\", \"\", { \"dependencies\": { \"require-from-string\": \"^2.0.2\" } }, \"sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==\"],\n\n    \"big.js\": [\"big.js@6.2.2\", \"\", {}, \"sha512-y/ie+Faknx7sZA5MfGA2xKlu0GDv8RWrXGsmlteyJQ2lvoKv9GBK/fpRMc2qlSoBAgNxrixICFCBefIq8WCQpQ==\"],\n\n    \"bignumber.js\": [\"bignumber.js@9.3.1\", \"\", {}, \"sha512-Ko0uX15oIUS7wJ3Rb30Fs6SkVbLmPBAKdlm7q9+ak9bbIeFf0MwuBsQV6z7+X768/cHsfg+WlysDWJcmthjsjQ==\"],\n\n    \"binary-extensions\": [\"binary-extensions@2.3.0\", \"\", {}, \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\"],\n\n    \"bl\": [\"bl@4.1.0\", \"\", { \"dependencies\": { \"buffer\": \"^5.5.0\", \"inherits\": \"^2.0.4\", \"readable-stream\": \"^3.4.0\" } }, \"sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==\"],\n\n    \"body-parser\": [\"body-parser@1.20.2\", \"\", { \"dependencies\": { \"bytes\": \"3.1.2\", \"content-type\": \"~1.0.5\", \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"destroy\": \"1.2.0\", \"http-errors\": \"2.0.0\", \"iconv-lite\": \"0.4.24\", \"on-finished\": \"2.4.1\", \"qs\": \"6.11.0\", \"raw-body\": \"2.5.2\", \"type-is\": \"~1.6.18\", \"unpipe\": \"1.0.0\" } }, \"sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==\"],\n\n    \"brace-expansion\": [\"brace-expansion@1.1.12\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\", \"concat-map\": \"0.0.1\" } }, \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\"],\n\n    \"braces\": [\"braces@3.0.3\", \"\", { \"dependencies\": { \"fill-range\": \"^7.1.1\" } }, \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\"],\n\n    \"browserslist\": [\"browserslist@4.25.2\", \"\", { \"dependencies\": { \"caniuse-lite\": \"^1.0.30001733\", \"electron-to-chromium\": \"^1.5.199\", \"node-releases\": \"^2.0.19\", \"update-browserslist-db\": \"^1.1.3\" }, \"bin\": { \"browserslist\": \"cli.js\" } }, \"sha512-0si2SJK3ooGzIawRu61ZdPCO1IncZwS8IzuX73sPZsXW6EQ/w/DAfPyKI8l1ETTCr2MnvqWitmlCUxgdul45jA==\"],\n\n    \"bser\": [\"bser@2.1.1\", \"\", { \"dependencies\": { \"node-int64\": \"^0.4.0\" } }, \"sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==\"],\n\n    \"buffer\": [\"buffer@6.0.3\", \"\", { \"dependencies\": { \"base64-js\": \"^1.3.1\", \"ieee754\": \"^1.2.1\" } }, \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\"],\n\n    \"buffer-crc32\": [\"buffer-crc32@0.2.13\", \"\", {}, \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\"],\n\n    \"buffer-equal-constant-time\": [\"buffer-equal-constant-time@1.0.1\", \"\", {}, \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\"],\n\n    \"buffer-from\": [\"buffer-from@1.1.2\", \"\", {}, \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\"],\n\n    \"bun-types\": [\"bun-types@1.2.20\", \"\", { \"dependencies\": { \"@types/node\": \"*\" }, \"peerDependencies\": { \"@types/react\": \"^19\" } }, \"sha512-pxTnQYOrKvdOwyiyd/7sMt9yFOenN004Y6O4lCcCUoKVej48FS5cvTw9geRaEcB9TsDZaJKAxPTVvi8tFsVuXA==\"],\n\n    \"busboy\": [\"busboy@1.6.0\", \"\", { \"dependencies\": { \"streamsearch\": \"^1.1.0\" } }, \"sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==\"],\n\n    \"bytes\": [\"bytes@3.1.2\", \"\", {}, \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\"],\n\n    \"call-bind\": [\"call-bind@1.0.8\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.0\", \"es-define-property\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.4\", \"set-function-length\": \"^1.2.2\" } }, \"sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==\"],\n\n    \"call-bind-apply-helpers\": [\"call-bind-apply-helpers@1.0.2\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"function-bind\": \"^1.1.2\" } }, \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\"],\n\n    \"call-bound\": [\"call-bound@1.0.4\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.2\", \"get-intrinsic\": \"^1.3.0\" } }, \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\"],\n\n    \"caller-callsite\": [\"caller-callsite@2.0.0\", \"\", { \"dependencies\": { \"callsites\": \"^2.0.0\" } }, \"sha512-JuG3qI4QOftFsZyOn1qq87fq5grLIyk1JYd5lJmdA+fG7aQ9pA/i3JIJGcO3q0MrRcHlOt1U+ZeHW8Dq9axALQ==\"],\n\n    \"caller-path\": [\"caller-path@2.0.0\", \"\", { \"dependencies\": { \"caller-callsite\": \"^2.0.0\" } }, \"sha512-MCL3sf6nCSXOwCTzvPKhN18TU7AHTvdtam8DAogxcrJ8Rjfbbg7Lgng64H9Iy+vUV6VGFClN/TyxBkAebLRR4A==\"],\n\n    \"callsites\": [\"callsites@3.1.0\", \"\", {}, \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\"],\n\n    \"camel-case\": [\"camel-case@4.1.2\", \"\", { \"dependencies\": { \"pascal-case\": \"^3.1.2\", \"tslib\": \"^2.0.3\" } }, \"sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==\"],\n\n    \"camelcase\": [\"camelcase@6.3.0\", \"\", {}, \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\"],\n\n    \"camelcase-css\": [\"camelcase-css@2.0.1\", \"\", {}, \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\"],\n\n    \"camera-controls\": [\"camera-controls@2.10.1\", \"\", { \"peerDependencies\": { \"three\": \">=0.126.1\" } }, \"sha512-KnaKdcvkBJ1Irbrzl8XD6WtZltkRjp869Jx8c0ujs9K+9WD+1D7ryBsCiVqJYUqt6i/HR5FxT7RLASieUD+Q5w==\"],\n\n    \"caniuse-lite\": [\"caniuse-lite@1.0.30001734\", \"\", {}, \"sha512-uhE1Ye5vgqju6OI71HTQqcBCZrvHugk0MjLak7Q+HfoBgoq5Bi+5YnwjP4fjDgrtYr/l8MVRBvzz9dPD4KyK0A==\"],\n\n    \"ccount\": [\"ccount@2.0.1\", \"\", {}, \"sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==\"],\n\n    \"chalk\": [\"chalk@4.1.2\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.1.0\", \"supports-color\": \"^7.1.0\" } }, \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\"],\n\n    \"char-regex\": [\"char-regex@1.0.2\", \"\", {}, \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\"],\n\n    \"character-entities\": [\"character-entities@2.0.2\", \"\", {}, \"sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==\"],\n\n    \"character-entities-html4\": [\"character-entities-html4@2.1.0\", \"\", {}, \"sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==\"],\n\n    \"character-entities-legacy\": [\"character-entities-legacy@3.0.0\", \"\", {}, \"sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==\"],\n\n    \"character-reference-invalid\": [\"character-reference-invalid@2.0.1\", \"\", {}, \"sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==\"],\n\n    \"chevrotain\": [\"chevrotain@11.0.3\", \"\", { \"dependencies\": { \"@chevrotain/cst-dts-gen\": \"11.0.3\", \"@chevrotain/gast\": \"11.0.3\", \"@chevrotain/regexp-to-ast\": \"11.0.3\", \"@chevrotain/types\": \"11.0.3\", \"@chevrotain/utils\": \"11.0.3\", \"lodash-es\": \"4.17.21\" } }, \"sha512-ci2iJH6LeIkvP9eJW6gpueU8cnZhv85ELY8w8WiFtNjMHA5ad6pQLaJo9mEly/9qUyCpvqX8/POVUTf18/HFdw==\"],\n\n    \"chevrotain-allstar\": [\"chevrotain-allstar@0.3.1\", \"\", { \"dependencies\": { \"lodash-es\": \"^4.17.21\" }, \"peerDependencies\": { \"chevrotain\": \"^11.0.0\" } }, \"sha512-b7g+y9A0v4mxCW1qUhf3BSVPg+/NvGErk/dOkrDaHA0nQIQGAtrOjlX//9OQtRlSCy+x9rfB5N8yC71lH1nvMw==\"],\n\n    \"chokidar\": [\"chokidar@3.6.0\", \"\", { \"dependencies\": { \"anymatch\": \"~3.1.2\", \"braces\": \"~3.0.2\", \"glob-parent\": \"~5.1.2\", \"is-binary-path\": \"~2.1.0\", \"is-glob\": \"~4.0.1\", \"normalize-path\": \"~3.0.0\", \"readdirp\": \"~3.6.0\" }, \"optionalDependencies\": { \"fsevents\": \"~2.3.2\" } }, \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\"],\n\n    \"chrome-launcher\": [\"chrome-launcher@0.15.2\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"escape-string-regexp\": \"^4.0.0\", \"is-wsl\": \"^2.2.0\", \"lighthouse-logger\": \"^1.0.0\" }, \"bin\": { \"print-chrome-path\": \"bin/print-chrome-path.js\" } }, \"sha512-zdLEwNo3aUVzIhKhTtXfxhdvZhUghrnmkvcAq2NoDd+LeOHKf03H5jwZ8T/STsAlzyALkBVK552iaG1fGf1xVQ==\"],\n\n    \"chromium-bidi\": [\"chromium-bidi@7.3.1\", \"\", { \"dependencies\": { \"mitt\": \"^3.0.1\", \"zod\": \"^3.24.1\" }, \"peerDependencies\": { \"devtools-protocol\": \"*\" } }, \"sha512-i+BMGluhZZc4Jic9L1aHJBTfaopxmCqQxGklyMcqFx4fvF3nI4BJ3bCe1ad474nvYRIo/ZN/VrdA4eOaRZua4Q==\"],\n\n    \"chromium-edge-launcher\": [\"chromium-edge-launcher@0.2.0\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"escape-string-regexp\": \"^4.0.0\", \"is-wsl\": \"^2.2.0\", \"lighthouse-logger\": \"^1.0.0\", \"mkdirp\": \"^1.0.4\", \"rimraf\": \"^3.0.2\" } }, \"sha512-JfJjUnq25y9yg4FABRRVPmBGWPZZi+AQXT4mxupb67766/0UlhG8PAZCz6xzEMXTbW3CsSoE8PcCWA49n35mKg==\"],\n\n    \"ci-info\": [\"ci-info@3.9.0\", \"\", {}, \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==\"],\n\n    \"cjs-module-lexer\": [\"cjs-module-lexer@1.4.3\", \"\", {}, \"sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==\"],\n\n    \"class-variance-authority\": [\"class-variance-authority@0.7.1\", \"\", { \"dependencies\": { \"clsx\": \"^2.1.1\" } }, \"sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==\"],\n\n    \"clean-git-ref\": [\"clean-git-ref@2.0.1\", \"\", {}, \"sha512-bLSptAy2P0s6hU4PzuIMKmMJJSE6gLXGH1cntDu7bWJUksvuM+7ReOK61mozULErYvP6a15rnYl0zFDef+pyPw==\"],\n\n    \"clean-stack\": [\"clean-stack@3.0.1\", \"\", { \"dependencies\": { \"escape-string-regexp\": \"4.0.0\" } }, \"sha512-lR9wNiMRcVQjSB3a7xXGLuz4cr4wJuuXlaAEbRutGowQTmlp7R72/DOgN21e8jdwblMWl9UOJMJXarX94pzKdg==\"],\n\n    \"cli-cursor\": [\"cli-cursor@3.1.0\", \"\", { \"dependencies\": { \"restore-cursor\": \"^3.1.0\" } }, \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\"],\n\n    \"cli-spinners\": [\"cli-spinners@2.9.2\", \"\", {}, \"sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==\"],\n\n    \"cli-truncate\": [\"cli-truncate@4.0.0\", \"\", { \"dependencies\": { \"slice-ansi\": \"^5.0.0\", \"string-width\": \"^7.0.0\" } }, \"sha512-nPdaFdQ0h/GEigbPClz11D0v/ZJEwxmeVZGeMo3Z5StPtUTkA9o1lD6QwoirYiSDzbcwn2XcjwmCp68W1IS4TA==\"],\n\n    \"client-only\": [\"client-only@0.0.1\", \"\", {}, \"sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==\"],\n\n    \"clipanion\": [\"clipanion@3.2.1\", \"\", { \"dependencies\": { \"typanion\": \"^3.8.0\" } }, \"sha512-dYFdjLb7y1ajfxQopN05mylEpK9ZX0sO1/RfMXdfmwjlIsPkbh4p7A682x++zFPLDCo1x3p82dtljHf5cW2LKA==\"],\n\n    \"cliui\": [\"cliui@8.0.1\", \"\", { \"dependencies\": { \"string-width\": \"^4.2.0\", \"strip-ansi\": \"^6.0.1\", \"wrap-ansi\": \"^7.0.0\" } }, \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\"],\n\n    \"clone\": [\"clone@1.0.4\", \"\", {}, \"sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==\"],\n\n    \"clsx\": [\"clsx@2.1.1\", \"\", {}, \"sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==\"],\n\n    \"co\": [\"co@4.6.0\", \"\", {}, \"sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==\"],\n\n    \"cobe\": [\"cobe@0.6.4\", \"\", { \"dependencies\": { \"phenomenon\": \"^1.6.0\" } }, \"sha512-huuGFnDoXLy/tsCZYYa/H35BBRs9cxsS0XKJ3BXjRp699cQKuoEVrvKlAQMx0DKXG7+VUv4jsHVrS7yPbkLSkQ==\"],\n\n    \"code-block-writer\": [\"code-block-writer@12.0.0\", \"\", {}, \"sha512-q4dMFMlXtKR3XNBHyMHt/3pwYNA69EDk00lloMOaaUMKPUXBw6lpXtbu3MMVG6/uOihGnRDOlkyqsONEUj60+w==\"],\n\n    \"collapse-white-space\": [\"collapse-white-space@2.1.0\", \"\", {}, \"sha512-loKTxY1zCOuG4j9f6EPnuyyYkf58RnhhWTvRoZEokgB+WbdXehfjFviyOVYkqzEWz1Q5kRiZdBYS5SwxbQYwzw==\"],\n\n    \"collect-v8-coverage\": [\"collect-v8-coverage@1.0.2\", \"\", {}, \"sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==\"],\n\n    \"color-convert\": [\"color-convert@2.0.1\", \"\", { \"dependencies\": { \"color-name\": \"~1.1.4\" } }, \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\"],\n\n    \"color-name\": [\"color-name@1.1.4\", \"\", {}, \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"],\n\n    \"colorette\": [\"colorette@2.0.20\", \"\", {}, \"sha512-IfEDxwoWIjkeXL1eXcDiow4UbKjhLdq6/EuSVR9GMN7KVH3r9gQ83e73hsz1Nd1T3ijd5xv1wcWRYO+D6kCI2w==\"],\n\n    \"combined-stream\": [\"combined-stream@1.0.8\", \"\", { \"dependencies\": { \"delayed-stream\": \"~1.0.0\" } }, \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\"],\n\n    \"comma-separated-tokens\": [\"comma-separated-tokens@2.0.3\", \"\", {}, \"sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==\"],\n\n    \"commander\": [\"commander@13.1.0\", \"\", {}, \"sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==\"],\n\n    \"comment-json\": [\"comment-json@4.2.5\", \"\", { \"dependencies\": { \"array-timsort\": \"^1.0.3\", \"core-util-is\": \"^1.0.3\", \"esprima\": \"^4.0.1\", \"has-own-prop\": \"^2.0.0\", \"repeat-string\": \"^1.6.1\" } }, \"sha512-bKw/r35jR3HGt5PEPm1ljsQQGyCrR8sFGNiN5L+ykDHdpO8Smxkrkla9Yi6NkQyUrb8V54PGhfMs6NrIwtxtdw==\"],\n\n    \"compare-func\": [\"compare-func@2.0.0\", \"\", { \"dependencies\": { \"array-ify\": \"^1.0.0\", \"dot-prop\": \"^5.1.0\" } }, \"sha512-zHig5N+tPWARooBnb0Zx1MFcdfpyJrfTJ3Y5L+IFvUm8rM74hHz66z0gw0x4tijh5CorKkKUCnW82R2vmpeCRA==\"],\n\n    \"concat-map\": [\"concat-map@0.0.1\", \"\", {}, \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\"],\n\n    \"confbox\": [\"confbox@0.2.2\", \"\", {}, \"sha512-1NB+BKqhtNipMsov4xI/NnhCKp9XG9NamYp5PVm9klAT0fsrNPjaFICsCFhNhwZJKNh7zB/3q8qXz0E9oaMNtQ==\"],\n\n    \"configstore\": [\"configstore@6.0.0\", \"\", { \"dependencies\": { \"dot-prop\": \"^6.0.1\", \"graceful-fs\": \"^4.2.6\", \"unique-string\": \"^3.0.0\", \"write-file-atomic\": \"^3.0.3\", \"xdg-basedir\": \"^5.0.1\" } }, \"sha512-cD31W1v3GqUlQvbBCGcXmd2Nj9SvLDOP1oQ0YFuLETufzSPaKp11rYBsSOm7rCsW3OnIRAFM3OxRhceaXNYHkA==\"],\n\n    \"connect\": [\"connect@3.7.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"finalhandler\": \"1.1.2\", \"parseurl\": \"~1.3.3\", \"utils-merge\": \"1.0.1\" } }, \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\"],\n\n    \"content-disposition\": [\"content-disposition@0.5.4\", \"\", { \"dependencies\": { \"safe-buffer\": \"5.2.1\" } }, \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\"],\n\n    \"content-type\": [\"content-type@1.0.5\", \"\", {}, \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\"],\n\n    \"contentlayer\": [\"contentlayer@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/cli\": \"0.3.4\", \"@contentlayer/client\": \"0.3.4\", \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/source-files\": \"0.3.4\", \"@contentlayer/source-remote-files\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\" }, \"bin\": \"./bin/cli.cjs\" }, \"sha512-FYDdTUFaN4yqep0waswrhcXjmMJnPD5iXDTtxcUCGdklfuIrXM2xLx51xl748cHmGA6IsC+27YZFxU6Ym13QIA==\"],\n\n    \"conventional-changelog-angular\": [\"conventional-changelog-angular@7.0.0\", \"\", { \"dependencies\": { \"compare-func\": \"^2.0.0\" } }, \"sha512-ROjNchA9LgfNMTTFSIWPzebCwOGFdgkEq45EnvvrmSLvCtAw0HSmrCs7/ty+wAeYUZyNay0YMUNYFTRL72PkBQ==\"],\n\n    \"conventional-changelog-conventionalcommits\": [\"conventional-changelog-conventionalcommits@7.0.2\", \"\", { \"dependencies\": { \"compare-func\": \"^2.0.0\" } }, \"sha512-NKXYmMR/Hr1DevQegFB4MwfM5Vv0m4UIxKZTTYuD98lpTknaZlSRrDOG4X7wIXpGkfsYxZTghUN+Qq+T0YQI7w==\"],\n\n    \"conventional-commits-parser\": [\"conventional-commits-parser@5.0.0\", \"\", { \"dependencies\": { \"JSONStream\": \"^1.3.5\", \"is-text-path\": \"^2.0.0\", \"meow\": \"^12.0.1\", \"split2\": \"^4.0.0\" }, \"bin\": { \"conventional-commits-parser\": \"cli.mjs\" } }, \"sha512-ZPMl0ZJbw74iS9LuX9YIAiW8pfM5p3yh2o/NbXHbkFuZzY5jvdi5jFycEOkmBW5H5I7nA+D6f3UcsCLP2vvSEA==\"],\n\n    \"convert-source-map\": [\"convert-source-map@2.0.0\", \"\", {}, \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\"],\n\n    \"cookie\": [\"cookie@0.6.0\", \"\", {}, \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\"],\n\n    \"cookie-signature\": [\"cookie-signature@1.0.6\", \"\", {}, \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"],\n\n    \"core-js\": [\"core-js@3.45.0\", \"\", {}, \"sha512-c2KZL9lP4DjkN3hk/an4pWn5b5ZefhRJnAc42n6LJ19kSnbeRbdQZE5dSeE2LBol1OwJD3X1BQvFTAsa8ReeDA==\"],\n\n    \"core-js-compat\": [\"core-js-compat@3.45.0\", \"\", { \"dependencies\": { \"browserslist\": \"^4.25.1\" } }, \"sha512-gRoVMBawZg0OnxaVv3zpqLLxaHmsubEGyTnqdpI/CEBvX4JadI1dMSHxagThprYRtSVbuQxvi6iUatdPxohHpA==\"],\n\n    \"core-util-is\": [\"core-util-is@1.0.3\", \"\", {}, \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\"],\n\n    \"cors\": [\"cors@2.8.5\", \"\", { \"dependencies\": { \"object-assign\": \"^4\", \"vary\": \"^1\" } }, \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\"],\n\n    \"cose-base\": [\"cose-base@1.0.3\", \"\", { \"dependencies\": { \"layout-base\": \"^1.0.0\" } }, \"sha512-s9whTXInMSgAp/NVXVNuVxVKzGH2qck3aQlVHxDCdAEPgtMKwc4Wq6/QKhgdEdgbLSi9rBTAcPoRa6JpiG4ksg==\"],\n\n    \"cosmiconfig\": [\"cosmiconfig@8.3.6\", \"\", { \"dependencies\": { \"import-fresh\": \"^3.3.0\", \"js-yaml\": \"^4.1.0\", \"parse-json\": \"^5.2.0\", \"path-type\": \"^4.0.0\" }, \"peerDependencies\": { \"typescript\": \">=4.9.5\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-kcZ6+W5QzcJ3P1Mt+83OUv/oHFqZHIx8DuxG6eZ5RGMERoLqp4BuGjhHLYGK+Kf5XVkQvqBSmAy/nGWN3qDgEA==\"],\n\n    \"cosmiconfig-typescript-loader\": [\"cosmiconfig-typescript-loader@6.1.0\", \"\", { \"dependencies\": { \"jiti\": \"^2.4.1\" }, \"peerDependencies\": { \"@types/node\": \"*\", \"cosmiconfig\": \">=9\", \"typescript\": \">=5\" } }, \"sha512-tJ1w35ZRUiM5FeTzT7DtYWAFFv37ZLqSRkGi2oeCK1gPhvaWjkAtfXvLmvE1pRfxxp9aQo6ba/Pvg1dKj05D4g==\"],\n\n    \"crc-32\": [\"crc-32@1.2.2\", \"\", { \"bin\": { \"crc32\": \"bin/crc32.njs\" } }, \"sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==\"],\n\n    \"create-jest\": [\"create-jest@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"exit\": \"^0.1.2\", \"graceful-fs\": \"^4.2.9\", \"jest-config\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"prompts\": \"^2.0.1\" }, \"bin\": { \"create-jest\": \"bin/create-jest.js\" } }, \"sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==\"],\n\n    \"create-require\": [\"create-require@1.1.1\", \"\", {}, \"sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==\"],\n\n    \"cross-env\": [\"cross-env@7.0.3\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.1\" }, \"bin\": { \"cross-env\": \"src/bin/cross-env.js\", \"cross-env-shell\": \"src/bin/cross-env-shell.js\" } }, \"sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==\"],\n\n    \"cross-spawn\": [\"cross-spawn@7.0.6\", \"\", { \"dependencies\": { \"path-key\": \"^3.1.0\", \"shebang-command\": \"^2.0.0\", \"which\": \"^2.0.1\" } }, \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\"],\n\n    \"crypto-random-string\": [\"crypto-random-string@4.0.0\", \"\", { \"dependencies\": { \"type-fest\": \"^1.0.1\" } }, \"sha512-x8dy3RnvYdlUcPOjkEHqozhiwzKNSq7GcPuXFbnyMOCHxX8V3OgIg/pYuabl2sbUPfIJaeAQB7PMOK8DFIdoRA==\"],\n\n    \"css.escape\": [\"css.escape@1.5.1\", \"\", {}, \"sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==\"],\n\n    \"cssesc\": [\"cssesc@3.0.0\", \"\", { \"bin\": { \"cssesc\": \"bin/cssesc\" } }, \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\"],\n\n    \"cssom\": [\"cssom@0.5.0\", \"\", {}, \"sha512-iKuQcq+NdHqlAcwUY0o/HL69XQrUaQdMjmStJ8JFmUaiiQErlhrmuigkg/CU4E2J0IyUKUrMAgl36TvN67MqTw==\"],\n\n    \"cssstyle\": [\"cssstyle@2.3.0\", \"\", { \"dependencies\": { \"cssom\": \"~0.3.6\" } }, \"sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4n1lDStOtj7FKycP71A==\"],\n\n    \"csstype\": [\"csstype@3.1.3\", \"\", {}, \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\"],\n\n    \"cytoscape\": [\"cytoscape@3.33.1\", \"\", {}, \"sha512-iJc4TwyANnOGR1OmWhsS9ayRS3s+XQ185FmuHObThD+5AeJCakAAbWv8KimMTt08xCCLNgneQwFp+JRJOr9qGQ==\"],\n\n    \"cytoscape-cose-bilkent\": [\"cytoscape-cose-bilkent@4.1.0\", \"\", { \"dependencies\": { \"cose-base\": \"^1.0.0\" }, \"peerDependencies\": { \"cytoscape\": \"^3.2.0\" } }, \"sha512-wgQlVIUJF13Quxiv5e1gstZ08rnZj2XaLHGoFMYXz7SkNfCDOOteKBE6SYRfA9WxxI/iBc3ajfDoc6hb/MRAHQ==\"],\n\n    \"cytoscape-fcose\": [\"cytoscape-fcose@2.2.0\", \"\", { \"dependencies\": { \"cose-base\": \"^2.2.0\" }, \"peerDependencies\": { \"cytoscape\": \"^3.2.0\" } }, \"sha512-ki1/VuRIHFCzxWNrsshHYPs6L7TvLu3DL+TyIGEsRcvVERmxokbf5Gdk7mFxZnTdiGtnA4cfSmjZJMviqSuZrQ==\"],\n\n    \"d3\": [\"d3@7.9.0\", \"\", { \"dependencies\": { \"d3-array\": \"3\", \"d3-axis\": \"3\", \"d3-brush\": \"3\", \"d3-chord\": \"3\", \"d3-color\": \"3\", \"d3-contour\": \"4\", \"d3-delaunay\": \"6\", \"d3-dispatch\": \"3\", \"d3-drag\": \"3\", \"d3-dsv\": \"3\", \"d3-ease\": \"3\", \"d3-fetch\": \"3\", \"d3-force\": \"3\", \"d3-format\": \"3\", \"d3-geo\": \"3\", \"d3-hierarchy\": \"3\", \"d3-interpolate\": \"3\", \"d3-path\": \"3\", \"d3-polygon\": \"3\", \"d3-quadtree\": \"3\", \"d3-random\": \"3\", \"d3-scale\": \"4\", \"d3-scale-chromatic\": \"3\", \"d3-selection\": \"3\", \"d3-shape\": \"3\", \"d3-time\": \"3\", \"d3-time-format\": \"4\", \"d3-timer\": \"3\", \"d3-transition\": \"3\", \"d3-zoom\": \"3\" } }, \"sha512-e1U46jVP+w7Iut8Jt8ri1YsPOvFpg46k+K8TpCb0P+zjCkjkPnV7WzfDJzMHy1LnA+wj5pLT1wjO901gLXeEhA==\"],\n\n    \"d3-array\": [\"d3-array@3.2.4\", \"\", { \"dependencies\": { \"internmap\": \"1 - 2\" } }, \"sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==\"],\n\n    \"d3-axis\": [\"d3-axis@3.0.0\", \"\", {}, \"sha512-IH5tgjV4jE/GhHkRV0HiVYPDtvfjHQlQfJHs0usq7M30XcSBvOotpmH1IgkcXsO/5gEQZD43B//fc7SRT5S+xw==\"],\n\n    \"d3-brush\": [\"d3-brush@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-drag\": \"2 - 3\", \"d3-interpolate\": \"1 - 3\", \"d3-selection\": \"3\", \"d3-transition\": \"3\" } }, \"sha512-ALnjWlVYkXsVIGlOsuWH1+3udkYFI48Ljihfnh8FZPF2QS9o+PzGLBslO0PjzVoHLZ2KCVgAM8NVkXPJB2aNnQ==\"],\n\n    \"d3-chord\": [\"d3-chord@3.0.1\", \"\", { \"dependencies\": { \"d3-path\": \"1 - 3\" } }, \"sha512-VE5S6TNa+j8msksl7HwjxMHDM2yNK3XCkusIlpX5kwauBfXuyLAtNg9jCp/iHH61tgI4sb6R/EIMWCqEIdjT/g==\"],\n\n    \"d3-color\": [\"d3-color@3.1.0\", \"\", {}, \"sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==\"],\n\n    \"d3-contour\": [\"d3-contour@4.0.2\", \"\", { \"dependencies\": { \"d3-array\": \"^3.2.0\" } }, \"sha512-4EzFTRIikzs47RGmdxbeUvLWtGedDUNkTcmzoeyg4sP/dvCexO47AaQL7VKy/gul85TOxw+IBgA8US2xwbToNA==\"],\n\n    \"d3-delaunay\": [\"d3-delaunay@6.0.4\", \"\", { \"dependencies\": { \"delaunator\": \"5\" } }, \"sha512-mdjtIZ1XLAM8bm/hx3WwjfHt6Sggek7qH043O8KEjDXN40xi3vx/6pYSVTwLjEgiXQTbvaouWKynLBiUZ6SK6A==\"],\n\n    \"d3-dispatch\": [\"d3-dispatch@3.0.1\", \"\", {}, \"sha512-rzUyPU/S7rwUflMyLc1ETDeBj0NRuHKKAcvukozwhshr6g6c5d8zh4c2gQjY2bZ0dXeGLWc1PF174P2tVvKhfg==\"],\n\n    \"d3-drag\": [\"d3-drag@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-selection\": \"3\" } }, \"sha512-pWbUJLdETVA8lQNJecMxoXfH6x+mO2UQo8rSmZ+QqxcbyA3hfeprFgIT//HW2nlHChWeIIMwS2Fq+gEARkhTkg==\"],\n\n    \"d3-dsv\": [\"d3-dsv@3.0.1\", \"\", { \"dependencies\": { \"commander\": \"7\", \"iconv-lite\": \"0.6\", \"rw\": \"1\" }, \"bin\": { \"csv2json\": \"bin/dsv2json.js\", \"csv2tsv\": \"bin/dsv2dsv.js\", \"dsv2dsv\": \"bin/dsv2dsv.js\", \"dsv2json\": \"bin/dsv2json.js\", \"json2csv\": \"bin/json2dsv.js\", \"json2dsv\": \"bin/json2dsv.js\", \"json2tsv\": \"bin/json2dsv.js\", \"tsv2csv\": \"bin/dsv2dsv.js\", \"tsv2json\": \"bin/dsv2json.js\" } }, \"sha512-UG6OvdI5afDIFP9w4G0mNq50dSOsXHJaRE8arAS5o9ApWnIElp8GZw1Dun8vP8OyHOZ/QJUKUJwxiiCCnUwm+Q==\"],\n\n    \"d3-ease\": [\"d3-ease@3.0.1\", \"\", {}, \"sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==\"],\n\n    \"d3-fetch\": [\"d3-fetch@3.0.1\", \"\", { \"dependencies\": { \"d3-dsv\": \"1 - 3\" } }, \"sha512-kpkQIM20n3oLVBKGg6oHrUchHM3xODkTzjMoj7aWQFq5QEM+R6E4WkzT5+tojDY7yjez8KgCBRoj4aEr99Fdqw==\"],\n\n    \"d3-force\": [\"d3-force@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-quadtree\": \"1 - 3\", \"d3-timer\": \"1 - 3\" } }, \"sha512-zxV/SsA+U4yte8051P4ECydjD/S+qeYtnaIyAs9tgHCqfguma/aAQDjo85A9Z6EKhBirHRJHXIgJUlffT4wdLg==\"],\n\n    \"d3-format\": [\"d3-format@3.1.0\", \"\", {}, \"sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==\"],\n\n    \"d3-geo\": [\"d3-geo@3.1.1\", \"\", { \"dependencies\": { \"d3-array\": \"2.5.0 - 3\" } }, \"sha512-637ln3gXKXOwhalDzinUgY83KzNWZRKbYubaG+fGVuc/dxO64RRljtCTnf5ecMyE1RIdtqpkVcq0IbtU2S8j2Q==\"],\n\n    \"d3-geo-voronoi\": [\"d3-geo-voronoi@2.1.0\", \"\", { \"dependencies\": { \"d3-array\": \"3\", \"d3-delaunay\": \"6\", \"d3-geo\": \"3\", \"d3-tricontour\": \"1\" } }, \"sha512-kqE4yYuOjPbKdBXG0xztCacPwkVSK2REF1opSNrnqqtXJmNcM++UbwQ8SxvwP6IQTj9RvIjjK4qeiVsEfj0Z2Q==\"],\n\n    \"d3-hierarchy\": [\"d3-hierarchy@3.1.2\", \"\", {}, \"sha512-FX/9frcub54beBdugHjDCdikxThEqjnR93Qt7PvQTOHxyiNCAlvMrHhclk3cD5VeAaq9fxmfRp+CnWw9rEMBuA==\"],\n\n    \"d3-interpolate\": [\"d3-interpolate@3.0.1\", \"\", { \"dependencies\": { \"d3-color\": \"1 - 3\" } }, \"sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==\"],\n\n    \"d3-octree\": [\"d3-octree@1.1.0\", \"\", {}, \"sha512-F8gPlqpP+HwRPMO/8uOu5wjH110+6q4cgJvgJT6vlpy3BEaDIKlTZrgHKZSp/i1InRpVfh4puY/kvL6MxK930A==\"],\n\n    \"d3-path\": [\"d3-path@3.1.0\", \"\", {}, \"sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==\"],\n\n    \"d3-polygon\": [\"d3-polygon@3.0.1\", \"\", {}, \"sha512-3vbA7vXYwfe1SYhED++fPUQlWSYTTGmFmQiany/gdbiWgU/iEyQzyymwL9SkJjFFuCS4902BSzewVGsHHmHtXg==\"],\n\n    \"d3-quadtree\": [\"d3-quadtree@3.0.1\", \"\", {}, \"sha512-04xDrxQTDTCFwP5H6hRhsRcb9xxv2RzkcsygFzmkSIOJy3PeRJP7sNk3VRIbKXcog561P9oU0/rVH6vDROAgUw==\"],\n\n    \"d3-random\": [\"d3-random@3.0.1\", \"\", {}, \"sha512-FXMe9GfxTxqd5D6jFsQ+DJ8BJS4E/fT5mqqdjovykEB2oFbTMDVdg1MGFxfQW+FBOGoB++k8swBrgwSHT1cUXQ==\"],\n\n    \"d3-sankey\": [\"d3-sankey@0.12.3\", \"\", { \"dependencies\": { \"d3-array\": \"1 - 2\", \"d3-shape\": \"^1.2.0\" } }, \"sha512-nQhsBRmM19Ax5xEIPLMY9ZmJ/cDvd1BG3UVvt5h3WRxKg5zGRbvnteTyWAbzeSvlh3tW7ZEmq4VwR5mB3tutmQ==\"],\n\n    \"d3-scale\": [\"d3-scale@4.0.2\", \"\", { \"dependencies\": { \"d3-array\": \"2.10.0 - 3\", \"d3-format\": \"1 - 3\", \"d3-interpolate\": \"1.2.0 - 3\", \"d3-time\": \"2.1.1 - 3\", \"d3-time-format\": \"2 - 4\" } }, \"sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==\"],\n\n    \"d3-scale-chromatic\": [\"d3-scale-chromatic@3.1.0\", \"\", { \"dependencies\": { \"d3-color\": \"1 - 3\", \"d3-interpolate\": \"1 - 3\" } }, \"sha512-A3s5PWiZ9YCXFye1o246KoscMWqf8BsD9eRiJ3He7C9OBaxKhAd5TFCdEx/7VbKtxxTsu//1mMJFrEt572cEyQ==\"],\n\n    \"d3-selection\": [\"d3-selection@3.0.0\", \"\", {}, \"sha512-fmTRWbNMmsmWq6xJV8D19U/gw/bwrHfNXxrIN+HfZgnzqTHp9jOmKMhsTUjXOJnZOdZY9Q28y4yebKzqDKlxlQ==\"],\n\n    \"d3-shape\": [\"d3-shape@3.2.0\", \"\", { \"dependencies\": { \"d3-path\": \"^3.1.0\" } }, \"sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==\"],\n\n    \"d3-time\": [\"d3-time@3.1.0\", \"\", { \"dependencies\": { \"d3-array\": \"2 - 3\" } }, \"sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==\"],\n\n    \"d3-time-format\": [\"d3-time-format@4.1.0\", \"\", { \"dependencies\": { \"d3-time\": \"1 - 3\" } }, \"sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==\"],\n\n    \"d3-timer\": [\"d3-timer@3.0.1\", \"\", {}, \"sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==\"],\n\n    \"d3-transition\": [\"d3-transition@3.0.1\", \"\", { \"dependencies\": { \"d3-color\": \"1 - 3\", \"d3-dispatch\": \"1 - 3\", \"d3-ease\": \"1 - 3\", \"d3-interpolate\": \"1 - 3\", \"d3-timer\": \"1 - 3\" }, \"peerDependencies\": { \"d3-selection\": \"2 - 3\" } }, \"sha512-ApKvfjsSR6tg06xrL434C0WydLr7JewBB3V+/39RMHsaXTOG0zmt/OAXeng5M5LBm0ojmxJrpomQVZ1aPvBL4w==\"],\n\n    \"d3-tricontour\": [\"d3-tricontour@1.0.2\", \"\", { \"dependencies\": { \"d3-delaunay\": \"6\", \"d3-scale\": \"4\" } }, \"sha512-HIRxHzHagPtUPNabjOlfcyismJYIsc+Xlq4mlsts4e8eAcwyq9Tgk/sYdyhlBpQ0MHwVquc/8j+e29YjXnmxeA==\"],\n\n    \"d3-zoom\": [\"d3-zoom@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-drag\": \"2 - 3\", \"d3-interpolate\": \"1 - 3\", \"d3-selection\": \"2 - 3\", \"d3-transition\": \"2 - 3\" } }, \"sha512-b8AmV3kfQaqWAuacbPuNbL6vahnOJflOhexLzMMNLga62+/nh0JzvJ0aO/5a5MVgUFGS7Hu1P9P03o3fJkDCyw==\"],\n\n    \"dagre-d3-es\": [\"dagre-d3-es@7.0.11\", \"\", { \"dependencies\": { \"d3\": \"^7.9.0\", \"lodash-es\": \"^4.17.21\" } }, \"sha512-tvlJLyQf834SylNKax8Wkzco/1ias1OPw8DcUMDE7oUIoSEW25riQVuiu/0OWEFqT0cxHT3Pa9/D82Jr47IONw==\"],\n\n    \"damerau-levenshtein\": [\"damerau-levenshtein@1.0.8\", \"\", {}, \"sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==\"],\n\n    \"dargs\": [\"dargs@8.1.0\", \"\", {}, \"sha512-wAV9QHOsNbwnWdNW2FYvE1P56wtgSbM+3SZcdGiWQILwVjACCXDCI3Ai8QlCjMDB8YK5zySiXZYBiwGmNY3lnw==\"],\n\n    \"data-bind-mapper\": [\"data-bind-mapper@1.0.3\", \"\", { \"dependencies\": { \"accessor-fn\": \"1\" } }, \"sha512-QmU3lyEnbENQPo0M1F9BMu4s6cqNNp8iJA+b/HP2sSb7pf3dxwF3+EP1eO69rwBfH9kFJ1apmzrtogAmVt2/Xw==\"],\n\n    \"data-uri-to-buffer\": [\"data-uri-to-buffer@4.0.1\", \"\", {}, \"sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==\"],\n\n    \"data-urls\": [\"data-urls@3.0.2\", \"\", { \"dependencies\": { \"abab\": \"^2.0.6\", \"whatwg-mimetype\": \"^3.0.0\", \"whatwg-url\": \"^11.0.0\" } }, \"sha512-Jy/tj3ldjZJo63sVAvg6LHt2mHvl4V6AgRAmNDtLdm7faqtsx+aJG42rsyCo9JCoRVKwPFzKlIPx3DIibwSIaQ==\"],\n\n    \"data-view-buffer\": [\"data-view-buffer@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"is-data-view\": \"^1.0.2\" } }, \"sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==\"],\n\n    \"data-view-byte-length\": [\"data-view-byte-length@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"is-data-view\": \"^1.0.2\" } }, \"sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==\"],\n\n    \"data-view-byte-offset\": [\"data-view-byte-offset@1.0.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"is-data-view\": \"^1.0.1\" } }, \"sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==\"],\n\n    \"dayjs\": [\"dayjs@1.11.13\", \"\", {}, \"sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==\"],\n\n    \"debug\": [\"debug@4.4.1\", \"\", { \"dependencies\": { \"ms\": \"^2.1.3\" } }, \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\"],\n\n    \"decimal.js\": [\"decimal.js@10.6.0\", \"\", {}, \"sha512-YpgQiITW3JXGntzdUmyUR1V812Hn8T1YVXhCu+wO3OpS4eU9l4YdD3qjyiKdV6mvV29zapkMeD390UVEf2lkUg==\"],\n\n    \"decode-named-character-reference\": [\"decode-named-character-reference@1.2.0\", \"\", { \"dependencies\": { \"character-entities\": \"^2.0.0\" } }, \"sha512-c6fcElNV6ShtZXmsgNgFFV5tVX2PaV4g+MOAkb8eXHvn6sryJBrZa9r0zV6+dtTyoCKxtDy5tyQ5ZwQuidtd+Q==\"],\n\n    \"decompress-response\": [\"decompress-response@6.0.0\", \"\", { \"dependencies\": { \"mimic-response\": \"^3.1.0\" } }, \"sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==\"],\n\n    \"dedent\": [\"dedent@1.6.0\", \"\", { \"peerDependencies\": { \"babel-plugin-macros\": \"^3.1.0\" }, \"optionalPeers\": [\"babel-plugin-macros\"] }, \"sha512-F1Z+5UCFpmQUzJa11agbyPVMbpgT/qA3/SKyJ1jyBgm7dUcUEa8v9JwDkerSQXfakBwFljIxhOJqGkjUwZ9FSA==\"],\n\n    \"deep-is\": [\"deep-is@0.1.4\", \"\", {}, \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\"],\n\n    \"deepmerge\": [\"deepmerge@4.3.1\", \"\", {}, \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\"],\n\n    \"defaults\": [\"defaults@1.0.4\", \"\", { \"dependencies\": { \"clone\": \"^1.0.2\" } }, \"sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==\"],\n\n    \"define-data-property\": [\"define-data-property@1.1.4\", \"\", { \"dependencies\": { \"es-define-property\": \"^1.0.0\", \"es-errors\": \"^1.3.0\", \"gopd\": \"^1.0.1\" } }, \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\"],\n\n    \"define-lazy-prop\": [\"define-lazy-prop@2.0.0\", \"\", {}, \"sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==\"],\n\n    \"define-properties\": [\"define-properties@1.2.1\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.0.1\", \"has-property-descriptors\": \"^1.0.0\", \"object-keys\": \"^1.1.1\" } }, \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\"],\n\n    \"degenerator\": [\"degenerator@5.0.1\", \"\", { \"dependencies\": { \"ast-types\": \"^0.13.4\", \"escodegen\": \"^2.1.0\", \"esprima\": \"^4.0.1\" } }, \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\"],\n\n    \"delaunator\": [\"delaunator@5.0.1\", \"\", { \"dependencies\": { \"robust-predicates\": \"^3.0.2\" } }, \"sha512-8nvh+XBe96aCESrGOqMp/84b13H9cdKbG5P2ejQCh4d4sK9RL4371qou9drQjMhvnPmhWl5hnmqbEE0fXr9Xnw==\"],\n\n    \"delayed-stream\": [\"delayed-stream@1.0.0\", \"\", {}, \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\"],\n\n    \"depd\": [\"depd@2.0.0\", \"\", {}, \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\"],\n\n    \"dequal\": [\"dequal@2.0.3\", \"\", {}, \"sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==\"],\n\n    \"destroy\": [\"destroy@1.2.0\", \"\", {}, \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\"],\n\n    \"detect-gpu\": [\"detect-gpu@5.0.70\", \"\", { \"dependencies\": { \"webgl-constants\": \"^1.1.1\" } }, \"sha512-bqerEP1Ese6nt3rFkwPnGbsUF9a4q+gMmpTVVOEzoCyeCc+y7/RvJnQZJx1JwhgQI5Ntg0Kgat8Uu7XpBqnz1w==\"],\n\n    \"detect-newline\": [\"detect-newline@3.1.0\", \"\", {}, \"sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==\"],\n\n    \"detect-node-es\": [\"detect-node-es@1.1.0\", \"\", {}, \"sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==\"],\n\n    \"devlop\": [\"devlop@1.1.0\", \"\", { \"dependencies\": { \"dequal\": \"^2.0.0\" } }, \"sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==\"],\n\n    \"devtools-protocol\": [\"devtools-protocol@0.0.1475386\", \"\", {}, \"sha512-RQ809ykTfJ+dgj9bftdeL2vRVxASAuGU+I9LEx9Ij5TXU5HrgAQVmzi72VA+mkzscE12uzlRv5/tWWv9R9J1SA==\"],\n\n    \"didyoumean\": [\"didyoumean@1.2.2\", \"\", {}, \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\"],\n\n    \"diff\": [\"diff@5.2.0\", \"\", {}, \"sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==\"],\n\n    \"diff-sequences\": [\"diff-sequences@29.6.3\", \"\", {}, \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\"],\n\n    \"diff3\": [\"diff3@0.0.3\", \"\", {}, \"sha512-iSq8ngPOt0K53A6eVr4d5Kn6GNrM2nQZtC740pzIriHtn4pOQ2lyzEXQMBeVcWERN0ye7fhBsk9PbLLQOnUx/g==\"],\n\n    \"dir-glob\": [\"dir-glob@3.0.1\", \"\", { \"dependencies\": { \"path-type\": \"^4.0.0\" } }, \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\"],\n\n    \"discord-api-types\": [\"discord-api-types@0.38.19\", \"\", {}, \"sha512-NUNMTgjYrgxt7wrTNEqnEez4hIAYbfyBpsjxT5gW7+82GjQCPDZvN+em6t+4/P5kGWnnwDa4ci070BV7eI6GbA==\"],\n\n    \"discord.js\": [\"discord.js@14.21.0\", \"\", { \"dependencies\": { \"@discordjs/builders\": \"^1.11.2\", \"@discordjs/collection\": \"1.5.3\", \"@discordjs/formatters\": \"^0.6.1\", \"@discordjs/rest\": \"^2.5.1\", \"@discordjs/util\": \"^1.1.1\", \"@discordjs/ws\": \"^1.2.3\", \"@sapphire/snowflake\": \"3.5.3\", \"discord-api-types\": \"^0.38.1\", \"fast-deep-equal\": \"3.1.3\", \"lodash.snakecase\": \"4.1.1\", \"magic-bytes.js\": \"^1.10.0\", \"tslib\": \"^2.6.3\", \"undici\": \"6.21.3\" } }, \"sha512-U5w41cEmcnSfwKYlLv5RJjB8Joa+QJyRwIJz5i/eg+v2Qvv6EYpCRhN9I2Rlf0900LuqSDg8edakUATrDZQncQ==\"],\n\n    \"dlv\": [\"dlv@1.1.3\", \"\", {}, \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\"],\n\n    \"doctrine\": [\"doctrine@2.1.0\", \"\", { \"dependencies\": { \"esutils\": \"^2.0.2\" } }, \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\"],\n\n    \"dom-accessibility-api\": [\"dom-accessibility-api@0.6.3\", \"\", {}, \"sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==\"],\n\n    \"domexception\": [\"domexception@4.0.0\", \"\", { \"dependencies\": { \"webidl-conversions\": \"^7.0.0\" } }, \"sha512-A2is4PLG+eeSfoTMA95/s4pvAoSo2mKtiM5jlHkAVewmiO8ISFTFKZjH7UAM1Atli/OT/7JHOrJRJiMKUZKYBw==\"],\n\n    \"dompurify\": [\"dompurify@3.2.6\", \"\", { \"optionalDependencies\": { \"@types/trusted-types\": \"^2.0.7\" } }, \"sha512-/2GogDQlohXPZe6D6NOgQvXLPSYBqIWMnZ8zzOhn09REE4eyAzb+Hed3jhoM9OkuaJ8P6ZGTTVWQKAi8ieIzfQ==\"],\n\n    \"dot-prop\": [\"dot-prop@6.0.1\", \"\", { \"dependencies\": { \"is-obj\": \"^2.0.0\" } }, \"sha512-tE7ztYzXHIeyvc7N+hR3oi7FIbf/NIjVP9hmAt3yMXzrQ072/fpjGLx2GxNxGxUl5V73MEqYzioOMoVhGMJ5cA==\"],\n\n    \"dotenv\": [\"dotenv@16.4.5\", \"\", {}, \"sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==\"],\n\n    \"dotenv-expand\": [\"dotenv-expand@11.0.7\", \"\", { \"dependencies\": { \"dotenv\": \"^16.4.5\" } }, \"sha512-zIHwmZPRshsCdpMDyVsqGmgyP0yT8GAgXUnkdAoJisxvf33k7yO6OuoKmcTGuXPWSsm8Oh88nZicRLA9Y0rUeA==\"],\n\n    \"draco3d\": [\"draco3d@1.5.7\", \"\", {}, \"sha512-m6WCKt/erDXcw+70IJXnG7M3awwQPAsZvJGX5zY7beBqpELw6RDGkYVU0W43AFxye4pDZ5i2Lbyc/NNGqwjUVQ==\"],\n\n    \"drizzle-kit\": [\"drizzle-kit@0.28.1\", \"\", { \"dependencies\": { \"@drizzle-team/brocli\": \"^0.10.2\", \"@esbuild-kit/esm-loader\": \"^2.5.5\", \"esbuild\": \"^0.19.7\", \"esbuild-register\": \"^3.5.0\" }, \"bin\": { \"drizzle-kit\": \"bin.cjs\" } }, \"sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==\"],\n\n    \"drizzle-orm\": [\"drizzle-orm@0.36.4\", \"\", { \"peerDependencies\": { \"@aws-sdk/client-rds-data\": \">=3\", \"@cloudflare/workers-types\": \">=3\", \"@electric-sql/pglite\": \">=0.2.0\", \"@libsql/client\": \">=0.10.0\", \"@libsql/client-wasm\": \">=0.10.0\", \"@neondatabase/serverless\": \">=0.10.0\", \"@op-engineering/op-sqlite\": \">=2\", \"@opentelemetry/api\": \"^1.4.1\", \"@planetscale/database\": \">=1\", \"@prisma/client\": \"*\", \"@tidbcloud/serverless\": \"*\", \"@types/better-sqlite3\": \"*\", \"@types/pg\": \"*\", \"@types/react\": \">=18\", \"@types/sql.js\": \"*\", \"@vercel/postgres\": \">=0.8.0\", \"@xata.io/client\": \"*\", \"better-sqlite3\": \">=7\", \"bun-types\": \"*\", \"expo-sqlite\": \">=14.0.0\", \"knex\": \"*\", \"kysely\": \"*\", \"mysql2\": \">=2\", \"pg\": \">=8\", \"postgres\": \">=3\", \"react\": \">=18\", \"sql.js\": \">=1\", \"sqlite3\": \">=5\" }, \"optionalPeers\": [\"@aws-sdk/client-rds-data\", \"@cloudflare/workers-types\", \"@electric-sql/pglite\", \"@libsql/client\", \"@libsql/client-wasm\", \"@neondatabase/serverless\", \"@op-engineering/op-sqlite\", \"@opentelemetry/api\", \"@planetscale/database\", \"@prisma/client\", \"@tidbcloud/serverless\", \"@types/better-sqlite3\", \"@types/pg\", \"@types/react\", \"@types/sql.js\", \"@vercel/postgres\", \"@xata.io/client\", \"better-sqlite3\", \"bun-types\", \"expo-sqlite\", \"knex\", \"kysely\", \"mysql2\", \"pg\", \"postgres\", \"react\", \"sql.js\", \"sqlite3\"] }, \"sha512-1OZY3PXD7BR00Gl61UUOFihslDldfH4NFRH2MbP54Yxi0G/PKn4HfO65JYZ7c16DeP3SpM3Aw+VXVG9j6CRSXA==\"],\n\n    \"dunder-proto\": [\"dunder-proto@1.0.1\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"gopd\": \"^1.2.0\" } }, \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\"],\n\n    \"duplexify\": [\"duplexify@4.1.3\", \"\", { \"dependencies\": { \"end-of-stream\": \"^1.4.1\", \"inherits\": \"^2.0.3\", \"readable-stream\": \"^3.1.1\", \"stream-shift\": \"^1.0.2\" } }, \"sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==\"],\n\n    \"earcut\": [\"earcut@3.0.2\", \"\", {}, \"sha512-X7hshQbLyMJ/3RPhyObLARM2sNxxmRALLKx1+NVFFnQ9gKzmCrxm9+uLIAdBcvc8FNLpctqlQ2V6AE92Ol9UDQ==\"],\n\n    \"eastasianwidth\": [\"eastasianwidth@0.2.0\", \"\", {}, \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\"],\n\n    \"ecdsa-sig-formatter\": [\"ecdsa-sig-formatter@1.0.11\", \"\", { \"dependencies\": { \"safe-buffer\": \"^5.0.1\" } }, \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\"],\n\n    \"ee-first\": [\"ee-first@1.1.1\", \"\", {}, \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"],\n\n    \"ejs\": [\"ejs@3.1.10\", \"\", { \"dependencies\": { \"jake\": \"^10.8.5\" }, \"bin\": { \"ejs\": \"bin/cli.js\" } }, \"sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==\"],\n\n    \"electron-to-chromium\": [\"electron-to-chromium@1.5.200\", \"\", {}, \"sha512-rFCxROw7aOe4uPTfIAx+rXv9cEcGx+buAF4npnhtTqCJk5KDFRnh3+KYj7rdVh6lsFt5/aPs+Irj9rZ33WMA7w==\"],\n\n    \"emittery\": [\"emittery@0.13.1\", \"\", {}, \"sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==\"],\n\n    \"emoji-regex\": [\"emoji-regex@10.4.0\", \"\", {}, \"sha512-EC+0oUMY1Rqm4O6LLrgjtYDvcVYTy7chDnM4Q7030tP4Kwj3u/pR6gP9ygnp2CJMK5Gq+9Q2oqmrFJAz01DXjw==\"],\n\n    \"encodeurl\": [\"encodeurl@1.0.2\", \"\", {}, \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\"],\n\n    \"end-of-stream\": [\"end-of-stream@1.4.5\", \"\", { \"dependencies\": { \"once\": \"^1.4.0\" } }, \"sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==\"],\n\n    \"enquirer\": [\"enquirer@2.3.6\", \"\", { \"dependencies\": { \"ansi-colors\": \"^4.1.1\" } }, \"sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==\"],\n\n    \"entities\": [\"entities@6.0.1\", \"\", {}, \"sha512-aN97NXWF6AWBTahfVOIrB/NShkzi5H7F9r1s9mD3cDj4Ko5f2qhhVoYMibXF7GlLveb/D2ioWay8lxI97Ven3g==\"],\n\n    \"env-paths\": [\"env-paths@2.2.1\", \"\", {}, \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\"],\n\n    \"environment\": [\"environment@1.1.0\", \"\", {}, \"sha512-xUtoPkMggbz0MPyPiIWr1Kp4aeWJjDZ6SMvURhimjdZgsRuDplF5/s9hcgGhyXMhs+6vpnuoiZ2kFiu3FMnS8Q==\"],\n\n    \"error-ex\": [\"error-ex@1.3.2\", \"\", { \"dependencies\": { \"is-arrayish\": \"^0.2.1\" } }, \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\"],\n\n    \"error-stack-parser\": [\"error-stack-parser@2.1.4\", \"\", { \"dependencies\": { \"stackframe\": \"^1.3.4\" } }, \"sha512-Sk5V6wVazPhq5MhpO+AUxJn5x7XSXGl1R93Vn7i+zS15KDVxQijejNCrz8340/2bgLBjR9GtEG8ZVKONDjcqGQ==\"],\n\n    \"es-abstract\": [\"es-abstract@1.24.0\", \"\", { \"dependencies\": { \"array-buffer-byte-length\": \"^1.0.2\", \"arraybuffer.prototype.slice\": \"^1.0.4\", \"available-typed-arrays\": \"^1.0.7\", \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"data-view-buffer\": \"^1.0.2\", \"data-view-byte-length\": \"^1.0.2\", \"data-view-byte-offset\": \"^1.0.1\", \"es-define-property\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.1.1\", \"es-set-tostringtag\": \"^2.1.0\", \"es-to-primitive\": \"^1.3.0\", \"function.prototype.name\": \"^1.1.8\", \"get-intrinsic\": \"^1.3.0\", \"get-proto\": \"^1.0.1\", \"get-symbol-description\": \"^1.1.0\", \"globalthis\": \"^1.0.4\", \"gopd\": \"^1.2.0\", \"has-property-descriptors\": \"^1.0.2\", \"has-proto\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"hasown\": \"^2.0.2\", \"internal-slot\": \"^1.1.0\", \"is-array-buffer\": \"^3.0.5\", \"is-callable\": \"^1.2.7\", \"is-data-view\": \"^1.0.2\", \"is-negative-zero\": \"^2.0.3\", \"is-regex\": \"^1.2.1\", \"is-set\": \"^2.0.3\", \"is-shared-array-buffer\": \"^1.0.4\", \"is-string\": \"^1.1.1\", \"is-typed-array\": \"^1.1.15\", \"is-weakref\": \"^1.1.1\", \"math-intrinsics\": \"^1.1.0\", \"object-inspect\": \"^1.13.4\", \"object-keys\": \"^1.1.1\", \"object.assign\": \"^4.1.7\", \"own-keys\": \"^1.0.1\", \"regexp.prototype.flags\": \"^1.5.4\", \"safe-array-concat\": \"^1.1.3\", \"safe-push-apply\": \"^1.0.0\", \"safe-regex-test\": \"^1.1.0\", \"set-proto\": \"^1.0.0\", \"stop-iteration-iterator\": \"^1.1.0\", \"string.prototype.trim\": \"^1.2.10\", \"string.prototype.trimend\": \"^1.0.9\", \"string.prototype.trimstart\": \"^1.0.8\", \"typed-array-buffer\": \"^1.0.3\", \"typed-array-byte-length\": \"^1.0.3\", \"typed-array-byte-offset\": \"^1.0.4\", \"typed-array-length\": \"^1.0.7\", \"unbox-primitive\": \"^1.1.0\", \"which-typed-array\": \"^1.1.19\" } }, \"sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==\"],\n\n    \"es-define-property\": [\"es-define-property@1.0.1\", \"\", {}, \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\"],\n\n    \"es-errors\": [\"es-errors@1.3.0\", \"\", {}, \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\"],\n\n    \"es-iterator-helpers\": [\"es-iterator-helpers@1.2.1\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.6\", \"es-errors\": \"^1.3.0\", \"es-set-tostringtag\": \"^2.0.3\", \"function-bind\": \"^1.1.2\", \"get-intrinsic\": \"^1.2.6\", \"globalthis\": \"^1.0.4\", \"gopd\": \"^1.2.0\", \"has-property-descriptors\": \"^1.0.2\", \"has-proto\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"internal-slot\": \"^1.1.0\", \"iterator.prototype\": \"^1.1.4\", \"safe-array-concat\": \"^1.1.3\" } }, \"sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==\"],\n\n    \"es-object-atoms\": [\"es-object-atoms@1.1.1\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\" } }, \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\"],\n\n    \"es-set-tostringtag\": [\"es-set-tostringtag@2.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.6\", \"has-tostringtag\": \"^1.0.2\", \"hasown\": \"^2.0.2\" } }, \"sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==\"],\n\n    \"es-shim-unscopables\": [\"es-shim-unscopables@1.1.0\", \"\", { \"dependencies\": { \"hasown\": \"^2.0.2\" } }, \"sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==\"],\n\n    \"es-to-primitive\": [\"es-to-primitive@1.3.0\", \"\", { \"dependencies\": { \"is-callable\": \"^1.2.7\", \"is-date-object\": \"^1.0.5\", \"is-symbol\": \"^1.0.4\" } }, \"sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==\"],\n\n    \"esast-util-from-estree\": [\"esast-util-from-estree@2.0.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-visit\": \"^2.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\" } }, \"sha512-4CyanoAudUSBAn5K13H4JhsMH6L9ZP7XbLVe/dKybkxMO7eDyLsT8UHl9TRNrU2Gr9nz+FovfSIjuXWJ81uVwQ==\"],\n\n    \"esast-util-from-js\": [\"esast-util-from-js@2.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"acorn\": \"^8.0.0\", \"esast-util-from-estree\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-8Ja+rNJ0Lt56Pcf3TAmpBZjmx8ZcK5Ts4cAzIOjsjevg9oSXJnl6SUQ2EevU8tv3h6ZLWmoKL5H4fgWvdvfETw==\"],\n\n    \"esbuild\": [\"esbuild@0.19.12\", \"\", { \"optionalDependencies\": { \"@esbuild/aix-ppc64\": \"0.19.12\", \"@esbuild/android-arm\": \"0.19.12\", \"@esbuild/android-arm64\": \"0.19.12\", \"@esbuild/android-x64\": \"0.19.12\", \"@esbuild/darwin-arm64\": \"0.19.12\", \"@esbuild/darwin-x64\": \"0.19.12\", \"@esbuild/freebsd-arm64\": \"0.19.12\", \"@esbuild/freebsd-x64\": \"0.19.12\", \"@esbuild/linux-arm\": \"0.19.12\", \"@esbuild/linux-arm64\": \"0.19.12\", \"@esbuild/linux-ia32\": \"0.19.12\", \"@esbuild/linux-loong64\": \"0.19.12\", \"@esbuild/linux-mips64el\": \"0.19.12\", \"@esbuild/linux-ppc64\": \"0.19.12\", \"@esbuild/linux-riscv64\": \"0.19.12\", \"@esbuild/linux-s390x\": \"0.19.12\", \"@esbuild/linux-x64\": \"0.19.12\", \"@esbuild/netbsd-x64\": \"0.19.12\", \"@esbuild/openbsd-x64\": \"0.19.12\", \"@esbuild/sunos-x64\": \"0.19.12\", \"@esbuild/win32-arm64\": \"0.19.12\", \"@esbuild/win32-ia32\": \"0.19.12\", \"@esbuild/win32-x64\": \"0.19.12\" }, \"bin\": { \"esbuild\": \"bin/esbuild\" } }, \"sha512-aARqgq8roFBj054KvQr5f1sFu0D65G+miZRCuJyJ0G13Zwx7vRar5Zhn2tkQNzIXcBrNVsv/8stehpj+GAjgbg==\"],\n\n    \"esbuild-register\": [\"esbuild-register@3.6.0\", \"\", { \"dependencies\": { \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"esbuild\": \">=0.12 <1\" } }, \"sha512-H2/S7Pm8a9CL1uhp9OvjwrBh5Pvx0H8qVOxNu8Wed9Y7qv56MPtq+GGM8RJpq6glYJn9Wspr8uw7l55uyinNeg==\"],\n\n    \"escalade\": [\"escalade@3.2.0\", \"\", {}, \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\"],\n\n    \"escape-html\": [\"escape-html@1.0.3\", \"\", {}, \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"],\n\n    \"escape-string-regexp\": [\"escape-string-regexp@4.0.0\", \"\", {}, \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\"],\n\n    \"escodegen\": [\"escodegen@2.1.0\", \"\", { \"dependencies\": { \"esprima\": \"^4.0.1\", \"estraverse\": \"^5.2.0\", \"esutils\": \"^2.0.2\" }, \"optionalDependencies\": { \"source-map\": \"~0.6.1\" }, \"bin\": { \"esgenerate\": \"bin/esgenerate.js\", \"escodegen\": \"bin/escodegen.js\" } }, \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\"],\n\n    \"eslint\": [\"eslint@8.57.1\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.2.0\", \"@eslint-community/regexpp\": \"^4.6.1\", \"@eslint/eslintrc\": \"^2.1.4\", \"@eslint/js\": \"8.57.1\", \"@humanwhocodes/config-array\": \"^0.13.0\", \"@humanwhocodes/module-importer\": \"^1.0.1\", \"@nodelib/fs.walk\": \"^1.2.8\", \"@ungap/structured-clone\": \"^1.2.0\", \"ajv\": \"^6.12.4\", \"chalk\": \"^4.0.0\", \"cross-spawn\": \"^7.0.2\", \"debug\": \"^4.3.2\", \"doctrine\": \"^3.0.0\", \"escape-string-regexp\": \"^4.0.0\", \"eslint-scope\": \"^7.2.2\", \"eslint-visitor-keys\": \"^3.4.3\", \"espree\": \"^9.6.1\", \"esquery\": \"^1.4.2\", \"esutils\": \"^2.0.2\", \"fast-deep-equal\": \"^3.1.3\", \"file-entry-cache\": \"^6.0.1\", \"find-up\": \"^5.0.0\", \"glob-parent\": \"^6.0.2\", \"globals\": \"^13.19.0\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^5.2.0\", \"imurmurhash\": \"^0.1.4\", \"is-glob\": \"^4.0.0\", \"is-path-inside\": \"^3.0.3\", \"js-yaml\": \"^4.1.0\", \"json-stable-stringify-without-jsonify\": \"^1.0.1\", \"levn\": \"^0.4.1\", \"lodash.merge\": \"^4.6.2\", \"minimatch\": \"^3.1.2\", \"natural-compare\": \"^1.4.0\", \"optionator\": \"^0.9.3\", \"strip-ansi\": \"^6.0.1\", \"text-table\": \"^0.2.0\" }, \"bin\": { \"eslint\": \"bin/eslint.js\" } }, \"sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\"],\n\n    \"eslint-config-next\": [\"eslint-config-next@14.2.11\", \"\", { \"dependencies\": { \"@next/eslint-plugin-next\": \"14.2.11\", \"@rushstack/eslint-patch\": \"^1.3.3\", \"@typescript-eslint/eslint-plugin\": \"^5.4.2 || ^6.0.0 || 7.0.0 - 7.2.0\", \"@typescript-eslint/parser\": \"^5.4.2 || ^6.0.0 || 7.0.0 - 7.2.0\", \"eslint-import-resolver-node\": \"^0.3.6\", \"eslint-import-resolver-typescript\": \"^3.5.2\", \"eslint-plugin-import\": \"^2.28.1\", \"eslint-plugin-jsx-a11y\": \"^6.7.1\", \"eslint-plugin-react\": \"^7.33.2\", \"eslint-plugin-react-hooks\": \"^4.5.0 || 5.0.0-canary-7118f5dd7-20230705\" }, \"peerDependencies\": { \"eslint\": \"^7.23.0 || ^8.0.0\", \"typescript\": \">=3.3.1\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-gGIoBoHCJuLn6vaV1Ke8UurVvgb7JjQv6oRlWmI6RAAxz7KwJOYxxm2blctavA0a3eofbE9TdgKvvTb2G55OHQ==\"],\n\n    \"eslint-config-prettier\": [\"eslint-config-prettier@9.1.2\", \"\", { \"peerDependencies\": { \"eslint\": \">=7.0.0\" }, \"bin\": { \"eslint-config-prettier\": \"bin/cli.js\" } }, \"sha512-iI1f+D2ViGn+uvv5HuHVUamg8ll4tN+JRHGc6IJi4TP9Kl976C57fzPXgseXNs8v0iA8aSJpHsTWjDb9QJamGQ==\"],\n\n    \"eslint-import-resolver-node\": [\"eslint-import-resolver-node@0.3.9\", \"\", { \"dependencies\": { \"debug\": \"^3.2.7\", \"is-core-module\": \"^2.13.0\", \"resolve\": \"^1.22.4\" } }, \"sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==\"],\n\n    \"eslint-import-resolver-typescript\": [\"eslint-import-resolver-typescript@3.10.1\", \"\", { \"dependencies\": { \"@nolyfill/is-core-module\": \"1.0.39\", \"debug\": \"^4.4.0\", \"get-tsconfig\": \"^4.10.0\", \"is-bun-module\": \"^2.0.0\", \"stable-hash\": \"^0.0.5\", \"tinyglobby\": \"^0.2.13\", \"unrs-resolver\": \"^1.6.2\" }, \"peerDependencies\": { \"eslint\": \"*\", \"eslint-plugin-import\": \"*\", \"eslint-plugin-import-x\": \"*\" }, \"optionalPeers\": [\"eslint-plugin-import\", \"eslint-plugin-import-x\"] }, \"sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==\"],\n\n    \"eslint-module-utils\": [\"eslint-module-utils@2.12.1\", \"\", { \"dependencies\": { \"debug\": \"^3.2.7\" } }, \"sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==\"],\n\n    \"eslint-plugin-import\": [\"eslint-plugin-import@2.32.0\", \"\", { \"dependencies\": { \"@rtsao/scc\": \"^1.1.0\", \"array-includes\": \"^3.1.9\", \"array.prototype.findlastindex\": \"^1.2.6\", \"array.prototype.flat\": \"^1.3.3\", \"array.prototype.flatmap\": \"^1.3.3\", \"debug\": \"^3.2.7\", \"doctrine\": \"^2.1.0\", \"eslint-import-resolver-node\": \"^0.3.9\", \"eslint-module-utils\": \"^2.12.1\", \"hasown\": \"^2.0.2\", \"is-core-module\": \"^2.16.1\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^3.1.2\", \"object.fromentries\": \"^2.0.8\", \"object.groupby\": \"^1.0.3\", \"object.values\": \"^1.2.1\", \"semver\": \"^6.3.1\", \"string.prototype.trimend\": \"^1.0.9\", \"tsconfig-paths\": \"^3.15.0\" }, \"peerDependencies\": { \"eslint\": \"^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9\" } }, \"sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==\"],\n\n    \"eslint-plugin-jsx-a11y\": [\"eslint-plugin-jsx-a11y@6.10.2\", \"\", { \"dependencies\": { \"aria-query\": \"^5.3.2\", \"array-includes\": \"^3.1.8\", \"array.prototype.flatmap\": \"^1.3.2\", \"ast-types-flow\": \"^0.0.8\", \"axe-core\": \"^4.10.0\", \"axobject-query\": \"^4.1.0\", \"damerau-levenshtein\": \"^1.0.8\", \"emoji-regex\": \"^9.2.2\", \"hasown\": \"^2.0.2\", \"jsx-ast-utils\": \"^3.3.5\", \"language-tags\": \"^1.0.9\", \"minimatch\": \"^3.1.2\", \"object.fromentries\": \"^2.0.8\", \"safe-regex-test\": \"^1.0.3\", \"string.prototype.includes\": \"^2.0.1\" }, \"peerDependencies\": { \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9\" } }, \"sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==\"],\n\n    \"eslint-plugin-prettier\": [\"eslint-plugin-prettier@5.5.4\", \"\", { \"dependencies\": { \"prettier-linter-helpers\": \"^1.0.0\", \"synckit\": \"^0.11.7\" }, \"peerDependencies\": { \"@types/eslint\": \">=8.0.0\", \"eslint\": \">=8.0.0\", \"eslint-config-prettier\": \">= 7.0.0 <10.0.0 || >=10.1.0\", \"prettier\": \">=3.0.0\" }, \"optionalPeers\": [\"@types/eslint\", \"eslint-config-prettier\"] }, \"sha512-swNtI95SToIz05YINMA6Ox5R057IMAmWZ26GqPxusAp1TZzj+IdY9tXNWWD3vkF/wEqydCONcwjTFpxybBqZsg==\"],\n\n    \"eslint-plugin-react\": [\"eslint-plugin-react@7.37.5\", \"\", { \"dependencies\": { \"array-includes\": \"^3.1.8\", \"array.prototype.findlast\": \"^1.2.5\", \"array.prototype.flatmap\": \"^1.3.3\", \"array.prototype.tosorted\": \"^1.1.4\", \"doctrine\": \"^2.1.0\", \"es-iterator-helpers\": \"^1.2.1\", \"estraverse\": \"^5.3.0\", \"hasown\": \"^2.0.2\", \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\", \"minimatch\": \"^3.1.2\", \"object.entries\": \"^1.1.9\", \"object.fromentries\": \"^2.0.8\", \"object.values\": \"^1.2.1\", \"prop-types\": \"^15.8.1\", \"resolve\": \"^2.0.0-next.5\", \"semver\": \"^6.3.1\", \"string.prototype.matchall\": \"^4.0.12\", \"string.prototype.repeat\": \"^1.0.0\" }, \"peerDependencies\": { \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\" } }, \"sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==\"],\n\n    \"eslint-plugin-react-hooks\": [\"eslint-plugin-react-hooks@4.6.2\", \"\", { \"peerDependencies\": { \"eslint\": \"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\" } }, \"sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==\"],\n\n    \"eslint-plugin-tailwindcss\": [\"eslint-plugin-tailwindcss@3.18.2\", \"\", { \"dependencies\": { \"fast-glob\": \"^3.2.5\", \"postcss\": \"^8.4.4\" }, \"peerDependencies\": { \"tailwindcss\": \"^3.4.0\" } }, \"sha512-QbkMLDC/OkkjFQ1iz/5jkMdHfiMu/uwujUHLAJK5iwNHD8RTxVTlsUezE0toTZ6VhybNBsk+gYGPDq2agfeRNA==\"],\n\n    \"eslint-plugin-unused-imports\": [\"eslint-plugin-unused-imports@4.1.4\", \"\", { \"peerDependencies\": { \"@typescript-eslint/eslint-plugin\": \"^8.0.0-0 || ^7.0.0 || ^6.0.0 || ^5.0.0\", \"eslint\": \"^9.0.0 || ^8.0.0\" }, \"optionalPeers\": [\"@typescript-eslint/eslint-plugin\"] }, \"sha512-YptD6IzQjDardkl0POxnnRBhU1OEePMV0nd6siHaRBbd+lyh6NAhFEobiznKU7kTsSsDeSD62Pe7kAM1b7dAZQ==\"],\n\n    \"eslint-scope\": [\"eslint-scope@7.2.2\", \"\", { \"dependencies\": { \"esrecurse\": \"^4.3.0\", \"estraverse\": \"^5.2.0\" } }, \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\"],\n\n    \"eslint-visitor-keys\": [\"eslint-visitor-keys@3.4.3\", \"\", {}, \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\"],\n\n    \"espree\": [\"espree@9.6.1\", \"\", { \"dependencies\": { \"acorn\": \"^8.9.0\", \"acorn-jsx\": \"^5.3.2\", \"eslint-visitor-keys\": \"^3.4.1\" } }, \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\"],\n\n    \"esprima\": [\"esprima@4.0.1\", \"\", { \"bin\": { \"esparse\": \"./bin/esparse.js\", \"esvalidate\": \"./bin/esvalidate.js\" } }, \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\"],\n\n    \"esquery\": [\"esquery@1.6.0\", \"\", { \"dependencies\": { \"estraverse\": \"^5.1.0\" } }, \"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\"],\n\n    \"esrecurse\": [\"esrecurse@4.3.0\", \"\", { \"dependencies\": { \"estraverse\": \"^5.2.0\" } }, \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\"],\n\n    \"estraverse\": [\"estraverse@5.3.0\", \"\", {}, \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\"],\n\n    \"estree-util-attach-comments\": [\"estree-util-attach-comments@3.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\" } }, \"sha512-cKUwm/HUcTDsYh/9FgnuFqpfquUbwIqwKM26BVCGDPVgvaCl/nDCCjUfiLlx6lsEZ3Z4RFxNbOQ60pkaEwFxGw==\"],\n\n    \"estree-util-build-jsx\": [\"estree-util-build-jsx@3.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"estree-walker\": \"^3.0.0\" } }, \"sha512-8U5eiL6BTrPxp/CHbs2yMgP8ftMhR5ww1eIKoWRMlqvltHF8fZn5LRDvTKuxD3DUn+shRbLGqXemcP51oFCsGQ==\"],\n\n    \"estree-util-is-identifier-name\": [\"estree-util-is-identifier-name@3.0.0\", \"\", {}, \"sha512-hFtqIDZTIUZ9BXLb8y4pYGyk6+wekIivNVTcmvk8NoOh+VeRn5y6cEHzbURrWbfp1fIqdVipilzj+lfaadNZmg==\"],\n\n    \"estree-util-scope\": [\"estree-util-scope@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\" } }, \"sha512-2CAASclonf+JFWBNJPndcOpA8EMJwa0Q8LUFJEKqXLW6+qBvbFZuF5gItbQOs/umBUkjviCSDCbBwU2cXbmrhQ==\"],\n\n    \"estree-util-to-js\": [\"estree-util-to-js@2.0.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"astring\": \"^1.8.0\", \"source-map\": \"^0.7.0\" } }, \"sha512-WDF+xj5rRWmD5tj6bIqRi6CkLIXbbNQUcxQHzGysQzvHmdYG2G7p/Tf0J0gpxGgkeMZNTIjT/AoSvC9Xehcgdg==\"],\n\n    \"estree-util-value-to-estree\": [\"estree-util-value-to-estree@1.3.0\", \"\", { \"dependencies\": { \"is-plain-obj\": \"^3.0.0\" } }, \"sha512-Y+ughcF9jSUJvncXwqRageavjrNPAI+1M/L3BI3PyLp1nmgYTGUXU6t5z1Y7OWuThoDdhPME07bQU+d5LxdJqw==\"],\n\n    \"estree-util-visit\": [\"estree-util-visit@2.0.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^3.0.0\" } }, \"sha512-m5KgiH85xAhhW8Wta0vShLcUvOsh3LLPI2YVwcbio1l7E09NTLL1EyMZFM1OyWowoH0skScNbhOPl4kcBgzTww==\"],\n\n    \"estree-walker\": [\"estree-walker@3.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\" } }, \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\"],\n\n    \"esutils\": [\"esutils@2.0.3\", \"\", {}, \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\"],\n\n    \"etag\": [\"etag@1.8.1\", \"\", {}, \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\"],\n\n    \"event-target-shim\": [\"event-target-shim@5.0.1\", \"\", {}, \"sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==\"],\n\n    \"eventemitter3\": [\"eventemitter3@5.0.1\", \"\", {}, \"sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==\"],\n\n    \"events\": [\"events@3.3.0\", \"\", {}, \"sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==\"],\n\n    \"eventsource-parser\": [\"eventsource-parser@3.0.3\", \"\", {}, \"sha512-nVpZkTMM9rF6AQ9gPJpFsNAMt48wIzB5TQgiTLdHiuO8XEDhUgZEhqKlZWXbIzo9VmJ/HvysHqEaVeD5v9TPvA==\"],\n\n    \"execa\": [\"execa@7.2.0\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.3\", \"get-stream\": \"^6.0.1\", \"human-signals\": \"^4.3.0\", \"is-stream\": \"^3.0.0\", \"merge-stream\": \"^2.0.0\", \"npm-run-path\": \"^5.1.0\", \"onetime\": \"^6.0.0\", \"signal-exit\": \"^3.0.7\", \"strip-final-newline\": \"^3.0.0\" } }, \"sha512-UduyVP7TLB5IcAQl+OzLyLcS/l32W/GLg+AhHJ+ow40FOk2U3SAllPwR44v4vmdFwIWqpdwxxpQbF1n5ta9seA==\"],\n\n    \"exit\": [\"exit@0.1.2\", \"\", {}, \"sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==\"],\n\n    \"expect\": [\"expect@29.7.0\", \"\", { \"dependencies\": { \"@jest/expect-utils\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"jest-matcher-utils\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\" } }, \"sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==\"],\n\n    \"exponential-backoff\": [\"exponential-backoff@3.1.2\", \"\", {}, \"sha512-8QxYTVXUkuy7fIIoitQkPwGonB8F3Zj8eEO8Sqg9Zv/bkI7RJAzowee4gr81Hak/dUTpA2Z7VfQgoijjPNlUZA==\"],\n\n    \"express\": [\"express@4.19.2\", \"\", { \"dependencies\": { \"accepts\": \"~1.3.8\", \"array-flatten\": \"1.1.1\", \"body-parser\": \"1.20.2\", \"content-disposition\": \"0.5.4\", \"content-type\": \"~1.0.4\", \"cookie\": \"0.6.0\", \"cookie-signature\": \"1.0.6\", \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"etag\": \"~1.8.1\", \"finalhandler\": \"1.2.0\", \"fresh\": \"0.5.2\", \"http-errors\": \"2.0.0\", \"merge-descriptors\": \"1.0.1\", \"methods\": \"~1.1.2\", \"on-finished\": \"2.4.1\", \"parseurl\": \"~1.3.3\", \"path-to-regexp\": \"0.1.7\", \"proxy-addr\": \"~2.0.7\", \"qs\": \"6.11.0\", \"range-parser\": \"~1.2.1\", \"safe-buffer\": \"5.2.1\", \"send\": \"0.18.0\", \"serve-static\": \"1.15.0\", \"setprototypeof\": \"1.2.0\", \"statuses\": \"2.0.1\", \"type-is\": \"~1.6.18\", \"utils-merge\": \"1.0.1\", \"vary\": \"~1.1.2\" } }, \"sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==\"],\n\n    \"exsolve\": [\"exsolve@1.0.7\", \"\", {}, \"sha512-VO5fQUzZtI6C+vx4w/4BWJpg3s/5l+6pRQEHzFRM8WFi4XffSP1Z+4qi7GbjWbvRQEbdIco5mIMq+zX4rPuLrw==\"],\n\n    \"extend\": [\"extend@3.0.2\", \"\", {}, \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\"],\n\n    \"extend-shallow\": [\"extend-shallow@2.0.1\", \"\", { \"dependencies\": { \"is-extendable\": \"^0.1.0\" } }, \"sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==\"],\n\n    \"extract-zip\": [\"extract-zip@2.0.1\", \"\", { \"dependencies\": { \"debug\": \"^4.1.1\", \"get-stream\": \"^5.1.0\", \"yauzl\": \"^2.10.0\" }, \"optionalDependencies\": { \"@types/yauzl\": \"^2.9.1\" }, \"bin\": { \"extract-zip\": \"cli.js\" } }, \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\"],\n\n    \"fast-deep-equal\": [\"fast-deep-equal@3.1.3\", \"\", {}, \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\"],\n\n    \"fast-diff\": [\"fast-diff@1.3.0\", \"\", {}, \"sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==\"],\n\n    \"fast-fifo\": [\"fast-fifo@1.3.2\", \"\", {}, \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\"],\n\n    \"fast-glob\": [\"fast-glob@3.3.3\", \"\", { \"dependencies\": { \"@nodelib/fs.stat\": \"^2.0.2\", \"@nodelib/fs.walk\": \"^1.2.3\", \"glob-parent\": \"^5.1.2\", \"merge2\": \"^1.3.0\", \"micromatch\": \"^4.0.8\" } }, \"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\"],\n\n    \"fast-json-stable-stringify\": [\"fast-json-stable-stringify@2.1.0\", \"\", {}, \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\"],\n\n    \"fast-levenshtein\": [\"fast-levenshtein@2.0.6\", \"\", {}, \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\"],\n\n    \"fast-redact\": [\"fast-redact@3.5.0\", \"\", {}, \"sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==\"],\n\n    \"fast-uri\": [\"fast-uri@3.0.6\", \"\", {}, \"sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==\"],\n\n    \"fastq\": [\"fastq@1.19.1\", \"\", { \"dependencies\": { \"reusify\": \"^1.0.4\" } }, \"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\"],\n\n    \"fault\": [\"fault@2.0.1\", \"\", { \"dependencies\": { \"format\": \"^0.2.0\" } }, \"sha512-WtySTkS4OKev5JtpHXnib4Gxiurzh5NCGvWrFaZ34m6JehfTUhKZvn9njTfw48t6JumVQOmrKqpmGcdwxnhqBQ==\"],\n\n    \"fb-watchman\": [\"fb-watchman@2.0.2\", \"\", { \"dependencies\": { \"bser\": \"2.1.1\" } }, \"sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==\"],\n\n    \"fd-slicer\": [\"fd-slicer@1.1.0\", \"\", { \"dependencies\": { \"pend\": \"~1.2.0\" } }, \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\"],\n\n    \"fdir\": [\"fdir@6.4.6\", \"\", { \"peerDependencies\": { \"picomatch\": \"^3 || ^4\" }, \"optionalPeers\": [\"picomatch\"] }, \"sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==\"],\n\n    \"fetch-blob\": [\"fetch-blob@3.2.0\", \"\", { \"dependencies\": { \"node-domexception\": \"^1.0.0\", \"web-streams-polyfill\": \"^3.0.3\" } }, \"sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==\"],\n\n    \"fflate\": [\"fflate@0.4.8\", \"\", {}, \"sha512-FJqqoDBR00Mdj9ppamLa/Y7vxm+PRmNWA67N846RvsoYVMKB4q3y/de5PA7gUmRMYK/8CMz2GDZQmCRN1wBcWA==\"],\n\n    \"figures\": [\"figures@3.2.0\", \"\", { \"dependencies\": { \"escape-string-regexp\": \"^1.0.5\" } }, \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\"],\n\n    \"file-entry-cache\": [\"file-entry-cache@6.0.1\", \"\", { \"dependencies\": { \"flat-cache\": \"^3.0.4\" } }, \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\"],\n\n    \"filelist\": [\"filelist@1.0.4\", \"\", { \"dependencies\": { \"minimatch\": \"^5.0.1\" } }, \"sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==\"],\n\n    \"fill-range\": [\"fill-range@7.1.1\", \"\", { \"dependencies\": { \"to-regex-range\": \"^5.0.1\" } }, \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\"],\n\n    \"finalhandler\": [\"finalhandler@1.2.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"on-finished\": \"2.4.1\", \"parseurl\": \"~1.3.3\", \"statuses\": \"2.0.1\", \"unpipe\": \"~1.0.0\" } }, \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\"],\n\n    \"find-up\": [\"find-up@5.0.0\", \"\", { \"dependencies\": { \"locate-path\": \"^6.0.0\", \"path-exists\": \"^4.0.0\" } }, \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\"],\n\n    \"flat\": [\"flat@5.0.2\", \"\", { \"bin\": { \"flat\": \"cli.js\" } }, \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\"],\n\n    \"flat-cache\": [\"flat-cache@3.2.0\", \"\", { \"dependencies\": { \"flatted\": \"^3.2.9\", \"keyv\": \"^4.5.3\", \"rimraf\": \"^3.0.2\" } }, \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\"],\n\n    \"flatted\": [\"flatted@3.3.3\", \"\", {}, \"sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==\"],\n\n    \"flow-enums-runtime\": [\"flow-enums-runtime@0.0.6\", \"\", {}, \"sha512-3PYnM29RFXwvAN6Pc/scUfkI7RwhQ/xqyLUyPNlXUp9S40zI8nup9tUSrTLSVnWGBN38FNiGWbwZOB6uR4OGdw==\"],\n\n    \"follow-redirects\": [\"follow-redirects@1.15.11\", \"\", {}, \"sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==\"],\n\n    \"for-each\": [\"for-each@0.3.5\", \"\", { \"dependencies\": { \"is-callable\": \"^1.2.7\" } }, \"sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==\"],\n\n    \"foreground-child\": [\"foreground-child@3.3.1\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.6\", \"signal-exit\": \"^4.0.1\" } }, \"sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==\"],\n\n    \"form-data\": [\"form-data@4.0.4\", \"\", { \"dependencies\": { \"asynckit\": \"^0.4.0\", \"combined-stream\": \"^1.0.8\", \"es-set-tostringtag\": \"^2.1.0\", \"hasown\": \"^2.0.2\", \"mime-types\": \"^2.1.12\" } }, \"sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==\"],\n\n    \"form-data-encoder\": [\"form-data-encoder@1.7.2\", \"\", {}, \"sha512-qfqtYan3rxrnCk1VYaA4H+Ms9xdpPqvLZa6xmMgFvhO32x7/3J/ExcTd6qpxM0vH2GdMI+poehyBZvqfMTto8A==\"],\n\n    \"format\": [\"format@0.2.2\", \"\", {}, \"sha512-wzsgA6WOq+09wrU1tsJ09udeR/YZRaeArL9e1wPbFg3GG2yDnC2ldKpxs4xunpFF9DgqCqOIra3bc1HWrJ37Ww==\"],\n\n    \"formdata-node\": [\"formdata-node@4.4.1\", \"\", { \"dependencies\": { \"node-domexception\": \"1.0.0\", \"web-streams-polyfill\": \"4.0.0-beta.3\" } }, \"sha512-0iirZp3uVDjVGt9p49aTaqjk84TrglENEDuqfdlZQ1roC9CWlPk6Avf8EEnZNcAqPonwkG35x4n3ww/1THYAeQ==\"],\n\n    \"formdata-polyfill\": [\"formdata-polyfill@4.0.10\", \"\", { \"dependencies\": { \"fetch-blob\": \"^3.1.2\" } }, \"sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==\"],\n\n    \"forwarded\": [\"forwarded@0.2.0\", \"\", {}, \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\"],\n\n    \"fraction.js\": [\"fraction.js@4.3.7\", \"\", {}, \"sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==\"],\n\n    \"frame-ticker\": [\"frame-ticker@1.0.3\", \"\", { \"dependencies\": { \"simplesignal\": \"^2.1.6\" } }, \"sha512-E0X2u2JIvbEMrqEg5+4BpTqaD22OwojJI63K7MdKHdncjtAhGRbCR8nJCr2vwEt9NWBPCPcu70X9smPviEBy8Q==\"],\n\n    \"framer-motion\": [\"framer-motion@11.18.2\", \"\", { \"dependencies\": { \"motion-dom\": \"^11.18.1\", \"motion-utils\": \"^11.18.1\", \"tslib\": \"^2.4.0\" }, \"peerDependencies\": { \"@emotion/is-prop-valid\": \"*\", \"react\": \"^18.0.0 || ^19.0.0\", \"react-dom\": \"^18.0.0 || ^19.0.0\" }, \"optionalPeers\": [\"@emotion/is-prop-valid\", \"react\", \"react-dom\"] }, \"sha512-5F5Och7wrvtLVElIpclDT0CBzMVg3dL22B64aZwHtsIY8RB4mXICLrkajK4G9R+ieSAGcgrLeae2SeUTg2pr6w==\"],\n\n    \"fresh\": [\"fresh@0.5.2\", \"\", {}, \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\"],\n\n    \"front-matter\": [\"front-matter@4.0.2\", \"\", { \"dependencies\": { \"js-yaml\": \"^3.13.1\" } }, \"sha512-I8ZuJ/qG92NWX8i5x1Y8qyj3vizhXS31OxjKDu3LKP+7/qBgfIKValiZIEwoVoJKUHlhWtYrktkxV1XsX+pPlg==\"],\n\n    \"fs-constants\": [\"fs-constants@1.0.0\", \"\", {}, \"sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==\"],\n\n    \"fs-extra\": [\"fs-extra@11.3.1\", \"\", { \"dependencies\": { \"graceful-fs\": \"^4.2.0\", \"jsonfile\": \"^6.0.1\", \"universalify\": \"^2.0.0\" } }, \"sha512-eXvGGwZ5CL17ZSwHWd3bbgk7UUpF6IFHtP57NYYakPvHOs8GDgDe5KJI36jIJzDkJ6eJjuzRA8eBQb6SkKue0g==\"],\n\n    \"fs-monkey\": [\"fs-monkey@1.1.0\", \"\", {}, \"sha512-QMUezzXWII9EV5aTFXW1UBVUO77wYPpjqIF8/AviUCThNeSYZykpoTixUeaNNBwmCev0AMDWMAni+f8Hxb1IFw==\"],\n\n    \"fs.realpath\": [\"fs.realpath@1.0.0\", \"\", {}, \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\"],\n\n    \"fsevents\": [\"fsevents@2.3.3\", \"\", { \"os\": \"darwin\" }, \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\"],\n\n    \"function-bind\": [\"function-bind@1.1.2\", \"\", {}, \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\"],\n\n    \"function.prototype.name\": [\"function.prototype.name@1.1.8\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"functions-have-names\": \"^1.2.3\", \"hasown\": \"^2.0.2\", \"is-callable\": \"^1.2.7\" } }, \"sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==\"],\n\n    \"functions-have-names\": [\"functions-have-names@1.2.3\", \"\", {}, \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\"],\n\n    \"gaxios\": [\"gaxios@6.7.1\", \"\", { \"dependencies\": { \"extend\": \"^3.0.2\", \"https-proxy-agent\": \"^7.0.1\", \"is-stream\": \"^2.0.0\", \"node-fetch\": \"^2.6.9\", \"uuid\": \"^9.0.1\" } }, \"sha512-LDODD4TMYx7XXdpwxAVRAIAuB0bzv0s+ywFonY46k126qzQHT9ygyoa9tncmOiQmmDrik65UYsEkv3lbfqQ3yQ==\"],\n\n    \"gcp-metadata\": [\"gcp-metadata@6.1.1\", \"\", { \"dependencies\": { \"gaxios\": \"^6.1.1\", \"google-logging-utils\": \"^0.0.2\", \"json-bigint\": \"^1.0.0\" } }, \"sha512-a4tiq7E0/5fTjxPAaH4jpjkSv/uCaU2p5KC6HVGrvl0cDjA8iBZv4vv1gyzlmK0ZUKqwpOyQMKzZQe3lTit77A==\"],\n\n    \"gensync\": [\"gensync@1.0.0-beta.2\", \"\", {}, \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\"],\n\n    \"get-caller-file\": [\"get-caller-file@2.0.5\", \"\", {}, \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\"],\n\n    \"get-east-asian-width\": [\"get-east-asian-width@1.3.0\", \"\", {}, \"sha512-vpeMIQKxczTD/0s2CdEWHcb0eeJe6TFjxb+J5xgX7hScxqrGuyjmv4c1D4A/gelKfyox0gJJwIHF+fLjeaM8kQ==\"],\n\n    \"get-intrinsic\": [\"get-intrinsic@1.3.0\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.2\", \"es-define-property\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.1.1\", \"function-bind\": \"^1.1.2\", \"get-proto\": \"^1.0.1\", \"gopd\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"hasown\": \"^2.0.2\", \"math-intrinsics\": \"^1.1.0\" } }, \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\"],\n\n    \"get-nonce\": [\"get-nonce@1.0.1\", \"\", {}, \"sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==\"],\n\n    \"get-package-type\": [\"get-package-type@0.1.0\", \"\", {}, \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\"],\n\n    \"get-proto\": [\"get-proto@1.0.1\", \"\", { \"dependencies\": { \"dunder-proto\": \"^1.0.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\"],\n\n    \"get-stream\": [\"get-stream@6.0.1\", \"\", {}, \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\"],\n\n    \"get-symbol-description\": [\"get-symbol-description@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.6\" } }, \"sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==\"],\n\n    \"get-tsconfig\": [\"get-tsconfig@4.10.1\", \"\", { \"dependencies\": { \"resolve-pkg-maps\": \"^1.0.0\" } }, \"sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==\"],\n\n    \"get-uri\": [\"get-uri@6.0.5\", \"\", { \"dependencies\": { \"basic-ftp\": \"^5.0.2\", \"data-uri-to-buffer\": \"^6.0.2\", \"debug\": \"^4.3.4\" } }, \"sha512-b1O07XYq8eRuVzBNgJLstU6FYc1tS6wnMtF1I1D9lE8LxZSOGZ7LhxN54yPP6mGw5f2CkXY2BQUL9Fx41qvcIg==\"],\n\n    \"git-raw-commits\": [\"git-raw-commits@4.0.0\", \"\", { \"dependencies\": { \"dargs\": \"^8.0.0\", \"meow\": \"^12.0.1\", \"split2\": \"^4.0.0\" }, \"bin\": { \"git-raw-commits\": \"cli.mjs\" } }, \"sha512-ICsMM1Wk8xSGMowkOmPrzo2Fgmfo4bMHLNX6ytHjajRJUqvHOw/TFapQ+QG75c3X/tTDDhOSRPGC52dDbNM8FQ==\"],\n\n    \"git-up\": [\"git-up@8.1.1\", \"\", { \"dependencies\": { \"is-ssh\": \"^1.4.0\", \"parse-url\": \"^9.2.0\" } }, \"sha512-FDenSF3fVqBYSaJoYy1KSc2wosx0gCvKP+c+PRBht7cAaiCeQlBtfBDX9vgnNOHmdePlSFITVcn4pFfcgNvx3g==\"],\n\n    \"git-url-parse\": [\"git-url-parse@16.1.0\", \"\", { \"dependencies\": { \"git-up\": \"^8.1.0\" } }, \"sha512-cPLz4HuK86wClEW7iDdeAKcCVlWXmrLpb2L+G9goW0Z1dtpNS6BXXSOckUTlJT/LDQViE1QZKstNORzHsLnobw==\"],\n\n    \"glob\": [\"glob@10.3.10\", \"\", { \"dependencies\": { \"foreground-child\": \"^3.1.0\", \"jackspeak\": \"^2.3.5\", \"minimatch\": \"^9.0.1\", \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\", \"path-scurry\": \"^1.10.1\" }, \"bin\": { \"glob\": \"dist/esm/bin.mjs\" } }, \"sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==\"],\n\n    \"glob-parent\": [\"glob-parent@6.0.2\", \"\", { \"dependencies\": { \"is-glob\": \"^4.0.3\" } }, \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\"],\n\n    \"global-directory\": [\"global-directory@4.0.1\", \"\", { \"dependencies\": { \"ini\": \"4.1.1\" } }, \"sha512-wHTUcDUoZ1H5/0iVqEudYW4/kAlN5cZ3j/bXn0Dpbizl9iaUVeWSHqiOjsgk6OW2bkLclbBjzewBz6weQ1zA2Q==\"],\n\n    \"globals\": [\"globals@13.24.0\", \"\", { \"dependencies\": { \"type-fest\": \"^0.20.2\" } }, \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\"],\n\n    \"globalthis\": [\"globalthis@1.0.4\", \"\", { \"dependencies\": { \"define-properties\": \"^1.2.1\", \"gopd\": \"^1.0.1\" } }, \"sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==\"],\n\n    \"globby\": [\"globby@11.1.0\", \"\", { \"dependencies\": { \"array-union\": \"^2.1.0\", \"dir-glob\": \"^3.0.1\", \"fast-glob\": \"^3.2.9\", \"ignore\": \"^5.2.0\", \"merge2\": \"^1.4.1\", \"slash\": \"^3.0.0\" } }, \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\"],\n\n    \"glsl-noise\": [\"glsl-noise@0.0.0\", \"\", {}, \"sha512-b/ZCF6amfAUb7dJM/MxRs7AetQEahYzJ8PtgfrmEdtw6uyGOr+ZSGtgjFm6mfsBkxJ4d2W7kg+Nlqzqvn3Bc0w==\"],\n\n    \"google-auth-library\": [\"google-auth-library@9.15.1\", \"\", { \"dependencies\": { \"base64-js\": \"^1.3.0\", \"ecdsa-sig-formatter\": \"^1.0.11\", \"gaxios\": \"^6.1.1\", \"gcp-metadata\": \"^6.1.0\", \"gtoken\": \"^7.0.0\", \"jws\": \"^4.0.0\" } }, \"sha512-Jb6Z0+nvECVz+2lzSMt9u98UsoakXxA2HGHMCxh+so3n90XgYWkq5dur19JAJV7ONiJY22yBTyJB1TSkvPq9Ng==\"],\n\n    \"google-logging-utils\": [\"google-logging-utils@0.0.2\", \"\", {}, \"sha512-NEgUnEcBiP5HrPzufUkBzJOD/Sxsco3rLNo1F1TNf7ieU8ryUzBhqba8r756CjLX7rn3fHl6iLEwPYuqpoKgQQ==\"],\n\n    \"gopd\": [\"gopd@1.2.0\", \"\", {}, \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\"],\n\n    \"gpt-tokenizer\": [\"gpt-tokenizer@2.8.1\", \"\", {}, \"sha512-8+a9ojzqfgiF3TK4oivGYjlycD8g5igLt8NQw3ndOIgLVKSGJDhUDNAfYSbtyyuTkha3R/R9F8XrwC7/B5TKfQ==\"],\n\n    \"graceful-fs\": [\"graceful-fs@4.2.11\", \"\", {}, \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"],\n\n    \"gradient-string\": [\"gradient-string@2.0.2\", \"\", { \"dependencies\": { \"chalk\": \"^4.1.2\", \"tinygradient\": \"^1.1.5\" } }, \"sha512-rEDCuqUQ4tbD78TpzsMtt5OIf0cBCSDWSJtUDaF6JsAh+k0v9r++NzxNEG87oDZx9ZwGhD8DaezR2L/yrw0Jdw==\"],\n\n    \"graphemer\": [\"graphemer@1.4.0\", \"\", {}, \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\"],\n\n    \"gray-matter\": [\"gray-matter@4.0.3\", \"\", { \"dependencies\": { \"js-yaml\": \"^3.13.1\", \"kind-of\": \"^6.0.2\", \"section-matter\": \"^1.0.0\", \"strip-bom-string\": \"^1.0.0\" } }, \"sha512-5v6yZd4JK3eMI3FqqCouswVqwugaA9r4dNZB1wwcmrD02QkV5H0y7XBQW8QwQqEaZY1pM9aqORSORhJRdNK44Q==\"],\n\n    \"gtoken\": [\"gtoken@7.1.0\", \"\", { \"dependencies\": { \"gaxios\": \"^6.0.0\", \"jws\": \"^4.0.0\" } }, \"sha512-pCcEwRi+TKpMlxAQObHDQ56KawURgyAf6jtIY046fJ5tIv3zDe/LEIubckAO8fj6JnAxLdmWkUfNyulQ2iKdEw==\"],\n\n    \"h3-js\": [\"h3-js@4.2.1\", \"\", {}, \"sha512-HYiUrq5qTRFqMuQu3jEHqxXLk1zsSJiby9Lja/k42wHjabZG7tN9rOuzT/PEFf+Wa7rsnHLMHRWIu0mgcJ0ewQ==\"],\n\n    \"hachure-fill\": [\"hachure-fill@0.5.2\", \"\", {}, \"sha512-3GKBOn+m2LX9iq+JC1064cSFprJY4jL1jCXTcpnfER5HYE2l/4EfWSGzkPa/ZDBmYI0ZOEj5VHV/eKnPGkHuOg==\"],\n\n    \"has-bigints\": [\"has-bigints@1.1.0\", \"\", {}, \"sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==\"],\n\n    \"has-flag\": [\"has-flag@4.0.0\", \"\", {}, \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\"],\n\n    \"has-own-prop\": [\"has-own-prop@2.0.0\", \"\", {}, \"sha512-Pq0h+hvsVm6dDEa8x82GnLSYHOzNDt7f0ddFa3FqcQlgzEiptPqL+XrOJNavjOzSYiYWIrgeVYYgGlLmnxwilQ==\"],\n\n    \"has-property-descriptors\": [\"has-property-descriptors@1.0.2\", \"\", { \"dependencies\": { \"es-define-property\": \"^1.0.0\" } }, \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\"],\n\n    \"has-proto\": [\"has-proto@1.2.0\", \"\", { \"dependencies\": { \"dunder-proto\": \"^1.0.0\" } }, \"sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==\"],\n\n    \"has-symbols\": [\"has-symbols@1.1.0\", \"\", {}, \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\"],\n\n    \"has-tostringtag\": [\"has-tostringtag@1.0.2\", \"\", { \"dependencies\": { \"has-symbols\": \"^1.0.3\" } }, \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\"],\n\n    \"hash-wasm\": [\"hash-wasm@4.12.0\", \"\", {}, \"sha512-+/2B2rYLb48I/evdOIhP+K/DD2ca2fgBjp6O+GBEnCDk2e4rpeXIK8GvIyRPjTezgmWn9gmKwkQjjx6BtqDHVQ==\"],\n\n    \"hasown\": [\"hasown@2.0.2\", \"\", { \"dependencies\": { \"function-bind\": \"^1.1.2\" } }, \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\"],\n\n    \"hast-util-from-parse5\": [\"hast-util-from-parse5@7.1.2\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/unist\": \"^2.0.0\", \"hastscript\": \"^7.0.0\", \"property-information\": \"^6.0.0\", \"vfile\": \"^5.0.0\", \"vfile-location\": \"^4.0.0\", \"web-namespaces\": \"^2.0.0\" } }, \"sha512-Nz7FfPBuljzsN3tCQ4kCBKqdNhQE2l0Tn+X1ubgKBPRoiDIu1mL08Cfw4k7q71+Duyaw7DXDN+VTAp4Vh3oCOw==\"],\n\n    \"hast-util-parse-selector\": [\"hast-util-parse-selector@3.1.1\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\" } }, \"sha512-jdlwBjEexy1oGz0aJ2f4GKMaVKkA9jwjr4MjAAI22E5fM/TXVZHuS5OpONtdeIkRKqAaryQ2E9xNQxijoThSZA==\"],\n\n    \"hast-util-raw\": [\"hast-util-raw@7.2.3\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/parse5\": \"^6.0.0\", \"hast-util-from-parse5\": \"^7.0.0\", \"hast-util-to-parse5\": \"^7.0.0\", \"html-void-elements\": \"^2.0.0\", \"parse5\": \"^6.0.0\", \"unist-util-position\": \"^4.0.0\", \"unist-util-visit\": \"^4.0.0\", \"vfile\": \"^5.0.0\", \"web-namespaces\": \"^2.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-RujVQfVsOrxzPOPSzZFiwofMArbQke6DJjnFfceiEbFh7S05CbPt0cYN+A5YeD3pso0JQk6O1aHBnx9+Pm2uqg==\"],\n\n    \"hast-util-to-estree\": [\"hast-util-to-estree@3.1.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-attach-comments\": \"^3.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"hast-util-whitespace\": \"^3.0.0\", \"mdast-util-mdx-expression\": \"^2.0.0\", \"mdast-util-mdx-jsx\": \"^3.0.0\", \"mdast-util-mdxjs-esm\": \"^2.0.0\", \"property-information\": \"^7.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"style-to-js\": \"^1.0.0\", \"unist-util-position\": \"^5.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-48+B/rJWAp0jamNbAAf9M7Uf//UVqAoMmgXhBdxTDJLGKY+LRnZ99qcG+Qjl5HfMpYNzS5v4EAwVEF34LeAj7w==\"],\n\n    \"hast-util-to-html\": [\"hast-util-to-html@8.0.4\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/unist\": \"^2.0.0\", \"ccount\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"hast-util-raw\": \"^7.0.0\", \"hast-util-whitespace\": \"^2.0.0\", \"html-void-elements\": \"^2.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"stringify-entities\": \"^4.0.0\", \"zwitch\": \"^2.0.4\" } }, \"sha512-4tpQTUOr9BMjtYyNlt0P50mH7xj0Ks2xpo8M943Vykljf99HW6EzulIoJP1N3eKOSScEHzyzi9dm7/cn0RfGwA==\"],\n\n    \"hast-util-to-jsx-runtime\": [\"hast-util-to-jsx-runtime@2.3.6\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/unist\": \"^3.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"hast-util-whitespace\": \"^3.0.0\", \"mdast-util-mdx-expression\": \"^2.0.0\", \"mdast-util-mdx-jsx\": \"^3.0.0\", \"mdast-util-mdxjs-esm\": \"^2.0.0\", \"property-information\": \"^7.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"style-to-js\": \"^1.0.0\", \"unist-util-position\": \"^5.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-zl6s8LwNyo1P9uw+XJGvZtdFF1GdAkOg8ujOw+4Pyb76874fLps4ueHXDhXWdk6YHQ6OgUtinliG7RsYvCbbBg==\"],\n\n    \"hast-util-to-parse5\": [\"hast-util-to-parse5@7.1.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"web-namespaces\": \"^2.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-YNRgAJkH2Jky5ySkIqFXTQiaqcAtJyVE+D5lkN6CdtOqrnkLfGYYrEcKuHOJZlp+MwjSwuD3fZuawI+sic/RBw==\"],\n\n    \"hast-util-whitespace\": [\"hast-util-whitespace@3.0.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^3.0.0\" } }, \"sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==\"],\n\n    \"hastscript\": [\"hastscript@7.2.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"hast-util-parse-selector\": \"^3.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\" } }, \"sha512-TtYPq24IldU8iKoJQqvZOuhi5CyCQRAbvDOX0x1eW6rsHSxa/1i2CCiptNTotGHJ3VoHRGmqiv6/D3q113ikkw==\"],\n\n    \"hermes-estree\": [\"hermes-estree@0.29.1\", \"\", {}, \"sha512-jl+x31n4/w+wEqm0I2r4CMimukLbLQEYpisys5oCre611CI5fc9TxhqkBBCJ1edDG4Kza0f7CgNz8xVMLZQOmQ==\"],\n\n    \"hermes-parser\": [\"hermes-parser@0.29.1\", \"\", { \"dependencies\": { \"hermes-estree\": \"0.29.1\" } }, \"sha512-xBHWmUtRC5e/UL0tI7Ivt2riA/YBq9+SiYFU7C1oBa/j2jYGlIF9043oak1F47ihuDIxQ5nbsKueYJDRY02UgA==\"],\n\n    \"hls.js\": [\"hls.js@1.6.9\", \"\", {}, \"sha512-q7qPrri6GRwjcNd7EkFCmhiJ6PBIxeUsdxKbquBkQZpg9jAnp6zSAeN9eEWFlOB09J8JfzAQGoXL5ZEAltjO9g==\"],\n\n    \"html-encoding-sniffer\": [\"html-encoding-sniffer@3.0.0\", \"\", { \"dependencies\": { \"whatwg-encoding\": \"^2.0.0\" } }, \"sha512-oWv4T4yJ52iKrufjnyZPkrN0CH3QnrUqdB6In1g5Fe1mia8GmF36gnfNySxoZtxD5+NmYw1EElVXiBk93UeskA==\"],\n\n    \"html-entities\": [\"html-entities@2.6.0\", \"\", {}, \"sha512-kig+rMn/QOVRvr7c86gQ8lWXq+Hkv6CbAH1hLu+RG338StTpE8Z0b44SDVaqVu7HGKf27frdmUYEs9hTUX/cLQ==\"],\n\n    \"html-escaper\": [\"html-escaper@2.0.2\", \"\", {}, \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\"],\n\n    \"html-void-elements\": [\"html-void-elements@2.0.1\", \"\", {}, \"sha512-0quDb7s97CfemeJAnW9wC0hw78MtW7NU3hqtCD75g2vFlDLt36llsYD7uB7SUzojLMP24N5IatXf7ylGXiGG9A==\"],\n\n    \"http-errors\": [\"http-errors@2.0.0\", \"\", { \"dependencies\": { \"depd\": \"2.0.0\", \"inherits\": \"2.0.4\", \"setprototypeof\": \"1.2.0\", \"statuses\": \"2.0.1\", \"toidentifier\": \"1.0.1\" } }, \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\"],\n\n    \"http-proxy-agent\": [\"http-proxy-agent@5.0.0\", \"\", { \"dependencies\": { \"@tootallnate/once\": \"2\", \"agent-base\": \"6\", \"debug\": \"4\" } }, \"sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==\"],\n\n    \"https-proxy-agent\": [\"https-proxy-agent@7.0.6\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.2\", \"debug\": \"4\" } }, \"sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==\"],\n\n    \"human-signals\": [\"human-signals@4.3.1\", \"\", {}, \"sha512-nZXjEF2nbo7lIw3mgYjItAfgQXog3OjJogSbKa2CQIIvSGWcKgeJnQlNXip6NglNzYH45nSRiEVimMvYL8DDqQ==\"],\n\n    \"humanize-ms\": [\"humanize-ms@1.2.1\", \"\", { \"dependencies\": { \"ms\": \"^2.0.0\" } }, \"sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==\"],\n\n    \"husky\": [\"husky@9.1.7\", \"\", { \"bin\": { \"husky\": \"bin.js\" } }, \"sha512-5gs5ytaNjBrh5Ow3zrvdUUY+0VxIuWVL4i9irt6friV+BqdCfmV11CQTWMiBYWHbXhco+J1kHfTOUkePhCDvMA==\"],\n\n    \"iconv-lite\": [\"iconv-lite@0.4.24\", \"\", { \"dependencies\": { \"safer-buffer\": \">= 2.1.2 < 3\" } }, \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\"],\n\n    \"ieee754\": [\"ieee754@1.2.1\", \"\", {}, \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\"],\n\n    \"ignore\": [\"ignore@6.0.2\", \"\", {}, \"sha512-InwqeHHN2XpumIkMvpl/DCJVrAHgCsG5+cn1XlnLWGwtZBm8QJfSusItfrwx81CTp5agNZqpKU2J/ccC5nGT4A==\"],\n\n    \"image-size\": [\"image-size@1.2.1\", \"\", { \"dependencies\": { \"queue\": \"6.0.2\" }, \"bin\": { \"image-size\": \"bin/image-size.js\" } }, \"sha512-rH+46sQJ2dlwfjfhCyNx5thzrv+dtmBIhPHk0zgRUukHzZ/kRueTJXoYYsclBaKcSMBWuGbOFXtioLpzTb5euw==\"],\n\n    \"imagescript\": [\"imagescript@1.3.1\", \"\", {}, \"sha512-ue/zxSyEzj7je8Nlt2vjY9GEa2BbScFSRZJq7OTVDZFp0r57fyuxrlsF8qWgxTP+kP8WklTw4by/ZEYVX5S13w==\"],\n\n    \"immediate\": [\"immediate@3.0.6\", \"\", {}, \"sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==\"],\n\n    \"import-fresh\": [\"import-fresh@3.3.1\", \"\", { \"dependencies\": { \"parent-module\": \"^1.0.0\", \"resolve-from\": \"^4.0.0\" } }, \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\"],\n\n    \"import-local\": [\"import-local@3.2.0\", \"\", { \"dependencies\": { \"pkg-dir\": \"^4.2.0\", \"resolve-cwd\": \"^3.0.0\" }, \"bin\": { \"import-local-fixture\": \"fixtures/cli.js\" } }, \"sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==\"],\n\n    \"import-meta-resolve\": [\"import-meta-resolve@4.1.0\", \"\", {}, \"sha512-I6fiaX09Xivtk+THaMfAwnA3MVA5Big1WHF1Dfx9hFuvNIWpXnorlkzhcQf6ehrqQiiZECRt1poOAkPmer3ruw==\"],\n\n    \"imurmurhash\": [\"imurmurhash@0.1.4\", \"\", {}, \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\"],\n\n    \"indent-string\": [\"indent-string@4.0.0\", \"\", {}, \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\"],\n\n    \"index-array-by\": [\"index-array-by@1.4.2\", \"\", {}, \"sha512-SP23P27OUKzXWEC/TOyWlwLviofQkCSCKONnc62eItjp69yCZZPqDQtr3Pw5gJDnPeUMqExmKydNZaJO0FU9pw==\"],\n\n    \"inflection\": [\"inflection@2.0.1\", \"\", {}, \"sha512-wzkZHqpb4eGrOKBl34xy3umnYHx8Si5R1U4fwmdxLo5gdH6mEK8gclckTj/qWqy4Je0bsDYe/qazZYuO7xe3XQ==\"],\n\n    \"inflight\": [\"inflight@1.0.6\", \"\", { \"dependencies\": { \"once\": \"^1.3.0\", \"wrappy\": \"1\" } }, \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\"],\n\n    \"inherits\": [\"inherits@2.0.4\", \"\", {}, \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"],\n\n    \"ini\": [\"ini@4.1.1\", \"\", {}, \"sha512-QQnnxNyfvmHFIsj7gkPcYymR8Jdw/o7mp5ZFihxn6h8Ci6fh3Dx4E1gPjpQEpIuPo9XVNY/ZUwh4BPMjGyL01g==\"],\n\n    \"inline-style-parser\": [\"inline-style-parser@0.2.4\", \"\", {}, \"sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==\"],\n\n    \"internal-slot\": [\"internal-slot@1.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"hasown\": \"^2.0.2\", \"side-channel\": \"^1.1.0\" } }, \"sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==\"],\n\n    \"internmap\": [\"internmap@2.0.3\", \"\", {}, \"sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==\"],\n\n    \"invariant\": [\"invariant@2.2.4\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.0.0\" } }, \"sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==\"],\n\n    \"ip-address\": [\"ip-address@10.0.1\", \"\", {}, \"sha512-NWv9YLW4PoW2B7xtzaS3NCot75m6nK7Icdv0o3lfMceJVRfSoQwqD4wEH5rLwoKJwUiZ/rfpiVBhnaF0FK4HoA==\"],\n\n    \"ipaddr.js\": [\"ipaddr.js@1.9.1\", \"\", {}, \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\"],\n\n    \"is\": [\"is@3.3.2\", \"\", {}, \"sha512-a2xr4E3s1PjDS8ORcGgXpWx6V+liNs+O3JRD2mb9aeugD7rtkkZ0zgLdYgw0tWsKhsdiezGYptSiMlVazCBTuQ==\"],\n\n    \"is-alphabetical\": [\"is-alphabetical@2.0.1\", \"\", {}, \"sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==\"],\n\n    \"is-alphanumerical\": [\"is-alphanumerical@2.0.1\", \"\", { \"dependencies\": { \"is-alphabetical\": \"^2.0.0\", \"is-decimal\": \"^2.0.0\" } }, \"sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==\"],\n\n    \"is-array-buffer\": [\"is-array-buffer@3.0.5\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"get-intrinsic\": \"^1.2.6\" } }, \"sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==\"],\n\n    \"is-arrayish\": [\"is-arrayish@0.2.1\", \"\", {}, \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\"],\n\n    \"is-async-function\": [\"is-async-function@2.1.1\", \"\", { \"dependencies\": { \"async-function\": \"^1.0.0\", \"call-bound\": \"^1.0.3\", \"get-proto\": \"^1.0.1\", \"has-tostringtag\": \"^1.0.2\", \"safe-regex-test\": \"^1.1.0\" } }, \"sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==\"],\n\n    \"is-bigint\": [\"is-bigint@1.1.0\", \"\", { \"dependencies\": { \"has-bigints\": \"^1.0.2\" } }, \"sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==\"],\n\n    \"is-binary-path\": [\"is-binary-path@2.1.0\", \"\", { \"dependencies\": { \"binary-extensions\": \"^2.0.0\" } }, \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\"],\n\n    \"is-boolean-object\": [\"is-boolean-object@1.2.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==\"],\n\n    \"is-buffer\": [\"is-buffer@2.0.5\", \"\", {}, \"sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==\"],\n\n    \"is-bun-module\": [\"is-bun-module@2.0.0\", \"\", { \"dependencies\": { \"semver\": \"^7.7.1\" } }, \"sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==\"],\n\n    \"is-callable\": [\"is-callable@1.2.7\", \"\", {}, \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\"],\n\n    \"is-core-module\": [\"is-core-module@2.16.1\", \"\", { \"dependencies\": { \"hasown\": \"^2.0.2\" } }, \"sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==\"],\n\n    \"is-data-view\": [\"is-data-view@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"get-intrinsic\": \"^1.2.6\", \"is-typed-array\": \"^1.1.13\" } }, \"sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==\"],\n\n    \"is-date-object\": [\"is-date-object@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==\"],\n\n    \"is-decimal\": [\"is-decimal@2.0.1\", \"\", {}, \"sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==\"],\n\n    \"is-directory\": [\"is-directory@0.3.1\", \"\", {}, \"sha512-yVChGzahRFvbkscn2MlwGismPO12i9+znNruC5gVEntG3qu0xQMzsGg/JFbrsqDOHtHFPci+V5aP5T9I+yeKqw==\"],\n\n    \"is-docker\": [\"is-docker@2.2.1\", \"\", { \"bin\": { \"is-docker\": \"cli.js\" } }, \"sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==\"],\n\n    \"is-extendable\": [\"is-extendable@0.1.1\", \"\", {}, \"sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==\"],\n\n    \"is-extglob\": [\"is-extglob@2.1.1\", \"\", {}, \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\"],\n\n    \"is-finalizationregistry\": [\"is-finalizationregistry@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\" } }, \"sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==\"],\n\n    \"is-fullwidth-code-point\": [\"is-fullwidth-code-point@3.0.0\", \"\", {}, \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\"],\n\n    \"is-generator-fn\": [\"is-generator-fn@2.1.0\", \"\", {}, \"sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==\"],\n\n    \"is-generator-function\": [\"is-generator-function@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"get-proto\": \"^1.0.0\", \"has-tostringtag\": \"^1.0.2\", \"safe-regex-test\": \"^1.1.0\" } }, \"sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==\"],\n\n    \"is-glob\": [\"is-glob@4.0.3\", \"\", { \"dependencies\": { \"is-extglob\": \"^2.1.1\" } }, \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\"],\n\n    \"is-hexadecimal\": [\"is-hexadecimal@2.0.1\", \"\", {}, \"sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==\"],\n\n    \"is-interactive\": [\"is-interactive@2.0.0\", \"\", {}, \"sha512-qP1vozQRI+BMOPcjFzrjXuQvdak2pHNUMZoeG2eRbiSqyvbEf/wQtEOTOX1guk6E3t36RkaqiSt8A/6YElNxLQ==\"],\n\n    \"is-map\": [\"is-map@2.0.3\", \"\", {}, \"sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==\"],\n\n    \"is-negative-zero\": [\"is-negative-zero@2.0.3\", \"\", {}, \"sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==\"],\n\n    \"is-number\": [\"is-number@7.0.0\", \"\", {}, \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\"],\n\n    \"is-number-object\": [\"is-number-object@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==\"],\n\n    \"is-obj\": [\"is-obj@2.0.0\", \"\", {}, \"sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==\"],\n\n    \"is-path-inside\": [\"is-path-inside@3.0.3\", \"\", {}, \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\"],\n\n    \"is-plain-obj\": [\"is-plain-obj@4.1.0\", \"\", {}, \"sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==\"],\n\n    \"is-potential-custom-element-name\": [\"is-potential-custom-element-name@1.0.1\", \"\", {}, \"sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==\"],\n\n    \"is-promise\": [\"is-promise@2.2.2\", \"\", {}, \"sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ==\"],\n\n    \"is-reference\": [\"is-reference@3.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.6\" } }, \"sha512-ixkJoqQvAP88E6wLydLGGqCJsrFUnqoH6HnaczB8XmDH1oaWU+xxdptvikTgaEhtZ53Ky6YXiBuUI2WXLMCwjw==\"],\n\n    \"is-regex\": [\"is-regex@1.2.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"gopd\": \"^1.2.0\", \"has-tostringtag\": \"^1.0.2\", \"hasown\": \"^2.0.2\" } }, \"sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==\"],\n\n    \"is-set\": [\"is-set@2.0.3\", \"\", {}, \"sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==\"],\n\n    \"is-shared-array-buffer\": [\"is-shared-array-buffer@1.0.4\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\" } }, \"sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==\"],\n\n    \"is-ssh\": [\"is-ssh@1.4.1\", \"\", { \"dependencies\": { \"protocols\": \"^2.0.1\" } }, \"sha512-JNeu1wQsHjyHgn9NcWTaXq6zWSR6hqE0++zhfZlkFBbScNkyvxCdeV8sRkSBaeLKxmbpR21brail63ACNxJ0Tg==\"],\n\n    \"is-stream\": [\"is-stream@3.0.0\", \"\", {}, \"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\"],\n\n    \"is-string\": [\"is-string@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==\"],\n\n    \"is-symbol\": [\"is-symbol@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"has-symbols\": \"^1.1.0\", \"safe-regex-test\": \"^1.1.0\" } }, \"sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==\"],\n\n    \"is-text-path\": [\"is-text-path@2.0.0\", \"\", { \"dependencies\": { \"text-extensions\": \"^2.0.0\" } }, \"sha512-+oDTluR6WEjdXEJMnC2z6A4FRwFoYuvShVVEGsS7ewc0UTi2QtAKMDJuL4BDEVt+5T7MjFo12RP8ghOM75oKJw==\"],\n\n    \"is-typed-array\": [\"is-typed-array@1.1.15\", \"\", { \"dependencies\": { \"which-typed-array\": \"^1.1.16\" } }, \"sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==\"],\n\n    \"is-typedarray\": [\"is-typedarray@1.0.0\", \"\", {}, \"sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==\"],\n\n    \"is-unicode-supported\": [\"is-unicode-supported@1.3.0\", \"\", {}, \"sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==\"],\n\n    \"is-weakmap\": [\"is-weakmap@2.0.2\", \"\", {}, \"sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==\"],\n\n    \"is-weakref\": [\"is-weakref@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\" } }, \"sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==\"],\n\n    \"is-weakset\": [\"is-weakset@2.0.4\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"get-intrinsic\": \"^1.2.6\" } }, \"sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==\"],\n\n    \"is-wsl\": [\"is-wsl@2.2.0\", \"\", { \"dependencies\": { \"is-docker\": \"^2.0.0\" } }, \"sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==\"],\n\n    \"isarray\": [\"isarray@2.0.5\", \"\", {}, \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\"],\n\n    \"isexe\": [\"isexe@2.0.0\", \"\", {}, \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"],\n\n    \"isomorphic-git\": [\"isomorphic-git@1.32.3\", \"\", { \"dependencies\": { \"async-lock\": \"^1.4.1\", \"clean-git-ref\": \"^2.0.1\", \"crc-32\": \"^1.2.0\", \"diff3\": \"0.0.3\", \"ignore\": \"^5.1.4\", \"minimisted\": \"^2.0.0\", \"pako\": \"^1.0.10\", \"path-browserify\": \"^1.0.1\", \"pify\": \"^4.0.1\", \"readable-stream\": \"^3.4.0\", \"sha.js\": \"^2.4.9\", \"simple-get\": \"^4.0.1\" }, \"bin\": { \"isogit\": \"cli.cjs\" } }, \"sha512-gTcJH3JaUdj7WFGnPKnn7XpO1qAeu3nsiC7m2vEdHEsJx8fmBVQ8ji4FQG26JJArFd3MYyuA43pA7bk0DI6+Ww==\"],\n\n    \"istanbul-lib-coverage\": [\"istanbul-lib-coverage@3.2.2\", \"\", {}, \"sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==\"],\n\n    \"istanbul-lib-instrument\": [\"istanbul-lib-instrument@6.0.3\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.23.9\", \"@babel/parser\": \"^7.23.9\", \"@istanbuljs/schema\": \"^0.1.3\", \"istanbul-lib-coverage\": \"^3.2.0\", \"semver\": \"^7.5.4\" } }, \"sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==\"],\n\n    \"istanbul-lib-report\": [\"istanbul-lib-report@3.0.1\", \"\", { \"dependencies\": { \"istanbul-lib-coverage\": \"^3.0.0\", \"make-dir\": \"^4.0.0\", \"supports-color\": \"^7.1.0\" } }, \"sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==\"],\n\n    \"istanbul-lib-source-maps\": [\"istanbul-lib-source-maps@4.0.1\", \"\", { \"dependencies\": { \"debug\": \"^4.1.1\", \"istanbul-lib-coverage\": \"^3.0.0\", \"source-map\": \"^0.6.1\" } }, \"sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==\"],\n\n    \"istanbul-reports\": [\"istanbul-reports@3.1.7\", \"\", { \"dependencies\": { \"html-escaper\": \"^2.0.0\", \"istanbul-lib-report\": \"^3.0.0\" } }, \"sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==\"],\n\n    \"iterator.prototype\": [\"iterator.prototype@1.1.5\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.1.4\", \"es-object-atoms\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.6\", \"get-proto\": \"^1.0.0\", \"has-symbols\": \"^1.1.0\", \"set-function-name\": \"^2.0.2\" } }, \"sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==\"],\n\n    \"its-fine\": [\"its-fine@1.2.5\", \"\", { \"dependencies\": { \"@types/react-reconciler\": \"^0.28.0\" }, \"peerDependencies\": { \"react\": \">=18.0\" } }, \"sha512-fXtDA0X0t0eBYAGLVM5YsgJGsJ5jEmqZEPrGbzdf5awjv0xE7nqv3TVnvtUF060Tkes15DbDAKW/I48vsb6SyA==\"],\n\n    \"jackspeak\": [\"jackspeak@2.3.6\", \"\", { \"dependencies\": { \"@isaacs/cliui\": \"^8.0.2\" }, \"optionalDependencies\": { \"@pkgjs/parseargs\": \"^0.11.0\" } }, \"sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==\"],\n\n    \"jake\": [\"jake@10.9.4\", \"\", { \"dependencies\": { \"async\": \"^3.2.6\", \"filelist\": \"^1.0.4\", \"picocolors\": \"^1.1.1\" }, \"bin\": { \"jake\": \"bin/cli.js\" } }, \"sha512-wpHYzhxiVQL+IV05BLE2Xn34zW1S223hvjtqk0+gsPrwd/8JNLXJgZZM/iPFsYc1xyphF+6M6EvdE5E9MBGkDA==\"],\n\n    \"jest\": [\"jest@29.7.0\", \"\", { \"dependencies\": { \"@jest/core\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"import-local\": \"^3.0.2\", \"jest-cli\": \"^29.7.0\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"], \"bin\": { \"jest\": \"bin/jest.js\" } }, \"sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\"],\n\n    \"jest-changed-files\": [\"jest-changed-files@29.7.0\", \"\", { \"dependencies\": { \"execa\": \"^5.0.0\", \"jest-util\": \"^29.7.0\", \"p-limit\": \"^3.1.0\" } }, \"sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==\"],\n\n    \"jest-circus\": [\"jest-circus@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/expect\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"co\": \"^4.6.0\", \"dedent\": \"^1.0.0\", \"is-generator-fn\": \"^2.0.0\", \"jest-each\": \"^29.7.0\", \"jest-matcher-utils\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-runtime\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"p-limit\": \"^3.1.0\", \"pretty-format\": \"^29.7.0\", \"pure-rand\": \"^6.0.0\", \"slash\": \"^3.0.0\", \"stack-utils\": \"^2.0.3\" } }, \"sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==\"],\n\n    \"jest-cli\": [\"jest-cli@29.7.0\", \"\", { \"dependencies\": { \"@jest/core\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"create-jest\": \"^29.7.0\", \"exit\": \"^0.1.2\", \"import-local\": \"^3.0.2\", \"jest-config\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"yargs\": \"^17.3.1\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"], \"bin\": { \"jest\": \"bin/jest.js\" } }, \"sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==\"],\n\n    \"jest-config\": [\"jest-config@29.7.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.11.6\", \"@jest/test-sequencer\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"babel-jest\": \"^29.7.0\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^3.2.0\", \"deepmerge\": \"^4.2.2\", \"glob\": \"^7.1.3\", \"graceful-fs\": \"^4.2.9\", \"jest-circus\": \"^29.7.0\", \"jest-environment-node\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"jest-regex-util\": \"^29.6.3\", \"jest-resolve\": \"^29.7.0\", \"jest-runner\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"parse-json\": \"^5.2.0\", \"pretty-format\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"strip-json-comments\": \"^3.1.1\" }, \"peerDependencies\": { \"@types/node\": \"*\", \"ts-node\": \">=9.0.0\" }, \"optionalPeers\": [\"@types/node\", \"ts-node\"] }, \"sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==\"],\n\n    \"jest-diff\": [\"jest-diff@30.0.5\", \"\", { \"dependencies\": { \"@jest/diff-sequences\": \"30.0.1\", \"@jest/get-type\": \"30.0.1\", \"chalk\": \"^4.1.2\", \"pretty-format\": \"30.0.5\" } }, \"sha512-1UIqE9PoEKaHcIKvq2vbibrCog4Y8G0zmOxgQUVEiTqwR5hJVMCoDsN1vFvI5JvwD37hjueZ1C4l2FyGnfpE0A==\"],\n\n    \"jest-docblock\": [\"jest-docblock@29.7.0\", \"\", { \"dependencies\": { \"detect-newline\": \"^3.0.0\" } }, \"sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==\"],\n\n    \"jest-each\": [\"jest-each@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"jest-get-type\": \"^29.6.3\", \"jest-util\": \"^29.7.0\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==\"],\n\n    \"jest-environment-jsdom\": [\"jest-environment-jsdom@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/fake-timers\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/jsdom\": \"^20.0.0\", \"@types/node\": \"*\", \"jest-mock\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jsdom\": \"^20.0.0\" }, \"peerDependencies\": { \"canvas\": \"^2.5.0\" }, \"optionalPeers\": [\"canvas\"] }, \"sha512-k9iQbsf9OyOfdzWH8HDmrRT0gSIcX+FLNW7IQq94tFX0gynPwqDTW0Ho6iMVNjGz/nb+l/vW3dWM2bbLLpkbXA==\"],\n\n    \"jest-environment-node\": [\"jest-environment-node@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/fake-timers\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"jest-mock\": \"^29.7.0\", \"jest-util\": \"^29.7.0\" } }, \"sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==\"],\n\n    \"jest-get-type\": [\"jest-get-type@29.6.3\", \"\", {}, \"sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==\"],\n\n    \"jest-haste-map\": [\"jest-haste-map@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/graceful-fs\": \"^4.1.3\", \"@types/node\": \"*\", \"anymatch\": \"^3.0.3\", \"fb-watchman\": \"^2.0.0\", \"graceful-fs\": \"^4.2.9\", \"jest-regex-util\": \"^29.6.3\", \"jest-util\": \"^29.7.0\", \"jest-worker\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"walker\": \"^1.0.8\" }, \"optionalDependencies\": { \"fsevents\": \"^2.3.2\" } }, \"sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==\"],\n\n    \"jest-leak-detector\": [\"jest-leak-detector@29.7.0\", \"\", { \"dependencies\": { \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==\"],\n\n    \"jest-matcher-utils\": [\"jest-matcher-utils@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"jest-diff\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==\"],\n\n    \"jest-message-util\": [\"jest-message-util@29.7.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.12.13\", \"@jest/types\": \"^29.6.3\", \"@types/stack-utils\": \"^2.0.0\", \"chalk\": \"^4.0.0\", \"graceful-fs\": \"^4.2.9\", \"micromatch\": \"^4.0.4\", \"pretty-format\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"stack-utils\": \"^2.0.3\" } }, \"sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==\"],\n\n    \"jest-mock\": [\"jest-mock@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"jest-util\": \"^29.7.0\" } }, \"sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==\"],\n\n    \"jest-pnp-resolver\": [\"jest-pnp-resolver@1.2.3\", \"\", { \"peerDependencies\": { \"jest-resolve\": \"*\" }, \"optionalPeers\": [\"jest-resolve\"] }, \"sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==\"],\n\n    \"jest-regex-util\": [\"jest-regex-util@29.6.3\", \"\", {}, \"sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==\"],\n\n    \"jest-resolve\": [\"jest-resolve@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"jest-pnp-resolver\": \"^1.2.2\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"resolve\": \"^1.20.0\", \"resolve.exports\": \"^2.0.0\", \"slash\": \"^3.0.0\" } }, \"sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\"],\n\n    \"jest-resolve-dependencies\": [\"jest-resolve-dependencies@29.7.0\", \"\", { \"dependencies\": { \"jest-regex-util\": \"^29.6.3\", \"jest-snapshot\": \"^29.7.0\" } }, \"sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==\"],\n\n    \"jest-runner\": [\"jest-runner@29.7.0\", \"\", { \"dependencies\": { \"@jest/console\": \"^29.7.0\", \"@jest/environment\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"emittery\": \"^0.13.1\", \"graceful-fs\": \"^4.2.9\", \"jest-docblock\": \"^29.7.0\", \"jest-environment-node\": \"^29.7.0\", \"jest-haste-map\": \"^29.7.0\", \"jest-leak-detector\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-resolve\": \"^29.7.0\", \"jest-runtime\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-watcher\": \"^29.7.0\", \"jest-worker\": \"^29.7.0\", \"p-limit\": \"^3.1.0\", \"source-map-support\": \"0.5.13\" } }, \"sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==\"],\n\n    \"jest-runtime\": [\"jest-runtime@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/fake-timers\": \"^29.7.0\", \"@jest/globals\": \"^29.7.0\", \"@jest/source-map\": \"^29.6.3\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"cjs-module-lexer\": \"^1.0.0\", \"collect-v8-coverage\": \"^1.0.0\", \"glob\": \"^7.1.3\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-mock\": \"^29.7.0\", \"jest-regex-util\": \"^29.6.3\", \"jest-resolve\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"strip-bom\": \"^4.0.0\" } }, \"sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==\"],\n\n    \"jest-snapshot\": [\"jest-snapshot@29.7.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.11.6\", \"@babel/generator\": \"^7.7.2\", \"@babel/plugin-syntax-jsx\": \"^7.7.2\", \"@babel/plugin-syntax-typescript\": \"^7.7.2\", \"@babel/types\": \"^7.3.3\", \"@jest/expect-utils\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"babel-preset-current-node-syntax\": \"^1.0.0\", \"chalk\": \"^4.0.0\", \"expect\": \"^29.7.0\", \"graceful-fs\": \"^4.2.9\", \"jest-diff\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"jest-matcher-utils\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"natural-compare\": \"^1.4.0\", \"pretty-format\": \"^29.7.0\", \"semver\": \"^7.5.3\" } }, \"sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==\"],\n\n    \"jest-util\": [\"jest-util@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^3.2.0\", \"graceful-fs\": \"^4.2.9\", \"picomatch\": \"^2.2.3\" } }, \"sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\"],\n\n    \"jest-validate\": [\"jest-validate@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"camelcase\": \"^6.2.0\", \"chalk\": \"^4.0.0\", \"jest-get-type\": \"^29.6.3\", \"leven\": \"^3.1.0\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==\"],\n\n    \"jest-watcher\": [\"jest-watcher@29.7.0\", \"\", { \"dependencies\": { \"@jest/test-result\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"ansi-escapes\": \"^4.2.1\", \"chalk\": \"^4.0.0\", \"emittery\": \"^0.13.1\", \"jest-util\": \"^29.7.0\", \"string-length\": \"^4.0.1\" } }, \"sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==\"],\n\n    \"jest-worker\": [\"jest-worker@29.7.0\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"jest-util\": \"^29.7.0\", \"merge-stream\": \"^2.0.0\", \"supports-color\": \"^8.0.0\" } }, \"sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==\"],\n\n    \"jiti\": [\"jiti@1.21.7\", \"\", { \"bin\": { \"jiti\": \"bin/jiti.js\" } }, \"sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==\"],\n\n    \"jose\": [\"jose@4.15.9\", \"\", {}, \"sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==\"],\n\n    \"js-tokens\": [\"js-tokens@4.0.0\", \"\", {}, \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"],\n\n    \"js-yaml\": [\"js-yaml@4.1.0\", \"\", { \"dependencies\": { \"argparse\": \"^2.0.1\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\"],\n\n    \"jsbi\": [\"jsbi@4.3.2\", \"\", {}, \"sha512-9fqMSQbhJykSeii05nxKl4m6Eqn2P6rOlYiS+C5Dr/HPIU/7yZxu5qzbs40tgaFORiw2Amd0mirjxatXYMkIew==\"],\n\n    \"jsc-safe-url\": [\"jsc-safe-url@0.2.4\", \"\", {}, \"sha512-0wM3YBWtYePOjfyXQH5MWQ8H7sdk5EXSwZvmSLKk2RboVQ2Bu239jycHDz5J/8Blf3K0Qnoy2b6xD+z10MFB+Q==\"],\n\n    \"jsdom\": [\"jsdom@20.0.3\", \"\", { \"dependencies\": { \"abab\": \"^2.0.6\", \"acorn\": \"^8.8.1\", \"acorn-globals\": \"^7.0.0\", \"cssom\": \"^0.5.0\", \"cssstyle\": \"^2.3.0\", \"data-urls\": \"^3.0.2\", \"decimal.js\": \"^10.4.2\", \"domexception\": \"^4.0.0\", \"escodegen\": \"^2.0.0\", \"form-data\": \"^4.0.0\", \"html-encoding-sniffer\": \"^3.0.0\", \"http-proxy-agent\": \"^5.0.0\", \"https-proxy-agent\": \"^5.0.1\", \"is-potential-custom-element-name\": \"^1.0.1\", \"nwsapi\": \"^2.2.2\", \"parse5\": \"^7.1.1\", \"saxes\": \"^6.0.0\", \"symbol-tree\": \"^3.2.4\", \"tough-cookie\": \"^4.1.2\", \"w3c-xmlserializer\": \"^4.0.0\", \"webidl-conversions\": \"^7.0.0\", \"whatwg-encoding\": \"^2.0.0\", \"whatwg-mimetype\": \"^3.0.0\", \"whatwg-url\": \"^11.0.0\", \"ws\": \"^8.11.0\", \"xml-name-validator\": \"^4.0.0\" }, \"peerDependencies\": { \"canvas\": \"^2.5.0\" }, \"optionalPeers\": [\"canvas\"] }, \"sha512-SYhBvTh89tTfCD/CRdSOm13mOBa42iTaTyfyEWBdKcGdPxPtLFBXuHR8XHb33YNYaP+lLbmSvBTsnoesCNJEsQ==\"],\n\n    \"jsesc\": [\"jsesc@3.1.0\", \"\", { \"bin\": { \"jsesc\": \"bin/jsesc\" } }, \"sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==\"],\n\n    \"json-bigint\": [\"json-bigint@1.0.0\", \"\", { \"dependencies\": { \"bignumber.js\": \"^9.0.0\" } }, \"sha512-SiPv/8VpZuWbvLSMtTDU8hEfrZWg/mH/nV/b4o0CYbSxu1UIQPLdwKOCIyLQX+VIPO5vrLX3i8qtqFyhdPSUSQ==\"],\n\n    \"json-buffer\": [\"json-buffer@3.0.1\", \"\", {}, \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\"],\n\n    \"json-parse-better-errors\": [\"json-parse-better-errors@1.0.2\", \"\", {}, \"sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==\"],\n\n    \"json-parse-even-better-errors\": [\"json-parse-even-better-errors@2.3.1\", \"\", {}, \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"],\n\n    \"json-schema\": [\"json-schema@0.4.0\", \"\", {}, \"sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==\"],\n\n    \"json-schema-traverse\": [\"json-schema-traverse@0.4.1\", \"\", {}, \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\"],\n\n    \"json-stable-stringify-without-jsonify\": [\"json-stable-stringify-without-jsonify@1.0.1\", \"\", {}, \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\"],\n\n    \"json5\": [\"json5@2.2.3\", \"\", { \"bin\": { \"json5\": \"lib/cli.js\" } }, \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\"],\n\n    \"jsonc-parser\": [\"jsonc-parser@3.2.0\", \"\", {}, \"sha512-gfFQZrcTc8CnKXp6Y4/CBT3fTc0OVuDofpre4aEeEpSBPV5X5v4+Vmx+8snU7RLPrNHPKSgLxGo9YuQzz20o+w==\"],\n\n    \"jsonfile\": [\"jsonfile@6.2.0\", \"\", { \"dependencies\": { \"universalify\": \"^2.0.0\" }, \"optionalDependencies\": { \"graceful-fs\": \"^4.1.6\" } }, \"sha512-FGuPw30AdOIUTRMC2OMRtQV+jkVj2cfPqSeWXv1NEAJ1qZ5zb1X6z1mFhbfOB/iy3ssJCD+3KuZ8r8C3uVFlAg==\"],\n\n    \"jsonparse\": [\"jsonparse@1.3.1\", \"\", {}, \"sha512-POQXvpdL69+CluYsillJ7SUhKvytYjW9vG/GKpnf+xP8UWgYEM/RaMzHHofbALDiKbbP1W8UEYmgGl39WkPZsg==\"],\n\n    \"jsx-ast-utils\": [\"jsx-ast-utils@3.3.5\", \"\", { \"dependencies\": { \"array-includes\": \"^3.1.6\", \"array.prototype.flat\": \"^1.3.1\", \"object.assign\": \"^4.1.4\", \"object.values\": \"^1.1.6\" } }, \"sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==\"],\n\n    \"jwa\": [\"jwa@2.0.1\", \"\", { \"dependencies\": { \"buffer-equal-constant-time\": \"^1.0.1\", \"ecdsa-sig-formatter\": \"1.0.11\", \"safe-buffer\": \"^5.0.1\" } }, \"sha512-hRF04fqJIP8Abbkq5NKGN0Bbr3JxlQ+qhZufXVr0DvujKy93ZCbXZMHDL4EOtodSbCWxOqR8MS1tXA5hwqCXDg==\"],\n\n    \"jws\": [\"jws@4.0.0\", \"\", { \"dependencies\": { \"jwa\": \"^2.0.0\", \"safe-buffer\": \"^5.0.1\" } }, \"sha512-KDncfTmOZoOMTFG4mBlG0qUIOlc03fmzH+ru6RgYVZhPkyiy/92Owlt/8UEN+a4TXR1FQetfIpJE8ApdvdVxTg==\"],\n\n    \"kapsule\": [\"kapsule@1.16.3\", \"\", { \"dependencies\": { \"lodash-es\": \"4\" } }, \"sha512-4+5mNNf4vZDSwPhKprKwz3330iisPrb08JyMgbsdFrimBCKNHecua/WBwvVg3n7vwx0C1ARjfhwIpbrbd9n5wg==\"],\n\n    \"katex\": [\"katex@0.16.22\", \"\", { \"dependencies\": { \"commander\": \"^8.3.0\" }, \"bin\": { \"katex\": \"cli.js\" } }, \"sha512-XCHRdUw4lf3SKBaJe4EvgqIuWwkPSo9XoeO8GjQW94Bp7TWv9hNhzZjZ+OH9yf1UmLygb7DIT5GSFQiyt16zYg==\"],\n\n    \"keyv\": [\"keyv@4.5.4\", \"\", { \"dependencies\": { \"json-buffer\": \"3.0.1\" } }, \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\"],\n\n    \"khroma\": [\"khroma@2.1.0\", \"\", {}, \"sha512-Ls993zuzfayK269Svk9hzpeGUKob/sIgZzyHYdjQoAdQetRKpOLj+k/QQQ/6Qi0Yz65mlROrfd+Ev+1+7dz9Kw==\"],\n\n    \"kind-of\": [\"kind-of@6.0.3\", \"\", {}, \"sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\"],\n\n    \"kleur\": [\"kleur@3.0.3\", \"\", {}, \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\"],\n\n    \"kolorist\": [\"kolorist@1.8.0\", \"\", {}, \"sha512-Y+60/zizpJ3HRH8DCss+q95yr6145JXZo46OTpFvDZWLfRCE4qChOyk1b26nMaNpfHHgxagk9dXT5OP0Tfe+dQ==\"],\n\n    \"konva\": [\"konva@9.3.22\", \"\", {}, \"sha512-yQI5d1bmELlD/fowuyfOp9ff+oamg26WOCkyqUyc+nczD/lhRa3EvD2MZOoc4c1293TAubW9n34fSQLgSeEgSw==\"],\n\n    \"langium\": [\"langium@3.3.1\", \"\", { \"dependencies\": { \"chevrotain\": \"~11.0.3\", \"chevrotain-allstar\": \"~0.3.0\", \"vscode-languageserver\": \"~9.0.1\", \"vscode-languageserver-textdocument\": \"~1.0.11\", \"vscode-uri\": \"~3.0.8\" } }, \"sha512-QJv/h939gDpvT+9SiLVlY7tZC3xB2qK57v0J04Sh9wpMb6MP1q8gB21L3WIo8T5P1MSMg3Ep14L7KkDCFG3y4w==\"],\n\n    \"language-subtag-registry\": [\"language-subtag-registry@0.3.23\", \"\", {}, \"sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==\"],\n\n    \"language-tags\": [\"language-tags@1.0.9\", \"\", { \"dependencies\": { \"language-subtag-registry\": \"^0.3.20\" } }, \"sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==\"],\n\n    \"layout-base\": [\"layout-base@1.0.2\", \"\", {}, \"sha512-8h2oVEZNktL4BH2JCOI90iD1yXwL6iNW7KcCKT2QZgQJR2vbqDsldCTPRU9NifTCqHZci57XvQQ15YTu+sTYPg==\"],\n\n    \"leven\": [\"leven@3.1.0\", \"\", {}, \"sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==\"],\n\n    \"levn\": [\"levn@0.4.1\", \"\", { \"dependencies\": { \"prelude-ls\": \"^1.2.1\", \"type-check\": \"~0.4.0\" } }, \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\"],\n\n    \"lie\": [\"lie@3.3.0\", \"\", { \"dependencies\": { \"immediate\": \"~3.0.5\" } }, \"sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==\"],\n\n    \"lighthouse-logger\": [\"lighthouse-logger@1.4.2\", \"\", { \"dependencies\": { \"debug\": \"^2.6.9\", \"marky\": \"^1.2.2\" } }, \"sha512-gPWxznF6TKmUHrOQjlVo2UbaL2EJ71mb2CCeRs/2qBpi4L/g4LUVc9+3lKQ6DTUZwJswfM7ainGrLO1+fOqa2g==\"],\n\n    \"lilconfig\": [\"lilconfig@3.1.3\", \"\", {}, \"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\"],\n\n    \"lines-and-columns\": [\"lines-and-columns@2.0.3\", \"\", {}, \"sha512-cNOjgCnLB+FnvWWtyRTzmB3POJ+cXxTA81LoW7u8JdmhfXzriropYwpjShnz1QLLWsQwY7nIxoDmcPTwphDK9w==\"],\n\n    \"lint-staged\": [\"lint-staged@15.5.2\", \"\", { \"dependencies\": { \"chalk\": \"^5.4.1\", \"commander\": \"^13.1.0\", \"debug\": \"^4.4.0\", \"execa\": \"^8.0.1\", \"lilconfig\": \"^3.1.3\", \"listr2\": \"^8.2.5\", \"micromatch\": \"^4.0.8\", \"pidtree\": \"^0.6.0\", \"string-argv\": \"^0.3.2\", \"yaml\": \"^2.7.0\" }, \"bin\": { \"lint-staged\": \"bin/lint-staged.js\" } }, \"sha512-YUSOLq9VeRNAo/CTaVmhGDKG+LBtA8KF1X4K5+ykMSwWST1vDxJRB2kv2COgLb1fvpCo+A/y9A0G0znNVmdx4w==\"],\n\n    \"listr2\": [\"listr2@8.3.3\", \"\", { \"dependencies\": { \"cli-truncate\": \"^4.0.0\", \"colorette\": \"^2.0.20\", \"eventemitter3\": \"^5.0.1\", \"log-update\": \"^6.1.0\", \"rfdc\": \"^1.4.1\", \"wrap-ansi\": \"^9.0.0\" } }, \"sha512-LWzX2KsqcB1wqQ4AHgYb4RsDXauQiqhjLk+6hjbaeHG4zpjjVAB6wC/gz6X0l+Du1cN3pUB5ZlrvTbhGSNnUQQ==\"],\n\n    \"local-pkg\": [\"local-pkg@1.1.1\", \"\", { \"dependencies\": { \"mlly\": \"^1.7.4\", \"pkg-types\": \"^2.0.1\", \"quansync\": \"^0.2.8\" } }, \"sha512-WunYko2W1NcdfAFpuLUoucsgULmgDBRkdxHxWQ7mK0cQqwPiy8E1enjuRBrhLtZkB5iScJ1XIPdhVEFK8aOLSg==\"],\n\n    \"locate-path\": [\"locate-path@6.0.0\", \"\", { \"dependencies\": { \"p-locate\": \"^5.0.0\" } }, \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\"],\n\n    \"lodash\": [\"lodash@4.17.21\", \"\", {}, \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"],\n\n    \"lodash-es\": [\"lodash-es@4.17.21\", \"\", {}, \"sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==\"],\n\n    \"lodash._reinterpolate\": [\"lodash._reinterpolate@3.0.0\", \"\", {}, \"sha512-xYHt68QRoYGjeeM/XOE1uJtvXQAgvszfBhjV4yvsQH0u2i9I6cI6c6/eG4Hh3UAOVn0y/xAXwmTzEay49Q//HA==\"],\n\n    \"lodash.camelcase\": [\"lodash.camelcase@4.3.0\", \"\", {}, \"sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==\"],\n\n    \"lodash.castarray\": [\"lodash.castarray@4.4.0\", \"\", {}, \"sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==\"],\n\n    \"lodash.debounce\": [\"lodash.debounce@4.0.8\", \"\", {}, \"sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==\"],\n\n    \"lodash.isplainobject\": [\"lodash.isplainobject@4.0.6\", \"\", {}, \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\"],\n\n    \"lodash.kebabcase\": [\"lodash.kebabcase@4.1.1\", \"\", {}, \"sha512-N8XRTIMMqqDgSy4VLKPnJ/+hpGZN+PHQiJnSenYqPaVV/NCqEogTnAdZLQiGKhxX+JCs8waWq2t1XHWKOmlY8g==\"],\n\n    \"lodash.merge\": [\"lodash.merge@4.6.2\", \"\", {}, \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\"],\n\n    \"lodash.mergewith\": [\"lodash.mergewith@4.6.2\", \"\", {}, \"sha512-GK3g5RPZWTRSeLSpgP8Xhra+pnjBC56q9FZYe1d5RN3TJ35dbkGy3YqBSMbyCrlbi+CM9Z3Jk5yTL7RCsqboyQ==\"],\n\n    \"lodash.snakecase\": [\"lodash.snakecase@4.1.1\", \"\", {}, \"sha512-QZ1d4xoBHYUeuouhEq3lk3Uq7ldgyFXGBhg04+oRLnIz8o9T65Eh+8YdroUwn846zchkA9yDsDl5CVVaV2nqYw==\"],\n\n    \"lodash.startcase\": [\"lodash.startcase@4.4.0\", \"\", {}, \"sha512-+WKqsK294HMSc2jEbNgpHpd0JfIBhp7rEV4aqXWqFr6AlXov+SlcgB1Fv01y2kGe3Gc8nMW7VA0SrGuSkRfIEg==\"],\n\n    \"lodash.template\": [\"lodash.template@4.5.0\", \"\", { \"dependencies\": { \"lodash._reinterpolate\": \"^3.0.0\", \"lodash.templatesettings\": \"^4.0.0\" } }, \"sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==\"],\n\n    \"lodash.templatesettings\": [\"lodash.templatesettings@4.2.0\", \"\", { \"dependencies\": { \"lodash._reinterpolate\": \"^3.0.0\" } }, \"sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==\"],\n\n    \"lodash.throttle\": [\"lodash.throttle@4.1.1\", \"\", {}, \"sha512-wIkUCfVKpVsWo3JSZlc+8MB5it+2AN5W8J7YVMST30UrvcQNZ1Okbj+rbVniijTWE6FGYy4XJq/rHkas8qJMLQ==\"],\n\n    \"lodash.uniq\": [\"lodash.uniq@4.5.0\", \"\", {}, \"sha512-xfBaXQd9ryd9dlSDvnvI0lvxfLJlYAZzXomUYzLKtUeOQvOP5piqAWuGtrhWeqaXK9hhoM/iyJc5AV+XfsX3HQ==\"],\n\n    \"lodash.upperfirst\": [\"lodash.upperfirst@4.3.1\", \"\", {}, \"sha512-sReKOYJIJf74dhJONhU4e0/shzi1trVbSWDOhKYE5XV2O+H7Sb2Dihwuc7xWxVl+DgFPyTqIN3zMfT9cq5iWDg==\"],\n\n    \"log-symbols\": [\"log-symbols@5.1.0\", \"\", { \"dependencies\": { \"chalk\": \"^5.0.0\", \"is-unicode-supported\": \"^1.1.0\" } }, \"sha512-l0x2DvrW294C9uDCoQe1VSU4gf529FkSZ6leBl4TiqZH/e+0R7hSfHQBNut2mNygDgHwvYHfFLn6Oxb3VWj2rA==\"],\n\n    \"log-update\": [\"log-update@6.1.0\", \"\", { \"dependencies\": { \"ansi-escapes\": \"^7.0.0\", \"cli-cursor\": \"^5.0.0\", \"slice-ansi\": \"^7.1.0\", \"strip-ansi\": \"^7.1.0\", \"wrap-ansi\": \"^9.0.0\" } }, \"sha512-9ie8ItPR6tjY5uYJh8K/Zrv/RMZ5VOlOWvtZdEHYSTFKZfIBPQa9tOAEeAWhd+AnIneLJ22w5fjOYtoutpWq5w==\"],\n\n    \"long\": [\"long@5.3.2\", \"\", {}, \"sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==\"],\n\n    \"longest-streak\": [\"longest-streak@3.1.0\", \"\", {}, \"sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==\"],\n\n    \"loops\": [\"loops@5.0.1\", \"\", {}, \"sha512-xM1c9mnlr8Hr4cHW944TQoK6ApynjinUWOgYZd9/B0/3lwTThq24BQ7+XLjgbFAP5kJzqDTRDQi3t+Diy51Udw==\"],\n\n    \"loose-envify\": [\"loose-envify@1.4.0\", \"\", { \"dependencies\": { \"js-tokens\": \"^3.0.0 || ^4.0.0\" }, \"bin\": { \"loose-envify\": \"cli.js\" } }, \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\"],\n\n    \"lower-case\": [\"lower-case@2.0.2\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.3\" } }, \"sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==\"],\n\n    \"lru-cache\": [\"lru-cache@6.0.0\", \"\", { \"dependencies\": { \"yallist\": \"^4.0.0\" } }, \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\"],\n\n    \"lucide-react\": [\"lucide-react@0.487.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\" } }, \"sha512-aKqhOQ+YmFnwq8dWgGjOuLc8V1R9/c/yOd+zDY4+ohsR2Jo05lSGc3WsstYPIzcTpeosN7LoCkLReUUITvaIvw==\"],\n\n    \"lz-string\": [\"lz-string@1.5.0\", \"\", { \"bin\": { \"lz-string\": \"bin/bin.js\" } }, \"sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==\"],\n\n    \"maath\": [\"maath@0.10.8\", \"\", { \"peerDependencies\": { \"@types/three\": \">=0.134.0\", \"three\": \">=0.134.0\" } }, \"sha512-tRvbDF0Pgqz+9XUa4jjfgAQ8/aPKmQdWXilFu2tMy4GWj4NOsx99HlULO4IeREfbO3a0sA145DZYyvXPkybm0g==\"],\n\n    \"magic-bytes.js\": [\"magic-bytes.js@1.12.1\", \"\", {}, \"sha512-ThQLOhN86ZkJ7qemtVRGYM+gRgR8GEXNli9H/PMvpnZsE44Xfh3wx9kGJaldg314v85m+bFW6WBMaVHJc/c3zA==\"],\n\n    \"make-dir\": [\"make-dir@4.0.0\", \"\", { \"dependencies\": { \"semver\": \"^7.5.3\" } }, \"sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==\"],\n\n    \"make-error\": [\"make-error@1.3.6\", \"\", {}, \"sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==\"],\n\n    \"makeerror\": [\"makeerror@1.0.12\", \"\", { \"dependencies\": { \"tmpl\": \"1.0.5\" } }, \"sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==\"],\n\n    \"markdown-extensions\": [\"markdown-extensions@2.0.0\", \"\", {}, \"sha512-o5vL7aDWatOTX8LzaS1WMoaoxIiLRQJuIKKe2wAw6IeULDHaqbiqiggmx+pKvZDb1Sj+pE46Sn1T7lCqfFtg1Q==\"],\n\n    \"marked\": [\"marked@16.1.2\", \"\", { \"bin\": { \"marked\": \"bin/marked.js\" } }, \"sha512-rNQt5EvRinalby7zJZu/mB+BvaAY2oz3wCuCjt1RDrWNpS1Pdf9xqMOeC9Hm5adBdcV/3XZPJpG58eT+WBc0XQ==\"],\n\n    \"marky\": [\"marky@1.3.0\", \"\", {}, \"sha512-ocnPZQLNpvbedwTy9kNrQEsknEfgvcLMvOtz3sFeWApDq1MXH1TqkCIx58xlpESsfwQOnuBO9beyQuNGzVvuhQ==\"],\n\n    \"math-intrinsics\": [\"math-intrinsics@1.1.0\", \"\", {}, \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\"],\n\n    \"mdast-util-definitions\": [\"mdast-util-definitions@5.1.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-8SVPMuHqlPME/z3gqVwWY4zVXn8lqKv/pAhC57FuJ40ImXyBpmO5ukh98zB2v7Blql2FiHjHv9LVztSIqjY+MA==\"],\n\n    \"mdast-util-from-markdown\": [\"mdast-util-from-markdown@2.0.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"@types/unist\": \"^3.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"mdast-util-to-string\": \"^4.0.0\", \"micromark\": \"^4.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^2.0.0\", \"micromark-util-decode-string\": \"^2.0.0\", \"micromark-util-normalize-identifier\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unist-util-stringify-position\": \"^4.0.0\" } }, \"sha512-uZhTV/8NBuw0WHkPTrCqDOl0zVe1BIng5ZtHoDk49ME1qqcjYmmLmOf0gELgcRMxN4w2iuIeVso5/6QymSrgmA==\"],\n\n    \"mdast-util-frontmatter\": [\"mdast-util-frontmatter@1.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-to-markdown\": \"^1.3.0\", \"micromark-extension-frontmatter\": \"^1.0.0\" } }, \"sha512-JjA2OjxRqAa8wEG8hloD0uTU0kdn8kbtOWpPP94NBkfAlbxn4S8gCGf/9DwFtEeGPXrDcNXdiDjVaRdUFqYokw==\"],\n\n    \"mdast-util-mdx\": [\"mdast-util-mdx@3.0.0\", \"\", { \"dependencies\": { \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-mdx-expression\": \"^2.0.0\", \"mdast-util-mdx-jsx\": \"^3.0.0\", \"mdast-util-mdxjs-esm\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\" } }, \"sha512-JfbYLAW7XnYTTbUsmpu0kdBUVe+yKVJZBItEjwyYJiDJuZ9w4eeaqks4HQO+R7objWgS2ymV60GYpI14Ug554w==\"],\n\n    \"mdast-util-mdx-expression\": [\"mdast-util-mdx-expression@2.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"devlop\": \"^1.0.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\" } }, \"sha512-J6f+9hUp+ldTZqKRSg7Vw5V6MqjATc+3E4gf3CFNcuZNWD8XdyI6zQ8GqH7f8169MM6P7hMBRDVGnn7oHB9kXQ==\"],\n\n    \"mdast-util-mdx-jsx\": [\"mdast-util-mdx-jsx@3.2.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"@types/unist\": \"^3.0.0\", \"ccount\": \"^2.0.0\", \"devlop\": \"^1.1.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\", \"parse-entities\": \"^4.0.0\", \"stringify-entities\": \"^4.0.0\", \"unist-util-stringify-position\": \"^4.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-lj/z8v0r6ZtsN/cGNNtemmmfoLAFZnjMbNyLzBafjzikOM+glrjNHPlf6lQDOTccj9n5b0PPihEBbhneMyGs1Q==\"],\n\n    \"mdast-util-mdxjs-esm\": [\"mdast-util-mdxjs-esm@2.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"devlop\": \"^1.0.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\" } }, \"sha512-EcmOpxsZ96CvlP03NghtH1EsLtr0n9Tm4lPUJUBccV9RwUOneqSycg19n5HGzCf+10LozMRSObtVr3ee1WoHtg==\"],\n\n    \"mdast-util-phrasing\": [\"mdast-util-phrasing@4.1.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"unist-util-is\": \"^6.0.0\" } }, \"sha512-TqICwyvJJpBwvGAMZjj4J2n0X8QWp21b9l0o7eXyVJ25YNWYbJDVIyD1bZXE6WtV6RmKJVYmQAKWa0zWOABz2w==\"],\n\n    \"mdast-util-to-hast\": [\"mdast-util-to-hast@13.2.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"@ungap/structured-clone\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^2.0.0\", \"trim-lines\": \"^3.0.0\", \"unist-util-position\": \"^5.0.0\", \"unist-util-visit\": \"^5.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==\"],\n\n    \"mdast-util-to-markdown\": [\"mdast-util-to-markdown@2.1.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"@types/unist\": \"^3.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^4.0.0\", \"mdast-util-to-string\": \"^4.0.0\", \"micromark-util-classify-character\": \"^2.0.0\", \"micromark-util-decode-string\": \"^2.0.0\", \"unist-util-visit\": \"^5.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-xj68wMTvGXVOKonmog6LwyJKrYXZPvlwabaryTjLh9LuvovB/KAH+kvi8Gjj+7rJjsFi23nkUxRQv1KqSroMqA==\"],\n\n    \"mdast-util-to-string\": [\"mdast-util-to-string@4.0.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\" } }, \"sha512-0H44vDimn51F0YwvxSJSm0eCDOJTRlmN0R1yBh4HLj9wiV1Dn0QoXGbvFAWj2hSItVTlCmBF1hqKlIyUBVFLPg==\"],\n\n    \"mdx-bundler\": [\"mdx-bundler@9.2.1\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.16.3\", \"@esbuild-plugins/node-resolve\": \"^0.1.4\", \"@fal-works/esbuild-plugin-global-externals\": \"^2.1.2\", \"@mdx-js/esbuild\": \"^2.0.0\", \"gray-matter\": \"^4.0.3\", \"remark-frontmatter\": \"^4.0.1\", \"remark-mdx-frontmatter\": \"^1.1.1\", \"uuid\": \"^8.3.2\", \"vfile\": \"^5.3.2\" }, \"peerDependencies\": { \"esbuild\": \"0.*\" } }, \"sha512-hWEEip1KU9MCNqeH2rqwzAZ1pdqPPbfkx9OTJjADqGPQz4t9BO85fhI7AP9gVYrpmfArf9/xJZUN0yBErg/G/Q==\"],\n\n    \"media-typer\": [\"media-typer@0.3.0\", \"\", {}, \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\"],\n\n    \"memfs\": [\"memfs@3.6.0\", \"\", { \"dependencies\": { \"fs-monkey\": \"^1.0.4\" } }, \"sha512-EGowvkkgbMcIChjMTMkESFDbZeSh8xZ7kNSF0hAiAN4Jh6jgHCRS0Ga/+C8y6Au+oqpezRHCfPsmJ2+DwAgiwQ==\"],\n\n    \"memoize-one\": [\"memoize-one@5.2.1\", \"\", {}, \"sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==\"],\n\n    \"meow\": [\"meow@12.1.1\", \"\", {}, \"sha512-BhXM0Au22RwUneMPwSCnyhTOizdWoIEPU9sp0Aqa1PnDMR5Wv2FGXYDjuzJEIX+Eo2Rb8xuYe5jrnm5QowQFkw==\"],\n\n    \"merge-descriptors\": [\"merge-descriptors@1.0.1\", \"\", {}, \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"],\n\n    \"merge-stream\": [\"merge-stream@2.0.0\", \"\", {}, \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\"],\n\n    \"merge2\": [\"merge2@1.4.1\", \"\", {}, \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\"],\n\n    \"mermaid\": [\"mermaid@11.9.0\", \"\", { \"dependencies\": { \"@braintree/sanitize-url\": \"^7.0.4\", \"@iconify/utils\": \"^2.1.33\", \"@mermaid-js/parser\": \"^0.6.2\", \"@types/d3\": \"^7.4.3\", \"cytoscape\": \"^3.29.3\", \"cytoscape-cose-bilkent\": \"^4.1.0\", \"cytoscape-fcose\": \"^2.2.0\", \"d3\": \"^7.9.0\", \"d3-sankey\": \"^0.12.3\", \"dagre-d3-es\": \"7.0.11\", \"dayjs\": \"^1.11.13\", \"dompurify\": \"^3.2.5\", \"katex\": \"^0.16.22\", \"khroma\": \"^2.1.0\", \"lodash-es\": \"^4.17.21\", \"marked\": \"^16.0.0\", \"roughjs\": \"^4.6.6\", \"stylis\": \"^4.3.6\", \"ts-dedent\": \"^2.2.0\", \"uuid\": \"^11.1.0\" } }, \"sha512-YdPXn9slEwO0omQfQIsW6vS84weVQftIyyTGAZCwM//MGhPzL1+l6vO6bkf0wnP4tHigH1alZ5Ooy3HXI2gOag==\"],\n\n    \"meshline\": [\"meshline@3.3.1\", \"\", { \"peerDependencies\": { \"three\": \">=0.137\" } }, \"sha512-/TQj+JdZkeSUOl5Mk2J7eLcYTLiQm2IDzmlSvYm7ov15anEcDJ92GHqqazxTSreeNgfnYu24kiEvvv0WlbCdFQ==\"],\n\n    \"meshoptimizer\": [\"meshoptimizer@0.22.0\", \"\", {}, \"sha512-IebiK79sqIy+E4EgOr+CAw+Ke8hAspXKzBd0JdgEmPHiAwmvEj2S4h1rfvo+o/BnfEYd/jAOg5IeeIjzlzSnDg==\"],\n\n    \"methods\": [\"methods@1.1.2\", \"\", {}, \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\"],\n\n    \"metro\": [\"metro@0.83.1\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.24.7\", \"@babel/core\": \"^7.25.2\", \"@babel/generator\": \"^7.25.0\", \"@babel/parser\": \"^7.25.3\", \"@babel/template\": \"^7.25.0\", \"@babel/traverse\": \"^7.25.3\", \"@babel/types\": \"^7.25.2\", \"accepts\": \"^1.3.7\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^2.0.0\", \"connect\": \"^3.6.5\", \"debug\": \"^4.4.0\", \"error-stack-parser\": \"^2.0.6\", \"flow-enums-runtime\": \"^0.0.6\", \"graceful-fs\": \"^4.2.4\", \"hermes-parser\": \"0.29.1\", \"image-size\": \"^1.0.2\", \"invariant\": \"^2.2.4\", \"jest-worker\": \"^29.7.0\", \"jsc-safe-url\": \"^0.2.2\", \"lodash.throttle\": \"^4.1.1\", \"metro-babel-transformer\": \"0.83.1\", \"metro-cache\": \"0.83.1\", \"metro-cache-key\": \"0.83.1\", \"metro-config\": \"0.83.1\", \"metro-core\": \"0.83.1\", \"metro-file-map\": \"0.83.1\", \"metro-resolver\": \"0.83.1\", \"metro-runtime\": \"0.83.1\", \"metro-source-map\": \"0.83.1\", \"metro-symbolicate\": \"0.83.1\", \"metro-transform-plugins\": \"0.83.1\", \"metro-transform-worker\": \"0.83.1\", \"mime-types\": \"^2.1.27\", \"nullthrows\": \"^1.1.1\", \"serialize-error\": \"^2.1.0\", \"source-map\": \"^0.5.6\", \"throat\": \"^5.0.0\", \"ws\": \"^7.5.10\", \"yargs\": \"^17.6.2\" }, \"bin\": { \"metro\": \"src/cli.js\" } }, \"sha512-UGKepmTxoGD4HkQV8YWvpvwef7fUujNtTgG4Ygf7m/M0qjvb9VuDmAsEU+UdriRX7F61pnVK/opz89hjKlYTXA==\"],\n\n    \"metro-babel-transformer\": [\"metro-babel-transformer@0.83.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"flow-enums-runtime\": \"^0.0.6\", \"hermes-parser\": \"0.29.1\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-r3xAD3964E8dwDBaZNSO2aIIvWXjIK80uO2xo0/pi3WI8XWT9h5SCjtGWtMtE5PRWw+t20TN0q1WMRsjvhC1rQ==\"],\n\n    \"metro-cache\": [\"metro-cache@0.83.1\", \"\", { \"dependencies\": { \"exponential-backoff\": \"^3.1.1\", \"flow-enums-runtime\": \"^0.0.6\", \"https-proxy-agent\": \"^7.0.5\", \"metro-core\": \"0.83.1\" } }, \"sha512-7N/Ad1PHa1YMWDNiyynTPq34Op2qIE68NWryGEQ4TSE3Zy6a8GpsYnEEZE4Qi6aHgsE+yZHKkRczeBgxhnFIxQ==\"],\n\n    \"metro-cache-key\": [\"metro-cache-key@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-ZUs+GD5CNeDLxx5UUWmfg26IL+Dnbryd+TLqTlZnDEgehkIa11kUSvgF92OFfJhONeXzV4rZDRGNXoo6JT+8Gg==\"],\n\n    \"metro-config\": [\"metro-config@0.83.1\", \"\", { \"dependencies\": { \"connect\": \"^3.6.5\", \"cosmiconfig\": \"^5.0.5\", \"flow-enums-runtime\": \"^0.0.6\", \"jest-validate\": \"^29.7.0\", \"metro\": \"0.83.1\", \"metro-cache\": \"0.83.1\", \"metro-core\": \"0.83.1\", \"metro-runtime\": \"0.83.1\" } }, \"sha512-HJhpZx3wyOkux/jeF1o7akFJzZFdbn6Zf7UQqWrvp7gqFqNulQ8Mju09raBgPmmSxKDl4LbbNeigkX0/nKY1QA==\"],\n\n    \"metro-core\": [\"metro-core@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\", \"lodash.throttle\": \"^4.1.1\", \"metro-resolver\": \"0.83.1\" } }, \"sha512-uVL1eAJcMFd2o2Q7dsbpg8COaxjZBBGaXqO2OHnivpCdfanraVL8dPmY6It9ZeqWLOihUKZ2yHW4b6soVCzH/Q==\"],\n\n    \"metro-file-map\": [\"metro-file-map@0.83.1\", \"\", { \"dependencies\": { \"debug\": \"^4.4.0\", \"fb-watchman\": \"^2.0.0\", \"flow-enums-runtime\": \"^0.0.6\", \"graceful-fs\": \"^4.2.4\", \"invariant\": \"^2.2.4\", \"jest-worker\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"nullthrows\": \"^1.1.1\", \"walker\": \"^1.0.7\" } }, \"sha512-Yu429lnexKl44PttKw3nhqgmpBR+6UQ/tRaYcxPeEShtcza9DWakCn7cjqDTQZtWR2A8xSNv139izJMyQ4CG+w==\"],\n\n    \"metro-minify-terser\": [\"metro-minify-terser@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\", \"terser\": \"^5.15.0\" } }, \"sha512-kmooOxXLvKVxkh80IVSYO4weBdJDhCpg5NSPkjzzAnPJP43u6+usGXobkTWxxrAlq900bhzqKek4pBsUchlX6A==\"],\n\n    \"metro-resolver\": [\"metro-resolver@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-t8j46kiILAqqFS5RNa+xpQyVjULxRxlvMidqUswPEk5nQVNdlJslqizDm/Et3v/JKwOtQGkYAQCHxP1zGStR/g==\"],\n\n    \"metro-runtime\": [\"metro-runtime@0.83.1\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.25.0\", \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-3Ag8ZS4IwafL/JUKlaeM6/CbkooY+WcVeqdNlBG0m4S0Qz0om3rdFdy1y6fYBpl6AwXJwWeMuXrvZdMuByTcRA==\"],\n\n    \"metro-source-map\": [\"metro-source-map@0.83.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.25.3\", \"@babel/traverse--for-generate-function-map\": \"npm:@babel/traverse@^7.25.3\", \"@babel/types\": \"^7.25.2\", \"flow-enums-runtime\": \"^0.0.6\", \"invariant\": \"^2.2.4\", \"metro-symbolicate\": \"0.83.1\", \"nullthrows\": \"^1.1.1\", \"ob1\": \"0.83.1\", \"source-map\": \"^0.5.6\", \"vlq\": \"^1.0.0\" } }, \"sha512-De7Vbeo96fFZ2cqmI0fWwVJbtHIwPZv++LYlWSwzTiCzxBDJORncN0LcT48Vi2UlQLzXJg+/CuTAcy7NBVh69A==\"],\n\n    \"metro-symbolicate\": [\"metro-symbolicate@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\", \"invariant\": \"^2.2.4\", \"metro-source-map\": \"0.83.1\", \"nullthrows\": \"^1.1.1\", \"source-map\": \"^0.5.6\", \"vlq\": \"^1.0.0\" }, \"bin\": { \"metro-symbolicate\": \"src/index.js\" } }, \"sha512-wPxYkONlq/Sv8Ji7vHEx5OzFouXAMQJjpcPW41ySKMLP/Ir18SsiJK2h4YkdKpYrTS1+0xf8oqF6nxCsT3uWtg==\"],\n\n    \"metro-transform-plugins\": [\"metro-transform-plugins@0.83.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@babel/generator\": \"^7.25.0\", \"@babel/template\": \"^7.25.0\", \"@babel/traverse\": \"^7.25.3\", \"flow-enums-runtime\": \"^0.0.6\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-1Y+I8oozXwhuS0qwC+ezaHXBf0jXW4oeYn4X39XWbZt9X2HfjodqY9bH9r6RUTsoiK7S4j8Ni2C91bUC+sktJQ==\"],\n\n    \"metro-transform-worker\": [\"metro-transform-worker@0.83.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@babel/generator\": \"^7.25.0\", \"@babel/parser\": \"^7.25.3\", \"@babel/types\": \"^7.25.2\", \"flow-enums-runtime\": \"^0.0.6\", \"metro\": \"0.83.1\", \"metro-babel-transformer\": \"0.83.1\", \"metro-cache\": \"0.83.1\", \"metro-cache-key\": \"0.83.1\", \"metro-minify-terser\": \"0.83.1\", \"metro-source-map\": \"0.83.1\", \"metro-transform-plugins\": \"0.83.1\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-owCrhPyUxdLgXEEEAL2b14GWTPZ2zYuab1VQXcfEy0sJE71iciD7fuMcrngoufh7e7UHDZ56q4ktXg8wgiYA1Q==\"],\n\n    \"micromark\": [\"micromark@4.0.2\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-core-commonmark\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-combine-extensions\": \"^2.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^2.0.0\", \"micromark-util-encode\": \"^2.0.0\", \"micromark-util-normalize-identifier\": \"^2.0.0\", \"micromark-util-resolve-all\": \"^2.0.0\", \"micromark-util-sanitize-uri\": \"^2.0.0\", \"micromark-util-subtokenize\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-zpe98Q6kvavpCr1NPVSCMebCKfD7CA2NqZ+rykeNhONIJBpc1tFKt9hucLGwha3jNTNI8lHpctWJWoimVF4PfA==\"],\n\n    \"micromark-core-commonmark\": [\"micromark-core-commonmark@2.0.3\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-factory-destination\": \"^2.0.0\", \"micromark-factory-label\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-factory-title\": \"^2.0.0\", \"micromark-factory-whitespace\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-classify-character\": \"^2.0.0\", \"micromark-util-html-tag-name\": \"^2.0.0\", \"micromark-util-normalize-identifier\": \"^2.0.0\", \"micromark-util-resolve-all\": \"^2.0.0\", \"micromark-util-subtokenize\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-RDBrHEMSxVFLg6xvnXmb1Ayr2WzLAWjeSATAoxwKYJV94TeNavgoIdA0a9ytzDSVzBy2YKFK+emCPOEibLeCrg==\"],\n\n    \"micromark-extension-frontmatter\": [\"micromark-extension-frontmatter@1.1.1\", \"\", { \"dependencies\": { \"fault\": \"^2.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-m2UH9a7n3W8VAH9JO9y01APpPKmNNNs71P0RbknEmYSaZU5Ghogv38BYO94AI5Xw6OYfxZRdHZZ2nYjs/Z+SZQ==\"],\n\n    \"micromark-extension-mdx-expression\": [\"micromark-extension-mdx-expression@3.0.1\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-factory-mdx-expression\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-dD/ADLJ1AeMvSAKBwO22zG22N4ybhe7kFIZ3LsDI0GlsNr2A3KYxb0LdC1u5rj4Nw+CHKY0RVdnHX8vj8ejm4Q==\"],\n\n    \"micromark-extension-mdx-jsx\": [\"micromark-extension-mdx-jsx@3.0.2\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"micromark-factory-mdx-expression\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-e5+q1DjMh62LZAJOnDraSSbDMvGJ8x3cbjygy2qFEi7HCeUT4BDKCvMozPozcD6WmOt6sVvYDNBKhFSz3kjOVQ==\"],\n\n    \"micromark-extension-mdx-md\": [\"micromark-extension-mdx-md@2.0.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-EpAiszsB3blw4Rpba7xTOUptcFeBFi+6PY8VnJ2hhimH+vCQDirWgsMpz7w1XcZE7LVrSAUGb9VJpG9ghlYvYQ==\"],\n\n    \"micromark-extension-mdxjs\": [\"micromark-extension-mdxjs@3.0.0\", \"\", { \"dependencies\": { \"acorn\": \"^8.0.0\", \"acorn-jsx\": \"^5.0.0\", \"micromark-extension-mdx-expression\": \"^3.0.0\", \"micromark-extension-mdx-jsx\": \"^3.0.0\", \"micromark-extension-mdx-md\": \"^2.0.0\", \"micromark-extension-mdxjs-esm\": \"^3.0.0\", \"micromark-util-combine-extensions\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-A873fJfhnJ2siZyUrJ31l34Uqwy4xIFmvPY1oj+Ean5PHcPBYzEsvqvWGaWcfEIr11O5Dlw3p2y0tZWpKHDejQ==\"],\n\n    \"micromark-extension-mdxjs-esm\": [\"micromark-extension-mdxjs-esm@3.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-core-commonmark\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-DJFl4ZqkErRpq/dAPyeWp15tGrcrrJho1hKK5uBS70BCtfrIFg81sqcTVu3Ta+KD1Tk5vAtBNElWxtAa+m8K9A==\"],\n\n    \"micromark-factory-destination\": [\"micromark-factory-destination@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-Xe6rDdJlkmbFRExpTOmRj9N3MaWmbAgdpSrBQvCFqhezUn4AHqJHbaEnfbVYYiexVSs//tqOdY/DxhjdCiJnIA==\"],\n\n    \"micromark-factory-label\": [\"micromark-factory-label@2.0.1\", \"\", { \"dependencies\": { \"devlop\": \"^1.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-VFMekyQExqIW7xIChcXn4ok29YE3rnuyveW3wZQWWqF4Nv9Wk5rgJ99KzPvHjkmPXF93FXIbBp6YdW3t71/7Vg==\"],\n\n    \"micromark-factory-mdx-expression\": [\"micromark-factory-mdx-expression@2.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-kQnEtA3vzucU2BkrIa8/VaSAsP+EJ3CKOvhMuJgOEGg9KDC6OAY6nSnNDVRiVNRqj7Y4SlSzcStaH/5jge8JdQ==\"],\n\n    \"micromark-factory-space\": [\"micromark-factory-space@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-zRkxjtBxxLd2Sc0d+fbnEunsTj46SWXgXciZmHq0kDYGnck/ZSGj9/wULTV95uoeYiK5hRXP2mJ98Uo4cq/LQg==\"],\n\n    \"micromark-factory-title\": [\"micromark-factory-title@2.0.1\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-5bZ+3CjhAd9eChYTHsjy6TGxpOFSKgKKJPJxr293jTbfry2KDoWkhBb6TcPVB4NmzaPhMs1Frm9AZH7OD4Cjzw==\"],\n\n    \"micromark-factory-whitespace\": [\"micromark-factory-whitespace@2.0.1\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-Ob0nuZ3PKt/n0hORHyvoD9uZhr+Za8sFoP+OnMcnWK5lngSzALgQYKMr9RJVOWLqQYuyn6ulqGWSXdwf6F80lQ==\"],\n\n    \"micromark-util-character\": [\"micromark-util-character@2.1.1\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==\"],\n\n    \"micromark-util-chunked\": [\"micromark-util-chunked@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-QUNFEOPELfmvv+4xiNg2sRYeS/P84pTW0TCgP5zc9FpXetHY0ab7SxKyAQCNCc1eK0459uoLI1y5oO5Vc1dbhA==\"],\n\n    \"micromark-util-classify-character\": [\"micromark-util-classify-character@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-K0kHzM6afW/MbeWYWLjoHQv1sgg2Q9EccHEDzSkxiP/EaagNzCm7T/WMKZ3rjMbvIpvBiZgwR3dKMygtA4mG1Q==\"],\n\n    \"micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-OnAnH8Ujmy59JcyZw8JSbK9cGpdVY44NKgSM7E9Eh7DiLS2E9RNQf0dONaGDzEG9yjEl5hcqeIsj4hfRkLH/Bg==\"],\n\n    \"micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@2.0.2\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-ccUbYk6CwVdkmCQMyr64dXz42EfHGkPQlBj5p7YVGzq8I7CtjXZJrubAYezf7Rp+bjPseiROqe7G6foFd+lEuw==\"],\n\n    \"micromark-util-decode-string\": [\"micromark-util-decode-string@2.0.1\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-nDV/77Fj6eH1ynwscYTOsbK7rR//Uj0bZXBwJZRfaLEJ1iGBR6kIfNmlNqaqJf649EP0F3NWNdeJi03elllNUQ==\"],\n\n    \"micromark-util-encode\": [\"micromark-util-encode@2.0.1\", \"\", {}, \"sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==\"],\n\n    \"micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@2.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^3.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-visit\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-jmsiEIiZ1n7X1Rr5k8wVExBQCg5jy4UXVADItHmNk1zkwEVhBuIUKRu3fqv+hs4nxLISi2DQGlqIOGiFxgbfHg==\"],\n\n    \"micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@2.0.1\", \"\", {}, \"sha512-2cNEiYDhCWKI+Gs9T0Tiysk136SnR13hhO8yW6BGNyhOC4qYFnwF1nKfD3HFAIXA5c45RrIG1ub11GiXeYd1xA==\"],\n\n    \"micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-sxPqmo70LyARJs0w2UclACPUUEqltCkJ6PhKdMIDuJ3gSf/Q+/GIe3WKl0Ijb/GyH9lOpUkRAO2wp0GVkLvS9Q==\"],\n\n    \"micromark-util-resolve-all\": [\"micromark-util-resolve-all@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-VdQyxFWFT2/FGJgwQnJYbe1jjQoNTS4RjglmSjTUlpUMa95Htx9NHeYW4rGDJzbjvCsl9eLjMQwGeElsqmzcHg==\"],\n\n    \"micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-encode\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==\"],\n\n    \"micromark-util-subtokenize\": [\"micromark-util-subtokenize@2.1.0\", \"\", { \"dependencies\": { \"devlop\": \"^1.0.0\", \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-XQLu552iSctvnEcgXw6+Sx75GflAPNED1qx7eBJ+wydBb2KCbRZe+NwvIEEMM83uml1+2WSXpBAcp9IUCgCYWA==\"],\n\n    \"micromark-util-symbol\": [\"micromark-util-symbol@2.0.1\", \"\", {}, \"sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==\"],\n\n    \"micromark-util-types\": [\"micromark-util-types@2.0.2\", \"\", {}, \"sha512-Yw0ECSpJoViF1qTU4DC6NwtC4aWGt1EkzaQB8KPPyCRR8z9TWeV0HbEFGTO+ZY1wB22zmxnJqhPyTpOVCpeHTA==\"],\n\n    \"micromatch\": [\"micromatch@4.0.8\", \"\", { \"dependencies\": { \"braces\": \"^3.0.3\", \"picomatch\": \"^2.3.1\" } }, \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\"],\n\n    \"mime\": [\"mime@1.6.0\", \"\", { \"bin\": { \"mime\": \"cli.js\" } }, \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\"],\n\n    \"mime-db\": [\"mime-db@1.52.0\", \"\", {}, \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\"],\n\n    \"mime-types\": [\"mime-types@2.1.35\", \"\", { \"dependencies\": { \"mime-db\": \"1.52.0\" } }, \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\"],\n\n    \"mimic-fn\": [\"mimic-fn@2.1.0\", \"\", {}, \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\"],\n\n    \"mimic-function\": [\"mimic-function@5.0.1\", \"\", {}, \"sha512-VP79XUPxV2CigYP3jWwAUFSku2aKqBH7uTAapFWCBqutsbmDo96KY5o8uh6U+/YSIn5OxJnXp73beVkpqMIGhA==\"],\n\n    \"mimic-response\": [\"mimic-response@3.1.0\", \"\", {}, \"sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==\"],\n\n    \"min-indent\": [\"min-indent@1.0.1\", \"\", {}, \"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\"],\n\n    \"minimatch\": [\"minimatch@3.1.2\", \"\", { \"dependencies\": { \"brace-expansion\": \"^1.1.7\" } }, \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\"],\n\n    \"minimist\": [\"minimist@1.2.8\", \"\", {}, \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\"],\n\n    \"minimisted\": [\"minimisted@2.0.1\", \"\", { \"dependencies\": { \"minimist\": \"^1.2.5\" } }, \"sha512-1oPjfuLQa2caorJUM8HV8lGgWCc0qqAO1MNv/k05G4qslmsndV/5WdNZrqCiyqiz3wohia2Ij2B7w2Dr7/IyrA==\"],\n\n    \"minipass\": [\"minipass@7.1.2\", \"\", {}, \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\"],\n\n    \"mitt\": [\"mitt@3.0.1\", \"\", {}, \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\"],\n\n    \"mkdirp\": [\"mkdirp@2.1.6\", \"\", { \"bin\": { \"mkdirp\": \"dist/cjs/src/bin.js\" } }, \"sha512-+hEnITedc8LAtIP9u3HJDFIdcLV2vXP33sqLLIzkv1Db1zO/1OxbvYf0Y1OC/S/Qo5dxHXepofhmxL02PsKe+A==\"],\n\n    \"mlly\": [\"mlly@1.7.4\", \"\", { \"dependencies\": { \"acorn\": \"^8.14.0\", \"pathe\": \"^2.0.1\", \"pkg-types\": \"^1.3.0\", \"ufo\": \"^1.5.4\" } }, \"sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==\"],\n\n    \"motion-dom\": [\"motion-dom@11.18.1\", \"\", { \"dependencies\": { \"motion-utils\": \"^11.18.1\" } }, \"sha512-g76KvA001z+atjfxczdRtw/RXOM3OMSdd1f4DL77qCTF/+avrRJiawSG4yDibEQ215sr9kpinSlX2pCTJ9zbhw==\"],\n\n    \"motion-utils\": [\"motion-utils@11.18.1\", \"\", {}, \"sha512-49Kt+HKjtbJKLtgO/LKj9Ld+6vw9BjH5d9sc40R/kVyH8GLAXgT42M2NnuPcJNuA3s9ZfZBUcwIgpmZWGEE+hA==\"],\n\n    \"mri\": [\"mri@1.2.0\", \"\", {}, \"sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==\"],\n\n    \"ms\": [\"ms@2.1.3\", \"\", {}, \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"],\n\n    \"mylas\": [\"mylas@2.1.13\", \"\", {}, \"sha512-+MrqnJRtxdF+xngFfUUkIMQrUUL0KsxbADUkn23Z/4ibGg192Q+z+CQyiYwvWTsYjJygmMR8+w3ZDa98Zh6ESg==\"],\n\n    \"mz\": [\"mz@2.7.0\", \"\", { \"dependencies\": { \"any-promise\": \"^1.0.0\", \"object-assign\": \"^4.0.1\", \"thenify-all\": \"^1.0.0\" } }, \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\"],\n\n    \"nanoid\": [\"nanoid@5.0.7\", \"\", { \"bin\": { \"nanoid\": \"bin/nanoid.js\" } }, \"sha512-oLxFY2gd2IqnjcYyOXD8XGCftpGtZP2AbHbOkthDkvRywH5ayNtPVy9YlOPcHckXzbLTCHpkb7FB+yuxKV13pQ==\"],\n\n    \"napi-postinstall\": [\"napi-postinstall@0.3.3\", \"\", { \"bin\": { \"napi-postinstall\": \"lib/cli.js\" } }, \"sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==\"],\n\n    \"natural-compare\": [\"natural-compare@1.4.0\", \"\", {}, \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\"],\n\n    \"negotiator\": [\"negotiator@0.6.3\", \"\", {}, \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\"],\n\n    \"netmask\": [\"netmask@2.0.2\", \"\", {}, \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\"],\n\n    \"next\": [\"next@14.2.13\", \"\", { \"dependencies\": { \"@next/env\": \"14.2.13\", \"@swc/helpers\": \"0.5.5\", \"busboy\": \"1.6.0\", \"caniuse-lite\": \"^1.0.30001579\", \"graceful-fs\": \"^4.2.11\", \"postcss\": \"8.4.31\", \"styled-jsx\": \"5.1.1\" }, \"optionalDependencies\": { \"@next/swc-darwin-arm64\": \"14.2.13\", \"@next/swc-darwin-x64\": \"14.2.13\", \"@next/swc-linux-arm64-gnu\": \"14.2.13\", \"@next/swc-linux-arm64-musl\": \"14.2.13\", \"@next/swc-linux-x64-gnu\": \"14.2.13\", \"@next/swc-linux-x64-musl\": \"14.2.13\", \"@next/swc-win32-arm64-msvc\": \"14.2.13\", \"@next/swc-win32-ia32-msvc\": \"14.2.13\", \"@next/swc-win32-x64-msvc\": \"14.2.13\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.1.0\", \"@playwright/test\": \"^1.41.2\", \"react\": \"^18.2.0\", \"react-dom\": \"^18.2.0\", \"sass\": \"^1.3.0\" }, \"optionalPeers\": [\"@opentelemetry/api\", \"@playwright/test\", \"sass\"], \"bin\": { \"next\": \"dist/bin/next\" } }, \"sha512-BseY9YNw8QJSwLYD7hlZzl6QVDoSFHL/URN5K64kVEVpCsSOWeyjbIGK+dZUaRViHTaMQX8aqmnn0PHBbGZezg==\"],\n\n    \"next-auth\": [\"next-auth@4.24.11\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.20.13\", \"@panva/hkdf\": \"^1.0.2\", \"cookie\": \"^0.7.0\", \"jose\": \"^4.15.5\", \"oauth\": \"^0.9.15\", \"openid-client\": \"^5.4.0\", \"preact\": \"^10.6.3\", \"preact-render-to-string\": \"^5.1.19\", \"uuid\": \"^8.3.2\" }, \"peerDependencies\": { \"@auth/core\": \"0.34.2\", \"next\": \"^12.2.5 || ^13 || ^14 || ^15\", \"nodemailer\": \"^6.6.5\", \"react\": \"^17.0.2 || ^18 || ^19\", \"react-dom\": \"^17.0.2 || ^18 || ^19\" }, \"optionalPeers\": [\"@auth/core\", \"nodemailer\"] }, \"sha512-pCFXzIDQX7xmHFs4KVH4luCjaCbuPRtZ9oBUjUhOk84mZ9WVPf94n87TxYI4rSRf9HmfHEF8Yep3JrYDVOo3Cw==\"],\n\n    \"next-contentlayer\": [\"next-contentlayer@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\" }, \"peerDependencies\": { \"contentlayer\": \"0.3.4\", \"next\": \"^12 || ^13\", \"react\": \"*\", \"react-dom\": \"*\" } }, \"sha512-UtUCwgAl159KwfhNaOwyiI7Lg6sdioyKMeh+E7jxx0CJ29JuXGxBEYmCI6+72NxFGIFZKx8lvttbbQhbnYWYSw==\"],\n\n    \"next-themes\": [\"next-themes@0.3.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.8 || ^17 || ^18\", \"react-dom\": \"^16.8 || ^17 || ^18\" } }, \"sha512-/QHIrsYpd6Kfk7xakK4svpDI5mmXP0gfvCoJdGpZQ2TOrQZmsW0QxjaiLn8wbIKjtm4BTSqLoix4lxYYOnLJ/w==\"],\n\n    \"nextjs-linkedin-insight-tag\": [\"nextjs-linkedin-insight-tag@0.0.6\", \"\", { \"dependencies\": { \"typescript\": \"^4.9.4\" }, \"peerDependencies\": { \"next\": \">=11.0.0\", \"react\": \">=17.0.0\" } }, \"sha512-hk3cHpz+1SLbe0hd2nFjUP2AlFmgeDMHHudXGTYrtIvRri/qliFEIpURH7FJWKxQLXm9f1X8B5O20Wvj2wNPCg==\"],\n\n    \"no-case\": [\"no-case@3.0.4\", \"\", { \"dependencies\": { \"lower-case\": \"^2.0.2\", \"tslib\": \"^2.0.3\" } }, \"sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==\"],\n\n    \"node-domexception\": [\"node-domexception@1.0.0\", \"\", {}, \"sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==\"],\n\n    \"node-fetch\": [\"node-fetch@2.7.0\", \"\", { \"dependencies\": { \"whatwg-url\": \"^5.0.0\" }, \"peerDependencies\": { \"encoding\": \"^0.1.0\" }, \"optionalPeers\": [\"encoding\"] }, \"sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==\"],\n\n    \"node-int64\": [\"node-int64@0.4.0\", \"\", {}, \"sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==\"],\n\n    \"node-machine-id\": [\"node-machine-id@1.1.12\", \"\", {}, \"sha512-QNABxbrPa3qEIfrE6GOJ7BYIuignnJw7iQ2YPbc3Nla1HzRJjXzZOiikfF8m7eAMfichLt3M4VgLOetqgDmgGQ==\"],\n\n    \"node-releases\": [\"node-releases@2.0.19\", \"\", {}, \"sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==\"],\n\n    \"normalize-path\": [\"normalize-path@3.0.0\", \"\", {}, \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\"],\n\n    \"normalize-range\": [\"normalize-range@0.1.2\", \"\", {}, \"sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==\"],\n\n    \"npm-run-path\": [\"npm-run-path@4.0.1\", \"\", { \"dependencies\": { \"path-key\": \"^3.0.0\" } }, \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\"],\n\n    \"nullthrows\": [\"nullthrows@1.1.1\", \"\", {}, \"sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw==\"],\n\n    \"nwsapi\": [\"nwsapi@2.2.21\", \"\", {}, \"sha512-o6nIY3qwiSXl7/LuOU0Dmuctd34Yay0yeuZRLFmDPrrdHpXKFndPj3hM+YEPVHYC5fx2otBx4Ilc/gyYSAUaIA==\"],\n\n    \"nx\": [\"nx@21.3.11\", \"\", { \"dependencies\": { \"@napi-rs/wasm-runtime\": \"0.2.4\", \"@yarnpkg/lockfile\": \"^1.1.0\", \"@yarnpkg/parsers\": \"3.0.2\", \"@zkochan/js-yaml\": \"0.0.7\", \"axios\": \"^1.8.3\", \"chalk\": \"^4.1.0\", \"cli-cursor\": \"3.1.0\", \"cli-spinners\": \"2.6.1\", \"cliui\": \"^8.0.1\", \"dotenv\": \"~16.4.5\", \"dotenv-expand\": \"~11.0.6\", \"enquirer\": \"~2.3.6\", \"figures\": \"3.2.0\", \"flat\": \"^5.0.2\", \"front-matter\": \"^4.0.2\", \"ignore\": \"^5.0.4\", \"jest-diff\": \"^30.0.2\", \"jsonc-parser\": \"3.2.0\", \"lines-and-columns\": \"2.0.3\", \"minimatch\": \"9.0.3\", \"node-machine-id\": \"1.1.12\", \"npm-run-path\": \"^4.0.1\", \"open\": \"^8.4.0\", \"ora\": \"5.3.0\", \"resolve.exports\": \"2.0.3\", \"semver\": \"^7.5.3\", \"string-width\": \"^4.2.3\", \"tar-stream\": \"~2.2.0\", \"tmp\": \"~0.2.1\", \"tree-kill\": \"^1.2.2\", \"tsconfig-paths\": \"^4.1.2\", \"tslib\": \"^2.3.0\", \"yaml\": \"^2.6.0\", \"yargs\": \"^17.6.2\", \"yargs-parser\": \"21.1.1\" }, \"optionalDependencies\": { \"@nx/nx-darwin-arm64\": \"21.3.11\", \"@nx/nx-darwin-x64\": \"21.3.11\", \"@nx/nx-freebsd-x64\": \"21.3.11\", \"@nx/nx-linux-arm-gnueabihf\": \"21.3.11\", \"@nx/nx-linux-arm64-gnu\": \"21.3.11\", \"@nx/nx-linux-arm64-musl\": \"21.3.11\", \"@nx/nx-linux-x64-gnu\": \"21.3.11\", \"@nx/nx-linux-x64-musl\": \"21.3.11\", \"@nx/nx-win32-arm64-msvc\": \"21.3.11\", \"@nx/nx-win32-x64-msvc\": \"21.3.11\" }, \"peerDependencies\": { \"@swc-node/register\": \"^1.8.0\", \"@swc/core\": \"^1.3.85\" }, \"optionalPeers\": [\"@swc-node/register\", \"@swc/core\"], \"bin\": { \"nx\": \"bin/nx.js\", \"nx-cloud\": \"bin/nx-cloud.js\" } }, \"sha512-nj2snZ3mHZnbHcoB3NUdxbch9L1sQKV1XccLs1B79fmI/N5oOgWgctm/bWoZH2UH5b4A8ZLAMTsC6YnSJGbcaw==\"],\n\n    \"oauth\": [\"oauth@0.9.15\", \"\", {}, \"sha512-a5ERWK1kh38ExDEfoO6qUHJb32rd7aYmPHuyCu3Fta/cnICvYmgd2uhuKXvPD+PXB+gCEYYEaQdIRAjCOwAKNA==\"],\n\n    \"oauth4webapi\": [\"oauth4webapi@3.7.0\", \"\", {}, \"sha512-Q52wTPUWPsVLVVmTViXPQFMW2h2xv2jnDGxypjpelCFKaOjLsm7AxYuOk1oQgFm95VNDbuggasu9htXrz6XwKw==\"],\n\n    \"ob1\": [\"ob1@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-ngwqewtdUzFyycomdbdIhFLjePPSOt1awKMUXQ0L7iLHgWEPF3DsCerblzjzfAUHaXuvE9ccJymWQ/4PNNqvnQ==\"],\n\n    \"object-assign\": [\"object-assign@4.1.1\", \"\", {}, \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\"],\n\n    \"object-hash\": [\"object-hash@3.0.0\", \"\", {}, \"sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==\"],\n\n    \"object-inspect\": [\"object-inspect@1.13.4\", \"\", {}, \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\"],\n\n    \"object-keys\": [\"object-keys@1.1.1\", \"\", {}, \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\"],\n\n    \"object.assign\": [\"object.assign@4.1.7\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\", \"has-symbols\": \"^1.1.0\", \"object-keys\": \"^1.1.1\" } }, \"sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==\"],\n\n    \"object.entries\": [\"object.entries@1.1.9\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.1.1\" } }, \"sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==\"],\n\n    \"object.fromentries\": [\"object.fromentries@2.0.8\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.2\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==\"],\n\n    \"object.groupby\": [\"object.groupby@1.0.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.2\" } }, \"sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==\"],\n\n    \"object.values\": [\"object.values@1.2.1\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==\"],\n\n    \"oidc-token-hash\": [\"oidc-token-hash@5.1.1\", \"\", {}, \"sha512-D7EmwxJV6DsEB6vOFLrBM2OzsVgQzgPWyHlV2OOAVj772n+WTXpudC9e9u5BVKQnYwaD30Ivhi9b+4UeBcGu9g==\"],\n\n    \"on-exit-leak-free\": [\"on-exit-leak-free@2.1.2\", \"\", {}, \"sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==\"],\n\n    \"on-finished\": [\"on-finished@2.4.1\", \"\", { \"dependencies\": { \"ee-first\": \"1.1.1\" } }, \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\"],\n\n    \"once\": [\"once@1.4.0\", \"\", { \"dependencies\": { \"wrappy\": \"1\" } }, \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\"],\n\n    \"onetime\": [\"onetime@5.1.2\", \"\", { \"dependencies\": { \"mimic-fn\": \"^2.1.0\" } }, \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\"],\n\n    \"oo-ascii-tree\": [\"oo-ascii-tree@1.113.0\", \"\", {}, \"sha512-9hGp+3S8qy0MSdBzp5pX2448Iv+w6QyXI6KBVihdt+Sb8nw1MxNu6ErMadTAXmyfCwZzZoEpn9hybTHEQuSJcQ==\"],\n\n    \"open\": [\"open@8.4.2\", \"\", { \"dependencies\": { \"define-lazy-prop\": \"^2.0.0\", \"is-docker\": \"^2.1.1\", \"is-wsl\": \"^2.2.0\" } }, \"sha512-7x81NCL719oNbsq/3mh+hVrAWmFuEYUqrq/Iw3kUzH8ReypT9QQ0BLoJS7/G9k6N81XjW4qHWtjWwe/9eLy1EQ==\"],\n\n    \"openai\": [\"openai@4.104.0\", \"\", { \"dependencies\": { \"@types/node\": \"^18.11.18\", \"@types/node-fetch\": \"^2.6.4\", \"abort-controller\": \"^3.0.0\", \"agentkeepalive\": \"^4.2.1\", \"form-data-encoder\": \"1.7.2\", \"formdata-node\": \"^4.3.2\", \"node-fetch\": \"^2.6.7\" }, \"peerDependencies\": { \"ws\": \"^8.18.0\", \"zod\": \"^3.23.8\" }, \"optionalPeers\": [\"ws\", \"zod\"], \"bin\": { \"openai\": \"bin/cli\" } }, \"sha512-p99EFNsA/yX6UhVO93f5kJsDRLAg+CTA2RBqdHK4RtK8u5IJw32Hyb2dTGKbnnFmnuoBv5r7Z2CURI9sGZpSuA==\"],\n\n    \"openid-client\": [\"openid-client@5.7.1\", \"\", { \"dependencies\": { \"jose\": \"^4.15.9\", \"lru-cache\": \"^6.0.0\", \"object-hash\": \"^2.2.0\", \"oidc-token-hash\": \"^5.0.3\" } }, \"sha512-jDBPgSVfTnkIh71Hg9pRvtJc6wTwqjRkN88+gCFtYWrlP4Yx2Dsrow8uPi3qLr/aeymPF3o2+dS+wOpglK04ew==\"],\n\n    \"optionator\": [\"optionator@0.9.4\", \"\", { \"dependencies\": { \"deep-is\": \"^0.1.3\", \"fast-levenshtein\": \"^2.0.6\", \"levn\": \"^0.4.1\", \"prelude-ls\": \"^1.2.1\", \"type-check\": \"^0.4.0\", \"word-wrap\": \"^1.2.5\" } }, \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\"],\n\n    \"ora\": [\"ora@6.3.1\", \"\", { \"dependencies\": { \"chalk\": \"^5.0.0\", \"cli-cursor\": \"^4.0.0\", \"cli-spinners\": \"^2.6.1\", \"is-interactive\": \"^2.0.0\", \"is-unicode-supported\": \"^1.1.0\", \"log-symbols\": \"^5.1.0\", \"stdin-discarder\": \"^0.1.0\", \"strip-ansi\": \"^7.0.1\", \"wcwidth\": \"^1.0.1\" } }, \"sha512-ERAyNnZOfqM+Ao3RAvIXkYh5joP220yf59gVe2X/cI6SiCxIdi4c9HZKZD8R6q/RDXEje1THBju6iExiSsgJaQ==\"],\n\n    \"own-keys\": [\"own-keys@1.0.1\", \"\", { \"dependencies\": { \"get-intrinsic\": \"^1.2.6\", \"object-keys\": \"^1.1.1\", \"safe-push-apply\": \"^1.0.0\" } }, \"sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==\"],\n\n    \"p-limit\": [\"p-limit@6.2.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^1.1.1\" } }, \"sha512-kuUqqHNUqoIWp/c467RI4X6mmyuojY5jGutNU0wVTmEOOfcuwLqyMVoAi9MKi2Ak+5i9+nhmrK4ufZE8069kHA==\"],\n\n    \"p-locate\": [\"p-locate@5.0.0\", \"\", { \"dependencies\": { \"p-limit\": \"^3.0.2\" } }, \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\"],\n\n    \"p-try\": [\"p-try@2.2.0\", \"\", {}, \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\"],\n\n    \"pac-proxy-agent\": [\"pac-proxy-agent@7.2.0\", \"\", { \"dependencies\": { \"@tootallnate/quickjs-emscripten\": \"^0.23.0\", \"agent-base\": \"^7.1.2\", \"debug\": \"^4.3.4\", \"get-uri\": \"^6.0.1\", \"http-proxy-agent\": \"^7.0.0\", \"https-proxy-agent\": \"^7.0.6\", \"pac-resolver\": \"^7.0.1\", \"socks-proxy-agent\": \"^8.0.5\" } }, \"sha512-TEB8ESquiLMc0lV8vcd5Ql/JAKAoyzHFXaStwjkzpOpC5Yv+pIzLfHvjTSdf3vpa2bMiUQrg9i6276yn8666aA==\"],\n\n    \"pac-resolver\": [\"pac-resolver@7.0.1\", \"\", { \"dependencies\": { \"degenerator\": \"^5.0.0\", \"netmask\": \"^2.0.2\" } }, \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\"],\n\n    \"package-manager-detector\": [\"package-manager-detector@1.3.0\", \"\", {}, \"sha512-ZsEbbZORsyHuO00lY1kV3/t72yp6Ysay6Pd17ZAlNGuGwmWDLCJxFpRs0IzfXfj1o4icJOkUEioexFHzyPurSQ==\"],\n\n    \"pako\": [\"pako@1.0.11\", \"\", {}, \"sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==\"],\n\n    \"parent-module\": [\"parent-module@1.0.1\", \"\", { \"dependencies\": { \"callsites\": \"^3.0.0\" } }, \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\"],\n\n    \"parse-entities\": [\"parse-entities@4.0.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"character-entities-legacy\": \"^3.0.0\", \"character-reference-invalid\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"is-alphanumerical\": \"^2.0.0\", \"is-decimal\": \"^2.0.0\", \"is-hexadecimal\": \"^2.0.0\" } }, \"sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==\"],\n\n    \"parse-json\": [\"parse-json@5.2.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.0.0\", \"error-ex\": \"^1.3.1\", \"json-parse-even-better-errors\": \"^2.3.0\", \"lines-and-columns\": \"^1.1.6\" } }, \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\"],\n\n    \"parse-path\": [\"parse-path@7.1.0\", \"\", { \"dependencies\": { \"protocols\": \"^2.0.0\" } }, \"sha512-EuCycjZtfPcjWk7KTksnJ5xPMvWGA/6i4zrLYhRG0hGvC3GPU/jGUj3Cy+ZR0v30duV3e23R95T1lE2+lsndSw==\"],\n\n    \"parse-url\": [\"parse-url@9.2.0\", \"\", { \"dependencies\": { \"@types/parse-path\": \"^7.0.0\", \"parse-path\": \"^7.0.0\" } }, \"sha512-bCgsFI+GeGWPAvAiUv63ZorMeif3/U0zaXABGJbOWt5OH2KCaPHF6S+0ok4aqM9RuIPGyZdx9tR9l13PsW4AYQ==\"],\n\n    \"parse5\": [\"parse5@7.3.0\", \"\", { \"dependencies\": { \"entities\": \"^6.0.0\" } }, \"sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==\"],\n\n    \"parseurl\": [\"parseurl@1.3.3\", \"\", {}, \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\"],\n\n    \"partial-json\": [\"partial-json@0.1.7\", \"\", {}, \"sha512-Njv/59hHaokb/hRUjce3Hdv12wd60MtM9Z5Olmn+nehe0QDAsRtRbJPvJ0Z91TusF0SuZRIvnM+S4l6EIP8leA==\"],\n\n    \"pascal-case\": [\"pascal-case@3.1.2\", \"\", { \"dependencies\": { \"no-case\": \"^3.0.4\", \"tslib\": \"^2.0.3\" } }, \"sha512-uWlGT3YSnK9x3BQJaOdcZwrnV6hPpd8jFH1/ucpiLRPh/2zCVJKS19E4GvYHvaCcACn3foXZ0cLB9Wrx1KGe5g==\"],\n\n    \"path-browserify\": [\"path-browserify@1.0.1\", \"\", {}, \"sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==\"],\n\n    \"path-data-parser\": [\"path-data-parser@0.1.0\", \"\", {}, \"sha512-NOnmBpt5Y2RWbuv0LMzsayp3lVylAHLPUTut412ZA3l+C4uw4ZVkQbjShYCQ8TCpUMdPapr4YjUqLYD6v68j+w==\"],\n\n    \"path-exists\": [\"path-exists@4.0.0\", \"\", {}, \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\"],\n\n    \"path-is-absolute\": [\"path-is-absolute@1.0.1\", \"\", {}, \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\"],\n\n    \"path-key\": [\"path-key@3.1.1\", \"\", {}, \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\"],\n\n    \"path-parse\": [\"path-parse@1.0.7\", \"\", {}, \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\"],\n\n    \"path-scurry\": [\"path-scurry@1.11.1\", \"\", { \"dependencies\": { \"lru-cache\": \"^10.2.0\", \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\" } }, \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\"],\n\n    \"path-to-regexp\": [\"path-to-regexp@0.1.7\", \"\", {}, \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"],\n\n    \"path-type\": [\"path-type@4.0.0\", \"\", {}, \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\"],\n\n    \"pathe\": [\"pathe@2.0.3\", \"\", {}, \"sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==\"],\n\n    \"pend\": [\"pend@1.2.0\", \"\", {}, \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\"],\n\n    \"periscopic\": [\"periscopic@3.1.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"estree-walker\": \"^3.0.0\", \"is-reference\": \"^3.0.0\" } }, \"sha512-vKiQ8RRtkl9P+r/+oefh25C3fhybptkHKCZSPlcXiJux2tJF55GnEj3BVn4A5gKfq9NWWXXrxkHBwVPUfH0opw==\"],\n\n    \"pg\": [\"pg@8.16.3\", \"\", { \"dependencies\": { \"pg-connection-string\": \"^2.9.1\", \"pg-pool\": \"^3.10.1\", \"pg-protocol\": \"^1.10.3\", \"pg-types\": \"2.2.0\", \"pgpass\": \"1.0.5\" }, \"optionalDependencies\": { \"pg-cloudflare\": \"^1.2.7\" }, \"peerDependencies\": { \"pg-native\": \">=3.0.1\" }, \"optionalPeers\": [\"pg-native\"] }, \"sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==\"],\n\n    \"pg-cloudflare\": [\"pg-cloudflare@1.2.7\", \"\", {}, \"sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==\"],\n\n    \"pg-connection-string\": [\"pg-connection-string@2.9.1\", \"\", {}, \"sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w==\"],\n\n    \"pg-int8\": [\"pg-int8@1.0.1\", \"\", {}, \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\"],\n\n    \"pg-pool\": [\"pg-pool@3.10.1\", \"\", { \"peerDependencies\": { \"pg\": \">=8.0\" } }, \"sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==\"],\n\n    \"pg-protocol\": [\"pg-protocol@1.10.3\", \"\", {}, \"sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ==\"],\n\n    \"pg-types\": [\"pg-types@2.2.0\", \"\", { \"dependencies\": { \"pg-int8\": \"1.0.1\", \"postgres-array\": \"~2.0.0\", \"postgres-bytea\": \"~1.0.0\", \"postgres-date\": \"~1.0.4\", \"postgres-interval\": \"^1.1.0\" } }, \"sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==\"],\n\n    \"pgpass\": [\"pgpass@1.0.5\", \"\", { \"dependencies\": { \"split2\": \"^4.1.0\" } }, \"sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==\"],\n\n    \"phenomenon\": [\"phenomenon@1.6.0\", \"\", {}, \"sha512-7h9/fjPD3qNlgggzm88cY58l9sudZ6Ey+UmZsizfhtawO6E3srZQXywaNm2lBwT72TbpHYRPy7ytIHeBUD/G0A==\"],\n\n    \"picocolors\": [\"picocolors@1.1.0\", \"\", {}, \"sha512-TQ92mBOW0l3LeMeyLV6mzy/kWr8lkd/hp3mTg7wYK7zJhuBStmGMBG0BdeDZS/dZx1IukaX6Bk11zcln25o1Aw==\"],\n\n    \"picomatch\": [\"picomatch@2.3.1\", \"\", {}, \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\"],\n\n    \"pidtree\": [\"pidtree@0.6.0\", \"\", { \"bin\": { \"pidtree\": \"bin/pidtree.js\" } }, \"sha512-eG2dWTVw5bzqGRztnHExczNxt5VGsE6OwTeCG3fdUf9KBsZzO3R5OIIIzWR+iZA0NtZ+RDVdaoE2dK1cn6jH4g==\"],\n\n    \"pify\": [\"pify@4.0.1\", \"\", {}, \"sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==\"],\n\n    \"pino\": [\"pino@9.4.0\", \"\", { \"dependencies\": { \"atomic-sleep\": \"^1.0.0\", \"fast-redact\": \"^3.1.1\", \"on-exit-leak-free\": \"^2.1.0\", \"pino-abstract-transport\": \"^1.2.0\", \"pino-std-serializers\": \"^7.0.0\", \"process-warning\": \"^4.0.0\", \"quick-format-unescaped\": \"^4.0.3\", \"real-require\": \"^0.2.0\", \"safe-stable-stringify\": \"^2.3.1\", \"sonic-boom\": \"^4.0.1\", \"thread-stream\": \"^3.0.0\" }, \"bin\": { \"pino\": \"bin.js\" } }, \"sha512-nbkQb5+9YPhQRz/BeQmrWpEknAaqjpAqRK8NwJpmrX/JHu7JuZC5G1CeAwJDJfGes4h+YihC6in3Q2nGb+Y09w==\"],\n\n    \"pino-abstract-transport\": [\"pino-abstract-transport@1.2.0\", \"\", { \"dependencies\": { \"readable-stream\": \"^4.0.0\", \"split2\": \"^4.0.0\" } }, \"sha512-Guhh8EZfPCfH+PMXAb6rKOjGQEoy0xlAIn+irODG5kgfYV+BQ0rGYYWTIel3P5mmyXqkYkPmdIkywsn6QKUR1Q==\"],\n\n    \"pino-std-serializers\": [\"pino-std-serializers@7.0.0\", \"\", {}, \"sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA==\"],\n\n    \"pirates\": [\"pirates@4.0.7\", \"\", {}, \"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\"],\n\n    \"pkg-dir\": [\"pkg-dir@4.2.0\", \"\", { \"dependencies\": { \"find-up\": \"^4.0.0\" } }, \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\"],\n\n    \"pkg-types\": [\"pkg-types@2.2.0\", \"\", { \"dependencies\": { \"confbox\": \"^0.2.2\", \"exsolve\": \"^1.0.7\", \"pathe\": \"^2.0.3\" } }, \"sha512-2SM/GZGAEkPp3KWORxQZns4M+WSeXbC2HEvmOIJe3Cmiv6ieAJvdVhDldtHqM5J1Y7MrR1XhkBT/rMlhh9FdqQ==\"],\n\n    \"playwright\": [\"playwright@1.54.2\", \"\", { \"dependencies\": { \"playwright-core\": \"1.54.2\" }, \"optionalDependencies\": { \"fsevents\": \"2.3.2\" }, \"bin\": { \"playwright\": \"cli.js\" } }, \"sha512-Hu/BMoA1NAdRUuulyvQC0pEqZ4vQbGfn8f7wPXcnqQmM+zct9UliKxsIkLNmz/ku7LElUNqmaiv1TG/aL5ACsw==\"],\n\n    \"playwright-core\": [\"playwright-core@1.54.2\", \"\", { \"bin\": { \"playwright-core\": \"cli.js\" } }, \"sha512-n5r4HFbMmWsB4twG7tJLDN9gmBUeSPcsBZiWSE4DnYz9mJMAFqr2ID7+eGC9kpEnxExJ1epttwR59LEWCk8mtA==\"],\n\n    \"plimit-lit\": [\"plimit-lit@1.6.1\", \"\", { \"dependencies\": { \"queue-lit\": \"^1.5.1\" } }, \"sha512-B7+VDyb8Tl6oMJT9oSO2CW8XC/T4UcJGrwOVoNGwOQsQYhlpfajmrMj5xeejqaASq3V/EqThyOeATEOMuSEXiA==\"],\n\n    \"point-in-polygon-hao\": [\"point-in-polygon-hao@1.2.4\", \"\", { \"dependencies\": { \"robust-predicates\": \"^3.0.2\" } }, \"sha512-x2pcvXeqhRHlNRdhLs/tgFapAbSSe86wa/eqmj1G6pWftbEs5aVRJhRGM6FYSUERKu0PjekJzMq0gsI2XyiclQ==\"],\n\n    \"points-on-curve\": [\"points-on-curve@0.2.0\", \"\", {}, \"sha512-0mYKnYYe9ZcqMCWhUjItv/oHjvgEsfKvnUTg8sAtnHr3GVy7rGkXCb6d5cSyqrWqL4k81b9CPg3urd+T7aop3A==\"],\n\n    \"points-on-path\": [\"points-on-path@0.2.1\", \"\", { \"dependencies\": { \"path-data-parser\": \"0.1.0\", \"points-on-curve\": \"0.2.0\" } }, \"sha512-25ClnWWuw7JbWZcgqY/gJ4FQWadKxGWk+3kR/7kD0tCaDtPPMj7oHu2ToLaVhfpnHrZzYby2w6tUA0eOIuUg8g==\"],\n\n    \"possible-typed-array-names\": [\"possible-typed-array-names@1.1.0\", \"\", {}, \"sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==\"],\n\n    \"postcss\": [\"postcss@8.5.6\", \"\", { \"dependencies\": { \"nanoid\": \"^3.3.11\", \"picocolors\": \"^1.1.1\", \"source-map-js\": \"^1.2.1\" } }, \"sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==\"],\n\n    \"postcss-import\": [\"postcss-import@15.1.0\", \"\", { \"dependencies\": { \"postcss-value-parser\": \"^4.0.0\", \"read-cache\": \"^1.0.0\", \"resolve\": \"^1.1.7\" }, \"peerDependencies\": { \"postcss\": \"^8.0.0\" } }, \"sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==\"],\n\n    \"postcss-js\": [\"postcss-js@4.0.1\", \"\", { \"dependencies\": { \"camelcase-css\": \"^2.0.1\" }, \"peerDependencies\": { \"postcss\": \"^8.4.21\" } }, \"sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==\"],\n\n    \"postcss-load-config\": [\"postcss-load-config@4.0.2\", \"\", { \"dependencies\": { \"lilconfig\": \"^3.0.0\", \"yaml\": \"^2.3.4\" }, \"peerDependencies\": { \"postcss\": \">=8.0.9\", \"ts-node\": \">=9.0.0\" }, \"optionalPeers\": [\"postcss\", \"ts-node\"] }, \"sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==\"],\n\n    \"postcss-nested\": [\"postcss-nested@6.2.0\", \"\", { \"dependencies\": { \"postcss-selector-parser\": \"^6.1.1\" }, \"peerDependencies\": { \"postcss\": \"^8.2.14\" } }, \"sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==\"],\n\n    \"postcss-selector-parser\": [\"postcss-selector-parser@6.0.10\", \"\", { \"dependencies\": { \"cssesc\": \"^3.0.0\", \"util-deprecate\": \"^1.0.2\" } }, \"sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==\"],\n\n    \"postcss-value-parser\": [\"postcss-value-parser@4.2.0\", \"\", {}, \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\"],\n\n    \"postgres\": [\"postgres@3.4.4\", \"\", {}, \"sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==\"],\n\n    \"postgres-array\": [\"postgres-array@2.0.0\", \"\", {}, \"sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==\"],\n\n    \"postgres-bytea\": [\"postgres-bytea@1.0.0\", \"\", {}, \"sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==\"],\n\n    \"postgres-date\": [\"postgres-date@1.0.7\", \"\", {}, \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\"],\n\n    \"postgres-interval\": [\"postgres-interval@1.2.0\", \"\", { \"dependencies\": { \"xtend\": \"^4.0.0\" } }, \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\"],\n\n    \"posthog-js\": [\"posthog-js@1.259.0\", \"\", { \"dependencies\": { \"core-js\": \"^3.38.1\", \"fflate\": \"^0.4.8\", \"preact\": \"^10.19.3\", \"web-vitals\": \"^4.2.4\" }, \"peerDependencies\": { \"@rrweb/types\": \"2.0.0-alpha.17\", \"rrweb-snapshot\": \"2.0.0-alpha.17\" }, \"optionalPeers\": [\"@rrweb/types\", \"rrweb-snapshot\"] }, \"sha512-6usLnJshky8fQ82ask7PIJh4BSFOU0VkRbFg8Zanm/HIlYMG1VOdRWlToA63JXeO7Bzm9TuREq1wFm5U2VEVCg==\"],\n\n    \"posthog-node\": [\"posthog-node@4.18.0\", \"\", { \"dependencies\": { \"axios\": \"^1.8.2\" } }, \"sha512-XROs1h+DNatgKh/AlIlCtDxWzwrKdYDb2mOs58n4yN8BkGN9ewqeQwG5ApS4/IzwCb7HPttUkOVulkYatd2PIw==\"],\n\n    \"potpack\": [\"potpack@1.0.2\", \"\", {}, \"sha512-choctRBIV9EMT9WGAZHn3V7t0Z2pMQyl0EZE6pFc/6ml3ssw7Dlf/oAOvFwjm1HVsqfQN8GfeFyJ+d8tRzqueQ==\"],\n\n    \"preact\": [\"preact@10.27.0\", \"\", {}, \"sha512-/DTYoB6mwwgPytiqQTh/7SFRL98ZdiD8Sk8zIUVOxtwq4oWcwrcd1uno9fE/zZmUaUrFNYzbH14CPebOz9tZQw==\"],\n\n    \"preact-render-to-string\": [\"preact-render-to-string@5.2.6\", \"\", { \"dependencies\": { \"pretty-format\": \"^3.8.0\" }, \"peerDependencies\": { \"preact\": \">=10\" } }, \"sha512-JyhErpYOvBV1hEPwIxc/fHWXPfnEGdRKxc8gFdAZ7XV4tlzyzG847XAyEZqoDnynP88akM4eaHcSOzNcLWFguw==\"],\n\n    \"prelude-ls\": [\"prelude-ls@1.2.1\", \"\", {}, \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\"],\n\n    \"prettier\": [\"prettier@3.3.2\", \"\", { \"bin\": { \"prettier\": \"bin/prettier.cjs\" } }, \"sha512-rAVeHYMcv8ATV5d508CFdn+8/pHPpXeIid1DdrPwXnaAdH7cqjVbpJaT5eq4yRAFU/lsbwYwSF/n5iNrdJHPQA==\"],\n\n    \"prettier-linter-helpers\": [\"prettier-linter-helpers@1.0.0\", \"\", { \"dependencies\": { \"fast-diff\": \"^1.1.2\" } }, \"sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==\"],\n\n    \"pretty-format\": [\"pretty-format@29.7.0\", \"\", { \"dependencies\": { \"@jest/schemas\": \"^29.6.3\", \"ansi-styles\": \"^5.0.0\", \"react-is\": \"^18.0.0\" } }, \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\"],\n\n    \"process\": [\"process@0.11.10\", \"\", {}, \"sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==\"],\n\n    \"process-warning\": [\"process-warning@4.0.1\", \"\", {}, \"sha512-3c2LzQ3rY9d0hc1emcsHhfT9Jwz0cChib/QN89oME2R451w5fy3f0afAhERFZAwrbDU43wk12d0ORBpDVME50Q==\"],\n\n    \"progress\": [\"progress@2.0.3\", \"\", {}, \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\"],\n\n    \"promise\": [\"promise@8.3.0\", \"\", { \"dependencies\": { \"asap\": \"~2.0.6\" } }, \"sha512-rZPNPKTOYVNEEKFaq1HqTgOwZD+4/YHS5ukLzQCypkj+OkYx7iv0mA91lJlpPPZ8vMau3IIGj5Qlwrx+8iiSmg==\"],\n\n    \"promise-worker-transferable\": [\"promise-worker-transferable@1.0.4\", \"\", { \"dependencies\": { \"is-promise\": \"^2.1.0\", \"lie\": \"^3.0.2\" } }, \"sha512-bN+0ehEnrXfxV2ZQvU2PetO0n4gqBD4ulq3MI1WOPLgr7/Mg9yRQkX5+0v1vagr74ZTsl7XtzlaYDo2EuCeYJw==\"],\n\n    \"prompts\": [\"prompts@2.4.2\", \"\", { \"dependencies\": { \"kleur\": \"^3.0.3\", \"sisteransi\": \"^1.0.5\" } }, \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\"],\n\n    \"prop-types\": [\"prop-types@15.8.1\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.4.0\", \"object-assign\": \"^4.1.1\", \"react-is\": \"^16.13.1\" } }, \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\"],\n\n    \"property-information\": [\"property-information@7.1.0\", \"\", {}, \"sha512-TwEZ+X+yCJmYfL7TPUOcvBZ4QfoT5YenQiJuX//0th53DE6w0xxLEtfK3iyryQFddXuvkIk51EEgrJQ0WJkOmQ==\"],\n\n    \"protobufjs\": [\"protobufjs@7.5.3\", \"\", { \"dependencies\": { \"@protobufjs/aspromise\": \"^1.1.2\", \"@protobufjs/base64\": \"^1.1.2\", \"@protobufjs/codegen\": \"^2.0.4\", \"@protobufjs/eventemitter\": \"^1.1.0\", \"@protobufjs/fetch\": \"^1.1.0\", \"@protobufjs/float\": \"^1.0.2\", \"@protobufjs/inquire\": \"^1.1.0\", \"@protobufjs/path\": \"^1.1.2\", \"@protobufjs/pool\": \"^1.1.0\", \"@protobufjs/utf8\": \"^1.1.0\", \"@types/node\": \">=13.7.0\", \"long\": \"^5.0.0\" } }, \"sha512-sildjKwVqOI2kmFDiXQ6aEB0fjYTafpEvIBs8tOR8qI4spuL9OPROLVu2qZqi/xgCfsHIwVqlaF8JBjWFHnKbw==\"],\n\n    \"protocols\": [\"protocols@2.0.2\", \"\", {}, \"sha512-hHVTzba3wboROl0/aWRRG9dMytgH6ow//STBZh43l/wQgmMhYhOFi0EHWAPtoCz9IAUymsyP0TSBHkhgMEGNnQ==\"],\n\n    \"proxy-addr\": [\"proxy-addr@2.0.7\", \"\", { \"dependencies\": { \"forwarded\": \"0.2.0\", \"ipaddr.js\": \"1.9.1\" } }, \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\"],\n\n    \"proxy-agent\": [\"proxy-agent@6.5.0\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.2\", \"debug\": \"^4.3.4\", \"http-proxy-agent\": \"^7.0.1\", \"https-proxy-agent\": \"^7.0.6\", \"lru-cache\": \"^7.14.1\", \"pac-proxy-agent\": \"^7.1.0\", \"proxy-from-env\": \"^1.1.0\", \"socks-proxy-agent\": \"^8.0.5\" } }, \"sha512-TmatMXdr2KlRiA2CyDu8GqR8EjahTG3aY3nXjdzFyoZbmB8hrBsTyMezhULIXKnC0jpfjlmiZ3+EaCzoInSu/A==\"],\n\n    \"proxy-from-env\": [\"proxy-from-env@1.1.0\", \"\", {}, \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"],\n\n    \"psl\": [\"psl@1.15.0\", \"\", { \"dependencies\": { \"punycode\": \"^2.3.1\" } }, \"sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==\"],\n\n    \"pump\": [\"pump@3.0.3\", \"\", { \"dependencies\": { \"end-of-stream\": \"^1.1.0\", \"once\": \"^1.3.1\" } }, \"sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==\"],\n\n    \"punycode\": [\"punycode@2.3.1\", \"\", {}, \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\"],\n\n    \"puppeteer-core\": [\"puppeteer-core@24.16.1\", \"\", { \"dependencies\": { \"@puppeteer/browsers\": \"2.10.6\", \"chromium-bidi\": \"7.3.1\", \"debug\": \"^4.4.1\", \"devtools-protocol\": \"0.0.1475386\", \"typed-query-selector\": \"^2.12.0\", \"ws\": \"^8.18.3\" } }, \"sha512-0dGD2kxoH9jqj/xiz4KZLcPKpqWygs+VSEBzvuVbU3KoT2cCw4HnMT9r/7NvYl1lIa+JCa5yIyRqi+4R3UyYfQ==\"],\n\n    \"pure-rand\": [\"pure-rand@6.1.0\", \"\", {}, \"sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==\"],\n\n    \"qs\": [\"qs@6.11.0\", \"\", { \"dependencies\": { \"side-channel\": \"^1.0.4\" } }, \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\"],\n\n    \"quansync\": [\"quansync@0.2.10\", \"\", {}, \"sha512-t41VRkMYbkHyCYmOvx/6URnN80H7k4X0lLdBMGsz+maAwrJQYB1djpV6vHrQIBE0WBSGqhtEHrK9U3DWWH8v7A==\"],\n\n    \"querystringify\": [\"querystringify@2.2.0\", \"\", {}, \"sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==\"],\n\n    \"queue\": [\"queue@6.0.2\", \"\", { \"dependencies\": { \"inherits\": \"~2.0.3\" } }, \"sha512-iHZWu+q3IdFZFX36ro/lKBkSvfkztY5Y7HMiPlOUjhupPcG2JMfst2KKEpu5XndviX/3UhFbRngUPNKtgvtZiA==\"],\n\n    \"queue-lit\": [\"queue-lit@1.5.2\", \"\", {}, \"sha512-tLc36IOPeMAubu8BkW8YDBV+WyIgKlYU7zUNs0J5Vk9skSZ4JfGlPOqplP0aHdfv7HL0B2Pg6nwiq60Qc6M2Hw==\"],\n\n    \"queue-microtask\": [\"queue-microtask@1.2.3\", \"\", {}, \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\"],\n\n    \"quick-format-unescaped\": [\"quick-format-unescaped@4.0.4\", \"\", {}, \"sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==\"],\n\n    \"quickjs-emscripten-core\": [\"quickjs-emscripten-core@0.31.0\", \"\", { \"dependencies\": { \"@jitl/quickjs-ffi-types\": \"0.31.0\" } }, \"sha512-oQz8p0SiKDBc1TC7ZBK2fr0GoSHZKA0jZIeXxsnCyCs4y32FStzCW4d1h6E1sE0uHDMbGITbk2zhNaytaoJwXQ==\"],\n\n    \"range-parser\": [\"range-parser@1.2.1\", \"\", {}, \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\"],\n\n    \"raw-body\": [\"raw-body@2.5.2\", \"\", { \"dependencies\": { \"bytes\": \"3.1.2\", \"http-errors\": \"2.0.0\", \"iconv-lite\": \"0.4.24\", \"unpipe\": \"1.0.0\" } }, \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\"],\n\n    \"react\": [\"react@18.3.1\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==\"],\n\n    \"react-composer\": [\"react-composer@5.0.3\", \"\", { \"dependencies\": { \"prop-types\": \"^15.6.0\" }, \"peerDependencies\": { \"react\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-1uWd07EME6XZvMfapwZmc7NgCZqDemcvicRi3wMJzXsQLvZ3L7fTHVyPy1bZdnWXM4iPjYuNE+uJ41MLKeTtnA==\"],\n\n    \"react-devtools-core\": [\"react-devtools-core@6.1.5\", \"\", { \"dependencies\": { \"shell-quote\": \"^1.6.1\", \"ws\": \"^7\" } }, \"sha512-ePrwPfxAnB+7hgnEr8vpKxL9cmnp7F322t8oqcPshbIQQhDKgFDW4tjhF2wjVbdXF9O/nyuy3sQWd9JGpiLPvA==\"],\n\n    \"react-dom\": [\"react-dom@18.3.1\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\", \"scheduler\": \"^0.23.2\" }, \"peerDependencies\": { \"react\": \"^18.3.1\" } }, \"sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==\"],\n\n    \"react-hook-form\": [\"react-hook-form@7.62.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.8.0 || ^17 || ^18 || ^19\" } }, \"sha512-7KWFejc98xqG/F4bAxpL41NB3o1nnvQO1RWZT3TqRZYL8RryQETGfEdVnJN2fy1crCiBLLjkRBVK05j24FxJGA==\"],\n\n    \"react-is\": [\"react-is@18.3.1\", \"\", {}, \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\"],\n\n    \"react-konva\": [\"react-konva@18.2.12\", \"\", { \"dependencies\": { \"@types/react-reconciler\": \"^0.28.2\", \"its-fine\": \"^1.1.1\", \"react-reconciler\": \"~0.29.0\", \"scheduler\": \"^0.23.0\" }, \"peerDependencies\": { \"konva\": \"^8.0.1 || ^7.2.5 || ^9.0.0\", \"react\": \">=18.0.0\", \"react-dom\": \">=18.0.0\" } }, \"sha512-tszrM/emkX1u2reJTn3M9nMG9kuFv09s974dUEXK7luIN3z0VRD8PUjwyaLWi8Ba52ntQceZ0nfYWC6VlPa3vA==\"],\n\n    \"react-native\": [\"react-native@0.81.0\", \"\", { \"dependencies\": { \"@jest/create-cache-key-function\": \"^29.7.0\", \"@react-native/assets-registry\": \"0.81.0\", \"@react-native/codegen\": \"0.81.0\", \"@react-native/community-cli-plugin\": \"0.81.0\", \"@react-native/gradle-plugin\": \"0.81.0\", \"@react-native/js-polyfills\": \"0.81.0\", \"@react-native/normalize-colors\": \"0.81.0\", \"@react-native/virtualized-lists\": \"0.81.0\", \"abort-controller\": \"^3.0.0\", \"anser\": \"^1.4.9\", \"ansi-regex\": \"^5.0.0\", \"babel-jest\": \"^29.7.0\", \"babel-plugin-syntax-hermes-parser\": \"0.29.1\", \"base64-js\": \"^1.5.1\", \"commander\": \"^12.0.0\", \"flow-enums-runtime\": \"^0.0.6\", \"glob\": \"^7.1.1\", \"invariant\": \"^2.2.4\", \"jest-environment-node\": \"^29.7.0\", \"memoize-one\": \"^5.0.0\", \"metro-runtime\": \"^0.83.1\", \"metro-source-map\": \"^0.83.1\", \"nullthrows\": \"^1.1.1\", \"pretty-format\": \"^29.7.0\", \"promise\": \"^8.3.0\", \"react-devtools-core\": \"^6.1.5\", \"react-refresh\": \"^0.14.0\", \"regenerator-runtime\": \"^0.13.2\", \"scheduler\": \"0.26.0\", \"semver\": \"^7.1.3\", \"stacktrace-parser\": \"^0.1.10\", \"whatwg-fetch\": \"^3.0.0\", \"ws\": \"^6.2.3\", \"yargs\": \"^17.6.2\" }, \"peerDependencies\": { \"@types/react\": \"^19.1.0\", \"react\": \"^19.1.0\" }, \"optionalPeers\": [\"@types/react\"], \"bin\": { \"react-native\": \"cli.js\" } }, \"sha512-RDWhewHGsAa5uZpwIxnJNiv5tW2y6/DrQUjEBdAHPzGMwuMTshern2s4gZaWYeRU3SQguExVddCjiss9IBhxqA==\"],\n\n    \"react-reconciler\": [\"react-reconciler@0.27.0\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\", \"scheduler\": \"^0.21.0\" }, \"peerDependencies\": { \"react\": \"^18.0.0\" } }, \"sha512-HmMDKciQjYmBRGuuhIaKA1ba/7a+UsM5FzOZsMO2JYHt9Jh8reCb7j1eDC95NOyUlKM9KRyvdx0flBuDvYSBoA==\"],\n\n    \"react-refresh\": [\"react-refresh@0.14.2\", \"\", {}, \"sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==\"],\n\n    \"react-remove-scroll\": [\"react-remove-scroll@2.7.1\", \"\", { \"dependencies\": { \"react-remove-scroll-bar\": \"^2.3.7\", \"react-style-singleton\": \"^2.2.3\", \"tslib\": \"^2.1.0\", \"use-callback-ref\": \"^1.3.3\", \"use-sidecar\": \"^1.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==\"],\n\n    \"react-remove-scroll-bar\": [\"react-remove-scroll-bar@2.3.8\", \"\", { \"dependencies\": { \"react-style-singleton\": \"^2.2.2\", \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==\"],\n\n    \"react-spring\": [\"react-spring@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/core\": \"~9.7.5\", \"@react-spring/konva\": \"~9.7.5\", \"@react-spring/native\": \"~9.7.5\", \"@react-spring/three\": \"~9.7.5\", \"@react-spring/web\": \"~9.7.5\", \"@react-spring/zdog\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-oG6DkDZIASHzPiGYw5KwrCvoFZqsaO3t2R7KE37U6S/+8qWSph/UjRQalPpZxlbgheqV9LT62H6H9IyoopHdug==\"],\n\n    \"react-style-singleton\": [\"react-style-singleton@2.2.3\", \"\", { \"dependencies\": { \"get-nonce\": \"^1.0.0\", \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==\"],\n\n    \"react-use-measure\": [\"react-use-measure@2.1.7\", \"\", { \"peerDependencies\": { \"react\": \">=16.13\", \"react-dom\": \">=16.13\" }, \"optionalPeers\": [\"react-dom\"] }, \"sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==\"],\n\n    \"react-zdog\": [\"react-zdog@1.2.2\", \"\", { \"dependencies\": { \"react\": \"^18.2.0\", \"react-dom\": \"^18.2.0\", \"resize-observer-polyfill\": \"^1.5.1\" } }, \"sha512-Ix7ALha91aOEwiHuxumCeYbARS5XNpc/w0v145oGkM6poF/CvhKJwzLhM5sEZbtrghMA+psAhOJkCTzJoseicA==\"],\n\n    \"read-cache\": [\"read-cache@1.0.0\", \"\", { \"dependencies\": { \"pify\": \"^2.3.0\" } }, \"sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==\"],\n\n    \"readable-stream\": [\"readable-stream@4.7.0\", \"\", { \"dependencies\": { \"abort-controller\": \"^3.0.0\", \"buffer\": \"^6.0.3\", \"events\": \"^3.3.0\", \"process\": \"^0.11.10\", \"string_decoder\": \"^1.3.0\" } }, \"sha512-oIGGmcpTLwPga8Bn6/Z75SVaH1z5dUut2ibSyAMVhmUggWpmDn2dapB0n7f8nwaSiRtepAsfJyfXIO5DCVAODg==\"],\n\n    \"readdirp\": [\"readdirp@3.6.0\", \"\", { \"dependencies\": { \"picomatch\": \"^2.2.1\" } }, \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\"],\n\n    \"real-require\": [\"real-require@0.2.0\", \"\", {}, \"sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==\"],\n\n    \"recast\": [\"recast@0.23.11\", \"\", { \"dependencies\": { \"ast-types\": \"^0.16.1\", \"esprima\": \"~4.0.0\", \"source-map\": \"~0.6.1\", \"tiny-invariant\": \"^1.3.3\", \"tslib\": \"^2.0.1\" } }, \"sha512-YTUo+Flmw4ZXiWfQKGcwwc11KnoRAYgzAE2E7mXKCjSviTKShtxBsN6YUUBB2gtaBzKzeKunxhUwNHQuRryhWA==\"],\n\n    \"recma-build-jsx\": [\"recma-build-jsx@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"estree-util-build-jsx\": \"^3.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-8GtdyqaBcDfva+GUKDr3nev3VpKAhup1+RvkMvUxURHpW7QyIvk9F5wz7Vzo06CEMSilw6uArgRqhpiUcWp8ew==\"],\n\n    \"recma-jsx\": [\"recma-jsx@1.0.1\", \"\", { \"dependencies\": { \"acorn-jsx\": \"^5.0.0\", \"estree-util-to-js\": \"^2.0.0\", \"recma-parse\": \"^1.0.0\", \"recma-stringify\": \"^1.0.0\", \"unified\": \"^11.0.0\" }, \"peerDependencies\": { \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\" } }, \"sha512-huSIy7VU2Z5OLv6oFLosQGGDqPqdO1iq6bWNAdhzMxSJP7RAso4fCZ1cKu8j9YHCZf3TPrq4dw3okhrylgcd7w==\"],\n\n    \"recma-parse\": [\"recma-parse@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"esast-util-from-js\": \"^2.0.0\", \"unified\": \"^11.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-OYLsIGBB5Y5wjnSnQW6t3Xg7q3fQ7FWbw/vcXtORTnyaSFscOtABg+7Pnz6YZ6c27fG1/aN8CjfwoUEUIdwqWQ==\"],\n\n    \"recma-stringify\": [\"recma-stringify@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"estree-util-to-js\": \"^2.0.0\", \"unified\": \"^11.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-cjwII1MdIIVloKvC9ErQ+OgAtwHBmcZ0Bg4ciz78FtbT8In39aAYbaA7zvxQ61xVMSPE8WxhLwLbhif4Js2C+g==\"],\n\n    \"redent\": [\"redent@3.0.0\", \"\", { \"dependencies\": { \"indent-string\": \"^4.0.0\", \"strip-indent\": \"^3.0.0\" } }, \"sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==\"],\n\n    \"reflect.getprototypeof\": [\"reflect.getprototypeof@1.0.10\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.9\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.7\", \"get-proto\": \"^1.0.1\", \"which-builtin-type\": \"^1.2.1\" } }, \"sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==\"],\n\n    \"regenerate\": [\"regenerate@1.4.2\", \"\", {}, \"sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==\"],\n\n    \"regenerate-unicode-properties\": [\"regenerate-unicode-properties@10.2.0\", \"\", { \"dependencies\": { \"regenerate\": \"^1.4.2\" } }, \"sha512-DqHn3DwbmmPVzeKj9woBadqmXxLvQoQIwu7nopMc72ztvxVmVk2SBhSnx67zuye5TP+lJsb/TBQsjLKhnDf3MA==\"],\n\n    \"regenerator-runtime\": [\"regenerator-runtime@0.13.11\", \"\", {}, \"sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==\"],\n\n    \"regexp.prototype.flags\": [\"regexp.prototype.flags@1.5.4\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-errors\": \"^1.3.0\", \"get-proto\": \"^1.0.1\", \"gopd\": \"^1.2.0\", \"set-function-name\": \"^2.0.2\" } }, \"sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==\"],\n\n    \"regexpu-core\": [\"regexpu-core@6.2.0\", \"\", { \"dependencies\": { \"regenerate\": \"^1.4.2\", \"regenerate-unicode-properties\": \"^10.2.0\", \"regjsgen\": \"^0.8.0\", \"regjsparser\": \"^0.12.0\", \"unicode-match-property-ecmascript\": \"^2.0.0\", \"unicode-match-property-value-ecmascript\": \"^2.1.0\" } }, \"sha512-H66BPQMrv+V16t8xtmq+UC0CBpiTBA60V8ibS1QVReIp8T1z8hwFxqcGzm9K6lgsN7sB5edVH8a+ze6Fqm4weA==\"],\n\n    \"regjsgen\": [\"regjsgen@0.8.0\", \"\", {}, \"sha512-RvwtGe3d7LvWiDQXeQw8p5asZUmfU1G/l6WbUXeHta7Y2PEIvBTwH6E2EfmYUK8pxcxEdEmaomqyp0vZZ7C+3Q==\"],\n\n    \"regjsparser\": [\"regjsparser@0.12.0\", \"\", { \"dependencies\": { \"jsesc\": \"~3.0.2\" }, \"bin\": { \"regjsparser\": \"bin/parser\" } }, \"sha512-cnE+y8bz4NhMjISKbgeVJtqNbtf5QpjZP+Bslo+UqkIt9QPnX9q095eiRRASJG1/tz6dlNr6Z5NsBiWYokp6EQ==\"],\n\n    \"rehype-recma\": [\"rehype-recma@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"hast-util-to-estree\": \"^3.0.0\" } }, \"sha512-lqA4rGUf1JmacCNWWZx0Wv1dHqMwxzsDWYMTowuplHF3xH0N/MmrZ/G3BDZnzAkRmxDadujCjaKM2hqYdCBOGw==\"],\n\n    \"rehype-stringify\": [\"rehype-stringify@9.0.4\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"hast-util-to-html\": \"^8.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-Uk5xu1YKdqobe5XpSskwPvo1XeHUUucWEQSl8hTrXt5selvca1e8K1EZ37E6YoZ4BT8BCqCdVfQW7OfHfthtVQ==\"],\n\n    \"remark-frontmatter\": [\"remark-frontmatter@4.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-frontmatter\": \"^1.0.0\", \"micromark-extension-frontmatter\": \"^1.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-38fJrB0KnmD3E33a5jZC/5+gGAC2WKNiPw1/fdXJvijBlhA7RCsvJklrYJakS0HedninvaCYW8lQGf9C918GfA==\"],\n\n    \"remark-mdx\": [\"remark-mdx@3.1.0\", \"\", { \"dependencies\": { \"mdast-util-mdx\": \"^3.0.0\", \"micromark-extension-mdxjs\": \"^3.0.0\" } }, \"sha512-Ngl/H3YXyBV9RcRNdlYsZujAmhsxwzxpDzpDEhFBVAGthS4GDgnctpDjgFl/ULx5UEDzqtW1cyBSNKqYYrqLBA==\"],\n\n    \"remark-mdx-frontmatter\": [\"remark-mdx-frontmatter@1.1.1\", \"\", { \"dependencies\": { \"estree-util-is-identifier-name\": \"^1.0.0\", \"estree-util-value-to-estree\": \"^1.0.0\", \"js-yaml\": \"^4.0.0\", \"toml\": \"^3.0.0\" } }, \"sha512-7teX9DW4tI2WZkXS4DBxneYSY7NHiXl4AKdWDO9LXVweULlCT8OPWsOjLEnMIXViN1j+QcY8mfbq3k0EK6x3uA==\"],\n\n    \"remark-parse\": [\"remark-parse@11.0.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unified\": \"^11.0.0\" } }, \"sha512-FCxlKLNGknS5ba/1lmpYijMUzX2esxW5xQqjWxw2eHFfS2MSdaHVINFmhjo+qN1WhZhNimq0dZATN9pH0IDrpA==\"],\n\n    \"remark-rehype\": [\"remark-rehype@11.1.2\", \"\", { \"dependencies\": { \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"mdast-util-to-hast\": \"^13.0.0\", \"unified\": \"^11.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-Dh7l57ianaEoIpzbp0PC9UKAdCSVklD8E5Rpw7ETfbTl3FqcOOgq5q2LVDhgGCkaBv7p24JXikPdvhhmHvKMsw==\"],\n\n    \"remark-stringify\": [\"remark-stringify@11.0.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\", \"unified\": \"^11.0.0\" } }, \"sha512-1OSmLd3awB/t8qdoEOMazZkNsfVTeY4fTsgzcQFdXNq8ToTN4ZGwrMnlda4K6smTFKD+GRV6O48i6Z4iKgPPpw==\"],\n\n    \"repeat-string\": [\"repeat-string@1.6.1\", \"\", {}, \"sha512-PV0dzCYDNfRi1jCDbJzpW7jNNDRuCOG/jI5ctQcGKt/clZD+YcPS3yIlWuTJMmESC8aevCFmWJy5wjAFgNqN6w==\"],\n\n    \"require-directory\": [\"require-directory@2.1.1\", \"\", {}, \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\"],\n\n    \"require-from-string\": [\"require-from-string@2.0.2\", \"\", {}, \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\"],\n\n    \"requires-port\": [\"requires-port@1.0.0\", \"\", {}, \"sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==\"],\n\n    \"resize-observer-polyfill\": [\"resize-observer-polyfill@1.5.1\", \"\", {}, \"sha512-LwZrotdHOo12nQuZlHEmtuXdqGoOD0OhaxopaNFxWzInpEgaLWoVuAMbTzixuosCx2nEG58ngzW3vxdWoxIgdg==\"],\n\n    \"resolve\": [\"resolve@1.22.10\", \"\", { \"dependencies\": { \"is-core-module\": \"^2.16.0\", \"path-parse\": \"^1.0.7\", \"supports-preserve-symlinks-flag\": \"^1.0.0\" }, \"bin\": { \"resolve\": \"bin/resolve\" } }, \"sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==\"],\n\n    \"resolve-cwd\": [\"resolve-cwd@3.0.0\", \"\", { \"dependencies\": { \"resolve-from\": \"^5.0.0\" } }, \"sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==\"],\n\n    \"resolve-from\": [\"resolve-from@5.0.0\", \"\", {}, \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\"],\n\n    \"resolve-pkg-maps\": [\"resolve-pkg-maps@1.0.0\", \"\", {}, \"sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==\"],\n\n    \"resolve.exports\": [\"resolve.exports@2.0.3\", \"\", {}, \"sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==\"],\n\n    \"restore-cursor\": [\"restore-cursor@3.1.0\", \"\", { \"dependencies\": { \"onetime\": \"^5.1.0\", \"signal-exit\": \"^3.0.2\" } }, \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\"],\n\n    \"retry-request\": [\"retry-request@7.0.2\", \"\", { \"dependencies\": { \"@types/request\": \"^2.48.8\", \"extend\": \"^3.0.2\", \"teeny-request\": \"^9.0.0\" } }, \"sha512-dUOvLMJ0/JJYEn8NrpOaGNE7X3vpI5XlZS/u0ANjqtcZVKnIxP7IgCFwrKTxENw29emmwug53awKtaMm4i9g5w==\"],\n\n    \"reusify\": [\"reusify@1.1.0\", \"\", {}, \"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\"],\n\n    \"rfdc\": [\"rfdc@1.4.1\", \"\", {}, \"sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA==\"],\n\n    \"rimraf\": [\"rimraf@3.0.2\", \"\", { \"dependencies\": { \"glob\": \"^7.1.3\" }, \"bin\": { \"rimraf\": \"bin.js\" } }, \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\"],\n\n    \"robust-predicates\": [\"robust-predicates@3.0.2\", \"\", {}, \"sha512-IXgzBWvWQwE6PrDI05OvmXUIruQTcoMDzRsOd5CDvHCVLcLHMTSYvOK5Cm46kWqlV3yAbuSpBZdJ5oP5OUoStg==\"],\n\n    \"roughjs\": [\"roughjs@4.6.6\", \"\", { \"dependencies\": { \"hachure-fill\": \"^0.5.2\", \"path-data-parser\": \"^0.1.0\", \"points-on-curve\": \"^0.2.0\", \"points-on-path\": \"^0.2.1\" } }, \"sha512-ZUz/69+SYpFN/g/lUlo2FXcIjRkSu3nDarreVdGGndHEBJ6cXPdKguS8JGxwj5HA5xIbVKSmLgr5b3AWxtRfvQ==\"],\n\n    \"run-parallel\": [\"run-parallel@1.2.0\", \"\", { \"dependencies\": { \"queue-microtask\": \"^1.2.2\" } }, \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\"],\n\n    \"rw\": [\"rw@1.3.3\", \"\", {}, \"sha512-PdhdWy89SiZogBLaw42zdeqtRJ//zFd2PgQavcICDUgJT5oW10QCRKbJ6bg4r0/UY2M6BWd5tkxuGFRvCkgfHQ==\"],\n\n    \"sade\": [\"sade@1.8.1\", \"\", { \"dependencies\": { \"mri\": \"^1.1.0\" } }, \"sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==\"],\n\n    \"safe-array-concat\": [\"safe-array-concat@1.1.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.2\", \"get-intrinsic\": \"^1.2.6\", \"has-symbols\": \"^1.1.0\", \"isarray\": \"^2.0.5\" } }, \"sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==\"],\n\n    \"safe-buffer\": [\"safe-buffer@5.2.1\", \"\", {}, \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\"],\n\n    \"safe-push-apply\": [\"safe-push-apply@1.0.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"isarray\": \"^2.0.5\" } }, \"sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==\"],\n\n    \"safe-regex-test\": [\"safe-regex-test@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"is-regex\": \"^1.2.1\" } }, \"sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==\"],\n\n    \"safe-stable-stringify\": [\"safe-stable-stringify@2.5.0\", \"\", {}, \"sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==\"],\n\n    \"safer-buffer\": [\"safer-buffer@2.1.2\", \"\", {}, \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"],\n\n    \"saxes\": [\"saxes@6.0.0\", \"\", { \"dependencies\": { \"xmlchars\": \"^2.2.0\" } }, \"sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==\"],\n\n    \"scheduler\": [\"scheduler@0.21.0\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-1r87x5fz9MXqswA2ERLo0EbOAU74DpIUO090gIasYTqlVoJeMcl+Z1Rg7WHz+qtPujhS/hGIt9kxZOYBV3faRQ==\"],\n\n    \"section-matter\": [\"section-matter@1.0.0\", \"\", { \"dependencies\": { \"extend-shallow\": \"^2.0.1\", \"kind-of\": \"^6.0.0\" } }, \"sha512-vfD3pmTzGpufjScBh50YHKzEu2lxBWhVEHsNGoEXmCmn2hKGfeNLYMzCJpe8cD7gqX7TJluOVpBkAequ6dgMmA==\"],\n\n    \"seedrandom\": [\"seedrandom@3.0.5\", \"\", {}, \"sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg==\"],\n\n    \"semver\": [\"semver@7.7.2\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\"],\n\n    \"send\": [\"send@0.18.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"destroy\": \"1.2.0\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"etag\": \"~1.8.1\", \"fresh\": \"0.5.2\", \"http-errors\": \"2.0.0\", \"mime\": \"1.6.0\", \"ms\": \"2.1.3\", \"on-finished\": \"2.4.1\", \"range-parser\": \"~1.2.1\", \"statuses\": \"2.0.1\" } }, \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\"],\n\n    \"serialize-error\": [\"serialize-error@2.1.0\", \"\", {}, \"sha512-ghgmKt5o4Tly5yEG/UJp8qTd0AN7Xalw4XBtDEKP655B699qMEtra1WlXeE6WIvdEG481JvRxULKsInq/iNysw==\"],\n\n    \"serve-static\": [\"serve-static@1.15.0\", \"\", { \"dependencies\": { \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"parseurl\": \"~1.3.3\", \"send\": \"0.18.0\" } }, \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\"],\n\n    \"server-only\": [\"server-only@0.0.1\", \"\", {}, \"sha512-qepMx2JxAa5jjfzxG79yPPq+8BuFToHd1hm7kI+Z4zAq1ftQiP7HcxMhDDItrbtwVeLg/cY2JnKnrcFkmiswNA==\"],\n\n    \"set-function-length\": [\"set-function-length@1.2.2\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.1.4\", \"es-errors\": \"^1.3.0\", \"function-bind\": \"^1.1.2\", \"get-intrinsic\": \"^1.2.4\", \"gopd\": \"^1.0.1\", \"has-property-descriptors\": \"^1.0.2\" } }, \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\"],\n\n    \"set-function-name\": [\"set-function-name@2.0.2\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.1.4\", \"es-errors\": \"^1.3.0\", \"functions-have-names\": \"^1.2.3\", \"has-property-descriptors\": \"^1.0.2\" } }, \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\"],\n\n    \"set-proto\": [\"set-proto@1.0.0\", \"\", { \"dependencies\": { \"dunder-proto\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==\"],\n\n    \"setprototypeof\": [\"setprototypeof@1.2.0\", \"\", {}, \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"],\n\n    \"sha.js\": [\"sha.js@2.4.12\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.4\", \"safe-buffer\": \"^5.2.1\", \"to-buffer\": \"^1.2.0\" }, \"bin\": { \"sha.js\": \"bin.js\" } }, \"sha512-8LzC5+bvI45BjpfXU8V5fdU2mfeKiQe1D1gIMn7XUlF3OTUrpdJpPPH4EMAnF0DsHHdSZqCdSss5qCmJKuiO3w==\"],\n\n    \"shadcn-ui\": [\"shadcn-ui@0.9.5\", \"\", { \"dependencies\": { \"chalk\": \"^5.4.1\" }, \"bin\": { \"shadcn-ui\": \"dist/index.js\" } }, \"sha512-dsBQWpdLLYCdSdmvOmu53nJhhWnQD1OiblhuhkI4rPYxPKTyfbmZ2NTJHWMu1fXN9PTfN6IVK5vvh+BrjHJx2g==\"],\n\n    \"shebang-command\": [\"shebang-command@2.0.0\", \"\", { \"dependencies\": { \"shebang-regex\": \"^3.0.0\" } }, \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\"],\n\n    \"shebang-regex\": [\"shebang-regex@3.0.0\", \"\", {}, \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\"],\n\n    \"shell-quote\": [\"shell-quote@1.8.3\", \"\", {}, \"sha512-ObmnIF4hXNg1BqhnHmgbDETF8dLPCggZWBjkQfhZpbszZnYur5DUljTcCHii5LC3J5E0yeO/1LIMyH+UvHQgyw==\"],\n\n    \"side-channel\": [\"side-channel@1.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"object-inspect\": \"^1.13.3\", \"side-channel-list\": \"^1.0.0\", \"side-channel-map\": \"^1.0.1\", \"side-channel-weakmap\": \"^1.0.2\" } }, \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\"],\n\n    \"side-channel-list\": [\"side-channel-list@1.0.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"object-inspect\": \"^1.13.3\" } }, \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\"],\n\n    \"side-channel-map\": [\"side-channel-map@1.0.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.5\", \"object-inspect\": \"^1.13.3\" } }, \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\"],\n\n    \"side-channel-weakmap\": [\"side-channel-weakmap@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.5\", \"object-inspect\": \"^1.13.3\", \"side-channel-map\": \"^1.0.1\" } }, \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\"],\n\n    \"signal-exit\": [\"signal-exit@3.0.7\", \"\", {}, \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\"],\n\n    \"simple-concat\": [\"simple-concat@1.0.1\", \"\", {}, \"sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==\"],\n\n    \"simple-get\": [\"simple-get@4.0.1\", \"\", { \"dependencies\": { \"decompress-response\": \"^6.0.0\", \"once\": \"^1.3.1\", \"simple-concat\": \"^1.0.0\" } }, \"sha512-brv7p5WgH0jmQJr1ZDDfKDOSeWWg+OVypG99A/5vYGPqJ6pxiaHLy8nxtFjBA7oMa01ebA9gfh1uMCFqOuXxvA==\"],\n\n    \"simplesignal\": [\"simplesignal@2.1.7\", \"\", {}, \"sha512-PEo2qWpUke7IMhlqiBxrulIFvhJRLkl1ih52Rwa+bPjzhJepcd4GIjn2RiQmFSx3dQvsEAgF0/lXMwMN7vODaA==\"],\n\n    \"sisteransi\": [\"sisteransi@1.0.5\", \"\", {}, \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\"],\n\n    \"slash\": [\"slash@3.0.0\", \"\", {}, \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\"],\n\n    \"slice-ansi\": [\"slice-ansi@5.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.0.0\", \"is-fullwidth-code-point\": \"^4.0.0\" } }, \"sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==\"],\n\n    \"smart-buffer\": [\"smart-buffer@4.2.0\", \"\", {}, \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\"],\n\n    \"socks\": [\"socks@2.8.7\", \"\", { \"dependencies\": { \"ip-address\": \"^10.0.1\", \"smart-buffer\": \"^4.2.0\" } }, \"sha512-HLpt+uLy/pxB+bum/9DzAgiKS8CX1EvbWxI4zlmgGCExImLdiad2iCwXT5Z4c9c3Eq8rP2318mPW2c+QbtjK8A==\"],\n\n    \"socks-proxy-agent\": [\"socks-proxy-agent@8.0.5\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.2\", \"debug\": \"^4.3.4\", \"socks\": \"^2.8.3\" } }, \"sha512-HehCEsotFqbPW9sJ8WVYB6UbmIMv7kUUORIF2Nncq4VQvBfNBLibW9YZR5dlYCSUhwcD628pRllm7n+E+YTzJw==\"],\n\n    \"sonic-boom\": [\"sonic-boom@4.2.0\", \"\", { \"dependencies\": { \"atomic-sleep\": \"^1.0.0\" } }, \"sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==\"],\n\n    \"source-map\": [\"source-map@0.7.6\", \"\", {}, \"sha512-i5uvt8C3ikiWeNZSVZNWcfZPItFQOsYTUAOkcUPGd8DqDy1uOUikjt5dG+uRlwyvR108Fb9DOd4GvXfT0N2/uQ==\"],\n\n    \"source-map-js\": [\"source-map-js@1.2.1\", \"\", {}, \"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\"],\n\n    \"source-map-support\": [\"source-map-support@0.5.21\", \"\", { \"dependencies\": { \"buffer-from\": \"^1.0.0\", \"source-map\": \"^0.6.0\" } }, \"sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==\"],\n\n    \"space-separated-tokens\": [\"space-separated-tokens@2.0.2\", \"\", {}, \"sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==\"],\n\n    \"split2\": [\"split2@4.2.0\", \"\", {}, \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\"],\n\n    \"sprintf-js\": [\"sprintf-js@1.0.3\", \"\", {}, \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\"],\n\n    \"stable-hash\": [\"stable-hash@0.0.5\", \"\", {}, \"sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==\"],\n\n    \"stack-utils\": [\"stack-utils@2.0.6\", \"\", { \"dependencies\": { \"escape-string-regexp\": \"^2.0.0\" } }, \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\"],\n\n    \"stackframe\": [\"stackframe@1.3.4\", \"\", {}, \"sha512-oeVtt7eWQS+Na6F//S4kJ2K2VbRlS9D43mAlMyVpVWovy9o+jfgH8O9agzANzaiLjclA0oYzUXEM4PurhSUChw==\"],\n\n    \"stacktrace-parser\": [\"stacktrace-parser@0.1.11\", \"\", { \"dependencies\": { \"type-fest\": \"^0.7.1\" } }, \"sha512-WjlahMgHmCJpqzU8bIBy4qtsZdU9lRlcZE3Lvyej6t4tuOuv1vk57OW3MBrj6hXBFx/nNoC9MPMTcr5YA7NQbg==\"],\n\n    \"stats-gl\": [\"stats-gl@2.4.2\", \"\", { \"dependencies\": { \"@types/three\": \"*\", \"three\": \"^0.170.0\" } }, \"sha512-g5O9B0hm9CvnM36+v7SFl39T7hmAlv541tU81ME8YeSb3i1CIP5/QdDeSB3A0la0bKNHpxpwxOVRo2wFTYEosQ==\"],\n\n    \"stats.js\": [\"stats.js@0.17.0\", \"\", {}, \"sha512-hNKz8phvYLPEcRkeG1rsGmV5ChMjKDAWU7/OJJdDErPBNChQXxCo3WZurGpnWc6gZhAzEPFad1aVgyOANH1sMw==\"],\n\n    \"statuses\": [\"statuses@2.0.1\", \"\", {}, \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\"],\n\n    \"stdin-discarder\": [\"stdin-discarder@0.1.0\", \"\", { \"dependencies\": { \"bl\": \"^5.0.0\" } }, \"sha512-xhV7w8S+bUwlPTb4bAOUQhv8/cSS5offJuX8GQGq32ONF0ZtDWKfkdomM3HMRA+LhX6um/FZ0COqlwsjD53LeQ==\"],\n\n    \"stop-iteration-iterator\": [\"stop-iteration-iterator@1.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"internal-slot\": \"^1.1.0\" } }, \"sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==\"],\n\n    \"stream-events\": [\"stream-events@1.0.5\", \"\", { \"dependencies\": { \"stubs\": \"^3.0.0\" } }, \"sha512-E1GUzBSgvct8Jsb3v2X15pjzN1tYebtbLaMg+eBOUOAxgbLoSbT2NS91ckc5lJD1KfLjId+jXJRgo0qnV5Nerg==\"],\n\n    \"stream-shift\": [\"stream-shift@1.0.3\", \"\", {}, \"sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==\"],\n\n    \"streamsearch\": [\"streamsearch@1.1.0\", \"\", {}, \"sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==\"],\n\n    \"streamx\": [\"streamx@2.22.1\", \"\", { \"dependencies\": { \"fast-fifo\": \"^1.3.2\", \"text-decoder\": \"^1.1.0\" }, \"optionalDependencies\": { \"bare-events\": \"^2.2.0\" } }, \"sha512-znKXEBxfatz2GBNK02kRnCXjV+AA4kjZIUxeWSr3UGirZMJfTE9uiwKHobnbgxWyL/JWro8tTq+vOqAK1/qbSA==\"],\n\n    \"string-argv\": [\"string-argv@0.3.2\", \"\", {}, \"sha512-aqD2Q0144Z+/RqG52NeHEkZauTAUWJO8c6yTftGJKO3Tja5tUgIfmIl6kExvhtxSDP7fXB6DvzkfMpCd/F3G+Q==\"],\n\n    \"string-length\": [\"string-length@4.0.2\", \"\", { \"dependencies\": { \"char-regex\": \"^1.0.2\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==\"],\n\n    \"string-width\": [\"string-width@7.2.0\", \"\", { \"dependencies\": { \"emoji-regex\": \"^10.3.0\", \"get-east-asian-width\": \"^1.0.0\", \"strip-ansi\": \"^7.1.0\" } }, \"sha512-tsaTIkKW9b4N+AEj+SVA+WhJzV7/zMhcSu78mLKWSk7cXMOSHsBKFWUs0fWwq8QyK3MgJBQRX6Gbi4kYbdvGkQ==\"],\n\n    \"string-width-cjs\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"string.prototype.includes\": [\"string.prototype.includes@2.0.1\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.3\" } }, \"sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==\"],\n\n    \"string.prototype.matchall\": [\"string.prototype.matchall@4.0.12\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.6\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.6\", \"gopd\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"internal-slot\": \"^1.1.0\", \"regexp.prototype.flags\": \"^1.5.3\", \"set-function-name\": \"^2.0.2\", \"side-channel\": \"^1.1.0\" } }, \"sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==\"],\n\n    \"string.prototype.repeat\": [\"string.prototype.repeat@1.0.0\", \"\", { \"dependencies\": { \"define-properties\": \"^1.1.3\", \"es-abstract\": \"^1.17.5\" } }, \"sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==\"],\n\n    \"string.prototype.trim\": [\"string.prototype.trim@1.2.10\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.2\", \"define-data-property\": \"^1.1.4\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-object-atoms\": \"^1.0.0\", \"has-property-descriptors\": \"^1.0.2\" } }, \"sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==\"],\n\n    \"string.prototype.trimend\": [\"string.prototype.trimend@1.0.9\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.2\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==\"],\n\n    \"string.prototype.trimstart\": [\"string.prototype.trimstart@1.0.8\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==\"],\n\n    \"string_decoder\": [\"string_decoder@1.3.0\", \"\", { \"dependencies\": { \"safe-buffer\": \"~5.2.0\" } }, \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\"],\n\n    \"stringify-entities\": [\"stringify-entities@4.0.4\", \"\", { \"dependencies\": { \"character-entities-html4\": \"^2.0.0\", \"character-entities-legacy\": \"^3.0.0\" } }, \"sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==\"],\n\n    \"strip-ansi\": [\"strip-ansi@7.1.0\", \"\", { \"dependencies\": { \"ansi-regex\": \"^6.0.1\" } }, \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\"],\n\n    \"strip-ansi-cjs\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"strip-bom\": [\"strip-bom@3.0.0\", \"\", {}, \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\"],\n\n    \"strip-bom-string\": [\"strip-bom-string@1.0.0\", \"\", {}, \"sha512-uCC2VHvQRYu+lMh4My/sFNmF2klFymLX1wHJeXnbEJERpV/ZsVuonzerjfrGpIGF7LBVa1O7i9kjiWvJiFck8g==\"],\n\n    \"strip-final-newline\": [\"strip-final-newline@3.0.0\", \"\", {}, \"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\"],\n\n    \"strip-indent\": [\"strip-indent@3.0.0\", \"\", { \"dependencies\": { \"min-indent\": \"^1.0.0\" } }, \"sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==\"],\n\n    \"strip-json-comments\": [\"strip-json-comments@3.1.1\", \"\", {}, \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\"],\n\n    \"stripe\": [\"stripe@16.12.0\", \"\", { \"dependencies\": { \"@types/node\": \">=8.1.0\", \"qs\": \"^6.11.0\" } }, \"sha512-H7eFVLDxeTNNSn4JTRfL2//LzCbDrMSZ+2q1c7CanVWgK2qIW5TwS+0V7N9KcKZZNpYh/uCqK0PyZh/2UsaAtQ==\"],\n\n    \"stubs\": [\"stubs@3.0.0\", \"\", {}, \"sha512-PdHt7hHUJKxvTCgbKX9C1V/ftOcjJQgz8BZwNfV5c4B6dcGqlpelTbJ999jBGZ2jYiPAwcX5dP6oBwVlBlUbxw==\"],\n\n    \"style-to-js\": [\"style-to-js@1.1.17\", \"\", { \"dependencies\": { \"style-to-object\": \"1.0.9\" } }, \"sha512-xQcBGDxJb6jjFCTzvQtfiPn6YvvP2O8U1MDIPNfJQlWMYfktPy+iGsHE7cssjs7y84d9fQaK4UF3RIJaAHSoYA==\"],\n\n    \"style-to-object\": [\"style-to-object@1.0.9\", \"\", { \"dependencies\": { \"inline-style-parser\": \"0.2.4\" } }, \"sha512-G4qppLgKu/k6FwRpHiGiKPaPTFcG3g4wNVX/Qsfu+RqQM30E7Tyu/TEgxcL9PNLF5pdRLwQdE3YKKf+KF2Dzlw==\"],\n\n    \"styled-jsx\": [\"styled-jsx@5.1.1\", \"\", { \"dependencies\": { \"client-only\": \"0.0.1\" }, \"peerDependencies\": { \"react\": \">= 16.8.0 || 17.x.x || ^18.0.0-0\" } }, \"sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==\"],\n\n    \"stylis\": [\"stylis@4.3.6\", \"\", {}, \"sha512-yQ3rwFWRfwNUY7H5vpU0wfdkNSnvnJinhF9830Swlaxl03zsOjCfmX0ugac+3LtK0lYSgwL/KXc8oYL3mG4YFQ==\"],\n\n    \"sucrase\": [\"sucrase@3.35.0\", \"\", { \"dependencies\": { \"@jridgewell/gen-mapping\": \"^0.3.2\", \"commander\": \"^4.0.0\", \"glob\": \"^10.3.10\", \"lines-and-columns\": \"^1.1.6\", \"mz\": \"^2.7.0\", \"pirates\": \"^4.0.1\", \"ts-interface-checker\": \"^0.1.9\" }, \"bin\": { \"sucrase\": \"bin/sucrase\", \"sucrase-node\": \"bin/sucrase-node\" } }, \"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\"],\n\n    \"supports-color\": [\"supports-color@8.1.1\", \"\", { \"dependencies\": { \"has-flag\": \"^4.0.0\" } }, \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\"],\n\n    \"supports-preserve-symlinks-flag\": [\"supports-preserve-symlinks-flag@1.0.0\", \"\", {}, \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\"],\n\n    \"suspend-react\": [\"suspend-react@0.1.3\", \"\", { \"peerDependencies\": { \"react\": \">=17.0\" } }, \"sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==\"],\n\n    \"symbol-tree\": [\"symbol-tree@3.2.4\", \"\", {}, \"sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==\"],\n\n    \"synckit\": [\"synckit@0.11.11\", \"\", { \"dependencies\": { \"@pkgr/core\": \"^0.2.9\" } }, \"sha512-MeQTA1r0litLUf0Rp/iisCaL8761lKAZHaimlbGK4j0HysC4PLfqygQj9srcs0m2RdtDYnF8UuYyKpbjHYp7Jw==\"],\n\n    \"systeminformation\": [\"systeminformation@5.23.4\", \"\", { \"os\": \"!aix\", \"bin\": { \"systeminformation\": \"lib/cli.js\" } }, \"sha512-mD2R9xnOzKOOmIVtxekosf/ghOE/DGLqAPmsEgQMWJK0pMKxBtX19riz1Ss0tN4omcfS2FQ2RDJ4lkxgADxIPw==\"],\n\n    \"tailwind-merge\": [\"tailwind-merge@2.6.0\", \"\", {}, \"sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==\"],\n\n    \"tailwindcss\": [\"tailwindcss@3.4.17\", \"\", { \"dependencies\": { \"@alloc/quick-lru\": \"^5.2.0\", \"arg\": \"^5.0.2\", \"chokidar\": \"^3.6.0\", \"didyoumean\": \"^1.2.2\", \"dlv\": \"^1.1.3\", \"fast-glob\": \"^3.3.2\", \"glob-parent\": \"^6.0.2\", \"is-glob\": \"^4.0.3\", \"jiti\": \"^1.21.6\", \"lilconfig\": \"^3.1.3\", \"micromatch\": \"^4.0.8\", \"normalize-path\": \"^3.0.0\", \"object-hash\": \"^3.0.0\", \"picocolors\": \"^1.1.1\", \"postcss\": \"^8.4.47\", \"postcss-import\": \"^15.1.0\", \"postcss-js\": \"^4.0.1\", \"postcss-load-config\": \"^4.0.2\", \"postcss-nested\": \"^6.2.0\", \"postcss-selector-parser\": \"^6.1.2\", \"resolve\": \"^1.22.8\", \"sucrase\": \"^3.35.0\" }, \"bin\": { \"tailwind\": \"lib/cli.js\", \"tailwindcss\": \"lib/cli.js\" } }, \"sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==\"],\n\n    \"tailwindcss-animate\": [\"tailwindcss-animate@1.0.7\", \"\", { \"peerDependencies\": { \"tailwindcss\": \">=3.0.0 || insiders\" } }, \"sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==\"],\n\n    \"tar-fs\": [\"tar-fs@3.1.0\", \"\", { \"dependencies\": { \"pump\": \"^3.0.0\", \"tar-stream\": \"^3.1.5\" }, \"optionalDependencies\": { \"bare-fs\": \"^4.0.1\", \"bare-path\": \"^3.0.0\" } }, \"sha512-5Mty5y/sOF1YWj1J6GiBodjlDc05CUR8PKXrsnFAiSG0xA+GHeWLovaZPYUDXkH/1iKRf2+M5+OrRgzC7O9b7w==\"],\n\n    \"tar-stream\": [\"tar-stream@2.2.0\", \"\", { \"dependencies\": { \"bl\": \"^4.0.3\", \"end-of-stream\": \"^1.4.1\", \"fs-constants\": \"^1.0.0\", \"inherits\": \"^2.0.3\", \"readable-stream\": \"^3.1.1\" } }, \"sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==\"],\n\n    \"teeny-request\": [\"teeny-request@9.0.0\", \"\", { \"dependencies\": { \"http-proxy-agent\": \"^5.0.0\", \"https-proxy-agent\": \"^5.0.0\", \"node-fetch\": \"^2.6.9\", \"stream-events\": \"^1.0.5\", \"uuid\": \"^9.0.0\" } }, \"sha512-resvxdc6Mgb7YEThw6G6bExlXKkv6+YbuzGg9xuXxSgxJF7Ozs+o8Y9+2R3sArdWdW8nOokoQb1yrpFB0pQK2g==\"],\n\n    \"terser\": [\"terser@5.43.1\", \"\", { \"dependencies\": { \"@jridgewell/source-map\": \"^0.3.3\", \"acorn\": \"^8.14.0\", \"commander\": \"^2.20.0\", \"source-map-support\": \"~0.5.20\" }, \"bin\": { \"terser\": \"bin/terser\" } }, \"sha512-+6erLbBm0+LROX2sPXlUYx/ux5PyE9K/a92Wrt6oA+WDAoFTdpHE5tCYCI5PNzq2y8df4rA+QgHLJuR4jNymsg==\"],\n\n    \"test-exclude\": [\"test-exclude@6.0.0\", \"\", { \"dependencies\": { \"@istanbuljs/schema\": \"^0.1.2\", \"glob\": \"^7.1.4\", \"minimatch\": \"^3.0.4\" } }, \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\"],\n\n    \"text-decoder\": [\"text-decoder@1.2.3\", \"\", { \"dependencies\": { \"b4a\": \"^1.6.4\" } }, \"sha512-3/o9z3X0X0fTupwsYvR03pJ/DjWuqqrfwBgTQzdWDiQSm9KitAyz/9WqsT2JQW7KV2m+bC2ol/zqpW37NHxLaA==\"],\n\n    \"text-extensions\": [\"text-extensions@2.4.0\", \"\", {}, \"sha512-te/NtwBwfiNRLf9Ijqx3T0nlqZiQ2XrrtBvu+cLL8ZRrGkO0NHTug8MYFKyoSrv/sHTaSKfilUkizV6XhxMJ3g==\"],\n\n    \"text-table\": [\"text-table@0.2.0\", \"\", {}, \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\"],\n\n    \"thenify\": [\"thenify@3.3.1\", \"\", { \"dependencies\": { \"any-promise\": \"^1.0.0\" } }, \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\"],\n\n    \"thenify-all\": [\"thenify-all@1.6.0\", \"\", { \"dependencies\": { \"thenify\": \">= 3.1.0 < 4\" } }, \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\"],\n\n    \"thread-stream\": [\"thread-stream@3.1.0\", \"\", { \"dependencies\": { \"real-require\": \"^0.2.0\" } }, \"sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==\"],\n\n    \"three\": [\"three@0.168.0\", \"\", {}, \"sha512-6m6jXtDwMJEK/GGMbAOTSAmxNdzKvvBzgd7q8bE/7Tr6m7PaBh5kKLrN7faWtlglXbzj7sVba48Idwx+NRsZXw==\"],\n\n    \"three-conic-polygon-geometry\": [\"three-conic-polygon-geometry@2.1.2\", \"\", { \"dependencies\": { \"@turf/boolean-point-in-polygon\": \"^7.2\", \"d3-array\": \"1 - 3\", \"d3-geo\": \"1 - 3\", \"d3-geo-voronoi\": \"2\", \"d3-scale\": \"1 - 4\", \"delaunator\": \"5\", \"earcut\": \"3\" }, \"peerDependencies\": { \"three\": \">=0.72.0\" } }, \"sha512-NaP3RWLJIyPGI+zyaZwd0Yj6rkoxm4FJHqAX1Enb4L64oNYLCn4bz1ESgOEYavgcUwCNYINu1AgEoUBJr1wZcA==\"],\n\n    \"three-geojson-geometry\": [\"three-geojson-geometry@2.1.1\", \"\", { \"dependencies\": { \"d3-geo\": \"1 - 3\", \"d3-interpolate\": \"1 - 3\", \"earcut\": \"3\" }, \"peerDependencies\": { \"three\": \">=0.72.0\" } }, \"sha512-dC7bF3ri1goDcihYhzACHOBQqu7YNNazYLa2bSydVIiJUb3jDFojKSy+gNj2pMkqZNSVjssSmdY9zlmnhEpr1w==\"],\n\n    \"three-globe\": [\"three-globe@2.44.0\", \"\", { \"dependencies\": { \"@tweenjs/tween.js\": \"18 - 25\", \"accessor-fn\": \"1\", \"d3-array\": \"3\", \"d3-color\": \"3\", \"d3-geo\": \"3\", \"d3-interpolate\": \"3\", \"d3-scale\": \"4\", \"d3-scale-chromatic\": \"3\", \"data-bind-mapper\": \"1\", \"frame-ticker\": \"1\", \"h3-js\": \"4\", \"index-array-by\": \"1\", \"kapsule\": \"^1.16\", \"three-conic-polygon-geometry\": \"2\", \"three-geojson-geometry\": \"2\", \"three-slippy-map-globe\": \"1\", \"tinycolor2\": \"1\" }, \"peerDependencies\": { \"three\": \">=0.154\" } }, \"sha512-ZDZgGf06xSP2WfKxZgXBl1TjiSutzNhBK9vGMmy7Nupaujia5as75MmhV2VBVQL8iN0nAblXVnnXepfLNC93qA==\"],\n\n    \"three-mesh-bvh\": [\"three-mesh-bvh@0.7.8\", \"\", { \"peerDependencies\": { \"three\": \">= 0.151.0\" } }, \"sha512-BGEZTOIC14U0XIRw3tO4jY7IjP7n7v24nv9JXS1CyeVRWOCkcOMhRnmENUjuV39gktAw4Ofhr0OvIAiTspQrrw==\"],\n\n    \"three-slippy-map-globe\": [\"three-slippy-map-globe@1.0.3\", \"\", { \"dependencies\": { \"d3-geo\": \"1 - 3\", \"d3-octree\": \"^1.1\", \"d3-scale\": \"1 - 4\" }, \"peerDependencies\": { \"three\": \">=0.154\" } }, \"sha512-Y9WCA/tTL8yH8FHVSXVQss/P0V36utTNhuixzFPj0Bs0SXxO+Vui133oAQmMpx4BLXYZpWZwcqHM2i3MfFlYWw==\"],\n\n    \"three-stdlib\": [\"three-stdlib@2.36.0\", \"\", { \"dependencies\": { \"@types/draco3d\": \"^1.4.0\", \"@types/offscreencanvas\": \"^2019.6.4\", \"@types/webxr\": \"^0.5.2\", \"draco3d\": \"^1.4.1\", \"fflate\": \"^0.6.9\", \"potpack\": \"^1.0.1\" }, \"peerDependencies\": { \"three\": \">=0.128.0\" } }, \"sha512-kv0Byb++AXztEGsULgMAs8U2jgUdz6HPpAB/wDJnLiLlaWQX2APHhiTJIN7rqW+Of0eRgcp7jn05U1BsCP3xBA==\"],\n\n    \"throat\": [\"throat@5.0.0\", \"\", {}, \"sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZFNGt7/GYAuXaNOiYCA==\"],\n\n    \"through\": [\"through@2.3.8\", \"\", {}, \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\"],\n\n    \"tiny-invariant\": [\"tiny-invariant@1.3.3\", \"\", {}, \"sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==\"],\n\n    \"tinycolor2\": [\"tinycolor2@1.6.0\", \"\", {}, \"sha512-XPaBkWQJdsf3pLKJV9p4qN/S+fm2Oj8AIPo1BTUhg5oxkvm9+SVEGFdhyOz7tTdUTfvxMiAs4sp6/eZO2Ew+pw==\"],\n\n    \"tinyexec\": [\"tinyexec@1.0.1\", \"\", {}, \"sha512-5uC6DDlmeqiOwCPmK9jMSdOuZTh8bU39Ys6yidB+UTt5hfZUPGAypSgFRiEp+jbi9qH40BLDvy85jIU88wKSqw==\"],\n\n    \"tinyglobby\": [\"tinyglobby@0.2.14\", \"\", { \"dependencies\": { \"fdir\": \"^6.4.4\", \"picomatch\": \"^4.0.2\" } }, \"sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==\"],\n\n    \"tinygradient\": [\"tinygradient@1.1.5\", \"\", { \"dependencies\": { \"@types/tinycolor2\": \"^1.4.0\", \"tinycolor2\": \"^1.0.0\" } }, \"sha512-8nIfc2vgQ4TeLnk2lFj4tRLvvJwEfQuabdsmvDdQPT0xlk9TaNtpGd6nNRxXoK6vQhN6RSzj+Cnp5tTQmpxmbw==\"],\n\n    \"tmp\": [\"tmp@0.2.5\", \"\", {}, \"sha512-voyz6MApa1rQGUxT3E+BK7/ROe8itEx7vD8/HEvt4xwXucvQ5G5oeEiHkmHZJuBO21RpOf+YYm9MOivj709jow==\"],\n\n    \"tmpl\": [\"tmpl@1.0.5\", \"\", {}, \"sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==\"],\n\n    \"to-buffer\": [\"to-buffer@1.2.1\", \"\", { \"dependencies\": { \"isarray\": \"^2.0.5\", \"safe-buffer\": \"^5.2.1\", \"typed-array-buffer\": \"^1.0.3\" } }, \"sha512-tB82LpAIWjhLYbqjx3X4zEeHN6M8CiuOEy2JY8SEQVdYRe3CCHOFaqrBW1doLDrfpWhplcW7BL+bO3/6S3pcDQ==\"],\n\n    \"to-regex-range\": [\"to-regex-range@5.0.1\", \"\", { \"dependencies\": { \"is-number\": \"^7.0.0\" } }, \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\"],\n\n    \"to-vfile\": [\"to-vfile@8.0.0\", \"\", { \"dependencies\": { \"vfile\": \"^6.0.0\" } }, \"sha512-IcmH1xB5576MJc9qcfEC/m/nQCFt3fzMHz45sSlgJyTWjRbKW1HAkJpuf3DgE57YzIlZcwcBZA5ENQbBo4aLkg==\"],\n\n    \"toidentifier\": [\"toidentifier@1.0.1\", \"\", {}, \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\"],\n\n    \"toml\": [\"toml@3.0.0\", \"\", {}, \"sha512-y/mWCZinnvxjTKYhJ+pYxwD0mRLVvOtdS2Awbgxln6iEnt4rk0yBxeSBHkGJcPucRiG0e55mwWp+g/05rsrd6w==\"],\n\n    \"tough-cookie\": [\"tough-cookie@4.1.4\", \"\", { \"dependencies\": { \"psl\": \"^1.1.33\", \"punycode\": \"^2.1.1\", \"universalify\": \"^0.2.0\", \"url-parse\": \"^1.5.3\" } }, \"sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==\"],\n\n    \"tr46\": [\"tr46@0.0.3\", \"\", {}, \"sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==\"],\n\n    \"tree-kill\": [\"tree-kill@1.2.2\", \"\", { \"bin\": { \"tree-kill\": \"cli.js\" } }, \"sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==\"],\n\n    \"trim-lines\": [\"trim-lines@3.0.1\", \"\", {}, \"sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==\"],\n\n    \"troika-three-text\": [\"troika-three-text@0.52.4\", \"\", { \"dependencies\": { \"bidi-js\": \"^1.0.2\", \"troika-three-utils\": \"^0.52.4\", \"troika-worker-utils\": \"^0.52.0\", \"webgl-sdf-generator\": \"1.1.1\" }, \"peerDependencies\": { \"three\": \">=0.125.0\" } }, \"sha512-V50EwcYGruV5rUZ9F4aNsrytGdKcXKALjEtQXIOBfhVoZU9VAqZNIoGQ3TMiooVqFAbR1w15T+f+8gkzoFzawg==\"],\n\n    \"troika-three-utils\": [\"troika-three-utils@0.52.4\", \"\", { \"peerDependencies\": { \"three\": \">=0.125.0\" } }, \"sha512-NORAStSVa/BDiG52Mfudk4j1FG4jC4ILutB3foPnfGbOeIs9+G5vZLa0pnmnaftZUGm4UwSoqEpWdqvC7zms3A==\"],\n\n    \"troika-worker-utils\": [\"troika-worker-utils@0.52.0\", \"\", {}, \"sha512-W1CpvTHykaPH5brv5VHLfQo9D1OYuo0cSBEUQFFT/nBUzM8iD6Lq2/tgG/f1OelbAS1WtaTPQzE5uM49egnngw==\"],\n\n    \"trough\": [\"trough@2.2.0\", \"\", {}, \"sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==\"],\n\n    \"ts-api-utils\": [\"ts-api-utils@1.4.3\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.2.0\" } }, \"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\"],\n\n    \"ts-dedent\": [\"ts-dedent@2.2.0\", \"\", {}, \"sha512-q5W7tVM71e2xjHZTlgfTDoPF/SmqKG5hddq9SzR49CH2hayqRKJtQ4mtRlSxKaJlR/+9rEM+mnBHf7I2/BQcpQ==\"],\n\n    \"ts-interface-checker\": [\"ts-interface-checker@0.1.13\", \"\", {}, \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\"],\n\n    \"ts-mixer\": [\"ts-mixer@6.0.4\", \"\", {}, \"sha512-ufKpbmrugz5Aou4wcr5Wc1UUFWOLhq+Fm6qa6P0w0K5Qw2yhaUoiWszhCVuNQyNwrlGiscHOmqYoAox1PtvgjA==\"],\n\n    \"ts-morph\": [\"ts-morph@18.0.0\", \"\", { \"dependencies\": { \"@ts-morph/common\": \"~0.19.0\", \"code-block-writer\": \"^12.0.0\" } }, \"sha512-Kg5u0mk19PIIe4islUI/HWRvm9bC1lHejK4S0oh1zaZ77TMZAEmQC0sHQYiu2RgCQFZKXz1fMVi/7nOOeirznA==\"],\n\n    \"ts-node\": [\"ts-node@10.9.2\", \"\", { \"dependencies\": { \"@cspotcode/source-map-support\": \"^0.8.0\", \"@tsconfig/node10\": \"^1.0.7\", \"@tsconfig/node12\": \"^1.0.7\", \"@tsconfig/node14\": \"^1.0.0\", \"@tsconfig/node16\": \"^1.0.2\", \"acorn\": \"^8.4.1\", \"acorn-walk\": \"^8.1.1\", \"arg\": \"^4.1.0\", \"create-require\": \"^1.1.0\", \"diff\": \"^4.0.1\", \"make-error\": \"^1.1.1\", \"v8-compile-cache-lib\": \"^3.0.1\", \"yn\": \"3.1.1\" }, \"peerDependencies\": { \"@swc/core\": \">=1.2.50\", \"@swc/wasm\": \">=1.2.50\", \"@types/node\": \"*\", \"typescript\": \">=2.7\" }, \"optionalPeers\": [\"@swc/core\", \"@swc/wasm\"], \"bin\": { \"ts-node\": \"dist/bin.js\", \"ts-script\": \"dist/bin-script-deprecated.js\", \"ts-node-cwd\": \"dist/bin-cwd.js\", \"ts-node-esm\": \"dist/bin-esm.js\", \"ts-node-script\": \"dist/bin-script.js\", \"ts-node-transpile-only\": \"dist/bin-transpile.js\" } }, \"sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==\"],\n\n    \"ts-pattern\": [\"ts-pattern@5.8.0\", \"\", {}, \"sha512-kIjN2qmWiHnhgr5DAkAafF9fwb0T5OhMVSWrm8XEdTFnX6+wfXwYOFjeF86UZ54vduqiR7BfqScFmXSzSaH8oA==\"],\n\n    \"tsc-alias\": [\"tsc-alias@1.7.0\", \"\", { \"dependencies\": { \"chokidar\": \"^3.5.3\", \"commander\": \"^9.0.0\", \"globby\": \"^11.0.4\", \"mylas\": \"^2.1.9\", \"normalize-path\": \"^3.0.0\", \"plimit-lit\": \"^1.2.6\" }, \"bin\": { \"tsc-alias\": \"dist/bin/index.js\" } }, \"sha512-n/K6g8S7Ec7Y/A2Z77Ikp2Uv1S1ERtT63ni69XV4W1YPT4rnNmz8ItgIiJYvKfFnKfqcZQ81UPjoKpMTxaC/rg==\"],\n\n    \"tsconfig-paths\": [\"tsconfig-paths@4.2.0\", \"\", { \"dependencies\": { \"json5\": \"^2.2.2\", \"minimist\": \"^1.2.6\", \"strip-bom\": \"^3.0.0\" } }, \"sha512-NoZ4roiN7LnbKn9QqE1amc9DJfzvZXxF4xDavcOWt1BPkdx+m+0gJuPM+S0vCe7zTJMYUP0R8pO2XMr+Y8oLIg==\"],\n\n    \"tslib\": [\"tslib@2.8.1\", \"\", {}, \"sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==\"],\n\n    \"tunnel-rat\": [\"tunnel-rat@0.1.2\", \"\", { \"dependencies\": { \"zustand\": \"^4.3.2\" } }, \"sha512-lR5VHmkPhzdhrM092lI2nACsLO4QubF0/yoOhzX7c+wIpbN1GjHNzCc91QlpxBi+cnx8vVJ+Ur6vL5cEoQPFpQ==\"],\n\n    \"typanion\": [\"typanion@3.14.0\", \"\", {}, \"sha512-ZW/lVMRabETuYCd9O9ZvMhAh8GslSqaUjxmK/JLPCh6l73CvLBiuXswj/+7LdnWOgYsQ130FqLzFz5aGT4I3Ug==\"],\n\n    \"type-check\": [\"type-check@0.4.0\", \"\", { \"dependencies\": { \"prelude-ls\": \"^1.2.1\" } }, \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\"],\n\n    \"type-detect\": [\"type-detect@4.0.8\", \"\", {}, \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\"],\n\n    \"type-fest\": [\"type-fest@0.21.3\", \"\", {}, \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\"],\n\n    \"type-is\": [\"type-is@1.6.18\", \"\", { \"dependencies\": { \"media-typer\": \"0.3.0\", \"mime-types\": \"~2.1.24\" } }, \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\"],\n\n    \"typed-array-buffer\": [\"typed-array-buffer@1.0.3\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"is-typed-array\": \"^1.1.14\" } }, \"sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==\"],\n\n    \"typed-array-byte-length\": [\"typed-array-byte-length@1.0.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"for-each\": \"^0.3.3\", \"gopd\": \"^1.2.0\", \"has-proto\": \"^1.2.0\", \"is-typed-array\": \"^1.1.14\" } }, \"sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==\"],\n\n    \"typed-array-byte-offset\": [\"typed-array-byte-offset@1.0.4\", \"\", { \"dependencies\": { \"available-typed-arrays\": \"^1.0.7\", \"call-bind\": \"^1.0.8\", \"for-each\": \"^0.3.3\", \"gopd\": \"^1.2.0\", \"has-proto\": \"^1.2.0\", \"is-typed-array\": \"^1.1.15\", \"reflect.getprototypeof\": \"^1.0.9\" } }, \"sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==\"],\n\n    \"typed-array-length\": [\"typed-array-length@1.0.7\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"for-each\": \"^0.3.3\", \"gopd\": \"^1.0.1\", \"is-typed-array\": \"^1.1.13\", \"possible-typed-array-names\": \"^1.0.0\", \"reflect.getprototypeof\": \"^1.0.6\" } }, \"sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==\"],\n\n    \"typed-query-selector\": [\"typed-query-selector@2.12.0\", \"\", {}, \"sha512-SbklCd1F0EiZOyPiW192rrHZzZ5sBijB6xM+cpmrwDqObvdtunOHHIk9fCGsoK5JVIYXoyEp4iEdE3upFH3PAg==\"],\n\n    \"typedarray-to-buffer\": [\"typedarray-to-buffer@3.1.5\", \"\", { \"dependencies\": { \"is-typedarray\": \"^1.0.0\" } }, \"sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==\"],\n\n    \"types\": [\"types@0.1.1\", \"\", {}, \"sha512-JuntZtJj4MKLE9x/XBs7IjsznYhzETwr34pw3XJTKvgYtAMdeMG+o8x8U85E5Lm6eCPa1DdOdGVsHMwq4ZnZAg==\"],\n\n    \"typescript\": [\"typescript@5.5.4\", \"\", { \"bin\": { \"tsc\": \"bin/tsc\", \"tsserver\": \"bin/tsserver\" } }, \"sha512-Mtq29sKDAEYP7aljRgtPOpTvOfbwRWlS6dPRzwjdE+C0R4brX/GUyhHSecbHMFLNBLcJIPt9nl9yG5TZ1weH+Q==\"],\n\n    \"typescript-eslint\": [\"typescript-eslint@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/eslint-plugin\": \"7.18.0\", \"@typescript-eslint/parser\": \"7.18.0\", \"@typescript-eslint/utils\": \"7.18.0\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-PonBkP603E3tt05lDkbOMyaxJjvKqQrXsnow72sVeOFINDE/qNmnnd+f9b4N+U7W6MXnnYyrhtmF2t08QWwUbA==\"],\n\n    \"ufo\": [\"ufo@1.6.1\", \"\", {}, \"sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==\"],\n\n    \"unbox-primitive\": [\"unbox-primitive@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-bigints\": \"^1.0.2\", \"has-symbols\": \"^1.1.0\", \"which-boxed-primitive\": \"^1.1.1\" } }, \"sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==\"],\n\n    \"undici\": [\"undici@6.21.3\", \"\", {}, \"sha512-gBLkYIlEnSp8pFbT64yFgGE6UIB9tAkhukC23PmMDCe5Nd+cRqKxSjw5y54MK2AZMgZfJWMaNE4nYUHgi1XEOw==\"],\n\n    \"undici-types\": [\"undici-types@6.21.0\", \"\", {}, \"sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\"],\n\n    \"unicode-canonical-property-names-ecmascript\": [\"unicode-canonical-property-names-ecmascript@2.0.1\", \"\", {}, \"sha512-dA8WbNeb2a6oQzAQ55YlT5vQAWGV9WXOsi3SskE3bcCdM0P4SDd+24zS/OCacdRq5BkdsRj9q3Pg6YyQoxIGqg==\"],\n\n    \"unicode-match-property-ecmascript\": [\"unicode-match-property-ecmascript@2.0.0\", \"\", { \"dependencies\": { \"unicode-canonical-property-names-ecmascript\": \"^2.0.0\", \"unicode-property-aliases-ecmascript\": \"^2.0.0\" } }, \"sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==\"],\n\n    \"unicode-match-property-value-ecmascript\": [\"unicode-match-property-value-ecmascript@2.2.0\", \"\", {}, \"sha512-4IehN3V/+kkr5YeSSDDQG8QLqO26XpL2XP3GQtqwlT/QYSECAwFztxVHjlbh0+gjJ3XmNLS0zDsbgs9jWKExLg==\"],\n\n    \"unicode-property-aliases-ecmascript\": [\"unicode-property-aliases-ecmascript@2.1.0\", \"\", {}, \"sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==\"],\n\n    \"unicorn-magic\": [\"unicorn-magic@0.1.0\", \"\", {}, \"sha512-lRfVq8fE8gz6QMBuDM6a+LO3IAzTi05H6gCVaUpir2E1Rwpo4ZUog45KpNXKC/Mn3Yb9UDuHumeFTo9iV/D9FQ==\"],\n\n    \"unified\": [\"unified@11.0.5\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"bail\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"extend\": \"^3.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==\"],\n\n    \"unique-string\": [\"unique-string@3.0.0\", \"\", { \"dependencies\": { \"crypto-random-string\": \"^4.0.0\" } }, \"sha512-VGXBUVwxKMBUznyffQweQABPRRW1vHZAbadFZud4pLFAqRGvv/96vafgjWFqzourzr8YonlQiPgH0YCJfawoGQ==\"],\n\n    \"unist-util-generated\": [\"unist-util-generated@2.0.1\", \"\", {}, \"sha512-qF72kLmPxAw0oN2fwpWIqbXAVyEqUzDHMsbtPvOudIlUzXYFIeQIuxXQCRCFh22B7cixvU0MG7m3MW8FTq/S+A==\"],\n\n    \"unist-util-is\": [\"unist-util-is@6.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==\"],\n\n    \"unist-util-position\": [\"unist-util-position@5.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==\"],\n\n    \"unist-util-position-from-estree\": [\"unist-util-position-from-estree@2.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-KaFVRjoqLyF6YXCbVLNad/eS4+OfPQQn2yOd7zF/h5T/CSL2v8NpN6a5TPvtbXthAGw5nG+PuTtq+DdIZr+cRQ==\"],\n\n    \"unist-util-remove-position\": [\"unist-util-remove-position@4.0.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-TkBb0HABNmxzAcfLf4qsIbFbaPDvMO6wa3b3j4VcEzFVaw1LBKwnW4/sRJ/atSLSzoIg41JWEdnE7N6DIhGDGQ==\"],\n\n    \"unist-util-stringify-position\": [\"unist-util-stringify-position@4.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==\"],\n\n    \"unist-util-visit\": [\"unist-util-visit@5.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"unist-util-is\": \"^6.0.0\", \"unist-util-visit-parents\": \"^6.0.0\" } }, \"sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==\"],\n\n    \"unist-util-visit-parents\": [\"unist-util-visit-parents@6.0.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"unist-util-is\": \"^6.0.0\" } }, \"sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==\"],\n\n    \"universalify\": [\"universalify@2.0.1\", \"\", {}, \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\"],\n\n    \"unpipe\": [\"unpipe@1.0.0\", \"\", {}, \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\"],\n\n    \"unrs-resolver\": [\"unrs-resolver@1.11.1\", \"\", { \"dependencies\": { \"napi-postinstall\": \"^0.3.0\" }, \"optionalDependencies\": { \"@unrs/resolver-binding-android-arm-eabi\": \"1.11.1\", \"@unrs/resolver-binding-android-arm64\": \"1.11.1\", \"@unrs/resolver-binding-darwin-arm64\": \"1.11.1\", \"@unrs/resolver-binding-darwin-x64\": \"1.11.1\", \"@unrs/resolver-binding-freebsd-x64\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm-gnueabihf\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm-musleabihf\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm64-musl\": \"1.11.1\", \"@unrs/resolver-binding-linux-ppc64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-riscv64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-riscv64-musl\": \"1.11.1\", \"@unrs/resolver-binding-linux-s390x-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-x64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-x64-musl\": \"1.11.1\", \"@unrs/resolver-binding-wasm32-wasi\": \"1.11.1\", \"@unrs/resolver-binding-win32-arm64-msvc\": \"1.11.1\", \"@unrs/resolver-binding-win32-ia32-msvc\": \"1.11.1\", \"@unrs/resolver-binding-win32-x64-msvc\": \"1.11.1\" } }, \"sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==\"],\n\n    \"update-browserslist-db\": [\"update-browserslist-db@1.1.3\", \"\", { \"dependencies\": { \"escalade\": \"^3.2.0\", \"picocolors\": \"^1.1.1\" }, \"peerDependencies\": { \"browserslist\": \">= 4.21.0\" }, \"bin\": { \"update-browserslist-db\": \"cli.js\" } }, \"sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==\"],\n\n    \"uri-js\": [\"uri-js@4.4.1\", \"\", { \"dependencies\": { \"punycode\": \"^2.1.0\" } }, \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\"],\n\n    \"url-parse\": [\"url-parse@1.5.10\", \"\", { \"dependencies\": { \"querystringify\": \"^2.1.1\", \"requires-port\": \"^1.0.0\" } }, \"sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==\"],\n\n    \"use-callback-ref\": [\"use-callback-ref@1.3.3\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==\"],\n\n    \"use-debounce\": [\"use-debounce@10.0.5\", \"\", { \"peerDependencies\": { \"react\": \"*\" } }, \"sha512-Q76E3lnIV+4YT9AHcrHEHYmAd9LKwUAbPXDm7FlqVGDHiSOhX3RDjT8dm0AxbJup6WgOb1YEcKyCr11kBJR5KQ==\"],\n\n    \"use-sidecar\": [\"use-sidecar@1.1.3\", \"\", { \"dependencies\": { \"detect-node-es\": \"^1.1.0\", \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==\"],\n\n    \"use-sync-external-store\": [\"use-sync-external-store@1.5.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\" } }, \"sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==\"],\n\n    \"util-deprecate\": [\"util-deprecate@1.0.2\", \"\", {}, \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\"],\n\n    \"utility-types\": [\"utility-types@3.11.0\", \"\", {}, \"sha512-6Z7Ma2aVEWisaL6TvBCy7P8rm2LQoPv6dJ7ecIaIixHcwfbJ0x7mWdbcwlIM5IGQxPZSFYeqRCqlOOeKoJYMkw==\"],\n\n    \"utils-merge\": [\"utils-merge@1.0.1\", \"\", {}, \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\"],\n\n    \"uuid\": [\"uuid@9.0.1\", \"\", { \"bin\": { \"uuid\": \"dist/bin/uuid\" } }, \"sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==\"],\n\n    \"uvu\": [\"uvu@0.5.6\", \"\", { \"dependencies\": { \"dequal\": \"^2.0.0\", \"diff\": \"^5.0.0\", \"kleur\": \"^4.0.3\", \"sade\": \"^1.7.3\" }, \"bin\": { \"uvu\": \"bin.js\" } }, \"sha512-+g8ENReyr8YsOc6fv/NVJs2vFdHBnBNdfE49rshrTzDWOlUx4Gq7KOS2GD8eqhy2j+Ejq29+SbKH8yjkAqXqoA==\"],\n\n    \"v8-compile-cache-lib\": [\"v8-compile-cache-lib@3.0.1\", \"\", {}, \"sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==\"],\n\n    \"v8-to-istanbul\": [\"v8-to-istanbul@9.3.0\", \"\", { \"dependencies\": { \"@jridgewell/trace-mapping\": \"^0.3.12\", \"@types/istanbul-lib-coverage\": \"^2.0.1\", \"convert-source-map\": \"^2.0.0\" } }, \"sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==\"],\n\n    \"vary\": [\"vary@1.1.2\", \"\", {}, \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\"],\n\n    \"vfile\": [\"vfile@6.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==\"],\n\n    \"vfile-location\": [\"vfile-location@4.1.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-YF23YMyASIIJXpktBa4vIGLJ5Gs88UB/XePgqPmTa7cDA+JeO3yclbpheQYCHjVHBn/yePzrXuygIL+xbvRYHw==\"],\n\n    \"vfile-matter\": [\"vfile-matter@5.0.1\", \"\", { \"dependencies\": { \"vfile\": \"^6.0.0\", \"yaml\": \"^2.0.0\" } }, \"sha512-o6roP82AiX0XfkyTHyRCMXgHfltUNlXSEqCIS80f+mbAyiQBE2fxtDVMtseyytGx75sihiJFo/zR6r/4LTs2Cw==\"],\n\n    \"vfile-message\": [\"vfile-message@4.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"unist-util-stringify-position\": \"^4.0.0\" } }, \"sha512-QTHzsGd1EhbZs4AsQ20JX1rC3cOlt/IWJruk893DfLRr57lcnOeMaWG4K0JrRta4mIJZKth2Au3mM3u03/JWKw==\"],\n\n    \"vlq\": [\"vlq@1.0.1\", \"\", {}, \"sha512-gQpnTgkubC6hQgdIcRdYGDSDc+SaujOdyesZQMv6JlfQee/9Mp0Qhnys6WxDWvQnL5WZdT7o2Ul187aSt0Rq+w==\"],\n\n    \"vscode-jsonrpc\": [\"vscode-jsonrpc@8.2.0\", \"\", {}, \"sha512-C+r0eKJUIfiDIfwJhria30+TYWPtuHJXHtI7J0YlOmKAo7ogxP20T0zxB7HZQIFhIyvoBPwWskjxrvAtfjyZfA==\"],\n\n    \"vscode-languageserver\": [\"vscode-languageserver@9.0.1\", \"\", { \"dependencies\": { \"vscode-languageserver-protocol\": \"3.17.5\" }, \"bin\": { \"installServerIntoExtension\": \"bin/installServerIntoExtension\" } }, \"sha512-woByF3PDpkHFUreUa7Hos7+pUWdeWMXRd26+ZX2A8cFx6v/JPTtd4/uN0/jB6XQHYaOlHbio03NTHCqrgG5n7g==\"],\n\n    \"vscode-languageserver-protocol\": [\"vscode-languageserver-protocol@3.17.5\", \"\", { \"dependencies\": { \"vscode-jsonrpc\": \"8.2.0\", \"vscode-languageserver-types\": \"3.17.5\" } }, \"sha512-mb1bvRJN8SVznADSGWM9u/b07H7Ecg0I3OgXDuLdn307rl/J3A9YD6/eYOssqhecL27hK1IPZAsaqh00i/Jljg==\"],\n\n    \"vscode-languageserver-textdocument\": [\"vscode-languageserver-textdocument@1.0.12\", \"\", {}, \"sha512-cxWNPesCnQCcMPeenjKKsOCKQZ/L6Tv19DTRIGuLWe32lyzWhihGVJ/rcckZXJxfdKCFvRLS3fpBIsV/ZGX4zA==\"],\n\n    \"vscode-languageserver-types\": [\"vscode-languageserver-types@3.17.5\", \"\", {}, \"sha512-Ld1VelNuX9pdF39h2Hgaeb5hEZM2Z3jUrrMgWQAu82jMtZp7p3vJT3BzToKtZI7NgQssZje5o0zryOrhQvzQAg==\"],\n\n    \"vscode-uri\": [\"vscode-uri@3.0.8\", \"\", {}, \"sha512-AyFQ0EVmsOZOlAnxoFOGOq1SQDWAB7C6aqMGS23svWAllfOaxbuFvcT8D1i8z3Gyn8fraVeZNNmN6e9bxxXkKw==\"],\n\n    \"w3c-xmlserializer\": [\"w3c-xmlserializer@4.0.0\", \"\", { \"dependencies\": { \"xml-name-validator\": \"^4.0.0\" } }, \"sha512-d+BFHzbiCx6zGfz0HyQ6Rg69w9k19nviJspaj4yNscGjrHu94sVP+aRm75yEbCh+r2/yR+7q6hux9LVtbuTGBw==\"],\n\n    \"walker\": [\"walker@1.0.8\", \"\", { \"dependencies\": { \"makeerror\": \"1.0.12\" } }, \"sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==\"],\n\n    \"wcwidth\": [\"wcwidth@1.0.1\", \"\", { \"dependencies\": { \"defaults\": \"^1.0.3\" } }, \"sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==\"],\n\n    \"web-namespaces\": [\"web-namespaces@2.0.1\", \"\", {}, \"sha512-bKr1DkiNa2krS7qxNtdrtHAmzuYGFQLiQ13TsorsdT6ULTkPLKuu5+GsFpDlg6JFjUTwX2DyhMPG2be8uPrqsQ==\"],\n\n    \"web-streams-polyfill\": [\"web-streams-polyfill@4.0.0-beta.3\", \"\", {}, \"sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug==\"],\n\n    \"web-tree-sitter\": [\"web-tree-sitter@0.25.6\", \"\", {}, \"sha512-WG+/YGbxw8r+rLlzzhV+OvgiOJCWdIpOucG3qBf3RCBFMkGDb1CanUi2BxCxjnkpzU3/hLWPT8VO5EKsMk9Fxg==\"],\n\n    \"web-vitals\": [\"web-vitals@4.2.4\", \"\", {}, \"sha512-r4DIlprAGwJ7YM11VZp4R884m0Vmgr6EAKe3P+kO0PPj3Unqyvv59rczf6UiGcb9Z8QxZVcqKNwv/g0WNdWwsw==\"],\n\n    \"webgl-constants\": [\"webgl-constants@1.1.1\", \"\", {}, \"sha512-LkBXKjU5r9vAW7Gcu3T5u+5cvSvh5WwINdr0C+9jpzVB41cjQAP5ePArDtk/WHYdVj0GefCgM73BA7FlIiNtdg==\"],\n\n    \"webgl-sdf-generator\": [\"webgl-sdf-generator@1.1.1\", \"\", {}, \"sha512-9Z0JcMTFxeE+b2x1LJTdnaT8rT8aEp7MVxkNwoycNmJWwPdzoXzMh0BjJSh/AEFP+KPYZUli814h8bJZFIZ2jA==\"],\n\n    \"webidl-conversions\": [\"webidl-conversions@7.0.0\", \"\", {}, \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\"],\n\n    \"whatwg-encoding\": [\"whatwg-encoding@2.0.0\", \"\", { \"dependencies\": { \"iconv-lite\": \"0.6.3\" } }, \"sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==\"],\n\n    \"whatwg-fetch\": [\"whatwg-fetch@3.6.20\", \"\", {}, \"sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==\"],\n\n    \"whatwg-mimetype\": [\"whatwg-mimetype@3.0.0\", \"\", {}, \"sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==\"],\n\n    \"whatwg-url\": [\"whatwg-url@5.0.0\", \"\", { \"dependencies\": { \"tr46\": \"~0.0.3\", \"webidl-conversions\": \"^3.0.0\" } }, \"sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==\"],\n\n    \"which\": [\"which@2.0.2\", \"\", { \"dependencies\": { \"isexe\": \"^2.0.0\" }, \"bin\": { \"node-which\": \"./bin/node-which\" } }, \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\"],\n\n    \"which-boxed-primitive\": [\"which-boxed-primitive@1.1.1\", \"\", { \"dependencies\": { \"is-bigint\": \"^1.1.0\", \"is-boolean-object\": \"^1.2.1\", \"is-number-object\": \"^1.1.1\", \"is-string\": \"^1.1.1\", \"is-symbol\": \"^1.1.1\" } }, \"sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==\"],\n\n    \"which-builtin-type\": [\"which-builtin-type@1.2.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"function.prototype.name\": \"^1.1.6\", \"has-tostringtag\": \"^1.0.2\", \"is-async-function\": \"^2.0.0\", \"is-date-object\": \"^1.1.0\", \"is-finalizationregistry\": \"^1.1.0\", \"is-generator-function\": \"^1.0.10\", \"is-regex\": \"^1.2.1\", \"is-weakref\": \"^1.0.2\", \"isarray\": \"^2.0.5\", \"which-boxed-primitive\": \"^1.1.0\", \"which-collection\": \"^1.0.2\", \"which-typed-array\": \"^1.1.16\" } }, \"sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==\"],\n\n    \"which-collection\": [\"which-collection@1.0.2\", \"\", { \"dependencies\": { \"is-map\": \"^2.0.3\", \"is-set\": \"^2.0.3\", \"is-weakmap\": \"^2.0.2\", \"is-weakset\": \"^2.0.3\" } }, \"sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==\"],\n\n    \"which-typed-array\": [\"which-typed-array@1.1.19\", \"\", { \"dependencies\": { \"available-typed-arrays\": \"^1.0.7\", \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"for-each\": \"^0.3.5\", \"get-proto\": \"^1.0.1\", \"gopd\": \"^1.2.0\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==\"],\n\n    \"widest-line\": [\"widest-line@3.1.0\", \"\", { \"dependencies\": { \"string-width\": \"^4.0.0\" } }, \"sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==\"],\n\n    \"word-wrap\": [\"word-wrap@1.2.5\", \"\", {}, \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\"],\n\n    \"wordwrap\": [\"wordwrap@1.0.0\", \"\", {}, \"sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q==\"],\n\n    \"wrap-ansi\": [\"wrap-ansi@9.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.2.1\", \"string-width\": \"^7.0.0\", \"strip-ansi\": \"^7.1.0\" } }, \"sha512-G8ura3S+3Z2G+mkgNRq8dqaFZAuxfsxpBB8OCTGRTCtp+l/v9nbFNmCUP1BZMts3G1142MsZfn6eeUKrr4PD1Q==\"],\n\n    \"wrap-ansi-cjs\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"wrappy\": [\"wrappy@1.0.2\", \"\", {}, \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\"],\n\n    \"write-file-atomic\": [\"write-file-atomic@3.0.3\", \"\", { \"dependencies\": { \"imurmurhash\": \"^0.1.4\", \"is-typedarray\": \"^1.0.0\", \"signal-exit\": \"^3.0.2\", \"typedarray-to-buffer\": \"^3.1.5\" } }, \"sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==\"],\n\n    \"ws\": [\"ws@8.18.0\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\"],\n\n    \"xdg-basedir\": [\"xdg-basedir@5.1.0\", \"\", {}, \"sha512-GCPAHLvrIH13+c0SuacwvRYj2SxJXQ4kaVTT5xgL3kPrz56XxkF21IGhjSE1+W0aw7gpBWRGXLCPnPby6lSpmQ==\"],\n\n    \"xml-name-validator\": [\"xml-name-validator@4.0.0\", \"\", {}, \"sha512-ICP2e+jsHvAj2E2lIHxa5tjXRlKDJo4IdvPvCXbXQGdzSfmSpNVyIKMvoZHjDY9DP0zV17iI85o90vRFXNccRw==\"],\n\n    \"xmlchars\": [\"xmlchars@2.2.0\", \"\", {}, \"sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==\"],\n\n    \"xtend\": [\"xtend@4.0.2\", \"\", {}, \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\"],\n\n    \"y18n\": [\"y18n@5.0.8\", \"\", {}, \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\"],\n\n    \"yallist\": [\"yallist@4.0.0\", \"\", {}, \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"],\n\n    \"yaml\": [\"yaml@2.8.1\", \"\", { \"bin\": { \"yaml\": \"bin.mjs\" } }, \"sha512-lcYcMxX2PO9XMGvAJkJ3OsNMw+/7FKes7/hgerGUYWIoWu5j/+YQqcZr5JnPZWzOsEBgMbSbiSTn/dv/69Mkpw==\"],\n\n    \"yargs\": [\"yargs@17.7.2\", \"\", { \"dependencies\": { \"cliui\": \"^8.0.1\", \"escalade\": \"^3.1.1\", \"get-caller-file\": \"^2.0.5\", \"require-directory\": \"^2.1.1\", \"string-width\": \"^4.2.3\", \"y18n\": \"^5.0.5\", \"yargs-parser\": \"^21.1.1\" } }, \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\"],\n\n    \"yargs-parser\": [\"yargs-parser@21.1.1\", \"\", {}, \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\"],\n\n    \"yauzl\": [\"yauzl@2.10.0\", \"\", { \"dependencies\": { \"buffer-crc32\": \"~0.2.3\", \"fd-slicer\": \"~1.1.0\" } }, \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\"],\n\n    \"yn\": [\"yn@3.1.1\", \"\", {}, \"sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==\"],\n\n    \"yocto-queue\": [\"yocto-queue@1.2.1\", \"\", {}, \"sha512-AyeEbWOu/TAXdxlV9wmGcR0+yh2j3vYPGOECcIj2S7MkrLyC7ne+oye2BKTItt0ii2PHk4cDy+95+LshzbXnGg==\"],\n\n    \"zdog\": [\"zdog@1.1.3\", \"\", {}, \"sha512-raRj6r0gPzopFm5XWBJZr/NuV4EEnT4iE+U3dp5FV5pCb588Gmm3zLIp/j9yqqcMiHH8VNQlerLTgOqL7krh6w==\"],\n\n    \"zod\": [\"zod@3.25.67\", \"\", {}, \"sha512-idA2YXwpCdqUSKRCACDE6ItZD9TZzy3OZMtpfLoh6oPR47lipysRrJfjzMqFxQ3uJuUPyUeWe1r9vLH33xO/Qw==\"],\n\n    \"zod-from-json-schema\": [\"zod-from-json-schema@0.4.2\", \"\", { \"dependencies\": { \"zod\": \"^3.25.25\" } }, \"sha512-U+SIzUUT7P6w1UNAz81Sj0Vko77eQPkZ8LbJeXqQbwLmq1MZlrjB3Gj4LuebqJW25/CzS9WA8SjTgR5lvuv+zA==\"],\n\n    \"zod-to-json-schema\": [\"zod-to-json-schema@3.24.6\", \"\", { \"peerDependencies\": { \"zod\": \"^3.24.1\" } }, \"sha512-h/z3PKvcTcTetyjl1fkj79MHNEjm+HpD6NXheWjzOekY7kV+lwDYnHw+ivHkijnCSMz1yJaWBD9vu/Fcmk+vEg==\"],\n\n    \"zustand\": [\"zustand@5.0.7\", \"\", { \"peerDependencies\": { \"@types/react\": \">=18.0.0\", \"immer\": \">=9.0.6\", \"react\": \">=18.0.0\", \"use-sync-external-store\": \">=1.2.0\" }, \"optionalPeers\": [\"@types/react\", \"immer\", \"react\", \"use-sync-external-store\"] }, \"sha512-Ot6uqHDW/O2VdYsKLLU8GQu8sCOM1LcoE8RwvLv9uuRT9s6SOHCKs0ZEOhxg+I1Ld+A1Q5lwx+UlKXXUoCZITg==\"],\n\n    \"zwitch\": [\"zwitch@2.0.4\", \"\", {}, \"sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==\"],\n\n    \"@ai-sdk/gateway/@ai-sdk/provider-utils\": [\"@ai-sdk/provider-utils@3.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@standard-schema/spec\": \"^1.0.0\", \"eventsource-parser\": \"^3.0.3\", \"zod-to-json-schema\": \"^3.24.1\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-BoQZtGcBxkeSH1zK+SRYNDtJPIPpacTeiMZqnG4Rv6xXjEwM0FH4MGs9c+PlhyEWmQCzjRM2HAotEydFhD4dYw==\"],\n\n    \"@ampproject/remapping/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@auth/core/jose\": [\"jose@6.0.12\", \"\", {}, \"sha512-T8xypXs8CpmiIi78k0E+Lk7T2zlK4zDyg+o1CZ4AkOHgDg98ogdP2BeZ61lTFKFyoEwJ9RgAgN+SdM3iPgNonQ==\"],\n\n    \"@auth/core/preact\": [\"preact@10.24.3\", \"\", {}, \"sha512-Z2dPnBnMUfyQfSQ+GBdsGa16hz35YmLmtTLhM169uW944hYL6xzTYkJjC07j+Wosz733pMWx0fgON3JNw1jJQA==\"],\n\n    \"@auth/core/preact-render-to-string\": [\"preact-render-to-string@6.5.11\", \"\", { \"peerDependencies\": { \"preact\": \">=10\" } }, \"sha512-ubnauqoGczeGISiOh6RjX0/cdaF8v/oDXIjO85XALCQjwQP+SB4RDXXtvZ6yTYSjG+PC1QRP2AhPgCEsM2EvUw==\"],\n\n    \"@babel/code-frame/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"@babel/core/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/generator/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@babel/helper-compilation-targets/lru-cache\": [\"lru-cache@5.1.1\", \"\", { \"dependencies\": { \"yallist\": \"^3.0.2\" } }, \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\"],\n\n    \"@babel/helper-compilation-targets/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/helper-create-class-features-plugin/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/helper-create-regexp-features-plugin/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/plugin-transform-runtime/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@codebuff/backend/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@codebuff/backend/ts-pattern\": [\"ts-pattern@5.3.1\", \"\", {}, \"sha512-1RUMKa8jYQdNfmnK4jyzBK3/PS/tnjcZ1CW0v1vWDeYe5RBklc/nquw03MEoB66hVBm4BnlCfmOqDVxHyT1DpA==\"],\n\n    \"@codebuff/common/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@codebuff/npm-app/@types/diff\": [\"@types/diff@5.2.1\", \"\", {}, \"sha512-uxpcuwWJGhe2AR1g8hD9F5OYGCqjqWnBUQFD8gMZsDbv8oPHzxJF6iMO6n8Tk0AdzlxoaaoQhOYlIg/PukVU8g==\"],\n\n    \"@codebuff/npm-app/ignore\": [\"ignore@7.0.3\", \"\", {}, \"sha512-bAH5jbK/F3T3Jls4I0SO1hmPR0dKU0a7+SY6n1yzRtG54FLO8d6w/nxLFX2Nb7dBu6cCWXPaAME6cYqFUMmuCA==\"],\n\n    \"@codebuff/npm-app/posthog-node\": [\"posthog-node@4.17.2\", \"\", { \"dependencies\": { \"axios\": \"^1.8.2\" } }, \"sha512-bFmwOTk4QdYavopeHVXtyFGQ9vyLMVaNWkWocwjix+0n6sQgv7Zq5nYjYulz7ThmK18zsvNJ337ahuMLv3ulow==\"],\n\n    \"@codebuff/npm-app/ts-pattern\": [\"ts-pattern@5.3.1\", \"\", {}, \"sha512-1RUMKa8jYQdNfmnK4jyzBK3/PS/tnjcZ1CW0v1vWDeYe5RBklc/nquw03MEoB66hVBm4BnlCfmOqDVxHyT1DpA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin\": [\"@typescript-eslint/eslint-plugin@8.39.1\", \"\", { \"dependencies\": { \"@eslint-community/regexpp\": \"^4.10.0\", \"@typescript-eslint/scope-manager\": \"8.39.1\", \"@typescript-eslint/type-utils\": \"8.39.1\", \"@typescript-eslint/utils\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^7.0.0\", \"natural-compare\": \"^1.4.0\", \"ts-api-utils\": \"^2.1.0\" }, \"peerDependencies\": { \"@typescript-eslint/parser\": \"^8.39.1\", \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-yYegZ5n3Yr6eOcqgj2nJH8cH/ZZgF+l0YIdKILSDjYFRjgYQMgv/lRjV5Z7Up04b9VYUondt8EPMqg7kTWgJ2g==\"],\n\n    \"@codebuff/web/dotenv\": [\"dotenv@16.6.1\", \"\", {}, \"sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==\"],\n\n    \"@codebuff/web/pino\": [\"pino@9.8.0\", \"\", { \"dependencies\": { \"atomic-sleep\": \"^1.0.0\", \"fast-redact\": \"^3.1.1\", \"on-exit-leak-free\": \"^2.1.0\", \"pino-abstract-transport\": \"^2.0.0\", \"pino-std-serializers\": \"^7.0.0\", \"process-warning\": \"^5.0.0\", \"quick-format-unescaped\": \"^4.0.3\", \"real-require\": \"^0.2.0\", \"safe-stable-stringify\": \"^2.3.1\", \"sonic-boom\": \"^4.0.1\", \"thread-stream\": \"^3.0.0\" }, \"bin\": { \"pino\": \"bin.js\" } }, \"sha512-L5+rV1wL7vGAcxXP7sPpN5lrJ07Piruka6ArXr7EWBXxdVWjJshGVX8suFsiusJVcGKDGUFfbgbnKdg+VAC+0g==\"],\n\n    \"@codebuff/web/prettier\": [\"prettier@3.6.2\", \"\", { \"bin\": { \"prettier\": \"bin/prettier.cjs\" } }, \"sha512-I7AIg5boAr5R0FFtJ6rCfD+LFsWHp81dolrFD8S79U9tb8Az2nGrJncnMSnys+bpQJfRUzqs9hnA81OAA3hCuQ==\"],\n\n    \"@commitlint/config-validator/ajv\": [\"ajv@8.17.1\", \"\", { \"dependencies\": { \"fast-deep-equal\": \"^3.1.3\", \"fast-uri\": \"^3.0.1\", \"json-schema-traverse\": \"^1.0.0\", \"require-from-string\": \"^2.0.2\" } }, \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\"],\n\n    \"@commitlint/format/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"@commitlint/load/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"@commitlint/load/cosmiconfig\": [\"cosmiconfig@9.0.0\", \"\", { \"dependencies\": { \"env-paths\": \"^2.2.1\", \"import-fresh\": \"^3.3.0\", \"js-yaml\": \"^4.1.0\", \"parse-json\": \"^5.2.0\" }, \"peerDependencies\": { \"typescript\": \">=4.9.5\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\"],\n\n    \"@commitlint/top-level/find-up\": [\"find-up@7.0.0\", \"\", { \"dependencies\": { \"locate-path\": \"^7.2.0\", \"path-exists\": \"^5.0.0\", \"unicorn-magic\": \"^0.1.0\" } }, \"sha512-YyZM99iHrqLKjmt4LJDj58KI+fYyufRLBSYcqycxf//KpBk9FoewoGX0450m9nB44qrZnovzC2oeP5hUibxc/g==\"],\n\n    \"@commitlint/types/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"@contentlayer/core/esbuild\": [\"esbuild@0.18.20\", \"\", { \"optionalDependencies\": { \"@esbuild/android-arm\": \"0.18.20\", \"@esbuild/android-arm64\": \"0.18.20\", \"@esbuild/android-x64\": \"0.18.20\", \"@esbuild/darwin-arm64\": \"0.18.20\", \"@esbuild/darwin-x64\": \"0.18.20\", \"@esbuild/freebsd-arm64\": \"0.18.20\", \"@esbuild/freebsd-x64\": \"0.18.20\", \"@esbuild/linux-arm\": \"0.18.20\", \"@esbuild/linux-arm64\": \"0.18.20\", \"@esbuild/linux-ia32\": \"0.18.20\", \"@esbuild/linux-loong64\": \"0.18.20\", \"@esbuild/linux-mips64el\": \"0.18.20\", \"@esbuild/linux-ppc64\": \"0.18.20\", \"@esbuild/linux-riscv64\": \"0.18.20\", \"@esbuild/linux-s390x\": \"0.18.20\", \"@esbuild/linux-x64\": \"0.18.20\", \"@esbuild/netbsd-x64\": \"0.18.20\", \"@esbuild/openbsd-x64\": \"0.18.20\", \"@esbuild/sunos-x64\": \"0.18.20\", \"@esbuild/win32-arm64\": \"0.18.20\", \"@esbuild/win32-ia32\": \"0.18.20\", \"@esbuild/win32-x64\": \"0.18.20\" }, \"bin\": { \"esbuild\": \"bin/esbuild\" } }, \"sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==\"],\n\n    \"@contentlayer/core/remark-parse\": [\"remark-parse@10.0.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-3ydxgHa/ZQzG8LvC7jTXccARYDcRld3VfcgIIFs7bI6vbRSxJJmzgLEIIoYKyrfhaY+ujuWaf/PJiMZXoiCXgw==\"],\n\n    \"@contentlayer/core/remark-rehype\": [\"remark-rehype@10.1.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-to-hast\": \"^12.1.0\", \"unified\": \"^10.0.0\" } }, \"sha512-EFmR5zppdBp0WQeDVZ/b66CWJipB2q2VLNFMabzDSGR66Z2fQii83G5gTBbgGEnEEA0QRussvrFHxk1HWGJskw==\"],\n\n    \"@contentlayer/core/type-fest\": [\"type-fest@3.13.1\", \"\", {}, \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\"],\n\n    \"@contentlayer/core/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"@contentlayer/source-files/ts-pattern\": [\"ts-pattern@4.3.0\", \"\", {}, \"sha512-pefrkcd4lmIVR0LA49Imjf9DYLK8vtWhqBPA3Ya1ir8xCW0O2yjL9dsCVvI7pCodLC5q7smNpEtDR2yVulQxOg==\"],\n\n    \"@contentlayer/source-files/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"@contentlayer/utils/ts-pattern\": [\"ts-pattern@4.3.0\", \"\", {}, \"sha512-pefrkcd4lmIVR0LA49Imjf9DYLK8vtWhqBPA3Ya1ir8xCW0O2yjL9dsCVvI7pCodLC5q7smNpEtDR2yVulQxOg==\"],\n\n    \"@contentlayer/utils/type-fest\": [\"type-fest@3.13.1\", \"\", {}, \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\"],\n\n    \"@discordjs/rest/@discordjs/collection\": [\"@discordjs/collection@2.1.1\", \"\", {}, \"sha512-LiSusze9Tc7qF03sLCujF5iZp7K+vRNEDBZ86FT9aQAv3vxMLihUvKvpsCWiQ2DJq1tVckopKm1rxomgNUc9hg==\"],\n\n    \"@discordjs/ws/@discordjs/collection\": [\"@discordjs/collection@2.1.1\", \"\", {}, \"sha512-LiSusze9Tc7qF03sLCujF5iZp7K+vRNEDBZ86FT9aQAv3vxMLihUvKvpsCWiQ2DJq1tVckopKm1rxomgNUc9hg==\"],\n\n    \"@discordjs/ws/ws\": [\"ws@8.18.3\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild\": [\"esbuild@0.18.20\", \"\", { \"optionalDependencies\": { \"@esbuild/android-arm\": \"0.18.20\", \"@esbuild/android-arm64\": \"0.18.20\", \"@esbuild/android-x64\": \"0.18.20\", \"@esbuild/darwin-arm64\": \"0.18.20\", \"@esbuild/darwin-x64\": \"0.18.20\", \"@esbuild/freebsd-arm64\": \"0.18.20\", \"@esbuild/freebsd-x64\": \"0.18.20\", \"@esbuild/linux-arm\": \"0.18.20\", \"@esbuild/linux-arm64\": \"0.18.20\", \"@esbuild/linux-ia32\": \"0.18.20\", \"@esbuild/linux-loong64\": \"0.18.20\", \"@esbuild/linux-mips64el\": \"0.18.20\", \"@esbuild/linux-ppc64\": \"0.18.20\", \"@esbuild/linux-riscv64\": \"0.18.20\", \"@esbuild/linux-s390x\": \"0.18.20\", \"@esbuild/linux-x64\": \"0.18.20\", \"@esbuild/netbsd-x64\": \"0.18.20\", \"@esbuild/openbsd-x64\": \"0.18.20\", \"@esbuild/sunos-x64\": \"0.18.20\", \"@esbuild/win32-arm64\": \"0.18.20\", \"@esbuild/win32-ia32\": \"0.18.20\", \"@esbuild/win32-x64\": \"0.18.20\" }, \"bin\": { \"esbuild\": \"bin/esbuild\" } }, \"sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==\"],\n\n    \"@eslint/eslintrc/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@iconify/utils/globals\": [\"globals@15.15.0\", \"\", {}, \"sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==\"],\n\n    \"@isaacs/cliui/string-width\": [\"string-width@5.1.2\", \"\", { \"dependencies\": { \"eastasianwidth\": \"^0.2.0\", \"emoji-regex\": \"^9.2.2\", \"strip-ansi\": \"^7.0.1\" } }, \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\"],\n\n    \"@isaacs/cliui/wrap-ansi\": [\"wrap-ansi@8.1.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.1.0\", \"string-width\": \"^5.0.1\", \"strip-ansi\": \"^7.0.1\" } }, \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\"],\n\n    \"@istanbuljs/load-nyc-config/camelcase\": [\"camelcase@5.3.1\", \"\", {}, \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up\": [\"find-up@4.1.0\", \"\", { \"dependencies\": { \"locate-path\": \"^5.0.0\", \"path-exists\": \"^4.0.0\" } }, \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\"],\n\n    \"@istanbuljs/load-nyc-config/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"@jest/core/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@jest/reporters/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jest/reporters/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"@jest/reporters/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@jest/source-map/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jest/transform/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jest/transform/write-file-atomic\": [\"write-file-atomic@4.0.2\", \"\", { \"dependencies\": { \"imurmurhash\": \"^0.1.4\", \"signal-exit\": \"^3.0.7\" } }, \"sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==\"],\n\n    \"@jridgewell/gen-mapping/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jridgewell/source-map/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx\": [\"@mdx-js/mdx@2.3.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/mdx\": \"^2.0.0\", \"estree-util-build-jsx\": \"^2.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"estree-util-to-js\": \"^1.1.0\", \"estree-walker\": \"^3.0.0\", \"hast-util-to-estree\": \"^2.0.0\", \"markdown-extensions\": \"^1.0.0\", \"periscopic\": \"^3.0.0\", \"remark-mdx\": \"^2.0.0\", \"remark-parse\": \"^10.0.0\", \"remark-rehype\": \"^10.0.0\", \"unified\": \"^10.0.0\", \"unist-util-position-from-estree\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"unist-util-visit\": \"^4.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-jLuwRlz8DQfQNiUCJR50Y09CGPq3fLtmtUQfVrj79E0JWu3dvsVcxVIcfhR5h0iXu+/z++zDrYeiJqifRynJkA==\"],\n\n    \"@mdx-js/esbuild/node-fetch\": [\"node-fetch@3.3.2\", \"\", { \"dependencies\": { \"data-uri-to-buffer\": \"^4.0.0\", \"fetch-blob\": \"^3.1.4\", \"formdata-polyfill\": \"^4.0.10\" } }, \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\"],\n\n    \"@mdx-js/esbuild/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"@nx/devkit/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@nx/devkit/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"@oclif/core/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"@oclif/core/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"@oclif/core/wrap-ansi\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"@oclif/errors/fs-extra\": [\"fs-extra@8.1.0\", \"\", { \"dependencies\": { \"graceful-fs\": \"^4.2.0\", \"jsonfile\": \"^4.0.0\", \"universalify\": \"^0.1.0\" } }, \"sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==\"],\n\n    \"@oclif/errors/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@oclif/errors/wrap-ansi\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.28.0\", \"\", {}, \"sha512-lp4qAiMTD4sNWW4DbKLBkfiMZ4jbAboJIGOQr5DvciMRI494OapieI9qiODpOt0XBr1LjIDy1xAGAnVs5supTA==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/sdk-trace-base\": [\"@opentelemetry/sdk-trace-base@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-moTiQtc0uPR1hQLt6gLDJH9IIkeBhgRb71OKjNHZPE1VF45fHtD6nBDi5J/DkTHTwYP5X3kBJLa3xN7ub6J4eg==\"],\n\n    \"@opentelemetry/otlp-exporter-base/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/otlp-grpc-exporter-base/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/sdk-trace-base\": [\"@opentelemetry/sdk-trace-base@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-moTiQtc0uPR1hQLt6gLDJH9IIkeBhgRb71OKjNHZPE1VF45fHtD6nBDi5J/DkTHTwYP5X3kBJLa3xN7ub6J4eg==\"],\n\n    \"@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.28.0\", \"\", {}, \"sha512-lp4qAiMTD4sNWW4DbKLBkfiMZ4jbAboJIGOQr5DvciMRI494OapieI9qiODpOt0XBr1LjIDy1xAGAnVs5supTA==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/sdk-trace-base/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.28.0\", \"\", {}, \"sha512-lp4qAiMTD4sNWW4DbKLBkfiMZ4jbAboJIGOQr5DvciMRI494OapieI9qiODpOt0XBr1LjIDy1xAGAnVs5supTA==\"],\n\n    \"@react-native/codegen/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"@react-native/dev-middleware/open\": [\"open@7.4.2\", \"\", { \"dependencies\": { \"is-docker\": \"^2.0.0\", \"is-wsl\": \"^2.1.1\" } }, \"sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==\"],\n\n    \"@react-native/dev-middleware/serve-static\": [\"serve-static@1.16.2\", \"\", { \"dependencies\": { \"encodeurl\": \"~2.0.0\", \"escape-html\": \"~1.0.3\", \"parseurl\": \"~1.3.3\", \"send\": \"0.19.0\" } }, \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\"],\n\n    \"@react-native/dev-middleware/ws\": [\"ws@6.2.3\", \"\", { \"dependencies\": { \"async-limiter\": \"~1.0.0\" } }, \"sha512-jmTjYU0j60B+vHey6TfR3Z7RD61z/hmxBS3VMSGIrroOWXQEneK1zNuotOUrGyBHQj0yrpsLHPWtigEFd13ndA==\"],\n\n    \"@react-three/fiber/zustand\": [\"zustand@3.7.2\", \"\", { \"peerDependencies\": { \"react\": \">=16.8\" }, \"optionalPeers\": [\"react\"] }, \"sha512-PIJDIZKtokhof+9+60cpockVOq05sJzHCriyvaLBmEJixseQ1a5Kdov6fWZfWOu5SK9c+FhH1jU0tntLxRJYMA==\"],\n\n    \"@shadcn/ui/chalk\": [\"chalk@5.2.0\", \"\", {}, \"sha512-ree3Gqw/nazQAPuJJEy+avdl7QfZMcUvmHIKgEZkGL+xOBzRvup5Hxo6LHuMceSxOabuJLJm5Yp/92R9eMmMvA==\"],\n\n    \"@shadcn/ui/commander\": [\"commander@10.0.1\", \"\", {}, \"sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==\"],\n\n    \"@shadcn/ui/node-fetch\": [\"node-fetch@3.3.2\", \"\", { \"dependencies\": { \"data-uri-to-buffer\": \"^4.0.0\", \"fetch-blob\": \"^3.1.4\", \"formdata-polyfill\": \"^4.0.10\" } }, \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\"],\n\n    \"@testing-library/dom/aria-query\": [\"aria-query@5.3.0\", \"\", { \"dependencies\": { \"dequal\": \"^2.0.3\" } }, \"sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==\"],\n\n    \"@testing-library/dom/dom-accessibility-api\": [\"dom-accessibility-api@0.5.16\", \"\", {}, \"sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==\"],\n\n    \"@testing-library/dom/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"@testing-library/dom/pretty-format\": [\"pretty-format@27.5.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\", \"ansi-styles\": \"^5.0.0\", \"react-is\": \"^17.0.1\" } }, \"sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==\"],\n\n    \"@testing-library/jest-dom/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"@ts-morph/common/minimatch\": [\"minimatch@7.4.6\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-sBz8G/YjVniEz6lKPNpKxXwazJe4c19fEfV2GDMX6AjFz+MX9uDWIZW8XreVhkFW3fkIdTv/gxWr/Kks5FFAVw==\"],\n\n    \"@types/request/form-data\": [\"form-data@2.5.5\", \"\", { \"dependencies\": { \"asynckit\": \"^0.4.0\", \"combined-stream\": \"^1.0.8\", \"es-set-tostringtag\": \"^2.1.0\", \"hasown\": \"^2.0.2\", \"mime-types\": \"^2.1.35\", \"safe-buffer\": \"^5.2.1\" } }, \"sha512-jqdObeR2rxZZbPSGL+3VckHMYtu+f9//KXBsVny6JSX/pa38Fy+bGjuG8eW/H6USNQWhLi8Num++cU2yOCNz4A==\"],\n\n    \"@types/three/@tweenjs/tween.js\": [\"@tweenjs/tween.js@23.1.3\", \"\", {}, \"sha512-vJmvvwFxYuGnF2axRtPYocag6Clbb5YS7kLL+SO/TeVFzHqDIWrNKYtcsPMibjDx9O+bu+psAy9NKfWklassUA==\"],\n\n    \"@types/three/fflate\": [\"fflate@0.8.2\", \"\", {}, \"sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==\"],\n\n    \"@typescript-eslint/eslint-plugin/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@typescript-eslint/parser/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\" } }, \"sha512-RkBKGBrjgskFGWuyUGz/EtD8AF/GW49S21J8dvMzpJitOF1slLEbbHnNEtAHtnDAnx8qDEdRrULRnWVx27wGBw==\"],\n\n    \"@typescript-eslint/parser/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"eslint-visitor-keys\": \"^4.2.1\" } }, \"sha512-W8FQi6kEh2e8zVhQ0eeRnxdvIoOkAp/CPAahcNio6nO9dsIwb9b34z90KOlheoyuVf6LSOEdjlkxSkapNEc+4A==\"],\n\n    \"@typescript-eslint/scope-manager/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" } }, \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\"],\n\n    \"@typescript-eslint/typescript-estree/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"eslint-visitor-keys\": \"^4.2.1\" } }, \"sha512-W8FQi6kEh2e8zVhQ0eeRnxdvIoOkAp/CPAahcNio6nO9dsIwb9b34z90KOlheoyuVf6LSOEdjlkxSkapNEc+4A==\"],\n\n    \"@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"@typescript-eslint/typescript-estree/ts-api-utils\": [\"ts-api-utils@2.1.0\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.8.4\" } }, \"sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" } }, \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\"],\n\n    \"@typescript-eslint/visitor-keys/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@unrs/resolver-binding-wasm32-wasi/@napi-rs/wasm-runtime\": [\"@napi-rs/wasm-runtime@0.2.12\", \"\", { \"dependencies\": { \"@emnapi/core\": \"^1.4.3\", \"@emnapi/runtime\": \"^1.4.3\", \"@tybys/wasm-util\": \"^0.10.0\" } }, \"sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==\"],\n\n    \"@yarnpkg/parsers/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"aceternity-ui/chalk\": [\"chalk@5.2.0\", \"\", {}, \"sha512-ree3Gqw/nazQAPuJJEy+avdl7QfZMcUvmHIKgEZkGL+xOBzRvup5Hxo6LHuMceSxOabuJLJm5Yp/92R9eMmMvA==\"],\n\n    \"aceternity-ui/commander\": [\"commander@10.0.1\", \"\", {}, \"sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==\"],\n\n    \"aceternity-ui/dotenv\": [\"dotenv@16.6.1\", \"\", {}, \"sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==\"],\n\n    \"aceternity-ui/https-proxy-agent\": [\"https-proxy-agent@6.2.1\", \"\", { \"dependencies\": { \"agent-base\": \"^7.0.2\", \"debug\": \"4\" } }, \"sha512-ONsE3+yfZF2caH5+bJlcddtWqNI3Gvs5A38+ngvljxaBiRXRswym2c7yf8UAeFpRFKjFNHIFEHqR/OLAWJzyiA==\"],\n\n    \"aceternity-ui/node-fetch\": [\"node-fetch@3.3.2\", \"\", { \"dependencies\": { \"data-uri-to-buffer\": \"^4.0.0\", \"fetch-blob\": \"^3.1.4\", \"formdata-polyfill\": \"^4.0.10\" } }, \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\"],\n\n    \"ai/@ai-sdk/provider-utils\": [\"@ai-sdk/provider-utils@3.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@standard-schema/spec\": \"^1.0.0\", \"eventsource-parser\": \"^3.0.3\", \"zod-to-json-schema\": \"^3.24.1\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-BoQZtGcBxkeSH1zK+SRYNDtJPIPpacTeiMZqnG4Rv6xXjEwM0FH4MGs9c+PlhyEWmQCzjRM2HAotEydFhD4dYw==\"],\n\n    \"autoprefixer/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"babel-plugin-istanbul/istanbul-lib-instrument\": [\"istanbul-lib-instrument@5.2.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.12.3\", \"@babel/parser\": \"^7.14.7\", \"@istanbuljs/schema\": \"^0.1.2\", \"istanbul-lib-coverage\": \"^3.2.0\", \"semver\": \"^6.3.0\" } }, \"sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==\"],\n\n    \"babel-plugin-polyfill-corejs2/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"bl/buffer\": [\"buffer@5.7.1\", \"\", { \"dependencies\": { \"base64-js\": \"^1.3.1\", \"ieee754\": \"^1.1.13\" } }, \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\"],\n\n    \"bl/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"body-parser/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"caller-callsite/callsites\": [\"callsites@2.0.0\", \"\", {}, \"sha512-ksWePWBloaWPxJYQ8TL0JHvtci6G5QTKwQ95RcWAa/lzoAKuAOflGdAK92hpHXjkwb8zLxoLNUoNYZgVsaJzvQ==\"],\n\n    \"chalk/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"chalk/supports-color\": [\"supports-color@7.2.0\", \"\", { \"dependencies\": { \"has-flag\": \"^4.0.0\" } }, \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\"],\n\n    \"chokidar/glob-parent\": [\"glob-parent@5.1.2\", \"\", { \"dependencies\": { \"is-glob\": \"^4.0.1\" } }, \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\"],\n\n    \"chromium-edge-launcher/mkdirp\": [\"mkdirp@1.0.4\", \"\", { \"bin\": { \"mkdirp\": \"bin/cmd.js\" } }, \"sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==\"],\n\n    \"cliui/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"cliui/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"cliui/wrap-ansi\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"compare-func/dot-prop\": [\"dot-prop@5.3.0\", \"\", { \"dependencies\": { \"is-obj\": \"^2.0.0\" } }, \"sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==\"],\n\n    \"connect/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"connect/finalhandler\": [\"finalhandler@1.1.2\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"on-finished\": \"~2.3.0\", \"parseurl\": \"~1.3.3\", \"statuses\": \"~1.5.0\", \"unpipe\": \"~1.0.0\" } }, \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\"],\n\n    \"cosmiconfig-typescript-loader/cosmiconfig\": [\"cosmiconfig@9.0.0\", \"\", { \"dependencies\": { \"env-paths\": \"^2.2.1\", \"import-fresh\": \"^3.3.0\", \"js-yaml\": \"^4.1.0\", \"parse-json\": \"^5.2.0\" }, \"peerDependencies\": { \"typescript\": \">=4.9.5\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\"],\n\n    \"cosmiconfig-typescript-loader/jiti\": [\"jiti@2.5.1\", \"\", { \"bin\": { \"jiti\": \"lib/jiti-cli.mjs\" } }, \"sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==\"],\n\n    \"crypto-random-string/type-fest\": [\"type-fest@1.4.0\", \"\", {}, \"sha512-yGSza74xk0UG8k+pLh5oeoYirvIiWo5t0/o3zHHAO2tRDiZcxWP7fywNlXhqb6/r6sWvwi+RsyQMWhVLe4BVuA==\"],\n\n    \"cssstyle/cssom\": [\"cssom@0.3.8\", \"\", {}, \"sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==\"],\n\n    \"cytoscape-fcose/cose-base\": [\"cose-base@2.2.0\", \"\", { \"dependencies\": { \"layout-base\": \"^2.0.0\" } }, \"sha512-AzlgcsCbUMymkADOJtQm3wO9S3ltPfYOFD5033keQn9NJzIbtnZj+UdBJe7DYml/8TdbtHJW3j58SOnKhWY/5g==\"],\n\n    \"d3-dsv/commander\": [\"commander@7.2.0\", \"\", {}, \"sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==\"],\n\n    \"d3-dsv/iconv-lite\": [\"iconv-lite@0.6.3\", \"\", { \"dependencies\": { \"safer-buffer\": \">= 2.1.2 < 3.0.0\" } }, \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\"],\n\n    \"d3-sankey/d3-array\": [\"d3-array@2.12.1\", \"\", { \"dependencies\": { \"internmap\": \"^1.0.0\" } }, \"sha512-B0ErZK/66mHtEsR1TkPEEkwdy+WDesimkM5gpZr5Dsg54BiTA5RXtYW5qTLIAcekaS9xfZrzBLF/OAkB3Qn1YQ==\"],\n\n    \"d3-sankey/d3-shape\": [\"d3-shape@1.3.7\", \"\", { \"dependencies\": { \"d3-path\": \"1\" } }, \"sha512-EUkvKjqPFUAZyOlhY5gzCxCeI0Aep04LwIRpsZ/mLFelJiUfnK56jo5JMDSE7yyP2kLSb6LtF+S5chMk7uqPqw==\"],\n\n    \"data-urls/whatwg-url\": [\"whatwg-url@11.0.0\", \"\", { \"dependencies\": { \"tr46\": \"^3.0.0\", \"webidl-conversions\": \"^7.0.0\" } }, \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\"],\n\n    \"degenerator/ast-types\": [\"ast-types@0.13.4\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.1\" } }, \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\"],\n\n    \"dotenv-expand/dotenv\": [\"dotenv@16.6.1\", \"\", {}, \"sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==\"],\n\n    \"duplexify/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"escodegen/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"eslint/doctrine\": [\"doctrine@3.0.0\", \"\", { \"dependencies\": { \"esutils\": \"^2.0.2\" } }, \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\"],\n\n    \"eslint/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"eslint/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser\": [\"@typescript-eslint/parser@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/scope-manager\": \"7.2.0\", \"@typescript-eslint/types\": \"7.2.0\", \"@typescript-eslint/typescript-estree\": \"7.2.0\", \"@typescript-eslint/visitor-keys\": \"7.2.0\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-5FKsVcHTk6TafQKQbuIVkXq58Fnbkd2wDL4LB7AURN7RUOu1utVP+G8+6u3ZhEroW3DF6hyo3ZEXxgKgp4KeCg==\"],\n\n    \"eslint-import-resolver-node/debug\": [\"debug@3.2.7\", \"\", { \"dependencies\": { \"ms\": \"^2.1.1\" } }, \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\"],\n\n    \"eslint-module-utils/debug\": [\"debug@3.2.7\", \"\", { \"dependencies\": { \"ms\": \"^2.1.1\" } }, \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\"],\n\n    \"eslint-plugin-import/debug\": [\"debug@3.2.7\", \"\", { \"dependencies\": { \"ms\": \"^2.1.1\" } }, \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\"],\n\n    \"eslint-plugin-import/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"eslint-plugin-import/tsconfig-paths\": [\"tsconfig-paths@3.15.0\", \"\", { \"dependencies\": { \"@types/json5\": \"^0.0.29\", \"json5\": \"^1.0.2\", \"minimist\": \"^1.2.6\", \"strip-bom\": \"^3.0.0\" } }, \"sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==\"],\n\n    \"eslint-plugin-jsx-a11y/emoji-regex\": [\"emoji-regex@9.2.2\", \"\", {}, \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\"],\n\n    \"eslint-plugin-react/resolve\": [\"resolve@2.0.0-next.5\", \"\", { \"dependencies\": { \"is-core-module\": \"^2.13.0\", \"path-parse\": \"^1.0.7\", \"supports-preserve-symlinks-flag\": \"^1.0.0\" }, \"bin\": { \"resolve\": \"bin/resolve\" } }, \"sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==\"],\n\n    \"eslint-plugin-react/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"estree-util-value-to-estree/is-plain-obj\": [\"is-plain-obj@3.0.0\", \"\", {}, \"sha512-gwsOE28k+23GP1B6vFl1oVh/WOzmawBrKwo5Ev6wMKzPkaXaCDIQKzLnvsA42DRlbVTWorkgTKIviAKCWkfUwA==\"],\n\n    \"execa/npm-run-path\": [\"npm-run-path@5.3.0\", \"\", { \"dependencies\": { \"path-key\": \"^4.0.0\" } }, \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\"],\n\n    \"execa/onetime\": [\"onetime@6.0.0\", \"\", { \"dependencies\": { \"mimic-fn\": \"^4.0.0\" } }, \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\"],\n\n    \"express/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"extract-zip/get-stream\": [\"get-stream@5.2.0\", \"\", { \"dependencies\": { \"pump\": \"^3.0.0\" } }, \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\"],\n\n    \"fast-glob/glob-parent\": [\"glob-parent@5.1.2\", \"\", { \"dependencies\": { \"is-glob\": \"^4.0.1\" } }, \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\"],\n\n    \"fetch-blob/web-streams-polyfill\": [\"web-streams-polyfill@3.3.3\", \"\", {}, \"sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==\"],\n\n    \"figures/escape-string-regexp\": [\"escape-string-regexp@1.0.5\", \"\", {}, \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\"],\n\n    \"filelist/minimatch\": [\"minimatch@5.1.6\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\"],\n\n    \"finalhandler/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"foreground-child/signal-exit\": [\"signal-exit@4.1.0\", \"\", {}, \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\"],\n\n    \"front-matter/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"gaxios/is-stream\": [\"is-stream@2.0.1\", \"\", {}, \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\"],\n\n    \"get-uri/data-uri-to-buffer\": [\"data-uri-to-buffer@6.0.2\", \"\", {}, \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\"],\n\n    \"glob/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"globals/type-fest\": [\"type-fest@0.20.2\", \"\", {}, \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\"],\n\n    \"globby/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"gray-matter/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"hast-util-from-parse5/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-from-parse5/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-from-parse5/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"hast-util-from-parse5/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"hast-util-parse-selector/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-raw/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-raw/parse5\": [\"parse5@6.0.1\", \"\", {}, \"sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw==\"],\n\n    \"hast-util-raw/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"hast-util-raw/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"hast-util-raw/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"hast-util-to-html/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-to-html/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-to-html/hast-util-whitespace\": [\"hast-util-whitespace@2.0.1\", \"\", {}, \"sha512-nAxA0v8+vXSBDt3AnRUNjyRIQ0rD+ntpbAp4LnPkumc5M9yUbSMa4XDU9Q6etY4f1Wp4bNgvc1yjiZtsTTrSng==\"],\n\n    \"hast-util-to-html/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"hast-util-to-parse5/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-to-parse5/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"hastscript/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hastscript/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"http-proxy-agent/agent-base\": [\"agent-base@6.0.2\", \"\", { \"dependencies\": { \"debug\": \"4\" } }, \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\"],\n\n    \"import-fresh/resolve-from\": [\"resolve-from@4.0.0\", \"\", {}, \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\"],\n\n    \"isomorphic-git/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"isomorphic-git/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"istanbul-lib-report/supports-color\": [\"supports-color@7.2.0\", \"\", { \"dependencies\": { \"has-flag\": \"^4.0.0\" } }, \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\"],\n\n    \"istanbul-lib-source-maps/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"its-fine/@types/react-reconciler\": [\"@types/react-reconciler@0.28.9\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\" } }, \"sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==\"],\n\n    \"jake/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"jest-changed-files/execa\": [\"execa@5.1.1\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.3\", \"get-stream\": \"^6.0.0\", \"human-signals\": \"^2.1.0\", \"is-stream\": \"^2.0.0\", \"merge-stream\": \"^2.0.0\", \"npm-run-path\": \"^4.0.1\", \"onetime\": \"^5.1.2\", \"signal-exit\": \"^3.0.3\", \"strip-final-newline\": \"^2.0.0\" } }, \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\"],\n\n    \"jest-changed-files/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"jest-circus/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"jest-config/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"jest-diff/pretty-format\": [\"pretty-format@30.0.5\", \"\", { \"dependencies\": { \"@jest/schemas\": \"30.0.5\", \"ansi-styles\": \"^5.2.0\", \"react-is\": \"^18.3.1\" } }, \"sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==\"],\n\n    \"jest-matcher-utils/jest-diff\": [\"jest-diff@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"diff-sequences\": \"^29.6.3\", \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\"],\n\n    \"jest-runner/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"jest-runner/source-map-support\": [\"source-map-support@0.5.13\", \"\", { \"dependencies\": { \"buffer-from\": \"^1.0.0\", \"source-map\": \"^0.6.0\" } }, \"sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==\"],\n\n    \"jest-runtime/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"jest-runtime/strip-bom\": [\"strip-bom@4.0.0\", \"\", {}, \"sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\"],\n\n    \"jest-snapshot/jest-diff\": [\"jest-diff@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"diff-sequences\": \"^29.6.3\", \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\"],\n\n    \"jsdom/https-proxy-agent\": [\"https-proxy-agent@5.0.1\", \"\", { \"dependencies\": { \"agent-base\": \"6\", \"debug\": \"4\" } }, \"sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==\"],\n\n    \"jsdom/whatwg-url\": [\"whatwg-url@11.0.0\", \"\", { \"dependencies\": { \"tr46\": \"^3.0.0\", \"webidl-conversions\": \"^7.0.0\" } }, \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\"],\n\n    \"jsdom/ws\": [\"ws@8.18.3\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\"],\n\n    \"katex/commander\": [\"commander@8.3.0\", \"\", {}, \"sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==\"],\n\n    \"lighthouse-logger/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"lint-staged/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"lint-staged/execa\": [\"execa@8.0.1\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.3\", \"get-stream\": \"^8.0.1\", \"human-signals\": \"^5.0.0\", \"is-stream\": \"^3.0.0\", \"merge-stream\": \"^2.0.0\", \"npm-run-path\": \"^5.1.0\", \"onetime\": \"^6.0.0\", \"signal-exit\": \"^4.1.0\", \"strip-final-newline\": \"^3.0.0\" } }, \"sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==\"],\n\n    \"log-symbols/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"log-update/ansi-escapes\": [\"ansi-escapes@7.0.0\", \"\", { \"dependencies\": { \"environment\": \"^1.0.0\" } }, \"sha512-GdYO7a61mR0fOlAsvC9/rIHf7L96sBc6dEWzeOu+KAea5bZyQRPIpojrVoI4AXGJS/ycu/fBTdLrUkA4ODrvjw==\"],\n\n    \"log-update/cli-cursor\": [\"cli-cursor@5.0.0\", \"\", { \"dependencies\": { \"restore-cursor\": \"^5.0.0\" } }, \"sha512-aCj4O5wKyszjMmDT4tZj93kxyydN/K5zPWSCe6/0AV/AA1pqe5ZBIw0a2ZfPQV7lL5/yb5HsUreJ6UFAF1tEQw==\"],\n\n    \"log-update/slice-ansi\": [\"slice-ansi@7.1.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.2.1\", \"is-fullwidth-code-point\": \"^5.0.0\" } }, \"sha512-bSiSngZ/jWeX93BqeIAbImyTbEihizcwNjFoRUIY/T1wWQsfsm2Vw1agPKylXvQTU7iASGdHhyqRlqQzfz+Htg==\"],\n\n    \"mdast-util-definitions/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"mdast-util-definitions/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdast-util-definitions/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"mdast-util-frontmatter/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"mdx-bundler/uuid\": [\"uuid@8.3.2\", \"\", { \"bin\": { \"uuid\": \"dist/bin/uuid\" } }, \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\"],\n\n    \"mdx-bundler/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"mermaid/uuid\": [\"uuid@11.1.0\", \"\", { \"bin\": { \"uuid\": \"dist/esm/bin/uuid\" } }, \"sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==\"],\n\n    \"metro/ci-info\": [\"ci-info@2.0.0\", \"\", {}, \"sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==\"],\n\n    \"metro/source-map\": [\"source-map@0.5.7\", \"\", {}, \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\"],\n\n    \"metro/ws\": [\"ws@7.5.10\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \"^5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==\"],\n\n    \"metro-config/cosmiconfig\": [\"cosmiconfig@5.2.1\", \"\", { \"dependencies\": { \"import-fresh\": \"^2.0.0\", \"is-directory\": \"^0.3.1\", \"js-yaml\": \"^3.13.1\", \"parse-json\": \"^4.0.0\" } }, \"sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==\"],\n\n    \"metro-source-map/source-map\": [\"source-map@0.5.7\", \"\", {}, \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\"],\n\n    \"metro-symbolicate/source-map\": [\"source-map@0.5.7\", \"\", {}, \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\"],\n\n    \"micromark-extension-frontmatter/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"micromark-extension-frontmatter/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"micromark-extension-frontmatter/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"mlly/pkg-types\": [\"pkg-types@1.3.1\", \"\", { \"dependencies\": { \"confbox\": \"^0.1.8\", \"mlly\": \"^1.7.4\", \"pathe\": \"^2.0.1\" } }, \"sha512-/Jm5M4RvtBFVkKWRu2BLUTNP8/M2a+UwuAX+ae4770q1qVGtfjG+WTCupoZixokjmHiry8uI+dlY8KXYV5HVVQ==\"],\n\n    \"next/postcss\": [\"postcss@8.4.31\", \"\", { \"dependencies\": { \"nanoid\": \"^3.3.6\", \"picocolors\": \"^1.0.0\", \"source-map-js\": \"^1.0.2\" } }, \"sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==\"],\n\n    \"next-auth/cookie\": [\"cookie@0.7.2\", \"\", {}, \"sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==\"],\n\n    \"next-auth/uuid\": [\"uuid@8.3.2\", \"\", { \"bin\": { \"uuid\": \"dist/bin/uuid\" } }, \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\"],\n\n    \"nextjs-linkedin-insight-tag/typescript\": [\"typescript@4.9.5\", \"\", { \"bin\": { \"tsc\": \"bin/tsc\", \"tsserver\": \"bin/tsserver\" } }, \"sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g==\"],\n\n    \"nx/axios\": [\"axios@1.11.0\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.4\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==\"],\n\n    \"nx/cli-spinners\": [\"cli-spinners@2.6.1\", \"\", {}, \"sha512-x/5fWmGMnbKQAaNwN+UZlV79qBLM9JFnJuJ03gIi5whrob0xV0ofNVHy9DhwGdsMJQc2OKv0oGmLzvaqvAVv+g==\"],\n\n    \"nx/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"nx/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"nx/ora\": [\"ora@5.3.0\", \"\", { \"dependencies\": { \"bl\": \"^4.0.3\", \"chalk\": \"^4.1.0\", \"cli-cursor\": \"^3.1.0\", \"cli-spinners\": \"^2.5.0\", \"is-interactive\": \"^1.0.0\", \"log-symbols\": \"^4.0.0\", \"strip-ansi\": \"^6.0.0\", \"wcwidth\": \"^1.0.1\" } }, \"sha512-zAKMgGXUim0Jyd6CXK9lraBnD3H5yPGBPPOkC23a2BG6hsm4Zu6OQSjQuEtV0BHDf4aKHcUFvJiGRrFuW3MG8g==\"],\n\n    \"nx/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"openai/@types/node\": [\"@types/node@18.19.122\", \"\", { \"dependencies\": { \"undici-types\": \"~5.26.4\" } }, \"sha512-yzegtT82dwTNEe/9y+CM8cgb42WrUfMMCg2QqSddzO1J6uPmBD7qKCZ7dOHZP2Yrpm/kb0eqdNMn2MUyEiqBmA==\"],\n\n    \"openid-client/object-hash\": [\"object-hash@2.2.0\", \"\", {}, \"sha512-gScRMn0bS5fH+IuwyIFgnh9zBdo4DV+6GhygmWM9HyNJSgS0hScp1f5vjtm7oIIOiT9trXrShAkLFSc2IqKNgw==\"],\n\n    \"ora/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"ora/cli-cursor\": [\"cli-cursor@4.0.0\", \"\", { \"dependencies\": { \"restore-cursor\": \"^4.0.0\" } }, \"sha512-VGtlMu3x/4DOtIUwEkRezxUZ2lBacNJCHash0N0WeZDBS+7Ux1dm3XWAgWYxLJFMMdOeXMHXorshEFhbMSGelg==\"],\n\n    \"p-locate/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"pac-proxy-agent/http-proxy-agent\": [\"http-proxy-agent@7.0.2\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.0\", \"debug\": \"^4.3.4\" } }, \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\"],\n\n    \"parse-entities/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"parse-json/lines-and-columns\": [\"lines-and-columns@1.2.4\", \"\", {}, \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"],\n\n    \"path-scurry/lru-cache\": [\"lru-cache@10.4.3\", \"\", {}, \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\"],\n\n    \"pkg-dir/find-up\": [\"find-up@4.1.0\", \"\", { \"dependencies\": { \"locate-path\": \"^5.0.0\", \"path-exists\": \"^4.0.0\" } }, \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\"],\n\n    \"playwright/fsevents\": [\"fsevents@2.3.2\", \"\", { \"os\": \"darwin\" }, \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\"],\n\n    \"postcss/nanoid\": [\"nanoid@3.3.11\", \"\", { \"bin\": { \"nanoid\": \"bin/nanoid.cjs\" } }, \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\"],\n\n    \"postcss/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"postcss-nested/postcss-selector-parser\": [\"postcss-selector-parser@6.1.2\", \"\", { \"dependencies\": { \"cssesc\": \"^3.0.0\", \"util-deprecate\": \"^1.0.2\" } }, \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\"],\n\n    \"posthog-node/axios\": [\"axios@1.11.0\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.4\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==\"],\n\n    \"preact-render-to-string/pretty-format\": [\"pretty-format@3.8.0\", \"\", {}, \"sha512-WuxUnVtlWL1OfZFQFuqvnvs6MiAGk9UNsBostyBOB0Is9wb5uRESevA6rnl/rkksXaGX3GzZhPup5d6Vp1nFew==\"],\n\n    \"pretty-format/ansi-styles\": [\"ansi-styles@5.2.0\", \"\", {}, \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\"],\n\n    \"prop-types/react-is\": [\"react-is@16.13.1\", \"\", {}, \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\"],\n\n    \"proxy-agent/http-proxy-agent\": [\"http-proxy-agent@7.0.2\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.0\", \"debug\": \"^4.3.4\" } }, \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\"],\n\n    \"proxy-agent/lru-cache\": [\"lru-cache@7.18.3\", \"\", {}, \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\"],\n\n    \"puppeteer-core/ws\": [\"ws@8.18.3\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\"],\n\n    \"react-devtools-core/ws\": [\"ws@7.5.10\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \"^5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==\"],\n\n    \"react-dom/scheduler\": [\"scheduler@0.23.2\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==\"],\n\n    \"react-konva/@types/react-reconciler\": [\"@types/react-reconciler@0.28.9\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\" } }, \"sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==\"],\n\n    \"react-konva/react-reconciler\": [\"react-reconciler@0.29.2\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\", \"scheduler\": \"^0.23.2\" }, \"peerDependencies\": { \"react\": \"^18.3.1\" } }, \"sha512-zZQqIiYgDCTP/f1N/mAR10nJGrPD2ZR+jDSEsKWJHYC7Cm2wodlwbR3upZRdC3cjIjSlTLNVyO7Iu0Yy7t2AYg==\"],\n\n    \"react-konva/scheduler\": [\"scheduler@0.23.2\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==\"],\n\n    \"react-native/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"react-native/commander\": [\"commander@12.1.0\", \"\", {}, \"sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==\"],\n\n    \"react-native/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"react-native/scheduler\": [\"scheduler@0.26.0\", \"\", {}, \"sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==\"],\n\n    \"react-native/ws\": [\"ws@6.2.3\", \"\", { \"dependencies\": { \"async-limiter\": \"~1.0.0\" } }, \"sha512-jmTjYU0j60B+vHey6TfR3Z7RD61z/hmxBS3VMSGIrroOWXQEneK1zNuotOUrGyBHQj0yrpsLHPWtigEFd13ndA==\"],\n\n    \"read-cache/pify\": [\"pify@2.3.0\", \"\", {}, \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\"],\n\n    \"recast/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"regjsparser/jsesc\": [\"jsesc@3.0.2\", \"\", { \"bin\": { \"jsesc\": \"bin/jsesc\" } }, \"sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==\"],\n\n    \"rehype-stringify/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"rehype-stringify/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"remark-frontmatter/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"remark-frontmatter/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"remark-mdx-frontmatter/estree-util-is-identifier-name\": [\"estree-util-is-identifier-name@1.1.0\", \"\", {}, \"sha512-OVJZ3fGGt9By77Ix9NhaRbzfbDV/2rx9EP7YIDJTmsZSEc5kYn2vWcNccYyahJL2uAQZK2a5Or2i0wtIKTPoRQ==\"],\n\n    \"rimraf/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"send/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"shadcn-ui/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"slice-ansi/is-fullwidth-code-point\": [\"is-fullwidth-code-point@4.0.0\", \"\", {}, \"sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==\"],\n\n    \"source-map-support/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"stack-utils/escape-string-regexp\": [\"escape-string-regexp@2.0.0\", \"\", {}, \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\"],\n\n    \"stacktrace-parser/type-fest\": [\"type-fest@0.7.1\", \"\", {}, \"sha512-Ne2YiiGN8bmrmJJEuTWTLJR32nh/JdL1+PSicowtNb0WFpn59GK8/lfD61bVtzguz7b3PBt74nxpv/Pw5po5Rg==\"],\n\n    \"stats-gl/three\": [\"three@0.170.0\", \"\", {}, \"sha512-FQK+LEpYc0fBD+J8g6oSEyyNzjp+Q7Ks1C568WWaoMRLW+TkNNWmenWeGgJjV105Gd+p/2ql1ZcjYvNiPZBhuQ==\"],\n\n    \"stdin-discarder/bl\": [\"bl@5.1.0\", \"\", { \"dependencies\": { \"buffer\": \"^6.0.3\", \"inherits\": \"^2.0.4\", \"readable-stream\": \"^3.4.0\" } }, \"sha512-tv1ZJHLfTDnXE6tMHv73YgSJaWR2AFuPwMntBe7XL/GBFHnT0CLnsHMogfk5+GzCDC5ZWarSCYaIGATZt9dNsQ==\"],\n\n    \"string-length/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"string-width-cjs/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"string-width-cjs/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"strip-ansi-cjs/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"sucrase/commander\": [\"commander@4.1.1\", \"\", {}, \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\"],\n\n    \"sucrase/lines-and-columns\": [\"lines-and-columns@1.2.4\", \"\", {}, \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"],\n\n    \"tailwindcss/arg\": [\"arg@5.0.2\", \"\", {}, \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\"],\n\n    \"tailwindcss/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"tailwindcss/postcss-selector-parser\": [\"postcss-selector-parser@6.1.2\", \"\", { \"dependencies\": { \"cssesc\": \"^3.0.0\", \"util-deprecate\": \"^1.0.2\" } }, \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\"],\n\n    \"tar-fs/tar-stream\": [\"tar-stream@3.1.7\", \"\", { \"dependencies\": { \"b4a\": \"^1.6.4\", \"fast-fifo\": \"^1.2.0\", \"streamx\": \"^2.15.0\" } }, \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\"],\n\n    \"tar-stream/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"teeny-request/https-proxy-agent\": [\"https-proxy-agent@5.0.1\", \"\", { \"dependencies\": { \"agent-base\": \"6\", \"debug\": \"4\" } }, \"sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==\"],\n\n    \"terser/commander\": [\"commander@2.20.3\", \"\", {}, \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\"],\n\n    \"test-exclude/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"three-stdlib/fflate\": [\"fflate@0.6.10\", \"\", {}, \"sha512-IQrh3lEPM93wVCEczc9SaAOvkmcoQn/G8Bo1e8ZPlY3X3bnAxWaBdvTdvM1hP62iZp0BXWDy4vTAy4fF0+Dlpg==\"],\n\n    \"tinyglobby/picomatch\": [\"picomatch@4.0.3\", \"\", {}, \"sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==\"],\n\n    \"tough-cookie/universalify\": [\"universalify@0.2.0\", \"\", {}, \"sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==\"],\n\n    \"ts-node/diff\": [\"diff@4.0.2\", \"\", {}, \"sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==\"],\n\n    \"tsc-alias/commander\": [\"commander@9.5.0\", \"\", {}, \"sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==\"],\n\n    \"tunnel-rat/zustand\": [\"zustand@4.5.7\", \"\", { \"dependencies\": { \"use-sync-external-store\": \"^1.2.2\" }, \"peerDependencies\": { \"@types/react\": \">=16.8\", \"immer\": \">=9.0.6\", \"react\": \">=16.8\" }, \"optionalPeers\": [\"@types/react\", \"immer\", \"react\"] }, \"sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin\": [\"@typescript-eslint/eslint-plugin@7.18.0\", \"\", { \"dependencies\": { \"@eslint-community/regexpp\": \"^4.10.0\", \"@typescript-eslint/scope-manager\": \"7.18.0\", \"@typescript-eslint/type-utils\": \"7.18.0\", \"@typescript-eslint/utils\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^5.3.1\", \"natural-compare\": \"^1.4.0\", \"ts-api-utils\": \"^1.3.0\" }, \"peerDependencies\": { \"@typescript-eslint/parser\": \"^7.0.0\", \"eslint\": \"^8.56.0\" } }, \"sha512-94EQTWZ40mzBc42ATNIBimBEDltSJ9RQHCC8vc/PDbxi4k8dVwUAv4o98dk50M1zB+JGFxp43FP7f8+FP8R6Sw==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser\": [\"@typescript-eslint/parser@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/scope-manager\": \"7.18.0\", \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/typescript-estree\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-4Z+L8I2OqhZV8qA132M4wNL30ypZGYOQVBfMgxDH/K5UX0PNqTu1c6za9ST5r9+tavvHiTWmBnKzpCJ/GlVFtg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils\": [\"@typescript-eslint/utils@7.18.0\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.4.0\", \"@typescript-eslint/scope-manager\": \"7.18.0\", \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/typescript-estree\": \"7.18.0\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==\"],\n\n    \"unist-util-remove-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"unist-util-remove-position/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"update-browserslist-db/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"uvu/kleur\": [\"kleur@4.1.5\", \"\", {}, \"sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==\"],\n\n    \"v8-to-istanbul/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"vfile-location/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"vfile-location/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"whatwg-encoding/iconv-lite\": [\"iconv-lite@0.6.3\", \"\", { \"dependencies\": { \"safer-buffer\": \">= 2.1.2 < 3.0.0\" } }, \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\"],\n\n    \"whatwg-url/webidl-conversions\": [\"webidl-conversions@3.0.1\", \"\", {}, \"sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==\"],\n\n    \"widest-line/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"wrap-ansi-cjs/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"wrap-ansi-cjs/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"wrap-ansi-cjs/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"yargs/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"@babel/helper-compilation-targets/lru-cache/yallist\": [\"yallist@3.1.1\", \"\", {}, \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\"],\n\n    \"@codebuff/npm-app/posthog-node/axios\": [\"axios@1.11.0\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.4\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\" } }, \"sha512-RkBKGBrjgskFGWuyUGz/EtD8AF/GW49S21J8dvMzpJitOF1slLEbbHnNEtAHtnDAnx8qDEdRrULRnWVx27wGBw==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils\": [\"@typescript-eslint/type-utils@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/typescript-estree\": \"8.39.1\", \"@typescript-eslint/utils\": \"8.39.1\", \"debug\": \"^4.3.4\", \"ts-api-utils\": \"^2.1.0\" }, \"peerDependencies\": { \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-gu9/ahyatyAdQbKeHnhT4R+y3YLtqqHyvkfDxaBYk97EcbfChSJXyaJnIL3ygUv7OuZatePHmQvuH5ru0lnVeA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/utils\": [\"@typescript-eslint/utils@8.39.1\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.7.0\", \"@typescript-eslint/scope-manager\": \"8.39.1\", \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/typescript-estree\": \"8.39.1\" }, \"peerDependencies\": { \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-VF5tZ2XnUSTuiqZFXCZfZs1cgkdd3O/sSYmdo2EpSyDlC86UM/8YytTmKnehOW3TGAlivqTDT6bS87B/GQ/jyg==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"eslint-visitor-keys\": \"^4.2.1\" } }, \"sha512-W8FQi6kEh2e8zVhQ0eeRnxdvIoOkAp/CPAahcNio6nO9dsIwb9b34z90KOlheoyuVf6LSOEdjlkxSkapNEc+4A==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/ignore\": [\"ignore@7.0.3\", \"\", {}, \"sha512-bAH5jbK/F3T3Jls4I0SO1hmPR0dKU0a7+SY6n1yzRtG54FLO8d6w/nxLFX2Nb7dBu6cCWXPaAME6cYqFUMmuCA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/ts-api-utils\": [\"ts-api-utils@2.1.0\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.8.4\" } }, \"sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==\"],\n\n    \"@codebuff/web/pino/pino-abstract-transport\": [\"pino-abstract-transport@2.0.0\", \"\", { \"dependencies\": { \"split2\": \"^4.0.0\" } }, \"sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==\"],\n\n    \"@codebuff/web/pino/process-warning\": [\"process-warning@5.0.0\", \"\", {}, \"sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==\"],\n\n    \"@commitlint/config-validator/ajv/json-schema-traverse\": [\"json-schema-traverse@1.0.0\", \"\", {}, \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\"],\n\n    \"@commitlint/top-level/find-up/locate-path\": [\"locate-path@7.2.0\", \"\", { \"dependencies\": { \"p-locate\": \"^6.0.0\" } }, \"sha512-gvVijfZvn7R+2qyPX8mAuKcFGDf6Nc61GdvGafQsHL0sBIxfKzA+usWn4GFC/bk+QdwPUD4kWFJLhElipq+0VA==\"],\n\n    \"@commitlint/top-level/find-up/path-exists\": [\"path-exists@5.0.0\", \"\", {}, \"sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/android-arm\": [\"@esbuild/android-arm@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/android-arm64\": [\"@esbuild/android-arm64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/android-x64\": [\"@esbuild/android-x64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"x64\" }, \"sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/darwin-arm64\": [\"@esbuild/darwin-arm64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/darwin-x64\": [\"@esbuild/darwin-x64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/freebsd-arm64\": [\"@esbuild/freebsd-arm64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"arm64\" }, \"sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/freebsd-x64\": [\"@esbuild/freebsd-x64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-arm\": [\"@esbuild/linux-arm@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-arm64\": [\"@esbuild/linux-arm64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-ia32\": [\"@esbuild/linux-ia32@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ia32\" }, \"sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-loong64\": [\"@esbuild/linux-loong64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-mips64el\": [\"@esbuild/linux-mips64el@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-ppc64\": [\"@esbuild/linux-ppc64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-riscv64\": [\"@esbuild/linux-riscv64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-s390x\": [\"@esbuild/linux-s390x@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-x64\": [\"@esbuild/linux-x64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/netbsd-x64\": [\"@esbuild/netbsd-x64@0.18.20\", \"\", { \"os\": \"none\", \"cpu\": \"x64\" }, \"sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/openbsd-x64\": [\"@esbuild/openbsd-x64@0.18.20\", \"\", { \"os\": \"openbsd\", \"cpu\": \"x64\" }, \"sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/sunos-x64\": [\"@esbuild/sunos-x64@0.18.20\", \"\", { \"os\": \"sunos\", \"cpu\": \"x64\" }, \"sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/win32-arm64\": [\"@esbuild/win32-arm64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/win32-ia32\": [\"@esbuild/win32-ia32@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/win32-x64\": [\"@esbuild/win32-x64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==\"],\n\n    \"@contentlayer/core/remark-parse/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast\": [\"mdast-util-to-hast@12.3.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-definitions\": \"^5.0.0\", \"micromark-util-sanitize-uri\": \"^1.1.0\", \"trim-lines\": \"^3.0.0\", \"unist-util-generated\": \"^2.0.0\", \"unist-util-position\": \"^4.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-pits93r8PhnIoU4Vy9bjW39M2jJ6/tdHyja9rrot9uujkN7UTU9SDnE6WNJz/IGyQk3XHX6yNNtrBH6cQzm8Hw==\"],\n\n    \"@contentlayer/core/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"@contentlayer/source-files/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/source-files/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/android-arm\": [\"@esbuild/android-arm@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/android-arm64\": [\"@esbuild/android-arm64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/android-x64\": [\"@esbuild/android-x64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"x64\" }, \"sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/darwin-arm64\": [\"@esbuild/darwin-arm64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/darwin-x64\": [\"@esbuild/darwin-x64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/freebsd-arm64\": [\"@esbuild/freebsd-arm64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"arm64\" }, \"sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/freebsd-x64\": [\"@esbuild/freebsd-x64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-arm\": [\"@esbuild/linux-arm@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-arm64\": [\"@esbuild/linux-arm64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-ia32\": [\"@esbuild/linux-ia32@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ia32\" }, \"sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-loong64\": [\"@esbuild/linux-loong64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-mips64el\": [\"@esbuild/linux-mips64el@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-ppc64\": [\"@esbuild/linux-ppc64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-riscv64\": [\"@esbuild/linux-riscv64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-s390x\": [\"@esbuild/linux-s390x@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-x64\": [\"@esbuild/linux-x64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/netbsd-x64\": [\"@esbuild/netbsd-x64@0.18.20\", \"\", { \"os\": \"none\", \"cpu\": \"x64\" }, \"sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/openbsd-x64\": [\"@esbuild/openbsd-x64@0.18.20\", \"\", { \"os\": \"openbsd\", \"cpu\": \"x64\" }, \"sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/sunos-x64\": [\"@esbuild/sunos-x64@0.18.20\", \"\", { \"os\": \"sunos\", \"cpu\": \"x64\" }, \"sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/win32-arm64\": [\"@esbuild/win32-arm64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/win32-ia32\": [\"@esbuild/win32-ia32@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/win32-x64\": [\"@esbuild/win32-x64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==\"],\n\n    \"@isaacs/cliui/string-width/emoji-regex\": [\"emoji-regex@9.2.2\", \"\", {}, \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up/locate-path\": [\"locate-path@5.0.0\", \"\", { \"dependencies\": { \"p-locate\": \"^4.1.0\" } }, \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\"],\n\n    \"@istanbuljs/load-nyc-config/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"@jest/core/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@jest/reporters/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/estree-util-build-jsx\": [\"estree-util-build-jsx@2.2.2\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"estree-walker\": \"^3.0.0\" } }, \"sha512-m56vOXcOBuaF+Igpb9OPAy7f9w9OIkb5yhjsZuaPm7HoGi4oTOQi0h2+yZ+AtKklYFZ+rPC4n0wYCJCEU1ONqg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/estree-util-is-identifier-name\": [\"estree-util-is-identifier-name@2.1.0\", \"\", {}, \"sha512-bEN9VHRyXAUOjkKVQVvArFym08BTWB0aJPppZZr0UNyAqWsLaVfAqP7hbaTJjzHifmB5ebnR8Wm7r7yGN/HonQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/estree-util-to-js\": [\"estree-util-to-js@1.2.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"astring\": \"^1.8.0\", \"source-map\": \"^0.7.0\" } }, \"sha512-IzU74r1PK5IMMGZXUVZbmiu4A1uhiPgW5hm1GjcOfr4ZzHaMPpLNJjR7HjXiIOzi25nZDrgFTobHTkV5Q6ITjA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree\": [\"hast-util-to-estree@2.3.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/unist\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"estree-util-attach-comments\": \"^2.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"hast-util-whitespace\": \"^2.0.0\", \"mdast-util-mdx-expression\": \"^1.0.0\", \"mdast-util-mdxjs-esm\": \"^1.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"style-to-object\": \"^0.4.1\", \"unist-util-position\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-ihhPIUPxN0v0w6M5+IiAZZrn0LH2uZomeWwhn7uP7avZC6TE7lIiEh2yBMPr5+zi1aUCXq6VoYRgs2Bw9xmycQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/markdown-extensions\": [\"markdown-extensions@1.1.1\", \"\", {}, \"sha512-WWC0ZuMzCyDHYCasEGs4IPvLyTGftYwh6wIEOULOF0HXcqZlhwRzrK0w2VUlxWA98xnvb/jszw4ZSkJ6ADpM6Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx\": [\"remark-mdx@2.3.0\", \"\", { \"dependencies\": { \"mdast-util-mdx\": \"^2.0.0\", \"micromark-extension-mdxjs\": \"^1.0.0\" } }, \"sha512-g53hMkpM0I98MU266IzDFMrTD980gNF3BJnkyFcmN+dD873mQeD5rdMO3Y2X+x8umQfbSE0PcoEDl7ledSA+2g==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse\": [\"remark-parse@10.0.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-3ydxgHa/ZQzG8LvC7jTXccARYDcRld3VfcgIIFs7bI6vbRSxJJmzgLEIIoYKyrfhaY+ujuWaf/PJiMZXoiCXgw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype\": [\"remark-rehype@10.1.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-to-hast\": \"^12.1.0\", \"unified\": \"^10.0.0\" } }, \"sha512-EFmR5zppdBp0WQeDVZ/b66CWJipB2q2VLNFMabzDSGR66Z2fQii83G5gTBbgGEnEEA0QRussvrFHxk1HWGJskw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-position-from-estree\": [\"unist-util-position-from-estree@1.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-poZa0eXpS+/XpoQwGwl79UUdea4ol2ZuCYguVaJS4qzIOMDzbqz8a3erUCOmubSZkaOuGamb3tX790iwOIROww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"@mdx-js/esbuild/vfile/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@mdx-js/esbuild/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@nx/devkit/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@oclif/core/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@oclif/core/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"@oclif/core/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@oclif/core/wrap-ansi/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"@oclif/core/wrap-ansi/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@oclif/errors/fs-extra/jsonfile\": [\"jsonfile@4.0.0\", \"\", { \"optionalDependencies\": { \"graceful-fs\": \"^4.1.6\" } }, \"sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==\"],\n\n    \"@oclif/errors/fs-extra/universalify\": [\"universalify@0.1.2\", \"\", {}, \"sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==\"],\n\n    \"@oclif/errors/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@oclif/errors/wrap-ansi/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"@oclif/errors/wrap-ansi/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/sdk-trace-base/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-exporter-base/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-grpc-exporter-base/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/sdk-trace-base/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@react-native/dev-middleware/serve-static/encodeurl\": [\"encodeurl@2.0.0\", \"\", {}, \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\"],\n\n    \"@react-native/dev-middleware/serve-static/send\": [\"send@0.19.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"destroy\": \"1.2.0\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"etag\": \"~1.8.1\", \"fresh\": \"0.5.2\", \"http-errors\": \"2.0.0\", \"mime\": \"1.6.0\", \"ms\": \"2.1.3\", \"on-finished\": \"2.4.1\", \"range-parser\": \"~1.2.1\", \"statuses\": \"2.0.1\" } }, \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\"],\n\n    \"@testing-library/dom/pretty-format/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@testing-library/dom/pretty-format/ansi-styles\": [\"ansi-styles@5.2.0\", \"\", {}, \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\"],\n\n    \"@testing-library/dom/pretty-format/react-is\": [\"react-is@17.0.2\", \"\", {}, \"sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\"],\n\n    \"@ts-morph/common/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@typescript-eslint/parser/@typescript-eslint/visitor-keys/eslint-visitor-keys\": [\"eslint-visitor-keys@4.2.1\", \"\", {}, \"sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"@typescript-eslint/typescript-estree/@typescript-eslint/visitor-keys/eslint-visitor-keys\": [\"eslint-visitor-keys@4.2.1\", \"\", {}, \"sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==\"],\n\n    \"@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"@unrs/resolver-binding-wasm32-wasi/@napi-rs/wasm-runtime/@tybys/wasm-util\": [\"@tybys/wasm-util@0.10.0\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==\"],\n\n    \"@yarnpkg/parsers/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"babel-plugin-istanbul/istanbul-lib-instrument/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"body-parser/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"cliui/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"cliui/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"cliui/wrap-ansi/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"connect/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"connect/finalhandler/on-finished\": [\"on-finished@2.3.0\", \"\", { \"dependencies\": { \"ee-first\": \"1.1.1\" } }, \"sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==\"],\n\n    \"connect/finalhandler/statuses\": [\"statuses@1.5.0\", \"\", {}, \"sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==\"],\n\n    \"cytoscape-fcose/cose-base/layout-base\": [\"layout-base@2.0.1\", \"\", {}, \"sha512-dp3s92+uNI1hWIpPGH3jK2kxE2lMjdXdr+DH8ynZHpd6PUlH6x6cbuXnoMmiNumznqaNO31xu9e79F0uuZ0JFg==\"],\n\n    \"d3-sankey/d3-array/internmap\": [\"internmap@1.0.1\", \"\", {}, \"sha512-lDB5YccMydFBtasVtxnZ3MRBHuaoE8GKsppq+EchKL2U4nK/DmEpPHNH8MZe5HkMtpSiTSOZwfN0tzYjO/lJEw==\"],\n\n    \"d3-sankey/d3-shape/d3-path\": [\"d3-path@1.0.9\", \"\", {}, \"sha512-VLaYcn81dtHVTjEHd8B+pbe9yHWpXKZUC87PzoFmsFrJqgFwDe/qxfp5MlfsfM1V5E/iVt0MmEbWQ7FVIXh/bg==\"],\n\n    \"data-urls/whatwg-url/tr46\": [\"tr46@3.0.0\", \"\", { \"dependencies\": { \"punycode\": \"^2.1.1\" } }, \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.2.0\", \"@typescript-eslint/visitor-keys\": \"7.2.0\" } }, \"sha512-Qh976RbQM/fYtjx9hs4XkayYujB/aPwglw2choHmf3zBjB4qOywWSdt9+KLRdHubGcoSwBnXUH2sR3hkyaERRg==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/types\": [\"@typescript-eslint/types@7.2.0\", \"\", {}, \"sha512-XFtUHPI/abFhm4cbCDc5Ykc8npOKBSJePY3a3s+lwumt7XWJuzP5cZcfZ610MIPHjQjNsOLlYK8ASPaNG8UiyA==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.2.0\", \"@typescript-eslint/visitor-keys\": \"7.2.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" } }, \"sha512-cyxS5WQQCoBwSakpMrvMXuMDEbhOo9bNHHrNcEWis6XHx6KF518tkF1wBvKIn/tpq5ZpUYK7Bdklu8qY0MsFIA==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.2.0\", \"eslint-visitor-keys\": \"^3.4.1\" } }, \"sha512-c6EIQRHhcpl6+tO8EMR+kjkkV+ugUNXOmeASA1rlzkd8EPIriavpWoiEz1HR/VLhbVIdhqnV6E7JZm00cBDx2A==\"],\n\n    \"eslint-plugin-import/tsconfig-paths/json5\": [\"json5@1.0.2\", \"\", { \"dependencies\": { \"minimist\": \"^1.2.0\" }, \"bin\": { \"json5\": \"lib/cli.js\" } }, \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\"],\n\n    \"eslint/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"execa/npm-run-path/path-key\": [\"path-key@4.0.0\", \"\", {}, \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\"],\n\n    \"execa/onetime/mimic-fn\": [\"mimic-fn@4.0.0\", \"\", {}, \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\"],\n\n    \"express/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"filelist/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"finalhandler/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"front-matter/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"glob/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"gray-matter/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"hast-util-from-parse5/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"hast-util-from-parse5/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"hast-util-parse-selector/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/unist-util-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/unist-util-visit/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"hast-util-raw/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"hast-util-raw/vfile/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"hast-util-raw/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"hast-util-to-parse5/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hastscript/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"jest-changed-files/execa/human-signals\": [\"human-signals@2.1.0\", \"\", {}, \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\"],\n\n    \"jest-changed-files/execa/is-stream\": [\"is-stream@2.0.1\", \"\", {}, \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\"],\n\n    \"jest-changed-files/execa/strip-final-newline\": [\"strip-final-newline@2.0.0\", \"\", {}, \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\"],\n\n    \"jest-changed-files/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"jest-circus/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"jest-diff/pretty-format/@jest/schemas\": [\"@jest/schemas@30.0.5\", \"\", { \"dependencies\": { \"@sinclair/typebox\": \"^0.34.0\" } }, \"sha512-DmdYgtezMkh3cpU8/1uyXakv3tJRcmcXxBOcO0tbaozPwpmh4YMsnWrQm9ZmZMfa5ocbxzbFk6O4bDPEc/iAnA==\"],\n\n    \"jest-diff/pretty-format/ansi-styles\": [\"ansi-styles@5.2.0\", \"\", {}, \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\"],\n\n    \"jest-runner/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"jest-runner/source-map-support/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"jsdom/https-proxy-agent/agent-base\": [\"agent-base@6.0.2\", \"\", { \"dependencies\": { \"debug\": \"4\" } }, \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\"],\n\n    \"jsdom/whatwg-url/tr46\": [\"tr46@3.0.0\", \"\", { \"dependencies\": { \"punycode\": \"^2.1.1\" } }, \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\"],\n\n    \"lighthouse-logger/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"lint-staged/execa/get-stream\": [\"get-stream@8.0.1\", \"\", {}, \"sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==\"],\n\n    \"lint-staged/execa/human-signals\": [\"human-signals@5.0.0\", \"\", {}, \"sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==\"],\n\n    \"lint-staged/execa/npm-run-path\": [\"npm-run-path@5.3.0\", \"\", { \"dependencies\": { \"path-key\": \"^4.0.0\" } }, \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\"],\n\n    \"lint-staged/execa/onetime\": [\"onetime@6.0.0\", \"\", { \"dependencies\": { \"mimic-fn\": \"^4.0.0\" } }, \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\"],\n\n    \"lint-staged/execa/signal-exit\": [\"signal-exit@4.1.0\", \"\", {}, \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\"],\n\n    \"log-update/cli-cursor/restore-cursor\": [\"restore-cursor@5.1.0\", \"\", { \"dependencies\": { \"onetime\": \"^7.0.0\", \"signal-exit\": \"^4.1.0\" } }, \"sha512-oMA2dcrw6u0YfxJQXm342bFKX/E4sG9rbTzO9ptUcR/e8A33cHuvStiYOwH7fszkZlZ1z/ta9AAoPk2F4qIOHA==\"],\n\n    \"log-update/slice-ansi/is-fullwidth-code-point\": [\"is-fullwidth-code-point@5.0.0\", \"\", { \"dependencies\": { \"get-east-asian-width\": \"^1.0.0\" } }, \"sha512-OVa3u9kkBbw7b8Xw5F9P+D/T9X+Z4+JruYVNapTjPYZYUznQ5YfWeFkOj606XYYW8yugTfC8Pj0hYqvi4ryAhA==\"],\n\n    \"mdast-util-definitions/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"mdast-util-definitions/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"mdast-util-frontmatter/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"mdx-bundler/vfile/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdx-bundler/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"mdx-bundler/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"metro-config/cosmiconfig/import-fresh\": [\"import-fresh@2.0.0\", \"\", { \"dependencies\": { \"caller-path\": \"^2.0.0\", \"resolve-from\": \"^3.0.0\" } }, \"sha512-eZ5H8rcgYazHbKC3PG4ClHNykCSxtAhxSSEM+2mb+7evD2CKF5V7c0dNum7AdpDh0ZdICwZY9sRSn8f+KH96sg==\"],\n\n    \"metro-config/cosmiconfig/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"metro-config/cosmiconfig/parse-json\": [\"parse-json@4.0.0\", \"\", { \"dependencies\": { \"error-ex\": \"^1.3.1\", \"json-parse-better-errors\": \"^1.0.1\" } }, \"sha512-aOIos8bujGN93/8Ox/jPLh7RwVnPEysynVFE+fQZyg6jKELEHwzgKdLRFHUgXJL6kylijVSBC4BvN9OmsB48Rw==\"],\n\n    \"mlly/pkg-types/confbox\": [\"confbox@0.1.8\", \"\", {}, \"sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==\"],\n\n    \"next/postcss/nanoid\": [\"nanoid@3.3.11\", \"\", { \"bin\": { \"nanoid\": \"bin/nanoid.cjs\" } }, \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\"],\n\n    \"next/postcss/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"nx/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"nx/ora/cli-spinners\": [\"cli-spinners@2.9.2\", \"\", {}, \"sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==\"],\n\n    \"nx/ora/is-interactive\": [\"is-interactive@1.0.0\", \"\", {}, \"sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==\"],\n\n    \"nx/ora/log-symbols\": [\"log-symbols@4.1.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.1.0\", \"is-unicode-supported\": \"^0.1.0\" } }, \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\"],\n\n    \"nx/ora/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"nx/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"nx/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"openai/@types/node/undici-types\": [\"undici-types@5.26.5\", \"\", {}, \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\"],\n\n    \"ora/cli-cursor/restore-cursor\": [\"restore-cursor@4.0.0\", \"\", { \"dependencies\": { \"onetime\": \"^5.1.0\", \"signal-exit\": \"^3.0.2\" } }, \"sha512-I9fPXU9geO9bHOt9pHHOhOkYerIMsmVaWB0rA2AI9ERh/+x/i7MV5HKBNrg+ljO5eoPVgCcnFuRjJ9uH6I/3eg==\"],\n\n    \"p-locate/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"pkg-dir/find-up/locate-path\": [\"locate-path@5.0.0\", \"\", { \"dependencies\": { \"p-locate\": \"^4.1.0\" } }, \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\"],\n\n    \"rehype-stringify/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"rehype-stringify/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"rehype-stringify/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"remark-frontmatter/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"remark-frontmatter/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"remark-frontmatter/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"send/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"stdin-discarder/bl/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"string-length/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"string-width-cjs/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"teeny-request/https-proxy-agent/agent-base\": [\"agent-base@6.0.2\", \"\", { \"dependencies\": { \"debug\": \"4\" } }, \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\" } }, \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils\": [\"@typescript-eslint/type-utils@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/typescript-estree\": \"7.18.0\", \"@typescript-eslint/utils\": \"7.18.0\", \"debug\": \"^4.3.4\", \"ts-api-utils\": \"^1.3.0\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-XL0FJXuCLaDuX2sYqZUUSOJ2sG5/i1AAze+axqmLnSkNEVMVYLF+cbwlB2w8D1tinFuSikHmFta+P+HOofrLeA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\" } }, \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^1.3.0\" } }, \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\" } }, \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^1.3.0\" } }, \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\"],\n\n    \"unist-util-remove-position/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"unist-util-remove-position/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"vfile-location/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"vfile-location/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"widest-line/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"widest-line/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"wrap-ansi-cjs/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"wrap-ansi-cjs/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"yargs/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"yargs/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys/eslint-visitor-keys\": [\"eslint-visitor-keys@4.2.1\", \"\", {}, \"sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==\"],\n\n    \"@commitlint/top-level/find-up/locate-path/p-locate\": [\"p-locate@6.0.0\", \"\", { \"dependencies\": { \"p-limit\": \"^4.0.0\" } }, \"sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==\"],\n\n    \"@contentlayer/core/remark-parse/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"@contentlayer/core/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@contentlayer/core/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@contentlayer/source-files/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@contentlayer/source-files/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up/locate-path/p-locate\": [\"p-locate@4.1.0\", \"\", { \"dependencies\": { \"p-limit\": \"^2.2.0\" } }, \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/estree-util-attach-comments\": [\"estree-util-attach-comments@2.1.1\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\" } }, \"sha512-+5Ba/xGGS6mnwFbXIuQiDPTbuTxuMCooq3arVv7gPZtYpjp+VXH/NkHAP35OOefPhNG/UGqU3vt/LTABwcHX0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/hast-util-whitespace\": [\"hast-util-whitespace@2.0.1\", \"\", {}, \"sha512-nAxA0v8+vXSBDt3AnRUNjyRIQ0rD+ntpbAp4LnPkumc5M9yUbSMa4XDU9Q6etY4f1Wp4bNgvc1yjiZtsTTrSng==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression\": [\"mdast-util-mdx-expression@1.3.2\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-xIPmR5ReJDu/DHH1OoIT1HkuybIfRGYRywC+gJtI7qHjCJp/M9jrmBEJW22O8lskDWm562BX2W8TiAwRTb0rKA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm\": [\"mdast-util-mdxjs-esm@1.3.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-SXqglS0HrEvSdUEfoXFtcg7DRl7S2cwOXc7jkuusG472Mmjag34DUDeOJUZtl+BVnyeO1frIgVpHlNRWc2gk/w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/style-to-object\": [\"style-to-object@0.4.4\", \"\", { \"dependencies\": { \"inline-style-parser\": \"0.1.1\" } }, \"sha512-HYNoHZa2GorYNyqiCaBgsxvcJIn7OHq6inEga+E6Ke3m5JkoqpQbnFssk4jwe+K7AhGa2fcha4wSOf1Kn01dMg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx\": [\"mdast-util-mdx@2.0.1\", \"\", { \"dependencies\": { \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-mdx-expression\": \"^1.0.0\", \"mdast-util-mdx-jsx\": \"^2.0.0\", \"mdast-util-mdxjs-esm\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-38w5y+r8nyKlGvNjSEqWrhG0w5PmnRA+wnBvm+ulYCct7nsGYhFVb0lljS9bQav4psDAS1eGkP2LMVcZBi/aqw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs\": [\"micromark-extension-mdxjs@1.0.1\", \"\", { \"dependencies\": { \"acorn\": \"^8.0.0\", \"acorn-jsx\": \"^5.0.0\", \"micromark-extension-mdx-expression\": \"^1.0.0\", \"micromark-extension-mdx-jsx\": \"^1.0.0\", \"micromark-extension-mdx-md\": \"^1.0.0\", \"micromark-extension-mdxjs-esm\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-7YA7hF6i5eKOfFUzZ+0z6avRG52GpWR8DL+kN47y3f2KhxbBZMhmxe7auOeaTBrW2DenbbZTf1ea9tA2hDpC2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast\": [\"mdast-util-to-hast@12.3.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-definitions\": \"^5.0.0\", \"micromark-util-sanitize-uri\": \"^1.1.0\", \"trim-lines\": \"^3.0.0\", \"unist-util-generated\": \"^2.0.0\", \"unist-util-position\": \"^4.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-pits93r8PhnIoU4Vy9bjW39M2jJ6/tdHyja9rrot9uujkN7UTU9SDnE6WNJz/IGyQk3XHX6yNNtrBH6cQzm8Hw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-position-from-estree/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-stringify-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"@oclif/core/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@oclif/core/wrap-ansi/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@oclif/errors/wrap-ansi/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"@react-native/dev-middleware/serve-static/send/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"@react-native/dev-middleware/serve-static/send/encodeurl\": [\"encodeurl@1.0.2\", \"\", {}, \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"jest-diff/pretty-format/@jest/schemas/@sinclair/typebox\": [\"@sinclair/typebox@0.34.38\", \"\", {}, \"sha512-HpkxMmc2XmZKhvaKIZZThlHmx1L0I/V1hWK1NubtlFnr6ZqdiOpV72TKudZUNQjZNsyDBay72qFEhEvb+bcwcA==\"],\n\n    \"lint-staged/execa/npm-run-path/path-key\": [\"path-key@4.0.0\", \"\", {}, \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\"],\n\n    \"lint-staged/execa/onetime/mimic-fn\": [\"mimic-fn@4.0.0\", \"\", {}, \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\"],\n\n    \"log-update/cli-cursor/restore-cursor/onetime\": [\"onetime@7.0.0\", \"\", { \"dependencies\": { \"mimic-function\": \"^5.0.0\" } }, \"sha512-VXJjc87FScF88uafS3JllDgvAm+c/Slfz06lorj2uAY34rlUu0Nt+v8wreiImcrgAjjIHp1rXpTDlLOGw29WwQ==\"],\n\n    \"log-update/cli-cursor/restore-cursor/signal-exit\": [\"signal-exit@4.1.0\", \"\", {}, \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"metro-config/cosmiconfig/import-fresh/resolve-from\": [\"resolve-from@3.0.0\", \"\", {}, \"sha512-GnlH6vxLymXJNMBo7XP1fJIzBFbdYt49CuTwmB/6N53t+kMPRMFKz783LlQ4tv28XoQfMWinAJX6WCGf2IlaIw==\"],\n\n    \"metro-config/cosmiconfig/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"nx/ora/log-symbols/is-unicode-supported\": [\"is-unicode-supported@0.1.0\", \"\", {}, \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\"],\n\n    \"nx/ora/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"nx/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"pkg-dir/find-up/locate-path/p-locate\": [\"p-locate@4.1.0\", \"\", { \"dependencies\": { \"p-limit\": \"^2.2.0\" } }, \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\"],\n\n    \"rehype-stringify/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"rehype-stringify/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"remark-frontmatter/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"remark-frontmatter/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/scope-manager/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^1.3.0\" } }, \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/scope-manager/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"widest-line/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"yargs/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@commitlint/top-level/find-up/locate-path/p-locate/p-limit\": [\"p-limit@4.0.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^1.0.0\" } }, \"sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up/locate-path/p-locate/p-limit\": [\"p-limit@2.3.0\", \"\", { \"dependencies\": { \"p-try\": \"^2.0.0\" } }, \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/style-to-object/inline-style-parser\": [\"inline-style-parser@0.1.1\", \"\", {}, \"sha512-7NXolsK4CAS5+xvdj5OMMbI962hU/wvwoxk+LWR9Ek9bVtyuuYScDN6eS0rUm6TxApFpw7CX1o4uJzcd4AyD3Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression\": [\"mdast-util-mdx-expression@1.3.2\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-xIPmR5ReJDu/DHH1OoIT1HkuybIfRGYRywC+gJtI7qHjCJp/M9jrmBEJW22O8lskDWm562BX2W8TiAwRTb0rKA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx\": [\"mdast-util-mdx-jsx@2.1.4\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"ccount\": \"^2.0.0\", \"mdast-util-from-markdown\": \"^1.1.0\", \"mdast-util-to-markdown\": \"^1.3.0\", \"parse-entities\": \"^4.0.0\", \"stringify-entities\": \"^4.0.0\", \"unist-util-remove-position\": \"^4.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-DtMn9CmVhVzZx3f+optVDF8yFgQVt7FghCRNdlIaS3X5Bnym3hZwPbg/XW86vdpKjlc1PVj26SpnLGeJBXD3JA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm\": [\"mdast-util-mdxjs-esm@1.3.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-SXqglS0HrEvSdUEfoXFtcg7DRl7S2cwOXc7jkuusG472Mmjag34DUDeOJUZtl+BVnyeO1frIgVpHlNRWc2gk/w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression\": [\"micromark-extension-mdx-expression@1.0.8\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-factory-mdx-expression\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-zZpeQtc5wfWKdzDsHRBY003H2Smg+PUi2REhqgIhdzAa5xonhP03FcXxqFSerFiNUr5AWmHpaNPQTBVOS4lrXw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx\": [\"micromark-extension-mdx-jsx@1.0.5\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"micromark-factory-mdx-expression\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-gPH+9ZdmDflbu19Xkb8+gheqEDqkSpdCEubQyxuz/Hn8DOXiXvrXeikOoBA71+e8Pfi0/UYmU3wW3H58kr7akA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-md\": [\"micromark-extension-mdx-md@1.0.1\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-7MSuj2S7xjOQXAjjkbjBsHkMtb+mDGVW6uI2dBL9snOBCbZmoNgDAeZ0nSn9j3T42UE/g2xVNMn18PJxZvkBEA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm\": [\"micromark-extension-mdxjs-esm@1.0.5\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-position-from-estree\": \"^1.1.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-xNRBw4aoURcyz/S69B19WnZAkWJMxHMT5hE36GtDAyhoyn/8TuAeqjFJQlwk+MKQsUD7b3l7kFX+vlfVWgcX1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"@react-native/dev-middleware/serve-static/send/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"pkg-dir/find-up/locate-path/p-locate/p-limit\": [\"p-limit@2.3.0\", \"\", { \"dependencies\": { \"p-try\": \"^2.0.0\" } }, \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-mdx-expression\": [\"micromark-factory-mdx-expression@1.0.9\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-position-from-estree\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-jGIWzSmNfdnkJq05c7b0+Wv0Kfz3NJ3N4cBjnbO4zjXIlxJr+f8lk+5ZmwFvqdAbUy2q6B5rCY//g0QAAaXDWA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@1.2.3\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\", \"estree-util-visit\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression\": [\"micromark-factory-mdx-expression@1.0.9\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-position-from-estree\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-jGIWzSmNfdnkJq05c7b0+Wv0Kfz3NJ3N4cBjnbO4zjXIlxJr+f8lk+5ZmwFvqdAbUy2q6B5rCY//g0QAAaXDWA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@1.2.3\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\", \"estree-util-visit\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-combine-extensions/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/unist-util-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-mdx-expression/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn/estree-util-visit\": [\"estree-util-visit@1.2.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\" } }, \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression/micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@1.2.3\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\", \"estree-util-visit\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/vfile-message/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-events-to-acorn/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-events-to-acorn/estree-util-visit\": [\"estree-util-visit@1.2.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\" } }, \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/vfile-message/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-combine-extensions/micromark-util-chunked/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-mdx-expression/vfile-message/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression/micromark-util-events-to-acorn/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression/micromark-util-events-to-acorn/estree-util-visit\": [\"estree-util-visit@1.2.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\" } }, \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\"],\n  }\n}\n","postContent":"{\n  \"lockfileVersion\": 1,\n  \"workspaces\": {\n    \"\": {\n      \"name\": \"codebuff-project\",\n      \"dependencies\": {\n        \"@t3-oss/env-nextjs\": \"^0.7.3\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@tanstack/react-query\": \"^5.59.16\",\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/lodash\": \"4.17.7\",\n        \"@types/node\": \"^22.9.0\",\n        \"@types/node-fetch\": \"^2.6.12\",\n        \"@types/parse-path\": \"^7.1.0\",\n        \"@typescript-eslint/eslint-plugin\": \"^6.17\",\n        \"bun-types\": \"^1.2.2\",\n        \"eslint-config-prettier\": \"^9.1.0\",\n        \"eslint-plugin-import\": \"^2.29.1\",\n        \"eslint-plugin-unused-imports\": \"^4.1.4\",\n        \"ignore\": \"^6.0.2\",\n        \"lodash\": \"4.17.21\",\n        \"prettier\": \"3.3.2\",\n        \"ts-node\": \"^10.9.2\",\n        \"ts-pattern\": \"^5.5.0\",\n        \"tsc-alias\": \"1.7.0\",\n        \"tsconfig-paths\": \"4.2.0\",\n        \"types\": \"^0.1.1\",\n        \"typescript\": \"5.5.4\",\n        \"typescript-eslint\": \"^7.17.0\",\n      },\n    },\n    \".agents\": {\n      \"name\": \"@codebuff/agents\",\n      \"version\": \"0.0.0\",\n    },\n    \"backend\": {\n      \"name\": \"@codebuff/backend\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@ai-sdk/google-vertex\": \"3.0.6\",\n        \"@ai-sdk/openai\": \"2.0.11\",\n        \"@codebuff/billing\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@codebuff/internal\": \"workspace:*\",\n        \"@google-cloud/vertexai\": \"1.10.0\",\n        \"@google/generative-ai\": \"0.24.1\",\n        \"@jitl/quickjs-wasmfile-release-sync\": \"0.31.0\",\n        \"@openrouter/ai-sdk-provider\": \"1.1.2\",\n        \"ai\": \"5.0.0\",\n        \"cors\": \"^2.8.5\",\n        \"diff\": \"5.2.0\",\n        \"dotenv\": \"16.4.5\",\n        \"express\": \"4.19.2\",\n        \"gpt-tokenizer\": \"2.8.1\",\n        \"ignore\": \"5.3.2\",\n        \"lodash\": \"*\",\n        \"openai\": \"^4.78.1\",\n        \"pino\": \"9.4.0\",\n        \"postgres\": \"3.4.4\",\n        \"posthog-node\": \"^4.14.0\",\n        \"quickjs-emscripten-core\": \"0.31.0\",\n        \"ts-pattern\": \"5.3.1\",\n        \"ws\": \"8.18.0\",\n        \"zod\": \"3.25.67\",\n        \"zod-from-json-schema\": \"0.4.2\",\n      },\n      \"devDependencies\": {\n        \"@types/cors\": \"^2.8.19\",\n        \"@types/diff\": \"^5.0.3\",\n        \"@types/express\": \"^4.17.13\",\n        \"@types/ws\": \"^8.5.5\",\n      },\n    },\n    \"common\": {\n      \"name\": \"@codebuff/common\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@auth/drizzle-adapter\": \"^1.5.0\",\n        \"@types/pg\": \"^8.11.10\",\n        \"@types/readable-stream\": \"^4.0.18\",\n        \"@types/seedrandom\": \"^3.0.8\",\n        \"ai\": \"5.0.0\",\n        \"drizzle-kit\": \"0.28.1\",\n        \"drizzle-orm\": \"0.36.4\",\n        \"ignore\": \"5.3.2\",\n        \"lodash\": \"*\",\n        \"next-auth\": \"^4.24.7\",\n        \"partial-json\": \"^0.1.7\",\n        \"pg\": \"^8.14.1\",\n        \"readable-stream\": \"^4.7.0\",\n        \"seedrandom\": \"^3.0.5\",\n        \"stripe\": \"^16.11.0\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@types/parse-path\": \"^7.1.0\",\n      },\n    },\n    \"evals\": {\n      \"name\": \"@codebuff/evals\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/backend\": \"workspace:*\",\n        \"@codebuff/code-map\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@codebuff/internal\": \"workspace:*\",\n        \"@codebuff/npm-app\": \"workspace:*\",\n        \"@oclif/core\": \"^4.4.0\",\n        \"@oclif/parser\": \"^3.8.17\",\n        \"async\": \"^3.2.6\",\n        \"lodash\": \"^4.17.21\",\n        \"p-limit\": \"^6.2.0\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@types/async\": \"^3.2.24\",\n      },\n    },\n    \"npm-app\": {\n      \"name\": \"@codebuff/npm-app\",\n      \"version\": \"1.0.0\",\n      \"bin\": {\n        \"codebuff\": \"dist/index.js\",\n      },\n      \"dependencies\": {\n        \"@codebuff/code-map\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@types/diff\": \"5.2.1\",\n        \"@types/micromatch\": \"^4.0.9\",\n        \"@vscode/ripgrep\": \"1.15.9\",\n        \"ai\": \"5.0.0\",\n        \"axios\": \"1.7.4\",\n        \"commander\": \"^13.1.0\",\n        \"diff\": \"5.2.0\",\n        \"git-url-parse\": \"^16.1.0\",\n        \"ignore\": \"7.0.3\",\n        \"isomorphic-git\": \"^1.29.0\",\n        \"lodash\": \"*\",\n        \"micromatch\": \"^4.0.8\",\n        \"nanoid\": \"5.0.7\",\n        \"onetime\": \"5.1.2\",\n        \"picocolors\": \"1.1.0\",\n        \"pino\": \"9.4.0\",\n        \"posthog-node\": \"4.17.2\",\n        \"puppeteer-core\": \"^24.2.0\",\n        \"string-width\": \"^7.2.0\",\n        \"systeminformation\": \"5.23.4\",\n        \"ts-pattern\": \"5.3.1\",\n        \"wrap-ansi\": \"^9.0.0\",\n        \"ws\": \"8.18.0\",\n        \"zod\": \"3.25.67\",\n      },\n    },\n    \"packages/bigquery\": {\n      \"name\": \"@codebuff/bigquery\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/common\": \"workspace:*\",\n        \"@google-cloud/bigquery\": \"^7.9.4\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"packages/billing\": {\n      \"name\": \"@codebuff/billing\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/common\": \"workspace:*\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"packages/build-tools\": {\n      \"name\": \"@codebuff/build-tools\",\n      \"version\": \"1.0.0\",\n      \"devDependencies\": {\n        \"@nx/devkit\": \"^20.8.1\",\n        \"typescript\": \"5.5.4\",\n      },\n    },\n    \"packages/code-map\": {\n      \"name\": \"@codebuff/code-map\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@vscode/tree-sitter-wasm\": \"0.1.4\",\n        \"web-tree-sitter\": \"0.25.6\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"packages/internal\": {\n      \"name\": \"@codebuff/internal\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/common\": \"workspace:*\",\n        \"drizzle-orm\": \"*\",\n        \"loops\": \"^5.0.1\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"scripts\": {\n      \"name\": \"@codebuff/scripts\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@codebuff/backend\": \"workspace:*\",\n        \"@codebuff/bigquery\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"lodash\": \"^4.17.21\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/lodash\": \"^4.14.195\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"sdk\": {\n      \"name\": \"@codebuff/sdk\",\n      \"version\": \"0.1.9\",\n      \"dependencies\": {\n        \"ai\": \"^5.0.0\",\n        \"zod\": \"^4.0.0\",\n      },\n      \"devDependencies\": {\n        \"@types/bun\": \"^1.2.11\",\n        \"@types/node\": \"22\",\n      },\n    },\n    \"web\": {\n      \"name\": \"@codebuff/web\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@auth/drizzle-adapter\": \"^1.8.0\",\n        \"@codebuff/billing\": \"workspace:*\",\n        \"@codebuff/common\": \"workspace:*\",\n        \"@codebuff/internal\": \"workspace:*\",\n        \"@emotion/is-prop-valid\": \"^1.3.1\",\n        \"@hookform/resolvers\": \"^3.9.0\",\n        \"@mdx-js/loader\": \"^3.1.0\",\n        \"@mdx-js/react\": \"^3.1.0\",\n        \"@next/mdx\": \"^15.2.4\",\n        \"@radix-ui/react-collapsible\": \"^1.1.3\",\n        \"@radix-ui/react-dialog\": \"^1.1.6\",\n        \"@radix-ui/react-dropdown-menu\": \"^2.1.6\",\n        \"@radix-ui/react-label\": \"^2.1.2\",\n        \"@radix-ui/react-progress\": \"^1.1.7\",\n        \"@radix-ui/react-radio-group\": \"^1.2.4\",\n        \"@radix-ui/react-select\": \"^2.2.5\",\n        \"@radix-ui/react-separator\": \"^1.1.2\",\n        \"@radix-ui/react-slider\": \"^1.2.4\",\n        \"@radix-ui/react-slot\": \"^1.1.2\",\n        \"@radix-ui/react-switch\": \"^1.1.4\",\n        \"@radix-ui/react-tabs\": \"^1.1.3\",\n        \"@radix-ui/react-toast\": \"^1.2.6\",\n        \"@radix-ui/react-tooltip\": \"^1.1.8\",\n        \"@react-three/drei\": \"^9.112.0\",\n        \"@react-three/fiber\": \"^8.17.7\",\n        \"@stripe/stripe-js\": \"^4.4.0\",\n        \"@tanstack/react-query\": \"^5.80.6\",\n        \"@tanstack/react-virtual\": \"^3.13.6\",\n        \"aceternity-ui\": \"^0.2.2\",\n        \"class-variance-authority\": \"^0.7.1\",\n        \"clsx\": \"^2.1.1\",\n        \"cobe\": \"^0.6.3\",\n        \"contentlayer\": \"0.3.4\",\n        \"discord.js\": \"^14.18.0\",\n        \"dotenv\": \"^16.4.7\",\n        \"framer-motion\": \"^11.13.3\",\n        \"lucide-react\": \"^0.487.0\",\n        \"mermaid\": \"^11.8.1\",\n        \"next\": \"14.2.13\",\n        \"next-auth\": \"^4.24.11\",\n        \"next-contentlayer\": \"0.3.4\",\n        \"next-themes\": \"^0.3.0\",\n        \"nextjs-linkedin-insight-tag\": \"^0.0.6\",\n        \"pg\": \"^8.14.1\",\n        \"pino\": \"^9.6.0\",\n        \"posthog-js\": \"^1.234.10\",\n        \"react\": \"^18\",\n        \"react-dom\": \"^18\",\n        \"react-hook-form\": \"^7.55.0\",\n        \"react-spring\": \"^9.7.5\",\n        \"server-only\": \"^0.0.1\",\n        \"shadcn-ui\": \"^0.9.4\",\n        \"stripe\": \"^16.11.0\",\n        \"tailwind-merge\": \"^2.5.2\",\n        \"three\": \"^0.168.0\",\n        \"three-globe\": \"^2.42.3\",\n        \"ts-pattern\": \"^5.7.0\",\n        \"use-debounce\": \"^10.0.4\",\n        \"zod\": \"3.25.67\",\n      },\n      \"devDependencies\": {\n        \"@commitlint/cli\": \"^19.8.0\",\n        \"@commitlint/config-conventional\": \"^19.8.0\",\n        \"@mdx-js/mdx\": \"^3.1.0\",\n        \"@playwright/test\": \"^1.51.1\",\n        \"@shadcn/ui\": \"^0.0.4\",\n        \"@tailwindcss/typography\": \"^0.5.15\",\n        \"@testing-library/jest-dom\": \"^6.6.3\",\n        \"@testing-library/react\": \"^16.3.0\",\n        \"@types/jest\": \"^29.5.14\",\n        \"@types/node\": \"^22.14.0\",\n        \"@types/pg\": \"^8.11.11\",\n        \"@types/react\": \"^18\",\n        \"@types/react-dom\": \"^18\",\n        \"@typescript-eslint/eslint-plugin\": \"^8.29.1\",\n        \"@typescript-eslint/parser\": \"^8.29.1\",\n        \"autoprefixer\": \"^10.4.21\",\n        \"eslint\": \"^8.57.0\",\n        \"eslint-config-next\": \"14.2.11\",\n        \"eslint-config-prettier\": \"^9.1.0\",\n        \"eslint-plugin-prettier\": \"^5.2.6\",\n        \"eslint-plugin-tailwindcss\": \"^3.18.0\",\n        \"husky\": \"^9.1.7\",\n        \"jest\": \"^29.7.0\",\n        \"jest-environment-jsdom\": \"^29.7.0\",\n        \"lint-staged\": \"^15.5.0\",\n        \"postcss\": \"^8\",\n        \"prettier\": \"^3.5.3\",\n        \"remark-mdx\": \"^3.1.0\",\n        \"remark-parse\": \"^11.0.0\",\n        \"remark-stringify\": \"^11.0.0\",\n        \"tailwindcss\": \"^3.4.11\",\n        \"tailwindcss-animate\": \"^1.0.7\",\n        \"to-vfile\": \"^8.0.0\",\n        \"typescript\": \"^5\",\n        \"unified\": \"^11.0.5\",\n        \"unist-util-visit\": \"^5.0.0\",\n        \"vfile-matter\": \"^5.0.1\",\n      },\n    },\n  },\n  \"overrides\": {\n    \"zod\": \"3.25.67\",\n  },\n  \"packages\": {\n    \"@adobe/css-tools\": [\"@adobe/css-tools@4.4.3\", \"\", {}, \"sha512-VQKMkwriZbaOgVCby1UDY/LDk5fIjhQicCvVPFqfe+69fWaPWydbWJ3wRt59/YzIwda1I81loas3oCoHxnqvdA==\"],\n\n    \"@ai-sdk/anthropic\": [\"@ai-sdk/anthropic@2.0.2\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-R3xmEbbntgdKo/S3TDuW77RYALpo/OKQm4oSjQmryDAFiVGB6X6guZAr7FWt48C4fKGROScAu+y1MJTbzisfOQ==\"],\n\n    \"@ai-sdk/gateway\": [\"@ai-sdk/gateway@1.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.0\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-VEm87DyRx1yIPywbTy8ntoyh4jEDv1rJ88m+2I7zOm08jJI5BhFtAWh0OF6YzZu1Vu4NxhOWO4ssGdsqydDQ3A==\"],\n\n    \"@ai-sdk/google\": [\"@ai-sdk/google@2.0.5\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-jZjfD5MwVbujFxy4RJFIysNHRpfOomFFlq1rMDFSHwSdDkT1r3SQN0ORDu5RR750lss6W2PiujbH6cum/o/y3w==\"],\n\n    \"@ai-sdk/google-vertex\": [\"@ai-sdk/google-vertex@3.0.6\", \"\", { \"dependencies\": { \"@ai-sdk/anthropic\": \"2.0.2\", \"@ai-sdk/google\": \"2.0.5\", \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\", \"google-auth-library\": \"^9.15.0\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-8p+sLhv5JLcfi/V+6wdE6xdLf6Upn5COfSkkiEgg5YCDzotrgX6gudd80Ev6GjrJGK+2N0cCm49BFznh8PEFNQ==\"],\n\n    \"@ai-sdk/openai\": [\"@ai-sdk/openai@2.0.11\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.2\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-t4i+vS825EC0Gc2DdTsC5UkXIu1ScOi363noTD8DuFZp6WFPHRnW6HCyEQKxEm6cNjv3BW89rdXWqq932IFJhA==\"],\n\n    \"@ai-sdk/provider\": [\"@ai-sdk/provider@2.0.0\", \"\", { \"dependencies\": { \"json-schema\": \"^0.4.0\" } }, \"sha512-6o7Y2SeO9vFKB8lArHXehNuusnpddKPk7xqL7T2/b+OvXMRIXUO1rR4wcv1hAFUAT9avGZshty3Wlua/XA7TvA==\"],\n\n    \"@ai-sdk/provider-utils\": [\"@ai-sdk/provider-utils@3.0.2\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@standard-schema/spec\": \"^1.0.0\", \"eventsource-parser\": \"^3.0.3\", \"zod-to-json-schema\": \"^3.24.1\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-0a5a6VafkV6+0irdpqnub8WE6qzG2VMsDBpXb9NQIz8c4TG8fI+GSTFIL9sqrLEwXrHdiRj7fwJsrir4jClL0w==\"],\n\n    \"@alloc/quick-lru\": [\"@alloc/quick-lru@5.2.0\", \"\", {}, \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\"],\n\n    \"@ampproject/remapping\": [\"@ampproject/remapping@2.3.0\", \"\", { \"dependencies\": { \"@jridgewell/gen-mapping\": \"^0.3.5\", \"@jridgewell/trace-mapping\": \"^0.3.24\" } }, \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\"],\n\n    \"@antfu/install-pkg\": [\"@antfu/install-pkg@1.1.0\", \"\", { \"dependencies\": { \"package-manager-detector\": \"^1.3.0\", \"tinyexec\": \"^1.0.1\" } }, \"sha512-MGQsmw10ZyI+EJo45CdSER4zEb+p31LpDAFp2Z3gkSd1yqVZGi0Ebx++YTEMonJy4oChEMLsxZ64j8FH6sSqtQ==\"],\n\n    \"@antfu/ni\": [\"@antfu/ni@0.21.12\", \"\", { \"bin\": { \"na\": \"bin/na.mjs\", \"ni\": \"bin/ni.mjs\", \"nr\": \"bin/nr.mjs\", \"nu\": \"bin/nu.mjs\", \"nci\": \"bin/nci.mjs\", \"nlx\": \"bin/nlx.mjs\", \"nun\": \"bin/nun.mjs\" } }, \"sha512-2aDL3WUv8hMJb2L3r/PIQWsTLyq7RQr3v9xD16fiz6O8ys1xEyLhhTOv8gxtZvJiTzjTF5pHoArvRdesGL1DMQ==\"],\n\n    \"@antfu/utils\": [\"@antfu/utils@8.1.1\", \"\", {}, \"sha512-Mex9nXf9vR6AhcXmMrlz/HVgYYZpVGJ6YlPgwl7UnaFpnshXs6EK/oa5Gpf3CzENMjkvEx2tQtntGnb7UtSTOQ==\"],\n\n    \"@auth/core\": [\"@auth/core@0.40.0\", \"\", { \"dependencies\": { \"@panva/hkdf\": \"^1.2.1\", \"jose\": \"^6.0.6\", \"oauth4webapi\": \"^3.3.0\", \"preact\": \"10.24.3\", \"preact-render-to-string\": \"6.5.11\" }, \"peerDependencies\": { \"@simplewebauthn/browser\": \"^9.0.1\", \"@simplewebauthn/server\": \"^9.0.2\", \"nodemailer\": \"^6.8.0\" }, \"optionalPeers\": [\"@simplewebauthn/browser\", \"@simplewebauthn/server\", \"nodemailer\"] }, \"sha512-n53uJE0RH5SqZ7N1xZoMKekbHfQgjd0sAEyUbE+IYJnmuQkbvuZnXItCU7d+i7Fj8VGOgqvNO7Mw4YfBTlZeQw==\"],\n\n    \"@auth/drizzle-adapter\": [\"@auth/drizzle-adapter@1.10.0\", \"\", { \"dependencies\": { \"@auth/core\": \"0.40.0\" } }, \"sha512-3MKsdAINTfvV4QKev8PFMNG93HJEUHh9sggDXnmUmriFogRf8qLvgqnPsTlfUyWcLwTzzrrYjeu8CGM+4IxHwQ==\"],\n\n    \"@babel/code-frame\": [\"@babel/code-frame@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-validator-identifier\": \"^7.27.1\", \"js-tokens\": \"^4.0.0\", \"picocolors\": \"^1.1.1\" } }, \"sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==\"],\n\n    \"@babel/compat-data\": [\"@babel/compat-data@7.28.0\", \"\", {}, \"sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==\"],\n\n    \"@babel/core\": [\"@babel/core@7.28.0\", \"\", { \"dependencies\": { \"@ampproject/remapping\": \"^2.2.0\", \"@babel/code-frame\": \"^7.27.1\", \"@babel/generator\": \"^7.28.0\", \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-module-transforms\": \"^7.27.3\", \"@babel/helpers\": \"^7.27.6\", \"@babel/parser\": \"^7.28.0\", \"@babel/template\": \"^7.27.2\", \"@babel/traverse\": \"^7.28.0\", \"@babel/types\": \"^7.28.0\", \"convert-source-map\": \"^2.0.0\", \"debug\": \"^4.1.0\", \"gensync\": \"^1.0.0-beta.2\", \"json5\": \"^2.2.3\", \"semver\": \"^6.3.1\" } }, \"sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==\"],\n\n    \"@babel/generator\": [\"@babel/generator@7.28.0\", \"\", { \"dependencies\": { \"@babel/parser\": \"^7.28.0\", \"@babel/types\": \"^7.28.0\", \"@jridgewell/gen-mapping\": \"^0.3.12\", \"@jridgewell/trace-mapping\": \"^0.3.28\", \"jsesc\": \"^3.0.2\" } }, \"sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==\"],\n\n    \"@babel/helper-annotate-as-pure\": [\"@babel/helper-annotate-as-pure@7.27.3\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.27.3\" } }, \"sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==\"],\n\n    \"@babel/helper-compilation-targets\": [\"@babel/helper-compilation-targets@7.27.2\", \"\", { \"dependencies\": { \"@babel/compat-data\": \"^7.27.2\", \"@babel/helper-validator-option\": \"^7.27.1\", \"browserslist\": \"^4.24.0\", \"lru-cache\": \"^5.1.1\", \"semver\": \"^6.3.1\" } }, \"sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==\"],\n\n    \"@babel/helper-create-class-features-plugin\": [\"@babel/helper-create-class-features-plugin@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-member-expression-to-functions\": \"^7.27.1\", \"@babel/helper-optimise-call-expression\": \"^7.27.1\", \"@babel/helper-replace-supers\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-QwGAmuvM17btKU5VqXfb+Giw4JcN0hjuufz3DYnpeVDvZLAObloM77bhMXiqry3Iio+Ai4phVRDwl6WU10+r5A==\"],\n\n    \"@babel/helper-create-regexp-features-plugin\": [\"@babel/helper-create-regexp-features-plugin@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"regexpu-core\": \"^6.2.0\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-uVDC72XVf8UbrH5qQTc18Agb8emwjTiZrQE11Nv3CuBEZmVvTwwE9CBUEvHku06gQCAyYf8Nv6ja1IN+6LMbxQ==\"],\n\n    \"@babel/helper-define-polyfill-provider\": [\"@babel/helper-define-polyfill-provider@0.6.5\", \"\", { \"dependencies\": { \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"debug\": \"^4.4.1\", \"lodash.debounce\": \"^4.0.8\", \"resolve\": \"^1.22.10\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-uJnGFcPsWQK8fvjgGP5LZUZZsYGIoPeRjSF5PGwrelYgq7Q15/Ft9NGFp1zglwgIv//W0uG4BevRuSJRyylZPg==\"],\n\n    \"@babel/helper-globals\": [\"@babel/helper-globals@7.28.0\", \"\", {}, \"sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==\"],\n\n    \"@babel/helper-member-expression-to-functions\": [\"@babel/helper-member-expression-to-functions@7.27.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==\"],\n\n    \"@babel/helper-module-imports\": [\"@babel/helper-module-imports@7.27.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==\"],\n\n    \"@babel/helper-module-transforms\": [\"@babel/helper-module-transforms@7.27.3\", \"\", { \"dependencies\": { \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-validator-identifier\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.3\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==\"],\n\n    \"@babel/helper-optimise-call-expression\": [\"@babel/helper-optimise-call-expression@7.27.1\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.27.1\" } }, \"sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==\"],\n\n    \"@babel/helper-plugin-utils\": [\"@babel/helper-plugin-utils@7.27.1\", \"\", {}, \"sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==\"],\n\n    \"@babel/helper-remap-async-to-generator\": [\"@babel/helper-remap-async-to-generator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-wrap-function\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-7fiA521aVw8lSPeI4ZOD3vRFkoqkJcS+z4hFo82bFSH/2tNd6eJ5qCVMS5OzDmZh/kaHQeBaeyxK6wljcPtveA==\"],\n\n    \"@babel/helper-replace-supers\": [\"@babel/helper-replace-supers@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-member-expression-to-functions\": \"^7.27.1\", \"@babel/helper-optimise-call-expression\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==\"],\n\n    \"@babel/helper-skip-transparent-expression-wrappers\": [\"@babel/helper-skip-transparent-expression-wrappers@7.27.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==\"],\n\n    \"@babel/helper-string-parser\": [\"@babel/helper-string-parser@7.27.1\", \"\", {}, \"sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==\"],\n\n    \"@babel/helper-validator-identifier\": [\"@babel/helper-validator-identifier@7.27.1\", \"\", {}, \"sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==\"],\n\n    \"@babel/helper-validator-option\": [\"@babel/helper-validator-option@7.27.1\", \"\", {}, \"sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==\"],\n\n    \"@babel/helper-wrap-function\": [\"@babel/helper-wrap-function@7.27.1\", \"\", { \"dependencies\": { \"@babel/template\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-NFJK2sHUvrjo8wAU/nQTWU890/zB2jj0qBcCbZbbf+005cAsv6tMjXz31fBign6M5ov1o0Bllu+9nbqkfsjjJQ==\"],\n\n    \"@babel/helpers\": [\"@babel/helpers@7.28.2\", \"\", { \"dependencies\": { \"@babel/template\": \"^7.27.2\", \"@babel/types\": \"^7.28.2\" } }, \"sha512-/V9771t+EgXz62aCcyofnQhGM8DQACbRhvzKFsXKC9QM+5MadF8ZmIm0crDMaz3+o0h0zXfJnd4EhbYbxsrcFw==\"],\n\n    \"@babel/parser\": [\"@babel/parser@7.28.0\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.28.0\" }, \"bin\": \"./bin/babel-parser.js\" }, \"sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==\"],\n\n    \"@babel/plugin-proposal-export-default-from\": [\"@babel/plugin-proposal-export-default-from@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-hjlsMBl1aJc5lp8MoCDEZCiYzlgdRAShOjAfRw6X+GlpLpUPU7c3XNLsKFZbQk/1cRzBlJ7CXg3xJAJMrFa1Uw==\"],\n\n    \"@babel/plugin-syntax-async-generators\": [\"@babel/plugin-syntax-async-generators@7.8.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\"],\n\n    \"@babel/plugin-syntax-bigint\": [\"@babel/plugin-syntax-bigint@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==\"],\n\n    \"@babel/plugin-syntax-class-properties\": [\"@babel/plugin-syntax-class-properties@7.12.13\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.12.13\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\"],\n\n    \"@babel/plugin-syntax-class-static-block\": [\"@babel/plugin-syntax-class-static-block@7.14.5\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\"],\n\n    \"@babel/plugin-syntax-dynamic-import\": [\"@babel/plugin-syntax-dynamic-import@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\"],\n\n    \"@babel/plugin-syntax-export-default-from\": [\"@babel/plugin-syntax-export-default-from@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-eBC/3KSekshx19+N40MzjWqJd7KTEdOoLesAfa4IDFI8eRz5a47i5Oszus6zG/cwIXN63YhgLOMSSNJx49sENg==\"],\n\n    \"@babel/plugin-syntax-flow\": [\"@babel/plugin-syntax-flow@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-p9OkPbZ5G7UT1MofwYFigGebnrzGJacoBSQM0/6bi/PUMVE+qlWDD/OalvQKbwgQzU6dl0xAv6r4X7Jme0RYxA==\"],\n\n    \"@babel/plugin-syntax-import-attributes\": [\"@babel/plugin-syntax-import-attributes@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==\"],\n\n    \"@babel/plugin-syntax-import-meta\": [\"@babel/plugin-syntax-import-meta@7.10.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.10.4\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\"],\n\n    \"@babel/plugin-syntax-json-strings\": [\"@babel/plugin-syntax-json-strings@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\"],\n\n    \"@babel/plugin-syntax-jsx\": [\"@babel/plugin-syntax-jsx@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-y8YTNIeKoyhGd9O0Jiyzyyqk8gdjnumGTQPsz0xOZOQ2RmkVJeZ1vmmfIvFEKqucBG6axJGBZDE/7iI5suUI/w==\"],\n\n    \"@babel/plugin-syntax-logical-assignment-operators\": [\"@babel/plugin-syntax-logical-assignment-operators@7.10.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.10.4\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\"],\n\n    \"@babel/plugin-syntax-nullish-coalescing-operator\": [\"@babel/plugin-syntax-nullish-coalescing-operator@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\"],\n\n    \"@babel/plugin-syntax-numeric-separator\": [\"@babel/plugin-syntax-numeric-separator@7.10.4\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.10.4\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\"],\n\n    \"@babel/plugin-syntax-object-rest-spread\": [\"@babel/plugin-syntax-object-rest-spread@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\"],\n\n    \"@babel/plugin-syntax-optional-catch-binding\": [\"@babel/plugin-syntax-optional-catch-binding@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\"],\n\n    \"@babel/plugin-syntax-optional-chaining\": [\"@babel/plugin-syntax-optional-chaining@7.8.3\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.8.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\"],\n\n    \"@babel/plugin-syntax-private-property-in-object\": [\"@babel/plugin-syntax-private-property-in-object@7.14.5\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\"],\n\n    \"@babel/plugin-syntax-top-level-await\": [\"@babel/plugin-syntax-top-level-await@7.14.5\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\"],\n\n    \"@babel/plugin-syntax-typescript\": [\"@babel/plugin-syntax-typescript@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==\"],\n\n    \"@babel/plugin-transform-arrow-functions\": [\"@babel/plugin-transform-arrow-functions@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-8Z4TGic6xW70FKThA5HYEKKyBpOOsucTOD1DjU3fZxDg+K3zBJcXMFnt/4yQiZnf5+MiOMSXQ9PaEK/Ilh1DeA==\"],\n\n    \"@babel/plugin-transform-async-generator-functions\": [\"@babel/plugin-transform-async-generator-functions@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-remap-async-to-generator\": \"^7.27.1\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-BEOdvX4+M765icNPZeidyADIvQ1m1gmunXufXxvRESy/jNNyfovIqUyE7MVgGBjWktCoJlzvFA1To2O4ymIO3Q==\"],\n\n    \"@babel/plugin-transform-async-to-generator\": [\"@babel/plugin-transform-async-to-generator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-remap-async-to-generator\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-NREkZsZVJS4xmTr8qzE5y8AfIPqsdQfRuUiLRTEzb7Qii8iFWCyDKaUV2c0rCuh4ljDZ98ALHP/PetiBV2nddA==\"],\n\n    \"@babel/plugin-transform-block-scoping\": [\"@babel/plugin-transform-block-scoping@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-gKKnwjpdx5sER/wl0WN0efUBFzF/56YZO0RJrSYP4CljXnP31ByY7fol89AzomdlLNzI36AvOTmYHsnZTCkq8Q==\"],\n\n    \"@babel/plugin-transform-class-properties\": [\"@babel/plugin-transform-class-properties@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-D0VcalChDMtuRvJIu3U/fwWjf8ZMykz5iZsg77Nuj821vCKI3zCyRLwRdWbsuJ/uRwZhZ002QtCqIkwC/ZkvbA==\"],\n\n    \"@babel/plugin-transform-classes\": [\"@babel/plugin-transform-classes@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.3\", \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-globals\": \"^7.28.0\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-replace-supers\": \"^7.27.1\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-IjM1IoJNw72AZFlj33Cu8X0q2XK/6AaVC3jQu+cgQ5lThWD5ajnuUAml80dqRmOhmPkTH8uAwnpMu9Rvj0LTRA==\"],\n\n    \"@babel/plugin-transform-computed-properties\": [\"@babel/plugin-transform-computed-properties@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/template\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-lj9PGWvMTVksbWiDT2tW68zGS/cyo4AkZ/QTp0sQT0mjPopCmrSkzxeXkznjqBxzDI6TclZhOJbBmbBLjuOZUw==\"],\n\n    \"@babel/plugin-transform-destructuring\": [\"@babel/plugin-transform-destructuring@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-v1nrSMBiKcodhsyJ4Gf+Z0U/yawmJDBOTpEB3mcQY52r9RIyPneGyAS/yM6seP/8I+mWI3elOMtT5dB8GJVs+A==\"],\n\n    \"@babel/plugin-transform-flow-strip-types\": [\"@babel/plugin-transform-flow-strip-types@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/plugin-syntax-flow\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-G5eDKsu50udECw7DL2AcsysXiQyB7Nfg521t2OAJ4tbfTJ27doHLeF/vlI1NZGlLdbb/v+ibvtL1YBQqYOwJGg==\"],\n\n    \"@babel/plugin-transform-for-of\": [\"@babel/plugin-transform-for-of@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-BfbWFFEJFQzLCQ5N8VocnCtA8J1CLkNTe2Ms2wocj75dd6VpiqS5Z5quTYcUoo4Yq+DN0rtikODccuv7RU81sw==\"],\n\n    \"@babel/plugin-transform-function-name\": [\"@babel/plugin-transform-function-name@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-compilation-targets\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/traverse\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-1bQeydJF9Nr1eBCMMbC+hdwmRlsv5XYOMu03YSWFwNs0HsAmtSxxF1fyuYPqemVldVyFmlCU7w8UE14LupUSZQ==\"],\n\n    \"@babel/plugin-transform-literals\": [\"@babel/plugin-transform-literals@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-0HCFSepIpLTkLcsi86GG3mTUzxV5jpmbv97hTETW3yzrAij8aqlD36toB1D0daVFJM8NK6GvKO0gslVQmm+zZA==\"],\n\n    \"@babel/plugin-transform-logical-assignment-operators\": [\"@babel/plugin-transform-logical-assignment-operators@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-SJvDs5dXxiae4FbSL1aBJlG4wvl594N6YEVVn9e3JGulwioy6z3oPjx/sQBO3Y4NwUu5HNix6KJ3wBZoewcdbw==\"],\n\n    \"@babel/plugin-transform-modules-commonjs\": [\"@babel/plugin-transform-modules-commonjs@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-module-transforms\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-OJguuwlTYlN0gBZFRPqwOGNWssZjfIUdS7HMYtN8c1KmwpwHFBwTeFZrg9XZa+DFTitWOW5iTAG7tyCUPsCCyw==\"],\n\n    \"@babel/plugin-transform-named-capturing-groups-regex\": [\"@babel/plugin-transform-named-capturing-groups-regex@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-regexp-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-SstR5JYy8ddZvD6MhV0tM/j16Qds4mIpJTOd1Yu9J9pJjH93bxHECF7pgtc28XvkzTD6Pxcm/0Z73Hvk7kb3Ng==\"],\n\n    \"@babel/plugin-transform-nullish-coalescing-operator\": [\"@babel/plugin-transform-nullish-coalescing-operator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-aGZh6xMo6q9vq1JGcw58lZ1Z0+i0xB2x0XaauNIUXd6O1xXc3RwoWEBlsTQrY4KQ9Jf0s5rgD6SiNkaUdJegTA==\"],\n\n    \"@babel/plugin-transform-numeric-separator\": [\"@babel/plugin-transform-numeric-separator@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-fdPKAcujuvEChxDBJ5c+0BTaS6revLV7CJL08e4m3de8qJfNIuCc2nc7XJYOjBoTMJeqSmwXJ0ypE14RCjLwaw==\"],\n\n    \"@babel/plugin-transform-object-rest-spread\": [\"@babel/plugin-transform-object-rest-spread@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-compilation-targets\": \"^7.27.2\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/plugin-transform-destructuring\": \"^7.28.0\", \"@babel/plugin-transform-parameters\": \"^7.27.7\", \"@babel/traverse\": \"^7.28.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-9VNGikXxzu5eCiQjdE4IZn8sb9q7Xsk5EXLDBKUYg1e/Tve8/05+KJEtcxGxAgCY5t/BpKQM+JEL/yT4tvgiUA==\"],\n\n    \"@babel/plugin-transform-optional-catch-binding\": [\"@babel/plugin-transform-optional-catch-binding@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-txEAEKzYrHEX4xSZN4kJ+OfKXFVSWKB2ZxM9dpcE3wT7smwkNmXo5ORRlVzMVdJbD+Q8ILTgSD7959uj+3Dm3Q==\"],\n\n    \"@babel/plugin-transform-optional-chaining\": [\"@babel/plugin-transform-optional-chaining@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-BQmKPPIuc8EkZgNKsv0X4bPmOoayeu4F1YCwx2/CfmDSXDbp7GnzlUH+/ul5VGfRg1AoFPsrIThlEBj2xb4CAg==\"],\n\n    \"@babel/plugin-transform-parameters\": [\"@babel/plugin-transform-parameters@7.27.7\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-qBkYTYCb76RRxUM6CcZA5KRu8K4SM8ajzVeUgVdMVO9NN9uI/GaVmBg/WKJJGnNokV9SY8FxNOVWGXzqzUidBg==\"],\n\n    \"@babel/plugin-transform-private-methods\": [\"@babel/plugin-transform-private-methods@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-10FVt+X55AjRAYI9BrdISN9/AQWHqldOeZDUoLyif1Kn05a56xVBXb8ZouL8pZ9jem8QpXaOt8TS7RHUIS+GPA==\"],\n\n    \"@babel/plugin-transform-private-property-in-object\": [\"@babel/plugin-transform-private-property-in-object@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-5J+IhqTi1XPa0DXF83jYOaARrX+41gOewWbkPyjMNRDqgOCqdffGh8L3f/Ek5utaEBZExjSAzcyjmV9SSAWObQ==\"],\n\n    \"@babel/plugin-transform-react-display-name\": [\"@babel/plugin-transform-react-display-name@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-D6Eujc2zMxKjfa4Zxl4GHMsmhKKZ9VpcqIchJLvwTxad9zWIYulwYItBovpDOoNLISpcZSXoDJ5gaGbQUDqViA==\"],\n\n    \"@babel/plugin-transform-react-jsx\": [\"@babel/plugin-transform-react-jsx@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.1\", \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/plugin-syntax-jsx\": \"^7.27.1\", \"@babel/types\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-2KH4LWGSrJIkVf5tSiBFYuXDAoWRq2MMwgivCf+93dd0GQi8RXLjKA/0EvRnVV5G0hrHczsquXuD01L8s6dmBw==\"],\n\n    \"@babel/plugin-transform-react-jsx-self\": [\"@babel/plugin-transform-react-jsx-self@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==\"],\n\n    \"@babel/plugin-transform-react-jsx-source\": [\"@babel/plugin-transform-react-jsx-source@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==\"],\n\n    \"@babel/plugin-transform-regenerator\": [\"@babel/plugin-transform-regenerator@7.28.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-P0QiV/taaa3kXpLY+sXla5zec4E+4t4Aqc9ggHlfZ7a2cp8/x/Gv08jfwEtn9gnnYIMvHx6aoOZ8XJL8eU71Dg==\"],\n\n    \"@babel/plugin-transform-runtime\": [\"@babel/plugin-transform-runtime@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-module-imports\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"babel-plugin-polyfill-corejs2\": \"^0.4.14\", \"babel-plugin-polyfill-corejs3\": \"^0.13.0\", \"babel-plugin-polyfill-regenerator\": \"^0.6.5\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-dGopk9nZrtCs2+nfIem25UuHyt5moSJamArzIoh9/vezUQPmYDOzjaHDCkAzuGJibCIkPup8rMT2+wYB6S73cA==\"],\n\n    \"@babel/plugin-transform-shorthand-properties\": [\"@babel/plugin-transform-shorthand-properties@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-N/wH1vcn4oYawbJ13Y/FxcQrWk63jhfNa7jef0ih7PHSIHX2LB7GWE1rkPrOnka9kwMxb6hMl19p7lidA+EHmQ==\"],\n\n    \"@babel/plugin-transform-spread\": [\"@babel/plugin-transform-spread@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-kpb3HUqaILBJcRFVhFUs6Trdd4mkrzcGXss+6/mxUd273PfbWqSDHRzMT2234gIg2QYfAjvXLSquP1xECSg09Q==\"],\n\n    \"@babel/plugin-transform-sticky-regex\": [\"@babel/plugin-transform-sticky-regex@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-lhInBO5bi/Kowe2/aLdBAawijx+q1pQzicSgnkB6dUPc1+RC8QmJHKf2OjvU+NZWitguJHEaEmbV6VWEouT58g==\"],\n\n    \"@babel/plugin-transform-typescript\": [\"@babel/plugin-transform-typescript@7.28.0\", \"\", { \"dependencies\": { \"@babel/helper-annotate-as-pure\": \"^7.27.3\", \"@babel/helper-create-class-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\", \"@babel/helper-skip-transparent-expression-wrappers\": \"^7.27.1\", \"@babel/plugin-syntax-typescript\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-4AEiDEBPIZvLQaWlc9liCavE0xRM0dNca41WtBeM3jgFptfUOSG9z0uteLhq6+3rq+WB6jIvUwKDTpXEHPJ2Vg==\"],\n\n    \"@babel/plugin-transform-unicode-regex\": [\"@babel/plugin-transform-unicode-regex@7.27.1\", \"\", { \"dependencies\": { \"@babel/helper-create-regexp-features-plugin\": \"^7.27.1\", \"@babel/helper-plugin-utils\": \"^7.27.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0-0\" } }, \"sha512-xvINq24TRojDuyt6JGtHmkVkrfVV3FPT16uytxImLeBZqW3/H52yN+kM1MGuyPkIQxrzKwPHs5U/MP3qKyzkGw==\"],\n\n    \"@babel/runtime\": [\"@babel/runtime@7.28.2\", \"\", {}, \"sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA==\"],\n\n    \"@babel/template\": [\"@babel/template@7.27.2\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.27.1\", \"@babel/parser\": \"^7.27.2\", \"@babel/types\": \"^7.27.1\" } }, \"sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==\"],\n\n    \"@babel/traverse\": [\"@babel/traverse@7.28.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.27.1\", \"@babel/generator\": \"^7.28.0\", \"@babel/helper-globals\": \"^7.28.0\", \"@babel/parser\": \"^7.28.0\", \"@babel/template\": \"^7.27.2\", \"@babel/types\": \"^7.28.0\", \"debug\": \"^4.3.1\" } }, \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\"],\n\n    \"@babel/traverse--for-generate-function-map\": [\"@babel/traverse@7.28.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.27.1\", \"@babel/generator\": \"^7.28.0\", \"@babel/helper-globals\": \"^7.28.0\", \"@babel/parser\": \"^7.28.0\", \"@babel/template\": \"^7.27.2\", \"@babel/types\": \"^7.28.0\", \"debug\": \"^4.3.1\" } }, \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\"],\n\n    \"@babel/types\": [\"@babel/types@7.28.2\", \"\", { \"dependencies\": { \"@babel/helper-string-parser\": \"^7.27.1\", \"@babel/helper-validator-identifier\": \"^7.27.1\" } }, \"sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ==\"],\n\n    \"@bcoe/v8-coverage\": [\"@bcoe/v8-coverage@0.2.3\", \"\", {}, \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\"],\n\n    \"@braintree/sanitize-url\": [\"@braintree/sanitize-url@7.1.1\", \"\", {}, \"sha512-i1L7noDNxtFyL5DmZafWy1wRVhGehQmzZaz1HiN5e7iylJMSZR7ekOV7NsIqa5qBldlLrsKv4HbgFUVlQrz8Mw==\"],\n\n    \"@chevrotain/cst-dts-gen\": [\"@chevrotain/cst-dts-gen@11.0.3\", \"\", { \"dependencies\": { \"@chevrotain/gast\": \"11.0.3\", \"@chevrotain/types\": \"11.0.3\", \"lodash-es\": \"4.17.21\" } }, \"sha512-BvIKpRLeS/8UbfxXxgC33xOumsacaeCKAjAeLyOn7Pcp95HiRbrpl14S+9vaZLolnbssPIUuiUd8IvgkRyt6NQ==\"],\n\n    \"@chevrotain/gast\": [\"@chevrotain/gast@11.0.3\", \"\", { \"dependencies\": { \"@chevrotain/types\": \"11.0.3\", \"lodash-es\": \"4.17.21\" } }, \"sha512-+qNfcoNk70PyS/uxmj3li5NiECO+2YKZZQMbmjTqRI3Qchu8Hig/Q9vgkHpI3alNjr7M+a2St5pw5w5F6NL5/Q==\"],\n\n    \"@chevrotain/regexp-to-ast\": [\"@chevrotain/regexp-to-ast@11.0.3\", \"\", {}, \"sha512-1fMHaBZxLFvWI067AVbGJav1eRY7N8DDvYCTwGBiE/ytKBgP8azTdgyrKyWZ9Mfh09eHWb5PgTSO8wi7U824RA==\"],\n\n    \"@chevrotain/types\": [\"@chevrotain/types@11.0.3\", \"\", {}, \"sha512-gsiM3G8b58kZC2HaWR50gu6Y1440cHiJ+i3JUvcp/35JchYejb2+5MVeJK0iKThYpAa/P2PYFV4hoi44HD+aHQ==\"],\n\n    \"@chevrotain/utils\": [\"@chevrotain/utils@11.0.3\", \"\", {}, \"sha512-YslZMgtJUyuMbZ+aKvfF3x1f5liK4mWNxghFRv7jqRR9C3R3fAOGTTKvxXDa2Y1s9zSbcpuO0cAxDYsc9SrXoQ==\"],\n\n    \"@codebuff/agents\": [\"@codebuff/agents@workspace:.agents\"],\n\n    \"@codebuff/backend\": [\"@codebuff/backend@workspace:backend\"],\n\n    \"@codebuff/bigquery\": [\"@codebuff/bigquery@workspace:packages/bigquery\"],\n\n    \"@codebuff/billing\": [\"@codebuff/billing@workspace:packages/billing\"],\n\n    \"@codebuff/build-tools\": [\"@codebuff/build-tools@workspace:packages/build-tools\"],\n\n    \"@codebuff/code-map\": [\"@codebuff/code-map@workspace:packages/code-map\"],\n\n    \"@codebuff/common\": [\"@codebuff/common@workspace:common\"],\n\n    \"@codebuff/evals\": [\"@codebuff/evals@workspace:evals\"],\n\n    \"@codebuff/internal\": [\"@codebuff/internal@workspace:packages/internal\"],\n\n    \"@codebuff/npm-app\": [\"@codebuff/npm-app@workspace:npm-app\"],\n\n    \"@codebuff/scripts\": [\"@codebuff/scripts@workspace:scripts\"],\n\n    \"@codebuff/sdk\": [\"@codebuff/sdk@workspace:sdk\"],\n\n    \"@codebuff/web\": [\"@codebuff/web@workspace:web\"],\n\n    \"@commitlint/cli\": [\"@commitlint/cli@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/format\": \"^19.8.1\", \"@commitlint/lint\": \"^19.8.1\", \"@commitlint/load\": \"^19.8.1\", \"@commitlint/read\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"tinyexec\": \"^1.0.0\", \"yargs\": \"^17.0.0\" }, \"bin\": { \"commitlint\": \"./cli.js\" } }, \"sha512-LXUdNIkspyxrlV6VDHWBmCZRtkEVRpBKxi2Gtw3J54cGWhLCTouVD/Q6ZSaSvd2YaDObWK8mDjrz3TIKtaQMAA==\"],\n\n    \"@commitlint/config-conventional\": [\"@commitlint/config-conventional@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"conventional-changelog-conventionalcommits\": \"^7.0.2\" } }, \"sha512-/AZHJL6F6B/G959CsMAzrPKKZjeEiAVifRyEwXxcT6qtqbPwGw+iQxmNS+Bu+i09OCtdNRW6pNpBvgPrtMr9EQ==\"],\n\n    \"@commitlint/config-validator\": [\"@commitlint/config-validator@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"ajv\": \"^8.11.0\" } }, \"sha512-0jvJ4u+eqGPBIzzSdqKNX1rvdbSU1lPNYlfQQRIFnBgLy26BtC0cFnr7c/AyuzExMxWsMOte6MkTi9I3SQ3iGQ==\"],\n\n    \"@commitlint/ensure\": [\"@commitlint/ensure@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"lodash.camelcase\": \"^4.3.0\", \"lodash.kebabcase\": \"^4.1.1\", \"lodash.snakecase\": \"^4.1.1\", \"lodash.startcase\": \"^4.4.0\", \"lodash.upperfirst\": \"^4.3.1\" } }, \"sha512-mXDnlJdvDzSObafjYrOSvZBwkD01cqB4gbnnFuVyNpGUM5ijwU/r/6uqUmBXAAOKRfyEjpkGVZxaDsCVnHAgyw==\"],\n\n    \"@commitlint/execute-rule\": [\"@commitlint/execute-rule@19.8.1\", \"\", {}, \"sha512-YfJyIqIKWI64Mgvn/sE7FXvVMQER/Cd+s3hZke6cI1xgNT/f6ZAz5heND0QtffH+KbcqAwXDEE1/5niYayYaQA==\"],\n\n    \"@commitlint/format\": [\"@commitlint/format@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"chalk\": \"^5.3.0\" } }, \"sha512-kSJj34Rp10ItP+Eh9oCItiuN/HwGQMXBnIRk69jdOwEW9llW9FlyqcWYbHPSGofmjsqeoxa38UaEA5tsbm2JWw==\"],\n\n    \"@commitlint/is-ignored\": [\"@commitlint/is-ignored@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"semver\": \"^7.6.0\" } }, \"sha512-AceOhEhekBUQ5dzrVhDDsbMaY5LqtN8s1mqSnT2Kz1ERvVZkNihrs3Sfk1Je/rxRNbXYFzKZSHaPsEJJDJV8dg==\"],\n\n    \"@commitlint/lint\": [\"@commitlint/lint@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/is-ignored\": \"^19.8.1\", \"@commitlint/parse\": \"^19.8.1\", \"@commitlint/rules\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\" } }, \"sha512-52PFbsl+1EvMuokZXLRlOsdcLHf10isTPlWwoY1FQIidTsTvjKXVXYb7AvtpWkDzRO2ZsqIgPK7bI98x8LRUEw==\"],\n\n    \"@commitlint/load\": [\"@commitlint/load@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/config-validator\": \"^19.8.1\", \"@commitlint/execute-rule\": \"^19.8.1\", \"@commitlint/resolve-extends\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"chalk\": \"^5.3.0\", \"cosmiconfig\": \"^9.0.0\", \"cosmiconfig-typescript-loader\": \"^6.1.0\", \"lodash.isplainobject\": \"^4.0.6\", \"lodash.merge\": \"^4.6.2\", \"lodash.uniq\": \"^4.5.0\" } }, \"sha512-9V99EKG3u7z+FEoe4ikgq7YGRCSukAcvmKQuTtUyiYPnOd9a2/H9Ak1J9nJA1HChRQp9OA/sIKPugGS+FK/k1A==\"],\n\n    \"@commitlint/message\": [\"@commitlint/message@19.8.1\", \"\", {}, \"sha512-+PMLQvjRXiU+Ae0Wc+p99EoGEutzSXFVwQfa3jRNUZLNW5odZAyseb92OSBTKCu+9gGZiJASt76Cj3dLTtcTdg==\"],\n\n    \"@commitlint/parse\": [\"@commitlint/parse@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/types\": \"^19.8.1\", \"conventional-changelog-angular\": \"^7.0.0\", \"conventional-commits-parser\": \"^5.0.0\" } }, \"sha512-mmAHYcMBmAgJDKWdkjIGq50X4yB0pSGpxyOODwYmoexxxiUCy5JJT99t1+PEMK7KtsCtzuWYIAXYAiKR+k+/Jw==\"],\n\n    \"@commitlint/read\": [\"@commitlint/read@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/top-level\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"git-raw-commits\": \"^4.0.0\", \"minimist\": \"^1.2.8\", \"tinyexec\": \"^1.0.0\" } }, \"sha512-03Jbjb1MqluaVXKHKRuGhcKWtSgh3Jizqy2lJCRbRrnWpcM06MYm8th59Xcns8EqBYvo0Xqb+2DoZFlga97uXQ==\"],\n\n    \"@commitlint/resolve-extends\": [\"@commitlint/resolve-extends@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/config-validator\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\", \"global-directory\": \"^4.0.1\", \"import-meta-resolve\": \"^4.0.0\", \"lodash.mergewith\": \"^4.6.2\", \"resolve-from\": \"^5.0.0\" } }, \"sha512-GM0mAhFk49I+T/5UCYns5ayGStkTt4XFFrjjf0L4S26xoMTSkdCf9ZRO8en1kuopC4isDFuEm7ZOm/WRVeElVg==\"],\n\n    \"@commitlint/rules\": [\"@commitlint/rules@19.8.1\", \"\", { \"dependencies\": { \"@commitlint/ensure\": \"^19.8.1\", \"@commitlint/message\": \"^19.8.1\", \"@commitlint/to-lines\": \"^19.8.1\", \"@commitlint/types\": \"^19.8.1\" } }, \"sha512-Hnlhd9DyvGiGwjfjfToMi1dsnw1EXKGJNLTcsuGORHz6SS9swRgkBsou33MQ2n51/boIDrbsg4tIBbRpEWK2kw==\"],\n\n    \"@commitlint/to-lines\": [\"@commitlint/to-lines@19.8.1\", \"\", {}, \"sha512-98Mm5inzbWTKuZQr2aW4SReY6WUukdWXuZhrqf1QdKPZBCCsXuG87c+iP0bwtD6DBnmVVQjgp4whoHRVixyPBg==\"],\n\n    \"@commitlint/top-level\": [\"@commitlint/top-level@19.8.1\", \"\", { \"dependencies\": { \"find-up\": \"^7.0.0\" } }, \"sha512-Ph8IN1IOHPSDhURCSXBz44+CIu+60duFwRsg6HqaISFHQHbmBtxVw4ZrFNIYUzEP7WwrNPxa2/5qJ//NK1FGcw==\"],\n\n    \"@commitlint/types\": [\"@commitlint/types@19.8.1\", \"\", { \"dependencies\": { \"@types/conventional-commits-parser\": \"^5.0.0\", \"chalk\": \"^5.3.0\" } }, \"sha512-/yCrWGCoA1SVKOks25EGadP9Pnj0oAIHGpl2wH2M2Y46dPM2ueb8wyCVOD7O3WCTkaJ0IkKvzhl1JY7+uCT2Dw==\"],\n\n    \"@contentlayer/cli\": [\"@contentlayer/cli@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\", \"clipanion\": \"^3.2.1\", \"typanion\": \"^3.12.1\" } }, \"sha512-vNDwgLuhYNu+m70NZ3XK9kexKNguuxPXg7Yvzj3B34cEilQjjzSrcTY/i+AIQm9V7uT5GGshx9ukzPf+SmoszQ==\"],\n\n    \"@contentlayer/client\": [\"@contentlayer/client@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\" } }, \"sha512-QSlLyc3y4PtdC5lFw0L4wTZUH8BQnv2nk37hNCsPAqGf+dRO7TLAzdc+2/mVIRgK+vSH+pSOzjLsQpFxxXRTZA==\"],\n\n    \"@contentlayer/core\": [\"@contentlayer/core@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/utils\": \"0.3.4\", \"camel-case\": \"^4.1.2\", \"comment-json\": \"^4.2.3\", \"esbuild\": \"0.17.x || 0.18.x\", \"gray-matter\": \"^4.0.3\", \"mdx-bundler\": \"^9.2.1\", \"rehype-stringify\": \"^9.0.3\", \"remark-frontmatter\": \"^4.0.1\", \"remark-parse\": \"^10.0.2\", \"remark-rehype\": \"^10.1.0\", \"source-map-support\": \"^0.5.21\", \"type-fest\": \"^3.12.0\", \"unified\": \"^10.1.2\" }, \"peerDependencies\": { \"markdown-wasm\": \"1.x\" }, \"optionalPeers\": [\"markdown-wasm\"] }, \"sha512-o68oBLwfYZ+2vtgfk1lgHxOl3LoxvRNiUfeQ8IWFWy/L4wnIkKIqLZX01zlRE5IzYM+ZMMN5V0cKQlO7DsyR9g==\"],\n\n    \"@contentlayer/source-files\": [\"@contentlayer/source-files@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\", \"chokidar\": \"^3.5.3\", \"fast-glob\": \"^3.2.12\", \"gray-matter\": \"^4.0.3\", \"imagescript\": \"^1.2.16\", \"micromatch\": \"^4.0.5\", \"ts-pattern\": \"^4.3.0\", \"unified\": \"^10.1.2\", \"yaml\": \"^2.3.1\", \"zod\": \"^3.21.4\" } }, \"sha512-4njyn0OFPu7WY4tAjMxiJgWOKeiHuBOGdQ36EYE03iij/pPPRbiWbL+cmLccYXUFEW58mDwpqROZZm6pnxjRDQ==\"],\n\n    \"@contentlayer/source-remote-files\": [\"@contentlayer/source-remote-files@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/source-files\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\" } }, \"sha512-cyiv4sNUySZvR0uAKlM+kSAELzNd2h2QT1R2e41dRKbwOUVxeLfmGiLugr0aVac6Q3xYcD99dbHyR1xWPV+w9w==\"],\n\n    \"@contentlayer/utils\": [\"@contentlayer/utils@0.3.4\", \"\", { \"dependencies\": { \"@effect-ts/core\": \"^0.60.5\", \"@effect-ts/otel\": \"^0.15.1\", \"@effect-ts/otel-exporter-trace-otlp-grpc\": \"^0.15.1\", \"@effect-ts/otel-sdk-trace-node\": \"^0.15.1\", \"@js-temporal/polyfill\": \"^0.4.4\", \"@opentelemetry/api\": \"^1.4.1\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/exporter-trace-otlp-grpc\": \"^0.39.1\", \"@opentelemetry/resources\": \"^1.13.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\", \"@opentelemetry/sdk-trace-node\": \"^1.13.0\", \"@opentelemetry/semantic-conventions\": \"^1.13.0\", \"chokidar\": \"^3.5.3\", \"hash-wasm\": \"^4.9.0\", \"inflection\": \"^2.0.1\", \"memfs\": \"^3.5.1\", \"oo-ascii-tree\": \"^1.84.0\", \"ts-pattern\": \"^4.3.0\", \"type-fest\": \"^3.12.0\" } }, \"sha512-ZWWOhbUWYQ2QHoLIlcUnEo7X4ZbwcyFPuzVQWWMkK43BxCveyQtZwBIzfyx54sqVzi0GUmKP8bHzsLQT0QxaLQ==\"],\n\n    \"@cspotcode/source-map-support\": [\"@cspotcode/source-map-support@0.8.1\", \"\", { \"dependencies\": { \"@jridgewell/trace-mapping\": \"0.3.9\" } }, \"sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==\"],\n\n    \"@dimforge/rapier3d-compat\": [\"@dimforge/rapier3d-compat@0.12.0\", \"\", {}, \"sha512-uekIGetywIgopfD97oDL5PfeezkFpNhwlzlaEYNOA0N6ghdsOvh/HYjSMek5Q2O1PYvRSDFcqFVJl4r4ZBwOow==\"],\n\n    \"@discordjs/builders\": [\"@discordjs/builders@1.11.3\", \"\", { \"dependencies\": { \"@discordjs/formatters\": \"^0.6.1\", \"@discordjs/util\": \"^1.1.1\", \"@sapphire/shapeshift\": \"^4.0.0\", \"discord-api-types\": \"^0.38.16\", \"fast-deep-equal\": \"^3.1.3\", \"ts-mixer\": \"^6.0.4\", \"tslib\": \"^2.6.3\" } }, \"sha512-p3kf5eV49CJiRTfhtutUCeivSyQ/l2JlKodW1ZquRwwvlOWmG9+6jFShX6x8rUiYhnP6wKI96rgN/SXMy5e5aw==\"],\n\n    \"@discordjs/collection\": [\"@discordjs/collection@1.5.3\", \"\", {}, \"sha512-SVb428OMd3WO1paV3rm6tSjM4wC+Kecaa1EUGX7vc6/fddvw/6lg90z4QtCqm21zvVe92vMMDt9+DkIvjXImQQ==\"],\n\n    \"@discordjs/formatters\": [\"@discordjs/formatters@0.6.1\", \"\", { \"dependencies\": { \"discord-api-types\": \"^0.38.1\" } }, \"sha512-5cnX+tASiPCqCWtFcFslxBVUaCetB0thvM/JyavhbXInP1HJIEU+Qv/zMrnuwSsX3yWH2lVXNJZeDK3EiP4HHg==\"],\n\n    \"@discordjs/rest\": [\"@discordjs/rest@2.5.1\", \"\", { \"dependencies\": { \"@discordjs/collection\": \"^2.1.1\", \"@discordjs/util\": \"^1.1.1\", \"@sapphire/async-queue\": \"^1.5.3\", \"@sapphire/snowflake\": \"^3.5.3\", \"@vladfrangu/async_event_emitter\": \"^2.4.6\", \"discord-api-types\": \"^0.38.1\", \"magic-bytes.js\": \"^1.10.0\", \"tslib\": \"^2.6.3\", \"undici\": \"6.21.3\" } }, \"sha512-Tg9840IneBcbrAjcGaQzHUJWFNq1MMWZjTdjJ0WS/89IffaNKc++iOvffucPxQTF/gviO9+9r8kEPea1X5J2Dw==\"],\n\n    \"@discordjs/util\": [\"@discordjs/util@1.1.1\", \"\", {}, \"sha512-eddz6UnOBEB1oITPinyrB2Pttej49M9FZQY8NxgEvc3tq6ZICZ19m70RsmzRdDHk80O9NoYN/25AqJl8vPVf/g==\"],\n\n    \"@discordjs/ws\": [\"@discordjs/ws@1.2.3\", \"\", { \"dependencies\": { \"@discordjs/collection\": \"^2.1.0\", \"@discordjs/rest\": \"^2.5.1\", \"@discordjs/util\": \"^1.1.0\", \"@sapphire/async-queue\": \"^1.5.2\", \"@types/ws\": \"^8.5.10\", \"@vladfrangu/async_event_emitter\": \"^2.2.4\", \"discord-api-types\": \"^0.38.1\", \"tslib\": \"^2.6.2\", \"ws\": \"^8.17.0\" } }, \"sha512-wPlQDxEmlDg5IxhJPuxXr3Vy9AjYq5xCvFWGJyD7w7Np8ZGu+Mc+97LCoEc/+AYCo2IDpKioiH0/c/mj5ZR9Uw==\"],\n\n    \"@drizzle-team/brocli\": [\"@drizzle-team/brocli@0.10.2\", \"\", {}, \"sha512-z33Il7l5dKjUgGULTqBsQBQwckHh5AbIuxhdsIxDDiZAzBOrZO6q9ogcWC65kU382AfynTfgNumVcNIjuIua6w==\"],\n\n    \"@effect-ts/core\": [\"@effect-ts/core@0.60.5\", \"\", { \"dependencies\": { \"@effect-ts/system\": \"^0.57.5\" } }, \"sha512-qi1WrtJA90XLMnj2hnUszW9Sx4dXP03ZJtCc5DiUBIOhF4Vw7plfb65/bdBySPoC9s7zy995TdUX1XBSxUkl5w==\"],\n\n    \"@effect-ts/otel\": [\"@effect-ts/otel@0.15.1\", \"\", { \"peerDependencies\": { \"@effect-ts/core\": \"^0.60.2\", \"@opentelemetry/api\": \"^1.4.0\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\" } }, \"sha512-AmZJHl7t0+Peh7Yb2+hqn6r9+rd9/UfeA4AMV9h0YGTdOyouyFfD3wzWlxnAUzAQ4Lrod4kC7Noruret4EpqpA==\"],\n\n    \"@effect-ts/otel-exporter-trace-otlp-grpc\": [\"@effect-ts/otel-exporter-trace-otlp-grpc@0.15.1\", \"\", { \"dependencies\": { \"@effect-ts/otel\": \"^0.15.1\" }, \"peerDependencies\": { \"@effect-ts/core\": \"^0.60.2\", \"@opentelemetry/api\": \"^1.4.0\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/exporter-trace-otlp-grpc\": \"^0.39.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\" } }, \"sha512-47gAg0O2pW5Jlo86jfzjdkwL5a7Bzb+Kj5WTmdu4CxYRfWn9ytKjuuYIfsNDW8neuhdKzn+P5wCddgEh0glYyQ==\"],\n\n    \"@effect-ts/otel-sdk-trace-node\": [\"@effect-ts/otel-sdk-trace-node@0.15.1\", \"\", { \"dependencies\": { \"@effect-ts/otel\": \"^0.15.1\" }, \"peerDependencies\": { \"@effect-ts/core\": \"^0.60.2\", \"@opentelemetry/api\": \"^1.4.0\", \"@opentelemetry/core\": \"^1.13.0\", \"@opentelemetry/sdk-trace-base\": \"^1.13.0\", \"@opentelemetry/sdk-trace-node\": \"^1.13.0\" } }, \"sha512-a2sF0ylmn8xOJs8fNeT/spJ1gUcsksAJCALxo9WOfuTCMtTwMVtVhCKEPEeQoL7wFqU+JgPkVdP91+FJ/Rkeow==\"],\n\n    \"@effect-ts/system\": [\"@effect-ts/system@0.57.5\", \"\", {}, \"sha512-/crHGujo0xnuHIYNc1VgP0HGJGFSoSqq88JFXe6FmFyXPpWt8Xu39LyLg7rchsxfXFeEdA9CrIZvLV5eswXV5g==\"],\n\n    \"@emnapi/core\": [\"@emnapi/core@1.4.5\", \"\", { \"dependencies\": { \"@emnapi/wasi-threads\": \"1.0.4\", \"tslib\": \"^2.4.0\" } }, \"sha512-XsLw1dEOpkSX/WucdqUhPWP7hDxSvZiY+fsUC14h+FtQ2Ifni4znbBt8punRX+Uj2JG/uDb8nEHVKvrVlvdZ5Q==\"],\n\n    \"@emnapi/runtime\": [\"@emnapi/runtime@1.4.5\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-++LApOtY0pEEz1zrd9vy1/zXVaVJJ/EbAF3u0fXIzPJEDtnITsBGbbK0EkM72amhl/R5b+5xx0Y/QhcVOpuulg==\"],\n\n    \"@emnapi/wasi-threads\": [\"@emnapi/wasi-threads@1.0.4\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-PJR+bOmMOPH8AtcTGAyYNiuJ3/Fcoj2XN/gBEWzDIKh254XO+mM9XoXHk5GNEhodxeMznbg7BlRojVbKN+gC6g==\"],\n\n    \"@emotion/is-prop-valid\": [\"@emotion/is-prop-valid@1.3.1\", \"\", { \"dependencies\": { \"@emotion/memoize\": \"^0.9.0\" } }, \"sha512-/ACwoqx7XQi9knQs/G0qKvv5teDMhD7bXYns9N/wM8ah8iNb8jZ2uNO0YOgiq2o2poIvVtJS2YALasQuMSQ7Kw==\"],\n\n    \"@emotion/memoize\": [\"@emotion/memoize@0.9.0\", \"\", {}, \"sha512-30FAj7/EoJ5mwVPOWhAyCX+FPfMDrVecJAM+Iw9NRoSl4BBAQeqj4cApHHUXOVvIPgLVDsCFoz/hGD+5QQD1GQ==\"],\n\n    \"@esbuild-kit/core-utils\": [\"@esbuild-kit/core-utils@3.3.2\", \"\", { \"dependencies\": { \"esbuild\": \"~0.18.20\", \"source-map-support\": \"^0.5.21\" } }, \"sha512-sPRAnw9CdSsRmEtnsl2WXWdyquogVpB3yZ3dgwJfe8zrOzTsV7cJvmwrKVa+0ma5BoiGJ+BoqkMvawbayKUsqQ==\"],\n\n    \"@esbuild-kit/esm-loader\": [\"@esbuild-kit/esm-loader@2.6.5\", \"\", { \"dependencies\": { \"@esbuild-kit/core-utils\": \"^3.3.2\", \"get-tsconfig\": \"^4.7.0\" } }, \"sha512-FxEMIkJKnodyA1OaCUoEvbYRkoZlLZ4d/eXFu9Fh8CbBBgP5EmZxrfTRyN0qpXZ4vOvqnE5YdRdcrmUUXuU+dA==\"],\n\n    \"@esbuild-plugins/node-resolve\": [\"@esbuild-plugins/node-resolve@0.1.4\", \"\", { \"dependencies\": { \"@types/resolve\": \"^1.17.1\", \"debug\": \"^4.3.1\", \"escape-string-regexp\": \"^4.0.0\", \"resolve\": \"^1.19.0\" }, \"peerDependencies\": { \"esbuild\": \"*\" } }, \"sha512-haFQ0qhxEpqtWWY0kx1Y5oE3sMyO1PcoSiWEPrAw6tm/ZOOLXjSs6Q+v1v9eyuVF0nNt50YEvrcrvENmyoMv5g==\"],\n\n    \"@esbuild/aix-ppc64\": [\"@esbuild/aix-ppc64@0.19.12\", \"\", { \"os\": \"aix\", \"cpu\": \"ppc64\" }, \"sha512-bmoCYyWdEL3wDQIVbcyzRyeKLgk2WtWLTWz1ZIAZF/EGbNOwSA6ew3PftJ1PqMiOOGu0OyFMzG53L0zqIpPeNA==\"],\n\n    \"@esbuild/android-arm\": [\"@esbuild/android-arm@0.19.12\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-qg/Lj1mu3CdQlDEEiWrlC4eaPZ1KztwGJ9B6J+/6G+/4ewxJg7gqj8eVYWvao1bXrqGiW2rsBZFSX3q2lcW05w==\"],\n\n    \"@esbuild/android-arm64\": [\"@esbuild/android-arm64@0.19.12\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-P0UVNGIienjZv3f5zq0DP3Nt2IE/3plFzuaS96vihvD0Hd6H/q4WXUGpCxD/E8YrSXfNyRPbpTq+T8ZQioSuPA==\"],\n\n    \"@esbuild/android-x64\": [\"@esbuild/android-x64@0.19.12\", \"\", { \"os\": \"android\", \"cpu\": \"x64\" }, \"sha512-3k7ZoUW6Q6YqhdhIaq/WZ7HwBpnFBlW905Fa4s4qWJyiNOgT1dOqDiVAQFwBH7gBRZr17gLrlFCRzF6jFh7Kew==\"],\n\n    \"@esbuild/darwin-arm64\": [\"@esbuild/darwin-arm64@0.19.12\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-B6IeSgZgtEzGC42jsI+YYu9Z3HKRxp8ZT3cqhvliEHovq8HSX2YX8lNocDn79gCKJXOSaEot9MVYky7AKjCs8g==\"],\n\n    \"@esbuild/darwin-x64\": [\"@esbuild/darwin-x64@0.19.12\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-hKoVkKzFiToTgn+41qGhsUJXFlIjxI/jSYeZf3ugemDYZldIXIxhvwN6erJGlX4t5h417iFuheZ7l+YVn05N3A==\"],\n\n    \"@esbuild/freebsd-arm64\": [\"@esbuild/freebsd-arm64@0.19.12\", \"\", { \"os\": \"freebsd\", \"cpu\": \"arm64\" }, \"sha512-4aRvFIXmwAcDBw9AueDQ2YnGmz5L6obe5kmPT8Vd+/+x/JMVKCgdcRwH6APrbpNXsPz+K653Qg8HB/oXvXVukA==\"],\n\n    \"@esbuild/freebsd-x64\": [\"@esbuild/freebsd-x64@0.19.12\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-EYoXZ4d8xtBoVN7CEwWY2IN4ho76xjYXqSXMNccFSx2lgqOG/1TBPW0yPx1bJZk94qu3tX0fycJeeQsKovA8gg==\"],\n\n    \"@esbuild/linux-arm\": [\"@esbuild/linux-arm@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-J5jPms//KhSNv+LO1S1TX1UWp1ucM6N6XuL6ITdKWElCu8wXP72l9MM0zDTzzeikVyqFE6U8YAV9/tFyj0ti+w==\"],\n\n    \"@esbuild/linux-arm64\": [\"@esbuild/linux-arm64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-EoTjyYyLuVPfdPLsGVVVC8a0p1BFFvtpQDB/YLEhaXyf/5bczaGeN15QkR+O4S5LeJ92Tqotve7i1jn35qwvdA==\"],\n\n    \"@esbuild/linux-ia32\": [\"@esbuild/linux-ia32@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"ia32\" }, \"sha512-Thsa42rrP1+UIGaWz47uydHSBOgTUnwBwNq59khgIwktK6x60Hivfbux9iNR0eHCHzOLjLMLfUMLCypBkZXMHA==\"],\n\n    \"@esbuild/linux-loong64\": [\"@esbuild/linux-loong64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-LiXdXA0s3IqRRjm6rV6XaWATScKAXjI4R4LoDlvO7+yQqFdlr1Bax62sRwkVvRIrwXxvtYEHHI4dm50jAXkuAA==\"],\n\n    \"@esbuild/linux-mips64el\": [\"@esbuild/linux-mips64el@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-fEnAuj5VGTanfJ07ff0gOA6IPsvrVHLVb6Lyd1g2/ed67oU1eFzL0r9WL7ZzscD+/N6i3dWumGE1Un4f7Amf+w==\"],\n\n    \"@esbuild/linux-ppc64\": [\"@esbuild/linux-ppc64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-nYJA2/QPimDQOh1rKWedNOe3Gfc8PabU7HT3iXWtNUbRzXS9+vgB0Fjaqr//XNbd82mCxHzik2qotuI89cfixg==\"],\n\n    \"@esbuild/linux-riscv64\": [\"@esbuild/linux-riscv64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-2MueBrlPQCw5dVJJpQdUYgeqIzDQgw3QtiAHUC4RBz9FXPrskyyU3VI1hw7C0BSKB9OduwSJ79FTCqtGMWqJHg==\"],\n\n    \"@esbuild/linux-s390x\": [\"@esbuild/linux-s390x@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-+Pil1Nv3Umes4m3AZKqA2anfhJiVmNCYkPchwFJNEJN5QxmTs1uzyy4TvmDrCRNT2ApwSari7ZIgrPeUx4UZDg==\"],\n\n    \"@esbuild/linux-x64\": [\"@esbuild/linux-x64@0.19.12\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-B71g1QpxfwBvNrfyJdVDexenDIt1CiDN1TIXLbhOw0KhJzE78KIFGX6OJ9MrtC0oOqMWf+0xop4qEU8JrJTwCg==\"],\n\n    \"@esbuild/netbsd-x64\": [\"@esbuild/netbsd-x64@0.19.12\", \"\", { \"os\": \"none\", \"cpu\": \"x64\" }, \"sha512-3ltjQ7n1owJgFbuC61Oj++XhtzmymoCihNFgT84UAmJnxJfm4sYCiSLTXZtE00VWYpPMYc+ZQmB6xbSdVh0JWA==\"],\n\n    \"@esbuild/openbsd-x64\": [\"@esbuild/openbsd-x64@0.19.12\", \"\", { \"os\": \"openbsd\", \"cpu\": \"x64\" }, \"sha512-RbrfTB9SWsr0kWmb9srfF+L933uMDdu9BIzdA7os2t0TXhCRjrQyCeOt6wVxr79CKD4c+p+YhCj31HBkYcXebw==\"],\n\n    \"@esbuild/sunos-x64\": [\"@esbuild/sunos-x64@0.19.12\", \"\", { \"os\": \"sunos\", \"cpu\": \"x64\" }, \"sha512-HKjJwRrW8uWtCQnQOz9qcU3mUZhTUQvi56Q8DPTLLB+DawoiQdjsYq+j+D3s9I8VFtDr+F9CjgXKKC4ss89IeA==\"],\n\n    \"@esbuild/win32-arm64\": [\"@esbuild/win32-arm64@0.19.12\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-URgtR1dJnmGvX864pn1B2YUYNzjmXkuJOIqG2HdU62MVS4EHpU2946OZoTMnRUHklGtJdJZ33QfzdjGACXhn1A==\"],\n\n    \"@esbuild/win32-ia32\": [\"@esbuild/win32-ia32@0.19.12\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-+ZOE6pUkMOJfmxmBZElNOx72NKpIa/HFOMGzu8fqzQJ5kgf6aTGrcJaFsNiVMH4JKpMipyK+7k0n2UXN7a8YKQ==\"],\n\n    \"@esbuild/win32-x64\": [\"@esbuild/win32-x64@0.19.12\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-T1QyPSDCyMXaO3pzBkF96E8xMkiRYbUEZADd29SyPGabqxMViNoii+NcK7eWJAEoU6RZyEm5lVSIjTmcdoB9HA==\"],\n\n    \"@eslint-community/eslint-utils\": [\"@eslint-community/eslint-utils@4.7.0\", \"\", { \"dependencies\": { \"eslint-visitor-keys\": \"^3.4.3\" }, \"peerDependencies\": { \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\" } }, \"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\"],\n\n    \"@eslint-community/regexpp\": [\"@eslint-community/regexpp@4.12.1\", \"\", {}, \"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\"],\n\n    \"@eslint/eslintrc\": [\"@eslint/eslintrc@2.1.4\", \"\", { \"dependencies\": { \"ajv\": \"^6.12.4\", \"debug\": \"^4.3.2\", \"espree\": \"^9.6.0\", \"globals\": \"^13.19.0\", \"ignore\": \"^5.2.0\", \"import-fresh\": \"^3.2.1\", \"js-yaml\": \"^4.1.0\", \"minimatch\": \"^3.1.2\", \"strip-json-comments\": \"^3.1.1\" } }, \"sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==\"],\n\n    \"@eslint/js\": [\"@eslint/js@8.57.1\", \"\", {}, \"sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==\"],\n\n    \"@fal-works/esbuild-plugin-global-externals\": [\"@fal-works/esbuild-plugin-global-externals@2.1.2\", \"\", {}, \"sha512-cEee/Z+I12mZcFJshKcCqC8tuX5hG3s+d+9nZ3LabqKF1vKdF41B92pJVCBggjAGORAeOzyyDDKrZwIkLffeOQ==\"],\n\n    \"@floating-ui/core\": [\"@floating-ui/core@1.7.3\", \"\", { \"dependencies\": { \"@floating-ui/utils\": \"^0.2.10\" } }, \"sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==\"],\n\n    \"@floating-ui/dom\": [\"@floating-ui/dom@1.7.3\", \"\", { \"dependencies\": { \"@floating-ui/core\": \"^1.7.3\", \"@floating-ui/utils\": \"^0.2.10\" } }, \"sha512-uZA413QEpNuhtb3/iIKoYMSK07keHPYeXF02Zhd6e213j+d1NamLix/mCLxBUDW/Gx52sPH2m+chlUsyaBs/Ag==\"],\n\n    \"@floating-ui/react-dom\": [\"@floating-ui/react-dom@2.1.5\", \"\", { \"dependencies\": { \"@floating-ui/dom\": \"^1.7.3\" }, \"peerDependencies\": { \"react\": \">=16.8.0\", \"react-dom\": \">=16.8.0\" } }, \"sha512-HDO/1/1oH9fjj4eLgegrlH3dklZpHtUYYFiVwMUwfGvk9jWDRWqkklA2/NFScknrcNSspbV868WjXORvreDX+Q==\"],\n\n    \"@floating-ui/utils\": [\"@floating-ui/utils@0.2.10\", \"\", {}, \"sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==\"],\n\n    \"@google-cloud/bigquery\": [\"@google-cloud/bigquery@7.9.4\", \"\", { \"dependencies\": { \"@google-cloud/common\": \"^5.0.0\", \"@google-cloud/paginator\": \"^5.0.2\", \"@google-cloud/precise-date\": \"^4.0.0\", \"@google-cloud/promisify\": \"4.0.0\", \"arrify\": \"^2.0.1\", \"big.js\": \"^6.0.0\", \"duplexify\": \"^4.0.0\", \"extend\": \"^3.0.2\", \"is\": \"^3.3.0\", \"stream-events\": \"^1.0.5\", \"uuid\": \"^9.0.0\" } }, \"sha512-C7jeI+9lnCDYK3cRDujcBsPgiwshWKn/f0BiaJmClplfyosCLfWE83iGQ0eKH113UZzjR9c9q7aZQg0nU388sw==\"],\n\n    \"@google-cloud/common\": [\"@google-cloud/common@5.0.2\", \"\", { \"dependencies\": { \"@google-cloud/projectify\": \"^4.0.0\", \"@google-cloud/promisify\": \"^4.0.0\", \"arrify\": \"^2.0.1\", \"duplexify\": \"^4.1.1\", \"extend\": \"^3.0.2\", \"google-auth-library\": \"^9.0.0\", \"html-entities\": \"^2.5.2\", \"retry-request\": \"^7.0.0\", \"teeny-request\": \"^9.0.0\" } }, \"sha512-V7bmBKYQyu0eVG2BFejuUjlBt+zrya6vtsKdY+JxMM/dNntPF41vZ9+LhOshEUH01zOHEqBSvI7Dad7ZS6aUeA==\"],\n\n    \"@google-cloud/paginator\": [\"@google-cloud/paginator@5.0.2\", \"\", { \"dependencies\": { \"arrify\": \"^2.0.0\", \"extend\": \"^3.0.2\" } }, \"sha512-DJS3s0OVH4zFDB1PzjxAsHqJT6sKVbRwwML0ZBP9PbU7Yebtu/7SWMRzvO2J3nUi9pRNITCfu4LJeooM2w4pjg==\"],\n\n    \"@google-cloud/precise-date\": [\"@google-cloud/precise-date@4.0.0\", \"\", {}, \"sha512-1TUx3KdaU3cN7nfCdNf+UVqA/PSX29Cjcox3fZZBtINlRrXVTmUkQnCKv2MbBUbCopbK4olAT1IHl76uZyCiVA==\"],\n\n    \"@google-cloud/projectify\": [\"@google-cloud/projectify@4.0.0\", \"\", {}, \"sha512-MmaX6HeSvyPbWGwFq7mXdo0uQZLGBYCwziiLIGq5JVX+/bdI3SAq6bP98trV5eTWfLuvsMcIC1YJOF2vfteLFA==\"],\n\n    \"@google-cloud/promisify\": [\"@google-cloud/promisify@4.0.0\", \"\", {}, \"sha512-Orxzlfb9c67A15cq2JQEyVc7wEsmFBmHjZWZYQMUyJ1qivXyMwdyNOs9odi79hze+2zqdTtu1E19IM/FtqZ10g==\"],\n\n    \"@google-cloud/vertexai\": [\"@google-cloud/vertexai@1.10.0\", \"\", { \"dependencies\": { \"google-auth-library\": \"^9.1.0\" } }, \"sha512-HqYqoivNtkq59po8m7KI0n+lWKdz4kabENncYQXZCX/hBWJfXtKAfR/2nUQsP+TwSfHKoA7zDL2RrJYIv/j3VQ==\"],\n\n    \"@google/generative-ai\": [\"@google/generative-ai@0.24.1\", \"\", {}, \"sha512-MqO+MLfM6kjxcKoy0p1wRzG3b4ZZXtPI+z2IE26UogS2Cm/XHO+7gGRBh6gcJsOiIVoH93UwKvW4HdgiOZCy9Q==\"],\n\n    \"@grpc/grpc-js\": [\"@grpc/grpc-js@1.13.4\", \"\", { \"dependencies\": { \"@grpc/proto-loader\": \"^0.7.13\", \"@js-sdsl/ordered-map\": \"^4.4.2\" } }, \"sha512-GsFaMXCkMqkKIvwCQjCrwH+GHbPKBjhwo/8ZuUkWHqbI73Kky9I+pQltrlT0+MWpedCoosda53lgjYfyEPgxBg==\"],\n\n    \"@grpc/proto-loader\": [\"@grpc/proto-loader@0.7.15\", \"\", { \"dependencies\": { \"lodash.camelcase\": \"^4.3.0\", \"long\": \"^5.0.0\", \"protobufjs\": \"^7.2.5\", \"yargs\": \"^17.7.2\" }, \"bin\": { \"proto-loader-gen-types\": \"build/bin/proto-loader-gen-types.js\" } }, \"sha512-tMXdRCfYVixjuFK+Hk0Q1s38gV9zDiDJfWL3h1rv4Qc39oILCu1TRTDt7+fGUI8K4G1Fj125Hx/ru3azECWTyQ==\"],\n\n    \"@hookform/resolvers\": [\"@hookform/resolvers@3.10.0\", \"\", { \"peerDependencies\": { \"react-hook-form\": \"^7.0.0\" } }, \"sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==\"],\n\n    \"@humanwhocodes/config-array\": [\"@humanwhocodes/config-array@0.13.0\", \"\", { \"dependencies\": { \"@humanwhocodes/object-schema\": \"^2.0.3\", \"debug\": \"^4.3.1\", \"minimatch\": \"^3.0.5\" } }, \"sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==\"],\n\n    \"@humanwhocodes/module-importer\": [\"@humanwhocodes/module-importer@1.0.1\", \"\", {}, \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\"],\n\n    \"@humanwhocodes/object-schema\": [\"@humanwhocodes/object-schema@2.0.3\", \"\", {}, \"sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==\"],\n\n    \"@iconify/types\": [\"@iconify/types@2.0.0\", \"\", {}, \"sha512-+wluvCrRhXrhyOmRDJ3q8mux9JkKy5SJ/v8ol2tu4FVjyYvtEzkc/3pK15ET6RKg4b4w4BmTk1+gsCUhf21Ykg==\"],\n\n    \"@iconify/utils\": [\"@iconify/utils@2.3.0\", \"\", { \"dependencies\": { \"@antfu/install-pkg\": \"^1.0.0\", \"@antfu/utils\": \"^8.1.0\", \"@iconify/types\": \"^2.0.0\", \"debug\": \"^4.4.0\", \"globals\": \"^15.14.0\", \"kolorist\": \"^1.8.0\", \"local-pkg\": \"^1.0.0\", \"mlly\": \"^1.7.4\" } }, \"sha512-GmQ78prtwYW6EtzXRU1rY+KwOKfz32PD7iJh6Iyqw68GiKuoZ2A6pRtzWONz5VQJbp50mEjXh/7NkumtrAgRKA==\"],\n\n    \"@isaacs/cliui\": [\"@isaacs/cliui@8.0.2\", \"\", { \"dependencies\": { \"string-width\": \"^5.1.2\", \"string-width-cjs\": \"npm:string-width@^4.2.0\", \"strip-ansi\": \"^7.0.1\", \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\", \"wrap-ansi\": \"^8.1.0\", \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\" } }, \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\"],\n\n    \"@isaacs/ttlcache\": [\"@isaacs/ttlcache@1.4.1\", \"\", {}, \"sha512-RQgQ4uQ+pLbqXfOmieB91ejmLwvSgv9nLx6sT6sD83s7umBypgg+OIBOBbEUiJXrfpnp9j0mRhYYdzp9uqq3lA==\"],\n\n    \"@istanbuljs/load-nyc-config\": [\"@istanbuljs/load-nyc-config@1.1.0\", \"\", { \"dependencies\": { \"camelcase\": \"^5.3.1\", \"find-up\": \"^4.1.0\", \"get-package-type\": \"^0.1.0\", \"js-yaml\": \"^3.13.1\", \"resolve-from\": \"^5.0.0\" } }, \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\"],\n\n    \"@istanbuljs/schema\": [\"@istanbuljs/schema@0.1.3\", \"\", {}, \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\"],\n\n    \"@jest/console\": [\"@jest/console@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"slash\": \"^3.0.0\" } }, \"sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==\"],\n\n    \"@jest/core\": [\"@jest/core@29.7.0\", \"\", { \"dependencies\": { \"@jest/console\": \"^29.7.0\", \"@jest/reporters\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"ansi-escapes\": \"^4.2.1\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^3.2.0\", \"exit\": \"^0.1.2\", \"graceful-fs\": \"^4.2.9\", \"jest-changed-files\": \"^29.7.0\", \"jest-config\": \"^29.7.0\", \"jest-haste-map\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-regex-util\": \"^29.6.3\", \"jest-resolve\": \"^29.7.0\", \"jest-resolve-dependencies\": \"^29.7.0\", \"jest-runner\": \"^29.7.0\", \"jest-runtime\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"jest-watcher\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"pretty-format\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"strip-ansi\": \"^6.0.0\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"] }, \"sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==\"],\n\n    \"@jest/create-cache-key-function\": [\"@jest/create-cache-key-function@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\" } }, \"sha512-4QqS3LY5PBmTRHj9sAg1HLoPzqAI0uOX6wI/TRqHIcOxlFidy6YEmCQJk6FSZjNLGCeubDMfmkWL+qaLKhSGQA==\"],\n\n    \"@jest/diff-sequences\": [\"@jest/diff-sequences@30.0.1\", \"\", {}, \"sha512-n5H8QLDJ47QqbCNn5SuFjCRDrOLEZ0h8vAHCK5RL9Ls7Xa8AQLa/YxAc9UjFqoEDM48muwtBGjtMY5cr0PLDCw==\"],\n\n    \"@jest/environment\": [\"@jest/environment@29.7.0\", \"\", { \"dependencies\": { \"@jest/fake-timers\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"jest-mock\": \"^29.7.0\" } }, \"sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==\"],\n\n    \"@jest/expect\": [\"@jest/expect@29.7.0\", \"\", { \"dependencies\": { \"expect\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\" } }, \"sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==\"],\n\n    \"@jest/expect-utils\": [\"@jest/expect-utils@29.7.0\", \"\", { \"dependencies\": { \"jest-get-type\": \"^29.6.3\" } }, \"sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==\"],\n\n    \"@jest/fake-timers\": [\"@jest/fake-timers@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@sinonjs/fake-timers\": \"^10.0.2\", \"@types/node\": \"*\", \"jest-message-util\": \"^29.7.0\", \"jest-mock\": \"^29.7.0\", \"jest-util\": \"^29.7.0\" } }, \"sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==\"],\n\n    \"@jest/get-type\": [\"@jest/get-type@30.0.1\", \"\", {}, \"sha512-AyYdemXCptSRFirI5EPazNxyPwAL0jXt3zceFjaj8NFiKP9pOi0bfXonf6qkf82z2t3QWPeLCWWw4stPBzctLw==\"],\n\n    \"@jest/globals\": [\"@jest/globals@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/expect\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"jest-mock\": \"^29.7.0\" } }, \"sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==\"],\n\n    \"@jest/reporters\": [\"@jest/reporters@29.7.0\", \"\", { \"dependencies\": { \"@bcoe/v8-coverage\": \"^0.2.3\", \"@jest/console\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@jridgewell/trace-mapping\": \"^0.3.18\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"collect-v8-coverage\": \"^1.0.0\", \"exit\": \"^0.1.2\", \"glob\": \"^7.1.3\", \"graceful-fs\": \"^4.2.9\", \"istanbul-lib-coverage\": \"^3.0.0\", \"istanbul-lib-instrument\": \"^6.0.0\", \"istanbul-lib-report\": \"^3.0.0\", \"istanbul-lib-source-maps\": \"^4.0.0\", \"istanbul-reports\": \"^3.1.3\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-worker\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"string-length\": \"^4.0.1\", \"strip-ansi\": \"^6.0.0\", \"v8-to-istanbul\": \"^9.0.1\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"] }, \"sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==\"],\n\n    \"@jest/schemas\": [\"@jest/schemas@29.6.3\", \"\", { \"dependencies\": { \"@sinclair/typebox\": \"^0.27.8\" } }, \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\"],\n\n    \"@jest/source-map\": [\"@jest/source-map@29.6.3\", \"\", { \"dependencies\": { \"@jridgewell/trace-mapping\": \"^0.3.18\", \"callsites\": \"^3.0.0\", \"graceful-fs\": \"^4.2.9\" } }, \"sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==\"],\n\n    \"@jest/test-result\": [\"@jest/test-result@29.7.0\", \"\", { \"dependencies\": { \"@jest/console\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/istanbul-lib-coverage\": \"^2.0.0\", \"collect-v8-coverage\": \"^1.0.0\" } }, \"sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==\"],\n\n    \"@jest/test-sequencer\": [\"@jest/test-sequencer@29.7.0\", \"\", { \"dependencies\": { \"@jest/test-result\": \"^29.7.0\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"slash\": \"^3.0.0\" } }, \"sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==\"],\n\n    \"@jest/transform\": [\"@jest/transform@29.7.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.11.6\", \"@jest/types\": \"^29.6.3\", \"@jridgewell/trace-mapping\": \"^0.3.18\", \"babel-plugin-istanbul\": \"^6.1.1\", \"chalk\": \"^4.0.0\", \"convert-source-map\": \"^2.0.0\", \"fast-json-stable-stringify\": \"^2.1.0\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"jest-regex-util\": \"^29.6.3\", \"jest-util\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"pirates\": \"^4.0.4\", \"slash\": \"^3.0.0\", \"write-file-atomic\": \"^4.0.2\" } }, \"sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\"],\n\n    \"@jest/types\": [\"@jest/types@29.6.3\", \"\", { \"dependencies\": { \"@jest/schemas\": \"^29.6.3\", \"@types/istanbul-lib-coverage\": \"^2.0.0\", \"@types/istanbul-reports\": \"^3.0.0\", \"@types/node\": \"*\", \"@types/yargs\": \"^17.0.8\", \"chalk\": \"^4.0.0\" } }, \"sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\"],\n\n    \"@jitl/quickjs-ffi-types\": [\"@jitl/quickjs-ffi-types@0.31.0\", \"\", {}, \"sha512-1yrgvXlmXH2oNj3eFTrkwacGJbmM0crwipA3ohCrjv52gBeDaD7PsTvFYinlAnqU8iPME3LGP437yk05a2oejw==\"],\n\n    \"@jitl/quickjs-wasmfile-release-sync\": [\"@jitl/quickjs-wasmfile-release-sync@0.31.0\", \"\", { \"dependencies\": { \"@jitl/quickjs-ffi-types\": \"0.31.0\" } }, \"sha512-hYduecOByj9AsAfsJhZh5nA6exokmuFC8cls39+lYmTCGY51bgjJJJwReEu7Ff7vBWaQCL6TeDdVlnp2WYz0jw==\"],\n\n    \"@jridgewell/gen-mapping\": [\"@jridgewell/gen-mapping@0.3.13\", \"\", { \"dependencies\": { \"@jridgewell/sourcemap-codec\": \"^1.5.0\", \"@jridgewell/trace-mapping\": \"^0.3.24\" } }, \"sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==\"],\n\n    \"@jridgewell/resolve-uri\": [\"@jridgewell/resolve-uri@3.1.2\", \"\", {}, \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\"],\n\n    \"@jridgewell/source-map\": [\"@jridgewell/source-map@0.3.11\", \"\", { \"dependencies\": { \"@jridgewell/gen-mapping\": \"^0.3.5\", \"@jridgewell/trace-mapping\": \"^0.3.25\" } }, \"sha512-ZMp1V8ZFcPG5dIWnQLr3NSI1MiCU7UETdS/A0G8V/XWHvJv3ZsFqutJn1Y5RPmAPX6F3BiE397OqveU/9NCuIA==\"],\n\n    \"@jridgewell/sourcemap-codec\": [\"@jridgewell/sourcemap-codec@1.5.5\", \"\", {}, \"sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==\"],\n\n    \"@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.9\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.0.3\", \"@jridgewell/sourcemap-codec\": \"^1.4.10\" } }, \"sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==\"],\n\n    \"@js-sdsl/ordered-map\": [\"@js-sdsl/ordered-map@4.4.2\", \"\", {}, \"sha512-iUKgm52T8HOE/makSxjqoWhe95ZJA1/G1sYsGev2JDKUSS14KAgg1LHb+Ba+IPow0xflbnSkOsZcO08C7w1gYw==\"],\n\n    \"@js-temporal/polyfill\": [\"@js-temporal/polyfill@0.4.4\", \"\", { \"dependencies\": { \"jsbi\": \"^4.3.0\", \"tslib\": \"^2.4.1\" } }, \"sha512-2X6bvghJ/JAoZO52lbgyAPFj8uCflhTo2g7nkFzEQdXd/D8rEeD4HtmTEpmtGCva260fcd66YNXBOYdnmHqSOg==\"],\n\n    \"@mdx-js/esbuild\": [\"@mdx-js/esbuild@2.3.0\", \"\", { \"dependencies\": { \"@mdx-js/mdx\": \"^2.0.0\", \"node-fetch\": \"^3.0.0\", \"vfile\": \"^5.0.0\" }, \"peerDependencies\": { \"esbuild\": \">=0.11.0\" } }, \"sha512-r/vsqsM0E+U4Wr0DK+0EfmABE/eg+8ITW4DjvYdh3ve/tK2safaqHArNnaqbOk1DjYGrhxtoXoGaM3BY8fGBTA==\"],\n\n    \"@mdx-js/loader\": [\"@mdx-js/loader@3.1.0\", \"\", { \"dependencies\": { \"@mdx-js/mdx\": \"^3.0.0\", \"source-map\": \"^0.7.0\" }, \"peerDependencies\": { \"webpack\": \">=5\" }, \"optionalPeers\": [\"webpack\"] }, \"sha512-xU/lwKdOyfXtQGqn3VnJjlDrmKXEvMi1mgYxVmukEUtVycIz1nh7oQ40bKTd4cA7rLStqu0740pnhGYxGoqsCg==\"],\n\n    \"@mdx-js/mdx\": [\"@mdx-js/mdx@3.1.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdx\": \"^2.0.0\", \"collapse-white-space\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"estree-util-scope\": \"^1.0.0\", \"estree-walker\": \"^3.0.0\", \"hast-util-to-jsx-runtime\": \"^2.0.0\", \"markdown-extensions\": \"^2.0.0\", \"recma-build-jsx\": \"^1.0.0\", \"recma-jsx\": \"^1.0.0\", \"recma-stringify\": \"^1.0.0\", \"rehype-recma\": \"^1.0.0\", \"remark-mdx\": \"^3.0.0\", \"remark-parse\": \"^11.0.0\", \"remark-rehype\": \"^11.0.0\", \"source-map\": \"^0.7.0\", \"unified\": \"^11.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\", \"unist-util-stringify-position\": \"^4.0.0\", \"unist-util-visit\": \"^5.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-/QxEhPAvGwbQmy1Px8F899L5Uc2KZ6JtXwlCgJmjSTBedwOZkByYcBG4GceIGPXRDsmfxhHazuS+hlOShRLeDw==\"],\n\n    \"@mdx-js/react\": [\"@mdx-js/react@3.1.0\", \"\", { \"dependencies\": { \"@types/mdx\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \">=16\", \"react\": \">=16\" } }, \"sha512-QjHtSaoameoalGnKDT3FoIl4+9RwyTmo9ZJGBdLOks/YOiWHoRDI3PUwEzOE7kEmGcV3AFcp9K6dYu9rEuKLAQ==\"],\n\n    \"@mediapipe/tasks-vision\": [\"@mediapipe/tasks-vision@0.10.17\", \"\", {}, \"sha512-CZWV/q6TTe8ta61cZXjfnnHsfWIdFhms03M9T7Cnd5y2mdpylJM0rF1qRq+wsQVRMLz1OYPVEBU9ph2Bx8cxrg==\"],\n\n    \"@mermaid-js/parser\": [\"@mermaid-js/parser@0.6.2\", \"\", { \"dependencies\": { \"langium\": \"3.3.1\" } }, \"sha512-+PO02uGF6L6Cs0Bw8RpGhikVvMWEysfAyl27qTlroUB8jSWr1lL0Sf6zi78ZxlSnmgSY2AMMKVgghnN9jTtwkQ==\"],\n\n    \"@monogrid/gainmap-js\": [\"@monogrid/gainmap-js@3.1.0\", \"\", { \"dependencies\": { \"promise-worker-transferable\": \"^1.0.4\" }, \"peerDependencies\": { \"three\": \">= 0.159.0\" } }, \"sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==\"],\n\n    \"@napi-rs/wasm-runtime\": [\"@napi-rs/wasm-runtime@0.2.4\", \"\", { \"dependencies\": { \"@emnapi/core\": \"^1.1.0\", \"@emnapi/runtime\": \"^1.1.0\", \"@tybys/wasm-util\": \"^0.9.0\" } }, \"sha512-9zESzOO5aDByvhIAsOy9TbpZ0Ur2AJbUI7UT73kcUTS2mxAMHOBaa1st/jAymNoCtvrit99kkzT1FZuXVcgfIQ==\"],\n\n    \"@next/env\": [\"@next/env@14.2.13\", \"\", {}, \"sha512-s3lh6K8cbW1h5Nga7NNeXrbe0+2jIIYK9YaA9T7IufDWnZpozdFUp6Hf0d5rNWUKu4fEuSX2rCKlGjCrtylfDw==\"],\n\n    \"@next/eslint-plugin-next\": [\"@next/eslint-plugin-next@14.2.11\", \"\", { \"dependencies\": { \"glob\": \"10.3.10\" } }, \"sha512-7mw+xW7Y03Ph4NTCcAzYe+vu4BNjEHZUfZayyF3Y1D9RX6c5NIe25m1grHEAkyUuaqjRxOYhnCNeglOkIqLkBA==\"],\n\n    \"@next/mdx\": [\"@next/mdx@15.4.6\", \"\", { \"dependencies\": { \"source-map\": \"^0.7.0\" }, \"peerDependencies\": { \"@mdx-js/loader\": \">=0.15.0\", \"@mdx-js/react\": \">=0.15.0\" }, \"optionalPeers\": [\"@mdx-js/loader\", \"@mdx-js/react\"] }, \"sha512-PpJcNWNDq3WctJI2LY7Jur6qTdWklZ3BmbBlS9zG9MvmphcU91MoF/udPmRS1huRSVibGGteXMELu8MXYxjU9g==\"],\n\n    \"@next/swc-darwin-arm64\": [\"@next/swc-darwin-arm64@14.2.13\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-IkAmQEa2Htq+wHACBxOsslt+jMoV3msvxCn0WFSfJSkv/scy+i/EukBKNad36grRxywaXUYJc9mxEGkeIs8Bzg==\"],\n\n    \"@next/swc-darwin-x64\": [\"@next/swc-darwin-x64@14.2.13\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-Dv1RBGs2TTjkwEnFMVL5XIfJEavnLqqwYSD6LXgTPdEy/u6FlSrLBSSfe1pcfqhFEXRAgVL3Wpjibe5wXJzWog==\"],\n\n    \"@next/swc-linux-arm64-gnu\": [\"@next/swc-linux-arm64-gnu@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-yB1tYEFFqo4ZNWkwrJultbsw7NPAAxlPXURXioRl9SdW6aIefOLS+0TEsKrWBtbJ9moTDgU3HRILL6QBQnMevg==\"],\n\n    \"@next/swc-linux-arm64-musl\": [\"@next/swc-linux-arm64-musl@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-v5jZ/FV/eHGoWhMKYrsAweQ7CWb8xsWGM/8m1mwwZQ/sutJjoFaXchwK4pX8NqwImILEvQmZWyb8pPTcP7htWg==\"],\n\n    \"@next/swc-linux-x64-gnu\": [\"@next/swc-linux-x64-gnu@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-aVc7m4YL7ViiRv7SOXK3RplXzOEe/qQzRA5R2vpXboHABs3w8vtFslGTz+5tKiQzWUmTmBNVW0UQdhkKRORmGA==\"],\n\n    \"@next/swc-linux-x64-musl\": [\"@next/swc-linux-x64-musl@14.2.13\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-4wWY7/OsSaJOOKvMsu1Teylku7vKyTuocvDLTZQq0TYv9OjiYYWt63PiE1nTuZnqQ4RPvME7Xai+9enoiN0Wrg==\"],\n\n    \"@next/swc-win32-arm64-msvc\": [\"@next/swc-win32-arm64-msvc@14.2.13\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-uP1XkqCqV2NVH9+g2sC7qIw+w2tRbcMiXFEbMihkQ8B1+V6m28sshBwAB0SDmOe0u44ne1vFU66+gx/28RsBVQ==\"],\n\n    \"@next/swc-win32-ia32-msvc\": [\"@next/swc-win32-ia32-msvc@14.2.13\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-V26ezyjPqQpDBV4lcWIh8B/QICQ4v+M5Bo9ykLN+sqeKKBxJVDpEc6biDVyluTXTC40f5IqCU0ttth7Es2ZuMw==\"],\n\n    \"@next/swc-win32-x64-msvc\": [\"@next/swc-win32-x64-msvc@14.2.13\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-WwzOEAFBGhlDHE5Z73mNU8CO8mqMNLqaG+AO9ETmzdCQlJhVtWZnOl2+rqgVQS+YHunjOWptdFmNfbpwcUuEsw==\"],\n\n    \"@nodelib/fs.scandir\": [\"@nodelib/fs.scandir@2.1.5\", \"\", { \"dependencies\": { \"@nodelib/fs.stat\": \"2.0.5\", \"run-parallel\": \"^1.1.9\" } }, \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\"],\n\n    \"@nodelib/fs.stat\": [\"@nodelib/fs.stat@2.0.5\", \"\", {}, \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\"],\n\n    \"@nodelib/fs.walk\": [\"@nodelib/fs.walk@1.2.8\", \"\", { \"dependencies\": { \"@nodelib/fs.scandir\": \"2.1.5\", \"fastq\": \"^1.6.0\" } }, \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\"],\n\n    \"@nolyfill/is-core-module\": [\"@nolyfill/is-core-module@1.0.39\", \"\", {}, \"sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==\"],\n\n    \"@nx/devkit\": [\"@nx/devkit@20.8.2\", \"\", { \"dependencies\": { \"ejs\": \"^3.1.7\", \"enquirer\": \"~2.3.6\", \"ignore\": \"^5.0.4\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.3\", \"tmp\": \"~0.2.1\", \"tslib\": \"^2.3.0\", \"yargs-parser\": \"21.1.1\" }, \"peerDependencies\": { \"nx\": \">= 19 <= 21\" } }, \"sha512-rr9p2/tZDQivIpuBUpZaFBK6bZ+b5SAjZk75V4tbCUqGW3+5OPuVvBPm+X+7PYwUF6rwSpewxkjWNeGskfCe+Q==\"],\n\n    \"@nx/nx-darwin-arm64\": [\"@nx/nx-darwin-arm64@21.3.11\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-qXZrW6kfsfGG9n4cWugR2v8ys7P1SsbQuFahlbNSTd7g+ZxozaOnc7tyxW9XuY84KQ35HwP/QSu1E13fK5CXwQ==\"],\n\n    \"@nx/nx-darwin-x64\": [\"@nx/nx-darwin-x64@21.3.11\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-6NJEIGRITpFZYptJtr/wdnVuidAS/wONMMSwX5rgAqh5A9teI0vxZVOgG6n5f6NQyqEDvZ9ytcIvLsQWA4kJFg==\"],\n\n    \"@nx/nx-freebsd-x64\": [\"@nx/nx-freebsd-x64@21.3.11\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-9VZOM9mutzuZCUgijHXrIl3NgKt2CWuH/awLqDS8ijhLs6WfI5TYTa+mFwx90dfZZ4y/jy6XWXa2Ee3OShf7Hg==\"],\n\n    \"@nx/nx-linux-arm-gnueabihf\": [\"@nx/nx-linux-arm-gnueabihf@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-a05tAySKDEWt0TGoSnWp/l5+HL/CDJQkHfI9pXho85oDSkVRzhOInAn1EeZB/F+Q3PnJFsMHMhbuu2/nm3uYJA==\"],\n\n    \"@nx/nx-linux-arm64-gnu\": [\"@nx/nx-linux-arm64-gnu@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-MPeivf0ptNpzQYvww6zHIqVbE5dTT2isl/WqzGyy7NgSeYDpFXmouDCQaeKxo5WytMVRCvCw/NnWTQuCK6TjnA==\"],\n\n    \"@nx/nx-linux-arm64-musl\": [\"@nx/nx-linux-arm64-musl@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-/hJpc4VJsbxDEreXt5Ka9HJ3TBEHgIa9y/i+H9MmWOeapCdH1Edhx58Heuv9OaX7kK8Y8q0cSicv0dJCghiTjA==\"],\n\n    \"@nx/nx-linux-x64-gnu\": [\"@nx/nx-linux-x64-gnu@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-pTBHuloqTxpTHa/fdKjHkFFsfW16mEcTp37HDtoQpjPfcd9nO8CYO8OClaewr9khNqCnSbCLfSoIg/alnb7BWw==\"],\n\n    \"@nx/nx-linux-x64-musl\": [\"@nx/nx-linux-x64-musl@21.3.11\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-OhFjURB68rd6xld8t8fiNpopF2E7v+8/jfbpsku9c0gdV2UhzoxCeZwooe7qhQjCcjVO8JNOs4dAf7qs1VtpMw==\"],\n\n    \"@nx/nx-win32-arm64-msvc\": [\"@nx/nx-win32-arm64-msvc@21.3.11\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-pGE2Td13oEj7aeogwCL+2fjmpabQVSduKfGOTlt4YoMlM0w0bXYSWqwiGBMKbMA50qkhnVapwwkuWF38PgCIxg==\"],\n\n    \"@nx/nx-win32-x64-msvc\": [\"@nx/nx-win32-x64-msvc@21.3.11\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-KJqLL/Zyx96hs+7pKbo/fsU7ZTFSLeZLnYQu05o6fvJJ5I1+p85t212/7vkbKKWJncyMospQdzLr3zLG3A/u8A==\"],\n\n    \"@oclif/core\": [\"@oclif/core@4.5.2\", \"\", { \"dependencies\": { \"ansi-escapes\": \"^4.3.2\", \"ansis\": \"^3.17.0\", \"clean-stack\": \"^3.0.1\", \"cli-spinners\": \"^2.9.2\", \"debug\": \"^4.4.0\", \"ejs\": \"^3.1.10\", \"get-package-type\": \"^0.1.0\", \"indent-string\": \"^4.0.0\", \"is-wsl\": \"^2.2.0\", \"lilconfig\": \"^3.1.3\", \"minimatch\": \"^9.0.5\", \"semver\": \"^7.6.3\", \"string-width\": \"^4.2.3\", \"supports-color\": \"^8\", \"tinyglobby\": \"^0.2.14\", \"widest-line\": \"^3.1.0\", \"wordwrap\": \"^1.0.0\", \"wrap-ansi\": \"^7.0.0\" } }, \"sha512-eQcKyrEcDYeZJKu4vUWiu0ii/1Gfev6GF4FsLSgNez5/+aQyAUCjg3ZWlurf491WiYZTXCWyKAxyPWk8DKv2MA==\"],\n\n    \"@oclif/errors\": [\"@oclif/errors@1.3.6\", \"\", { \"dependencies\": { \"clean-stack\": \"^3.0.0\", \"fs-extra\": \"^8.1\", \"indent-string\": \"^4.0.0\", \"strip-ansi\": \"^6.0.1\", \"wrap-ansi\": \"^7.0.0\" } }, \"sha512-fYaU4aDceETd89KXP+3cLyg9EHZsLD3RxF2IU9yxahhBpspWjkWi3Dy3bTgcwZ3V47BgxQaGapzJWDM33XIVDQ==\"],\n\n    \"@oclif/linewrap\": [\"@oclif/linewrap@1.0.0\", \"\", {}, \"sha512-Ups2dShK52xXa8w6iBWLgcjPJWjais6KPJQq3gQ/88AY6BXoTX+MIGFPrWQO1KLMiQfoTpcLnUwloN4brrVUHw==\"],\n\n    \"@oclif/parser\": [\"@oclif/parser@3.8.17\", \"\", { \"dependencies\": { \"@oclif/errors\": \"^1.3.6\", \"@oclif/linewrap\": \"^1.0.0\", \"chalk\": \"^4.1.0\", \"tslib\": \"^2.6.2\" } }, \"sha512-l04iSd0xoh/16TGVpXb81Gg3z7tlQGrEup16BrVLsZBK6SEYpYHRJZnM32BwZrHI97ZSFfuSwVlzoo6HdsaK8A==\"],\n\n    \"@openrouter/ai-sdk-provider\": [\"@openrouter/ai-sdk-provider@1.1.2\", \"\", { \"peerDependencies\": { \"ai\": \"^5.0.0\", \"zod\": \"^3.24.1 || ^v4\" } }, \"sha512-cfiKVpNygGFaJojBHFvtTf7UiF458Xh9yPcTg4FXF7bGYN5V33Rxx9dXNE12fjv6lHeC5C7jwQHDrzUIFol1iQ==\"],\n\n    \"@opentelemetry/api\": [\"@opentelemetry/api@1.9.0\", \"\", {}, \"sha512-3giAOQvZiH5F9bMlMiv8+GSPMeqg0dbaeo58/0SlA9sxSqZhnUtxzX9/2FzyhS9sWQf5S0GJE0AKBrFqjpeYcg==\"],\n\n    \"@opentelemetry/api-logs\": [\"@opentelemetry/api-logs@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-9BJ8lMcOzEN0lu+Qji801y707oFO4xT3db6cosPvl+k7ItUHKN5ofWqtSbM9gbt1H4JJ/4/2TVrqI9Rq7hNv6Q==\"],\n\n    \"@opentelemetry/context-async-hooks\": [\"@opentelemetry/context-async-hooks@1.30.1\", \"\", { \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-s5vvxXPVdjqS3kTLKMeBMvop9hbWkwzBpu+mUO2M7sZtlkyDJGwFe33wRKnbaYDo8ExRVBIIdwIGrqpxHuKttA==\"],\n\n    \"@opentelemetry/core\": [\"@opentelemetry/core@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.28.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-OOCM2C/QIURhJMuKaekP3TRBxBKxG/TWWA0TL2J6nXUtDnuCtccy49LUJF8xPFXMX+0LMcxFpCo8M9cGY1W6rQ==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc\": [\"@opentelemetry/exporter-trace-otlp-grpc@0.39.1\", \"\", { \"dependencies\": { \"@grpc/grpc-js\": \"^1.7.1\", \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/otlp-grpc-exporter-base\": \"0.39.1\", \"@opentelemetry/otlp-transformer\": \"0.39.1\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/sdk-trace-base\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-l5RhLKx6U+yuLhMrtgavTDthX50E1mZM3/SSySC7OPZiArFHV/b/9x9jxAzrOgIQUDxyj4N0V9aLKSA2t7Qzxg==\"],\n\n    \"@opentelemetry/otlp-exporter-base\": [\"@opentelemetry/otlp-exporter-base@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-Pv5X8fbi6jD/RJBePyn7MnCSuE6MbPB6dl+7YYBWJ5RcMGYMwvLXjd4h2jWsPV2TSUg38H/RoSP0aXvQ06Y7iw==\"],\n\n    \"@opentelemetry/otlp-grpc-exporter-base\": [\"@opentelemetry/otlp-grpc-exporter-base@0.39.1\", \"\", { \"dependencies\": { \"@grpc/grpc-js\": \"^1.7.1\", \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/otlp-exporter-base\": \"0.39.1\", \"protobufjs\": \"^7.2.2\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.0.0\" } }, \"sha512-u3ErFRQqQFKjjIMuwLWxz/tLPYInfmiAmSy//fGSCzCh2ZdJgqQjMOAxBgqFtCF2xFL+OmMhyuC2ThMzceGRWA==\"],\n\n    \"@opentelemetry/otlp-transformer\": [\"@opentelemetry/otlp-transformer@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/api-logs\": \"0.39.1\", \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/sdk-logs\": \"0.39.1\", \"@opentelemetry/sdk-metrics\": \"1.13.0\", \"@opentelemetry/sdk-trace-base\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.3.0 <1.5.0\" } }, \"sha512-0hgVnXXz5efI382B/24NxD4b6Zxlh7nxCdJkxkdmQMbn0yRiwoq/ZT+QG8eUL6JNzsBAV1WJlF5aJNsL8skHvw==\"],\n\n    \"@opentelemetry/propagator-b3\": [\"@opentelemetry/propagator-b3@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-oATwWWDIJzybAZ4pO76ATN5N6FFbOA1otibAVlS8v90B4S1wClnhRUk7K+2CHAwN1JKYuj4jh/lpCEG5BAqFuQ==\"],\n\n    \"@opentelemetry/propagator-jaeger\": [\"@opentelemetry/propagator-jaeger@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-Pj/BfnYEKIOImirH76M4hDaBSx6HyZ2CXUqk+Kj02m6BB80c/yo4BdWkn/1gDFfU+YPY+bPR2U0DKBfdxCKwmg==\"],\n\n    \"@opentelemetry/resources\": [\"@opentelemetry/resources@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\", \"@opentelemetry/semantic-conventions\": \"1.28.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-5UxZqiAgLYGFjS4s9qm5mBVo433u+dSPUFWVWXmLAD4wB65oMCoXaJP1KJa9DIYYMeHu3z4BZcStG3LC593cWA==\"],\n\n    \"@opentelemetry/sdk-logs\": [\"@opentelemetry/sdk-logs@0.39.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.4.0 <1.5.0\", \"@opentelemetry/api-logs\": \">=0.38.0\" } }, \"sha512-/gmgKfZ1ZVFporKuwsewqIyvaUIGpv76JZ7lBpHQQPb37IMpaXO6pdqFI4ebHAWfNIm3akMyhmdtzivcgF3lgw==\"],\n\n    \"@opentelemetry/sdk-metrics\": [\"@opentelemetry/sdk-metrics@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"lodash.merge\": \"4.6.2\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.3.0 <1.5.0\" } }, \"sha512-MOjZX6AnSOqLliCcZUrb+DQKjAWXBiGeICGbHAGe5w0BB18PJIeIo995lO5JSaFfHpmUMgJButTPfJJD27W3Vg==\"],\n\n    \"@opentelemetry/sdk-trace-base\": [\"@opentelemetry/sdk-trace-base@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.30.1\", \"@opentelemetry/resources\": \"1.30.1\", \"@opentelemetry/semantic-conventions\": \"1.28.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-jVPgBbH1gCy2Lb7X0AVQ8XAfgg0pJ4nvl8/IiQA6nxOsPvS+0zMJaFSs2ltXe0J6C8dqjcnpyqINDJmU30+uOg==\"],\n\n    \"@opentelemetry/sdk-trace-node\": [\"@opentelemetry/sdk-trace-node@1.30.1\", \"\", { \"dependencies\": { \"@opentelemetry/context-async-hooks\": \"1.30.1\", \"@opentelemetry/core\": \"1.30.1\", \"@opentelemetry/propagator-b3\": \"1.30.1\", \"@opentelemetry/propagator-jaeger\": \"1.30.1\", \"@opentelemetry/sdk-trace-base\": \"1.30.1\", \"semver\": \"^7.5.2\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.10.0\" } }, \"sha512-cBjYOINt1JxXdpw1e5MlHmFRc5fgj4GW/86vsKFxJCJ8AL4PdVtYH41gWwl4qd4uQjqEL1oJVrXkSy5cnduAnQ==\"],\n\n    \"@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.36.0\", \"\", {}, \"sha512-TtxJSRD8Ohxp6bKkhrm27JRHAxPczQA7idtcTOMYI+wQRRrfgqxHv1cFbCApcSnNjtXkmzFozn6jQtFrOmbjPQ==\"],\n\n    \"@panva/hkdf\": [\"@panva/hkdf@1.2.1\", \"\", {}, \"sha512-6oclG6Y3PiDFcoyk8srjLfVKyMfVCKJ27JwNPViuXziFpmdz+MZnZN/aKY0JGXgYuO/VghU0jcOAZgWXZ1Dmrw==\"],\n\n    \"@pkgjs/parseargs\": [\"@pkgjs/parseargs@0.11.0\", \"\", {}, \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\"],\n\n    \"@pkgr/core\": [\"@pkgr/core@0.2.9\", \"\", {}, \"sha512-QNqXyfVS2wm9hweSYD2O7F0G06uurj9kZ96TRQE5Y9hU7+tgdZwIkbAKc5Ocy1HxEY2kuDQa6cQ1WRs/O5LFKA==\"],\n\n    \"@playwright/test\": [\"@playwright/test@1.54.2\", \"\", { \"dependencies\": { \"playwright\": \"1.54.2\" }, \"bin\": { \"playwright\": \"cli.js\" } }, \"sha512-A+znathYxPf+72riFd1r1ovOLqsIIB0jKIoPjyK2kqEIe30/6jF6BC7QNluHuwUmsD2tv1XZVugN8GqfTMOxsA==\"],\n\n    \"@protobufjs/aspromise\": [\"@protobufjs/aspromise@1.1.2\", \"\", {}, \"sha512-j+gKExEuLmKwvz3OgROXtrJ2UG2x8Ch2YZUxahh+s1F2HZ+wAceUNLkvy6zKCPVRkU++ZWQrdxsUeQXmcg4uoQ==\"],\n\n    \"@protobufjs/base64\": [\"@protobufjs/base64@1.1.2\", \"\", {}, \"sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg==\"],\n\n    \"@protobufjs/codegen\": [\"@protobufjs/codegen@2.0.4\", \"\", {}, \"sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==\"],\n\n    \"@protobufjs/eventemitter\": [\"@protobufjs/eventemitter@1.1.0\", \"\", {}, \"sha512-j9ednRT81vYJ9OfVuXG6ERSTdEL1xVsNgqpkxMsbIabzSo3goCjDIveeGv5d03om39ML71RdmrGNjG5SReBP/Q==\"],\n\n    \"@protobufjs/fetch\": [\"@protobufjs/fetch@1.1.0\", \"\", { \"dependencies\": { \"@protobufjs/aspromise\": \"^1.1.1\", \"@protobufjs/inquire\": \"^1.1.0\" } }, \"sha512-lljVXpqXebpsijW71PZaCYeIcE5on1w5DlQy5WH6GLbFryLUrBD4932W/E2BSpfRJWseIL4v/KPgBFxDOIdKpQ==\"],\n\n    \"@protobufjs/float\": [\"@protobufjs/float@1.0.2\", \"\", {}, \"sha512-Ddb+kVXlXst9d+R9PfTIxh1EdNkgoRe5tOX6t01f1lYWOvJnSPDBlG241QLzcyPdoNTsblLUdujGSE4RzrTZGQ==\"],\n\n    \"@protobufjs/inquire\": [\"@protobufjs/inquire@1.1.0\", \"\", {}, \"sha512-kdSefcPdruJiFMVSbn801t4vFK7KB/5gd2fYvrxhuJYg8ILrmn9SKSX2tZdV6V+ksulWqS7aXjBcRXl3wHoD9Q==\"],\n\n    \"@protobufjs/path\": [\"@protobufjs/path@1.1.2\", \"\", {}, \"sha512-6JOcJ5Tm08dOHAbdR3GrvP+yUUfkjG5ePsHYczMFLq3ZmMkAD98cDgcT2iA1lJ9NVwFd4tH/iSSoe44YWkltEA==\"],\n\n    \"@protobufjs/pool\": [\"@protobufjs/pool@1.1.0\", \"\", {}, \"sha512-0kELaGSIDBKvcgS4zkjz1PeddatrjYcmMWOlAuAPwAeccUrPHdUqo/J6LiymHHEiJT5NrF1UVwxY14f+fy4WQw==\"],\n\n    \"@protobufjs/utf8\": [\"@protobufjs/utf8@1.1.0\", \"\", {}, \"sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw==\"],\n\n    \"@puppeteer/browsers\": [\"@puppeteer/browsers@2.10.6\", \"\", { \"dependencies\": { \"debug\": \"^4.4.1\", \"extract-zip\": \"^2.0.1\", \"progress\": \"^2.0.3\", \"proxy-agent\": \"^6.5.0\", \"semver\": \"^7.7.2\", \"tar-fs\": \"^3.1.0\", \"yargs\": \"^17.7.2\" }, \"bin\": { \"browsers\": \"lib/cjs/main-cli.js\" } }, \"sha512-pHUn6ZRt39bP3698HFQlu2ZHCkS/lPcpv7fVQcGBSzNNygw171UXAKrCUhy+TEMw4lEttOKDgNpb04hwUAJeiQ==\"],\n\n    \"@radix-ui/number\": [\"@radix-ui/number@1.1.1\", \"\", {}, \"sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==\"],\n\n    \"@radix-ui/primitive\": [\"@radix-ui/primitive@1.1.2\", \"\", {}, \"sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==\"],\n\n    \"@radix-ui/react-arrow\": [\"@radix-ui/react-arrow@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==\"],\n\n    \"@radix-ui/react-collapsible\": [\"@radix-ui/react-collapsible@1.1.11\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==\"],\n\n    \"@radix-ui/react-collection\": [\"@radix-ui/react-collection@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==\"],\n\n    \"@radix-ui/react-compose-refs\": [\"@radix-ui/react-compose-refs@1.1.2\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==\"],\n\n    \"@radix-ui/react-context\": [\"@radix-ui/react-context@1.1.2\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==\"],\n\n    \"@radix-ui/react-dialog\": [\"@radix-ui/react-dialog@1.1.14\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-focus-guards\": \"1.1.2\", \"@radix-ui/react-focus-scope\": \"1.1.7\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"aria-hidden\": \"^1.2.4\", \"react-remove-scroll\": \"^2.6.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==\"],\n\n    \"@radix-ui/react-direction\": [\"@radix-ui/react-direction@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==\"],\n\n    \"@radix-ui/react-dismissable-layer\": [\"@radix-ui/react-dismissable-layer@1.1.10\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-escape-keydown\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==\"],\n\n    \"@radix-ui/react-dropdown-menu\": [\"@radix-ui/react-dropdown-menu@2.1.15\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-menu\": \"2.1.15\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==\"],\n\n    \"@radix-ui/react-focus-guards\": [\"@radix-ui/react-focus-guards@1.1.2\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==\"],\n\n    \"@radix-ui/react-focus-scope\": [\"@radix-ui/react-focus-scope@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==\"],\n\n    \"@radix-ui/react-id\": [\"@radix-ui/react-id@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==\"],\n\n    \"@radix-ui/react-label\": [\"@radix-ui/react-label@2.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==\"],\n\n    \"@radix-ui/react-menu\": [\"@radix-ui/react-menu@2.1.15\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-focus-guards\": \"1.1.2\", \"@radix-ui/react-focus-scope\": \"1.1.7\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-popper\": \"1.2.7\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-roving-focus\": \"1.1.10\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"aria-hidden\": \"^1.2.4\", \"react-remove-scroll\": \"^2.6.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==\"],\n\n    \"@radix-ui/react-popper\": [\"@radix-ui/react-popper@1.2.7\", \"\", { \"dependencies\": { \"@floating-ui/react-dom\": \"^2.0.0\", \"@radix-ui/react-arrow\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-use-rect\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\", \"@radix-ui/rect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==\"],\n\n    \"@radix-ui/react-portal\": [\"@radix-ui/react-portal@1.1.9\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==\"],\n\n    \"@radix-ui/react-presence\": [\"@radix-ui/react-presence@1.1.4\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==\"],\n\n    \"@radix-ui/react-primitive\": [\"@radix-ui/react-primitive@2.1.3\", \"\", { \"dependencies\": { \"@radix-ui/react-slot\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==\"],\n\n    \"@radix-ui/react-progress\": [\"@radix-ui/react-progress@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==\"],\n\n    \"@radix-ui/react-radio-group\": [\"@radix-ui/react-radio-group@1.3.7\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-roving-focus\": \"1.1.10\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-9w5XhD0KPOrm92OTTE0SysH3sYzHsSTHNvZgUBo/VZ80VdYyB5RneDbc0dKpURS24IxkoFRu/hI0i4XyfFwY6g==\"],\n\n    \"@radix-ui/react-roving-focus\": [\"@radix-ui/react-roving-focus@1.1.10\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==\"],\n\n    \"@radix-ui/react-select\": [\"@radix-ui/react-select@2.2.5\", \"\", { \"dependencies\": { \"@radix-ui/number\": \"1.1.1\", \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-focus-guards\": \"1.1.2\", \"@radix-ui/react-focus-scope\": \"1.1.7\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-popper\": \"1.2.7\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-visually-hidden\": \"1.2.3\", \"aria-hidden\": \"^1.2.4\", \"react-remove-scroll\": \"^2.6.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==\"],\n\n    \"@radix-ui/react-separator\": [\"@radix-ui/react-separator@1.1.7\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==\"],\n\n    \"@radix-ui/react-slider\": [\"@radix-ui/react-slider@1.3.5\", \"\", { \"dependencies\": { \"@radix-ui/number\": \"1.1.1\", \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-rkfe2pU2NBAYfGaxa3Mqosi7VZEWX5CxKaanRv0vZd4Zhl9fvQrg0VM93dv3xGLGfrHuoTRF3JXH8nb9g+B3fw==\"],\n\n    \"@radix-ui/react-slot\": [\"@radix-ui/react-slot@1.2.3\", \"\", { \"dependencies\": { \"@radix-ui/react-compose-refs\": \"1.1.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==\"],\n\n    \"@radix-ui/react-switch\": [\"@radix-ui/react-switch@1.2.5\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-previous\": \"1.1.1\", \"@radix-ui/react-use-size\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==\"],\n\n    \"@radix-ui/react-tabs\": [\"@radix-ui/react-tabs@1.1.12\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-direction\": \"1.1.1\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-roving-focus\": \"1.1.10\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==\"],\n\n    \"@radix-ui/react-toast\": [\"@radix-ui/react-toast@1.2.14\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-collection\": \"1.1.7\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-use-callback-ref\": \"1.1.1\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\", \"@radix-ui/react-visually-hidden\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-nAP5FBxBJGQ/YfUB+r+O6USFVkWq3gAInkxyEnmvEV5jtSbfDhfa4hwX8CraCnbjMLsE7XSf/K75l9xXY7joWg==\"],\n\n    \"@radix-ui/react-tooltip\": [\"@radix-ui/react-tooltip@1.2.7\", \"\", { \"dependencies\": { \"@radix-ui/primitive\": \"1.1.2\", \"@radix-ui/react-compose-refs\": \"1.1.2\", \"@radix-ui/react-context\": \"1.1.2\", \"@radix-ui/react-dismissable-layer\": \"1.1.10\", \"@radix-ui/react-id\": \"1.1.1\", \"@radix-ui/react-popper\": \"1.2.7\", \"@radix-ui/react-portal\": \"1.1.9\", \"@radix-ui/react-presence\": \"1.1.4\", \"@radix-ui/react-primitive\": \"2.1.3\", \"@radix-ui/react-slot\": \"1.2.3\", \"@radix-ui/react-use-controllable-state\": \"1.2.2\", \"@radix-ui/react-visually-hidden\": \"1.2.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==\"],\n\n    \"@radix-ui/react-use-callback-ref\": [\"@radix-ui/react-use-callback-ref@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==\"],\n\n    \"@radix-ui/react-use-controllable-state\": [\"@radix-ui/react-use-controllable-state@1.2.2\", \"\", { \"dependencies\": { \"@radix-ui/react-use-effect-event\": \"0.0.2\", \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==\"],\n\n    \"@radix-ui/react-use-effect-event\": [\"@radix-ui/react-use-effect-event@0.0.2\", \"\", { \"dependencies\": { \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==\"],\n\n    \"@radix-ui/react-use-escape-keydown\": [\"@radix-ui/react-use-escape-keydown@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/react-use-callback-ref\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==\"],\n\n    \"@radix-ui/react-use-layout-effect\": [\"@radix-ui/react-use-layout-effect@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==\"],\n\n    \"@radix-ui/react-use-previous\": [\"@radix-ui/react-use-previous@1.1.1\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==\"],\n\n    \"@radix-ui/react-use-rect\": [\"@radix-ui/react-use-rect@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/rect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==\"],\n\n    \"@radix-ui/react-use-size\": [\"@radix-ui/react-use-size@1.1.1\", \"\", { \"dependencies\": { \"@radix-ui/react-use-layout-effect\": \"1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==\"],\n\n    \"@radix-ui/react-visually-hidden\": [\"@radix-ui/react-visually-hidden@1.2.3\", \"\", { \"dependencies\": { \"@radix-ui/react-primitive\": \"2.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"@types/react-dom\": \"*\", \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\", \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==\"],\n\n    \"@radix-ui/rect\": [\"@radix-ui/rect@1.1.1\", \"\", {}, \"sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==\"],\n\n    \"@react-native/assets-registry\": [\"@react-native/assets-registry@0.81.0\", \"\", {}, \"sha512-rZs8ziQ1YRV3Z5Mw5AR7YcgI3q1Ya9NIx6nyuZAT9wDSSjspSi+bww+Hargh/a4JfV2Ajcxpn9X9UiFJr1ddPw==\"],\n\n    \"@react-native/babel-plugin-codegen\": [\"@react-native/babel-plugin-codegen@0.81.0\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.25.3\", \"@react-native/codegen\": \"0.81.0\" } }, \"sha512-MEMlW91+2Kk9GiObRP1Nc6oTdiyvmSEbPMSC6kzUzDyouxnh5/x28uyNySmB2nb6ivcbmQ0lxaU059+CZSkKXQ==\"],\n\n    \"@react-native/babel-preset\": [\"@react-native/babel-preset@0.81.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@babel/plugin-proposal-export-default-from\": \"^7.24.7\", \"@babel/plugin-syntax-dynamic-import\": \"^7.8.3\", \"@babel/plugin-syntax-export-default-from\": \"^7.24.7\", \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\", \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\", \"@babel/plugin-transform-arrow-functions\": \"^7.24.7\", \"@babel/plugin-transform-async-generator-functions\": \"^7.25.4\", \"@babel/plugin-transform-async-to-generator\": \"^7.24.7\", \"@babel/plugin-transform-block-scoping\": \"^7.25.0\", \"@babel/plugin-transform-class-properties\": \"^7.25.4\", \"@babel/plugin-transform-classes\": \"^7.25.4\", \"@babel/plugin-transform-computed-properties\": \"^7.24.7\", \"@babel/plugin-transform-destructuring\": \"^7.24.8\", \"@babel/plugin-transform-flow-strip-types\": \"^7.25.2\", \"@babel/plugin-transform-for-of\": \"^7.24.7\", \"@babel/plugin-transform-function-name\": \"^7.25.1\", \"@babel/plugin-transform-literals\": \"^7.25.2\", \"@babel/plugin-transform-logical-assignment-operators\": \"^7.24.7\", \"@babel/plugin-transform-modules-commonjs\": \"^7.24.8\", \"@babel/plugin-transform-named-capturing-groups-regex\": \"^7.24.7\", \"@babel/plugin-transform-nullish-coalescing-operator\": \"^7.24.7\", \"@babel/plugin-transform-numeric-separator\": \"^7.24.7\", \"@babel/plugin-transform-object-rest-spread\": \"^7.24.7\", \"@babel/plugin-transform-optional-catch-binding\": \"^7.24.7\", \"@babel/plugin-transform-optional-chaining\": \"^7.24.8\", \"@babel/plugin-transform-parameters\": \"^7.24.7\", \"@babel/plugin-transform-private-methods\": \"^7.24.7\", \"@babel/plugin-transform-private-property-in-object\": \"^7.24.7\", \"@babel/plugin-transform-react-display-name\": \"^7.24.7\", \"@babel/plugin-transform-react-jsx\": \"^7.25.2\", \"@babel/plugin-transform-react-jsx-self\": \"^7.24.7\", \"@babel/plugin-transform-react-jsx-source\": \"^7.24.7\", \"@babel/plugin-transform-regenerator\": \"^7.24.7\", \"@babel/plugin-transform-runtime\": \"^7.24.7\", \"@babel/plugin-transform-shorthand-properties\": \"^7.24.7\", \"@babel/plugin-transform-spread\": \"^7.24.7\", \"@babel/plugin-transform-sticky-regex\": \"^7.24.7\", \"@babel/plugin-transform-typescript\": \"^7.25.2\", \"@babel/plugin-transform-unicode-regex\": \"^7.24.7\", \"@babel/template\": \"^7.25.0\", \"@react-native/babel-plugin-codegen\": \"0.81.0\", \"babel-plugin-syntax-hermes-parser\": \"0.29.1\", \"babel-plugin-transform-flow-enums\": \"^0.0.2\", \"react-refresh\": \"^0.14.0\" } }, \"sha512-RKMgCUGsso/2b32kgg24lB68LJ6qr2geLoSQTbisY6Usye0uXeXCgbZZDbILIX9upL4uzU4staMldRZ0v08F1g==\"],\n\n    \"@react-native/codegen\": [\"@react-native/codegen@0.81.0\", \"\", { \"dependencies\": { \"glob\": \"^7.1.1\", \"hermes-parser\": \"0.29.1\", \"invariant\": \"^2.2.4\", \"nullthrows\": \"^1.1.1\", \"yargs\": \"^17.6.2\" }, \"peerDependencies\": { \"@babel/core\": \"*\" } }, \"sha512-gPFutgtj8YqbwKKt3YpZKamUBGd9YZJV51Jq2aiDZ9oThkg1frUBa20E+Jdi7jKn982wjBMxAklAR85QGQ4xMA==\"],\n\n    \"@react-native/community-cli-plugin\": [\"@react-native/community-cli-plugin@0.81.0\", \"\", { \"dependencies\": { \"@react-native/dev-middleware\": \"0.81.0\", \"debug\": \"^4.4.0\", \"invariant\": \"^2.2.4\", \"metro\": \"^0.83.1\", \"metro-config\": \"^0.83.1\", \"metro-core\": \"^0.83.1\", \"semver\": \"^7.1.3\" }, \"peerDependencies\": { \"@react-native-community/cli\": \"*\", \"@react-native/metro-config\": \"*\" }, \"optionalPeers\": [\"@react-native-community/cli\"] }, \"sha512-n04ACkCaLR54NmA/eWiDpjC16pHr7+yrbjQ6OEdRoXbm5EfL8FEre2kDAci7pfFdiSMpxdRULDlKpfQ+EV/GAQ==\"],\n\n    \"@react-native/debugger-frontend\": [\"@react-native/debugger-frontend@0.81.0\", \"\", {}, \"sha512-N/8uL2CGQfwiQRYFUNfmaYxRDSoSeOmFb56rb0PDnP3XbS5+X9ee7X4bdnukNHLGfkRdH7sVjlB8M5zE8XJOhw==\"],\n\n    \"@react-native/dev-middleware\": [\"@react-native/dev-middleware@0.81.0\", \"\", { \"dependencies\": { \"@isaacs/ttlcache\": \"^1.4.1\", \"@react-native/debugger-frontend\": \"0.81.0\", \"chrome-launcher\": \"^0.15.2\", \"chromium-edge-launcher\": \"^0.2.0\", \"connect\": \"^3.6.5\", \"debug\": \"^4.4.0\", \"invariant\": \"^2.2.4\", \"nullthrows\": \"^1.1.1\", \"open\": \"^7.0.3\", \"serve-static\": \"^1.16.2\", \"ws\": \"^6.2.3\" } }, \"sha512-J/HeC/+VgRyGECPPr9rAbe5S0OL6MCIrvrC/kgNKSME5+ZQLCiTpt3pdAoAMXwXiF9a02Nmido0DnyM1acXTIA==\"],\n\n    \"@react-native/gradle-plugin\": [\"@react-native/gradle-plugin@0.81.0\", \"\", {}, \"sha512-LGNtPXO1RKLws5ORRb4Q4YULi2qxM4qZRuARtwqM/1f2wyZVggqapoV0OXlaXaz+GiEd2ll3ROE4CcLN6J93jg==\"],\n\n    \"@react-native/js-polyfills\": [\"@react-native/js-polyfills@0.81.0\", \"\", {}, \"sha512-whXZWIogzoGpqdyTjqT89M6DXmlOkWqNpWoVOAwVi8XFCMO+L7WTk604okIgO6gdGZcP1YtFpQf9JusbKrv/XA==\"],\n\n    \"@react-native/metro-babel-transformer\": [\"@react-native/metro-babel-transformer@0.81.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@react-native/babel-preset\": \"0.81.0\", \"hermes-parser\": \"0.29.1\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-Mwovr4jJ3JTnbHEQLhdcMvS82LjijpqCydXl1aH2N16WVCrE5oSNFiqTt6NpZBw9zkJX7nijsY+xeCy6m+KK3Q==\"],\n\n    \"@react-native/metro-config\": [\"@react-native/metro-config@0.81.0\", \"\", { \"dependencies\": { \"@react-native/js-polyfills\": \"0.81.0\", \"@react-native/metro-babel-transformer\": \"0.81.0\", \"metro-config\": \"^0.83.1\", \"metro-runtime\": \"^0.83.1\" } }, \"sha512-5eqLP4TCERHGRYDJSZa//O98CGDFNNEwHVvhs65Msfy6hAoSdw5pAAuTrsQwmbTBp0Fkvu7Bx8BZDhiferZsHg==\"],\n\n    \"@react-native/normalize-colors\": [\"@react-native/normalize-colors@0.81.0\", \"\", {}, \"sha512-3gEu/29uFgz+81hpUgdlOojM4rjHTIPwxpfygFNY60V6ywZih3eLDTS8kAjNZfPFHQbcYrNorJzwnL5yFF/uLw==\"],\n\n    \"@react-native/virtualized-lists\": [\"@react-native/virtualized-lists@0.81.0\", \"\", { \"dependencies\": { \"invariant\": \"^2.2.4\", \"nullthrows\": \"^1.1.1\" }, \"peerDependencies\": { \"@types/react\": \"^19.1.0\", \"react\": \"*\", \"react-native\": \"*\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-p14QC5INHkbMZ96158sUxkSwN6zp138W11G+CRGoLJY4Q9WRJBCe7wHR5Owyy3XczQXrIih/vxAXwgYeZ2XByg==\"],\n\n    \"@react-spring/animated\": [\"@react-spring/animated@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-Tqrwz7pIlsSDITzxoLS3n/v/YCUHQdOIKtOJf4yL6kYVSDTSmVK1LI1Q3M/uu2Sx4X3pIWF3xLUhlsA6SPNTNg==\"],\n\n    \"@react-spring/core\": [\"@react-spring/core@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-rmEqcxRcu7dWh7MnCcMXLvrf6/SDlSokLaLTxiPlAYi11nN3B5oiCUAblO72o+9z/87j2uzxa2Inm8UbLjXA+w==\"],\n\n    \"@react-spring/konva\": [\"@react-spring/konva@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"konva\": \">=2.6\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-konva\": \"^16.8.0 || ^16.8.7-0 || ^16.9.0-0 || ^16.10.1-0 || ^16.12.0-0 || ^16.13.0-0 || ^17.0.0-0 || ^17.0.1-0 || ^17.0.2-0 || ^18.0.0-0\" } }, \"sha512-BelrmyY6w0FGoNSEfSJltjQDUoW0Prxf+FzGjyLuLs+V9M9OM/aHnYqOlvQEfQsZx6C/ZiDOn5BZl8iH8SDf+Q==\"],\n\n    \"@react-spring/native\": [\"@react-spring/native@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"16.8.0  || >=17.0.0 || >=18.0.0\", \"react-native\": \">=0.58\" } }, \"sha512-C1S500BNP1I05MftElyLv2nIqaWQ0MAByOAK/p4vuXcUK3XcjFaAJ385gVLgV2rgKfvkqRoz97PSwbh+ZCETEg==\"],\n\n    \"@react-spring/rafz\": [\"@react-spring/rafz@9.7.5\", \"\", {}, \"sha512-5ZenDQMC48wjUzPAm1EtwQ5Ot3bLIAwwqP2w2owG5KoNdNHpEJV263nGhCeKKmuA3vG2zLLOdu3or6kuDjA6Aw==\"],\n\n    \"@react-spring/shared\": [\"@react-spring/shared@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/rafz\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-wdtoJrhUeeyD/PP/zo+np2s1Z820Ohr/BbuVYv+3dVLW7WctoiN7std8rISoYoHpUXtbkpesSKuPIw/6U1w1Pw==\"],\n\n    \"@react-spring/three\": [\"@react-spring/three@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"@react-three/fiber\": \">=6.0\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"three\": \">=0.126\" } }, \"sha512-RxIsCoQfUqOS3POmhVHa1wdWS0wyHAUway73uRLp3GAL5U2iYVNdnzQsep6M2NZ994BlW8TcKuMtQHUqOsy6WA==\"],\n\n    \"@react-spring/types\": [\"@react-spring/types@9.7.5\", \"\", {}, \"sha512-HVj7LrZ4ReHWBimBvu2SKND3cDVUPWKLqRTmWe/fNY6o1owGOX0cAHbdPDTMelgBlVbrTKrre6lFkhqGZErK/g==\"],\n\n    \"@react-spring/web\": [\"@react-spring/web@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-lmvqGwpe+CSttsWNZVr+Dg62adtKhauGwLyGE/RRyZ8AAMLgb9x3NDMA5RMElXo+IMyTkPp7nxTB8ZQlmhb6JQ==\"],\n\n    \"@react-spring/zdog\": [\"@react-spring/zdog@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/animated\": \"~9.7.5\", \"@react-spring/core\": \"~9.7.5\", \"@react-spring/shared\": \"~9.7.5\", \"@react-spring/types\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-zdog\": \">=1.0\", \"zdog\": \">=1.0\" } }, \"sha512-VV7vmb52wGHgDA1ry6hv+QgxTs78fqjKEQnj+M8hiBg+dwOsTtqqM24ADtc4cMAhPW+eZhVps8ZNKtjt8ouHFA==\"],\n\n    \"@react-three/drei\": [\"@react-three/drei@9.122.0\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.26.0\", \"@mediapipe/tasks-vision\": \"0.10.17\", \"@monogrid/gainmap-js\": \"^3.0.6\", \"@react-spring/three\": \"~9.7.5\", \"@use-gesture/react\": \"^10.3.1\", \"camera-controls\": \"^2.9.0\", \"cross-env\": \"^7.0.3\", \"detect-gpu\": \"^5.0.56\", \"glsl-noise\": \"^0.0.0\", \"hls.js\": \"^1.5.17\", \"maath\": \"^0.10.8\", \"meshline\": \"^3.3.1\", \"react-composer\": \"^5.0.3\", \"stats-gl\": \"^2.2.8\", \"stats.js\": \"^0.17.0\", \"suspend-react\": \"^0.1.3\", \"three-mesh-bvh\": \"^0.7.8\", \"three-stdlib\": \"^2.35.6\", \"troika-three-text\": \"^0.52.0\", \"tunnel-rat\": \"^0.1.2\", \"utility-types\": \"^3.11.0\", \"zustand\": \"^5.0.1\" }, \"peerDependencies\": { \"@react-three/fiber\": \"^8\", \"react\": \"^18\", \"react-dom\": \"^18\", \"three\": \">=0.137\" }, \"optionalPeers\": [\"react-dom\"] }, \"sha512-SEO/F/rBCTjlLez7WAlpys+iGe9hty4rNgjZvgkQeXFSiwqD4Hbk/wNHMAbdd8vprO2Aj81mihv4dF5bC7D0CA==\"],\n\n    \"@react-three/fiber\": [\"@react-three/fiber@8.18.0\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.17.8\", \"@types/react-reconciler\": \"^0.26.7\", \"@types/webxr\": \"*\", \"base64-js\": \"^1.5.1\", \"buffer\": \"^6.0.3\", \"its-fine\": \"^1.0.6\", \"react-reconciler\": \"^0.27.0\", \"react-use-measure\": \"^2.1.7\", \"scheduler\": \"^0.21.0\", \"suspend-react\": \"^0.1.3\", \"zustand\": \"^3.7.1\" }, \"peerDependencies\": { \"expo\": \">=43.0\", \"expo-asset\": \">=8.4\", \"expo-file-system\": \">=11.0\", \"expo-gl\": \">=11.0\", \"react\": \">=18 <19\", \"react-dom\": \">=18 <19\", \"react-native\": \">=0.64\", \"three\": \">=0.133\" }, \"optionalPeers\": [\"expo\", \"expo-asset\", \"expo-file-system\", \"expo-gl\", \"react-dom\", \"react-native\"] }, \"sha512-FYZZqD0UUHUswKz3LQl2Z7H24AhD14XGTsIRw3SJaXUxyfVMi+1yiZGmqTcPt/CkPpdU7rrxqcyQ1zJE5DjvIQ==\"],\n\n    \"@rtsao/scc\": [\"@rtsao/scc@1.1.0\", \"\", {}, \"sha512-zt6OdqaDoOnJ1ZYsCYGt9YmWzDXl4vQdKTyJev62gFhRGKdx7mcT54V9KIjg+d2wi9EXsPvAPKe7i7WjfVWB8g==\"],\n\n    \"@rushstack/eslint-patch\": [\"@rushstack/eslint-patch@1.12.0\", \"\", {}, \"sha512-5EwMtOqvJMMa3HbmxLlF74e+3/HhwBTMcvt3nqVJgGCozO6hzIPOBlwm8mGVNR9SN2IJpxSnlxczyDjcn7qIyw==\"],\n\n    \"@sapphire/async-queue\": [\"@sapphire/async-queue@1.5.5\", \"\", {}, \"sha512-cvGzxbba6sav2zZkH8GPf2oGk9yYoD5qrNWdu9fRehifgnFZJMV+nuy2nON2roRO4yQQ+v7MK/Pktl/HgfsUXg==\"],\n\n    \"@sapphire/shapeshift\": [\"@sapphire/shapeshift@4.0.0\", \"\", { \"dependencies\": { \"fast-deep-equal\": \"^3.1.3\", \"lodash\": \"^4.17.21\" } }, \"sha512-d9dUmWVA7MMiKobL3VpLF8P2aeanRTu6ypG2OIaEv/ZHH/SUQ2iHOVyi5wAPjQ+HmnMuL0whK9ez8I/raWbtIg==\"],\n\n    \"@sapphire/snowflake\": [\"@sapphire/snowflake@3.5.3\", \"\", {}, \"sha512-jjmJywLAFoWeBi1W7994zZyiNWPIiqRRNAmSERxyg93xRGzNYvGjlZ0gR6x0F4gPRi2+0O6S71kOZYyr3cxaIQ==\"],\n\n    \"@shadcn/ui\": [\"@shadcn/ui@0.0.4\", \"\", { \"dependencies\": { \"chalk\": \"5.2.0\", \"commander\": \"^10.0.0\", \"execa\": \"^7.0.0\", \"fs-extra\": \"^11.1.0\", \"node-fetch\": \"^3.3.0\", \"ora\": \"^6.1.2\", \"prompts\": \"^2.4.2\", \"zod\": \"^3.20.2\" }, \"bin\": { \"ui\": \"dist/index.js\" } }, \"sha512-0dtu/5ApsOZ24qgaZwtif8jVwqol7a4m1x5AxPuM1k5wxhqU7t/qEfBGtaSki1R8VlbTQfCj5PAlO45NKCa7Gg==\"],\n\n    \"@sinclair/typebox\": [\"@sinclair/typebox@0.27.8\", \"\", {}, \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\"],\n\n    \"@sinonjs/commons\": [\"@sinonjs/commons@3.0.1\", \"\", { \"dependencies\": { \"type-detect\": \"4.0.8\" } }, \"sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==\"],\n\n    \"@sinonjs/fake-timers\": [\"@sinonjs/fake-timers@10.3.0\", \"\", { \"dependencies\": { \"@sinonjs/commons\": \"^3.0.0\" } }, \"sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==\"],\n\n    \"@standard-schema/spec\": [\"@standard-schema/spec@1.0.0\", \"\", {}, \"sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==\"],\n\n    \"@stripe/stripe-js\": [\"@stripe/stripe-js@4.10.0\", \"\", {}, \"sha512-KrMOL+sH69htCIXCaZ4JluJ35bchuCCznyPyrbN8JXSGQfwBI1SuIEMZNwvy8L8ykj29t6sa5BAAiL7fNoLZ8A==\"],\n\n    \"@swc/counter\": [\"@swc/counter@0.1.3\", \"\", {}, \"sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==\"],\n\n    \"@swc/helpers\": [\"@swc/helpers@0.5.5\", \"\", { \"dependencies\": { \"@swc/counter\": \"^0.1.3\", \"tslib\": \"^2.4.0\" } }, \"sha512-KGYxvIOXcceOAbEk4bi/dVLEK9z8sZ0uBB3Il5b1rhfClSpcX0yfRO0KmTkqR2cnQDymwLB+25ZyMzICg/cm/A==\"],\n\n    \"@t3-oss/env-core\": [\"@t3-oss/env-core@0.7.3\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.7.2\", \"zod\": \"^3.0.0\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-hhtj59TKC6TKVdwJ0CcbKsvkr9R8Pc/SNKd4IgGUIC9T9X6moB8EZZ3FTJdABA/h9UABCK4J+KsF8gzmvMvHPg==\"],\n\n    \"@t3-oss/env-nextjs\": [\"@t3-oss/env-nextjs@0.7.3\", \"\", { \"dependencies\": { \"@t3-oss/env-core\": \"0.7.3\" }, \"peerDependencies\": { \"typescript\": \">=4.7.2\", \"zod\": \"^3.0.0\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-90TNffS17vjkQwfYyMUb4Zw9yqHwFV40f78qFug4JiQa5+N6DydTdlLOpzOcj8Cna/qpAVDwMSypofF/TVQDuA==\"],\n\n    \"@tailwindcss/typography\": [\"@tailwindcss/typography@0.5.16\", \"\", { \"dependencies\": { \"lodash.castarray\": \"^4.4.0\", \"lodash.isplainobject\": \"^4.0.6\", \"lodash.merge\": \"^4.6.2\", \"postcss-selector-parser\": \"6.0.10\" }, \"peerDependencies\": { \"tailwindcss\": \">=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1\" } }, \"sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==\"],\n\n    \"@tanstack/query-core\": [\"@tanstack/query-core@5.83.1\", \"\", {}, \"sha512-OG69LQgT7jSp+5pPuCfzltq/+7l2xoweggjme9vlbCPa/d7D7zaqv5vN/S82SzSYZ4EDLTxNO1PWrv49RAS64Q==\"],\n\n    \"@tanstack/react-query\": [\"@tanstack/react-query@5.85.0\", \"\", { \"dependencies\": { \"@tanstack/query-core\": \"5.83.1\" }, \"peerDependencies\": { \"react\": \"^18 || ^19\" } }, \"sha512-t1HMfToVMGfwEJRya6GG7gbK0luZJd+9IySFNePL1BforU1F3LqQ3tBC2Rpvr88bOrlU6PXyMLgJD0Yzn4ztUw==\"],\n\n    \"@tanstack/react-virtual\": [\"@tanstack/react-virtual@3.13.12\", \"\", { \"dependencies\": { \"@tanstack/virtual-core\": \"3.13.12\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\" } }, \"sha512-Gd13QdxPSukP8ZrkbgS2RwoZseTTbQPLnQEn7HY/rqtM+8Zt95f7xKC7N0EsKs7aoz0WzZ+fditZux+F8EzYxA==\"],\n\n    \"@tanstack/virtual-core\": [\"@tanstack/virtual-core@3.13.12\", \"\", {}, \"sha512-1YBOJfRHV4sXUmWsFSf5rQor4Ss82G8dQWLRbnk3GA4jeP8hQt1hxXh0tmflpC0dz3VgEv/1+qwPyLeWkQuPFA==\"],\n\n    \"@testing-library/dom\": [\"@testing-library/dom@10.4.1\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.10.4\", \"@babel/runtime\": \"^7.12.5\", \"@types/aria-query\": \"^5.0.1\", \"aria-query\": \"5.3.0\", \"dom-accessibility-api\": \"^0.5.9\", \"lz-string\": \"^1.5.0\", \"picocolors\": \"1.1.1\", \"pretty-format\": \"^27.0.2\" } }, \"sha512-o4PXJQidqJl82ckFaXUeoAW+XysPLauYI43Abki5hABd853iMhitooc6znOnczgbTYmEP6U6/y1ZyKAIsvMKGg==\"],\n\n    \"@testing-library/jest-dom\": [\"@testing-library/jest-dom@6.6.4\", \"\", { \"dependencies\": { \"@adobe/css-tools\": \"^4.4.0\", \"aria-query\": \"^5.0.0\", \"css.escape\": \"^1.5.1\", \"dom-accessibility-api\": \"^0.6.3\", \"lodash\": \"^4.17.21\", \"picocolors\": \"^1.1.1\", \"redent\": \"^3.0.0\" } }, \"sha512-xDXgLjVunjHqczScfkCJ9iyjdNOVHvvCdqHSSxwM9L0l/wHkTRum67SDc020uAlCoqktJplgO2AAQeLP1wgqDQ==\"],\n\n    \"@testing-library/react\": [\"@testing-library/react@16.3.0\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.12.5\" }, \"peerDependencies\": { \"@testing-library/dom\": \"^10.0.0\", \"@types/react\": \"^18.0.0 || ^19.0.0\", \"@types/react-dom\": \"^18.0.0 || ^19.0.0\", \"react\": \"^18.0.0 || ^19.0.0\", \"react-dom\": \"^18.0.0 || ^19.0.0\" }, \"optionalPeers\": [\"@types/react\", \"@types/react-dom\"] }, \"sha512-kFSyxiEDwv1WLl2fgsq6pPBbw5aWKrsY2/noi1Id0TK0UParSF62oFQFGHXIyaG4pp2tEub/Zlel+fjjZILDsw==\"],\n\n    \"@tootallnate/once\": [\"@tootallnate/once@2.0.0\", \"\", {}, \"sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==\"],\n\n    \"@tootallnate/quickjs-emscripten\": [\"@tootallnate/quickjs-emscripten@0.23.0\", \"\", {}, \"sha512-C5Mc6rdnsaJDjO3UpGW/CQTHtCKaYlScZTly4JIu97Jxo/odCiH0ITnDXSJPTOrEKk/ycSZ0AOgTmkDtkOsvIA==\"],\n\n    \"@ts-morph/common\": [\"@ts-morph/common@0.19.0\", \"\", { \"dependencies\": { \"fast-glob\": \"^3.2.12\", \"minimatch\": \"^7.4.3\", \"mkdirp\": \"^2.1.6\", \"path-browserify\": \"^1.0.1\" } }, \"sha512-Unz/WHmd4pGax91rdIKWi51wnVUW11QttMEPpBiBgIewnc9UQIX7UDLxr5vRlqeByXCwhkF6VabSsI0raWcyAQ==\"],\n\n    \"@tsconfig/node10\": [\"@tsconfig/node10@1.0.11\", \"\", {}, \"sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==\"],\n\n    \"@tsconfig/node12\": [\"@tsconfig/node12@1.0.11\", \"\", {}, \"sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==\"],\n\n    \"@tsconfig/node14\": [\"@tsconfig/node14@1.0.3\", \"\", {}, \"sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==\"],\n\n    \"@tsconfig/node16\": [\"@tsconfig/node16@1.0.4\", \"\", {}, \"sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==\"],\n\n    \"@turf/boolean-point-in-polygon\": [\"@turf/boolean-point-in-polygon@7.2.0\", \"\", { \"dependencies\": { \"@turf/helpers\": \"^7.2.0\", \"@turf/invariant\": \"^7.2.0\", \"@types/geojson\": \"^7946.0.10\", \"point-in-polygon-hao\": \"^1.1.0\", \"tslib\": \"^2.8.1\" } }, \"sha512-lvEOjxeXIp+wPXgl9kJA97dqzMfNexjqHou+XHVcfxQgolctoJiRYmcVCWGpiZ9CBf/CJha1KmD1qQoRIsjLaA==\"],\n\n    \"@turf/helpers\": [\"@turf/helpers@7.2.0\", \"\", { \"dependencies\": { \"@types/geojson\": \"^7946.0.10\", \"tslib\": \"^2.8.1\" } }, \"sha512-cXo7bKNZoa7aC7ydLmUR02oB3IgDe7MxiPuRz3cCtYQHn+BJ6h1tihmamYDWWUlPHgSNF0i3ATc4WmDECZafKw==\"],\n\n    \"@turf/invariant\": [\"@turf/invariant@7.2.0\", \"\", { \"dependencies\": { \"@turf/helpers\": \"^7.2.0\", \"@types/geojson\": \"^7946.0.10\", \"tslib\": \"^2.8.1\" } }, \"sha512-kV4u8e7Gkpq+kPbAKNC21CmyrXzlbBgFjO1PhrHPgEdNqXqDawoZ3i6ivE3ULJj2rSesCjduUaC/wyvH/sNr2Q==\"],\n\n    \"@tweenjs/tween.js\": [\"@tweenjs/tween.js@25.0.0\", \"\", {}, \"sha512-XKLA6syeBUaPzx4j3qwMqzzq+V4uo72BnlbOjmuljLrRqdsd3qnzvZZoxvMHZ23ndsRS4aufU6JOZYpCbU6T1A==\"],\n\n    \"@tybys/wasm-util\": [\"@tybys/wasm-util@0.9.0\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-6+7nlbMVX/PVDCwaIQ8nTOPveOcFLSt8GcXdx8hD0bt39uWxYT88uXzqTd4fTvqta7oeUJqudepapKNt2DYJFw==\"],\n\n    \"@types/acorn\": [\"@types/acorn@4.0.6\", \"\", { \"dependencies\": { \"@types/estree\": \"*\" } }, \"sha512-veQTnWP+1D/xbxVrPC3zHnCZRjSrKfhbMUlEA43iMZLu7EsnTtkJklIuwrCPbOi8YkvDQAiW05VQQFvvz9oieQ==\"],\n\n    \"@types/aria-query\": [\"@types/aria-query@5.0.4\", \"\", {}, \"sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==\"],\n\n    \"@types/async\": [\"@types/async@3.2.25\", \"\", {}, \"sha512-O6Th/DI18XjrL9TX8LO9F/g26qAz5vynmQqlXt/qLGrskvzCKXKc5/tATz3G2N6lM8eOf3M8/StB14FncAmocg==\"],\n\n    \"@types/babel__core\": [\"@types/babel__core@7.20.5\", \"\", { \"dependencies\": { \"@babel/parser\": \"^7.20.7\", \"@babel/types\": \"^7.20.7\", \"@types/babel__generator\": \"*\", \"@types/babel__template\": \"*\", \"@types/babel__traverse\": \"*\" } }, \"sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==\"],\n\n    \"@types/babel__generator\": [\"@types/babel__generator@7.27.0\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.0.0\" } }, \"sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==\"],\n\n    \"@types/babel__template\": [\"@types/babel__template@7.4.4\", \"\", { \"dependencies\": { \"@babel/parser\": \"^7.1.0\", \"@babel/types\": \"^7.0.0\" } }, \"sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==\"],\n\n    \"@types/babel__traverse\": [\"@types/babel__traverse@7.28.0\", \"\", { \"dependencies\": { \"@babel/types\": \"^7.28.2\" } }, \"sha512-8PvcXf70gTDZBgt9ptxJ8elBeBjcLOAcOtoO/mPJjtji1+CdGbHgm77om1GrsPxsiE+uXIpNSK64UYaIwQXd4Q==\"],\n\n    \"@types/body-parser\": [\"@types/body-parser@1.19.6\", \"\", { \"dependencies\": { \"@types/connect\": \"*\", \"@types/node\": \"*\" } }, \"sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==\"],\n\n    \"@types/braces\": [\"@types/braces@3.0.5\", \"\", {}, \"sha512-SQFof9H+LXeWNz8wDe7oN5zu7ket0qwMu5vZubW4GCJ8Kkeh6nBWUz87+KTz/G3Kqsrp0j/W253XJb3KMEeg3w==\"],\n\n    \"@types/bun\": [\"@types/bun@1.2.20\", \"\", { \"dependencies\": { \"bun-types\": \"1.2.20\" } }, \"sha512-dX3RGzQ8+KgmMw7CsW4xT5ITBSCrSbfHc36SNT31EOUg/LA9JWq0VDdEXDRSe1InVWpd2yLUM1FUF/kEOyTzYA==\"],\n\n    \"@types/caseless\": [\"@types/caseless@0.12.5\", \"\", {}, \"sha512-hWtVTC2q7hc7xZ/RLbxapMvDMgUnDvKvMOpKal4DrMyfGBUfB1oKaZlIRr6mJL+If3bAP6sV/QneGzF6tJjZDg==\"],\n\n    \"@types/connect\": [\"@types/connect@3.4.38\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==\"],\n\n    \"@types/conventional-commits-parser\": [\"@types/conventional-commits-parser@5.0.1\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-7uz5EHdzz2TqoMfV7ee61Egf5y6NkcO4FB/1iCCQnbeiI1F3xzv3vK5dBCXUCLQgGYS+mUeigK1iKQzvED+QnQ==\"],\n\n    \"@types/cors\": [\"@types/cors@2.8.19\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-mFNylyeyqN93lfe/9CSxOGREz8cpzAhH+E93xJ4xWQf62V8sQ/24reV2nyzUWM6H6Xji+GGHpkbLe7pVoUEskg==\"],\n\n    \"@types/d3\": [\"@types/d3@7.4.3\", \"\", { \"dependencies\": { \"@types/d3-array\": \"*\", \"@types/d3-axis\": \"*\", \"@types/d3-brush\": \"*\", \"@types/d3-chord\": \"*\", \"@types/d3-color\": \"*\", \"@types/d3-contour\": \"*\", \"@types/d3-delaunay\": \"*\", \"@types/d3-dispatch\": \"*\", \"@types/d3-drag\": \"*\", \"@types/d3-dsv\": \"*\", \"@types/d3-ease\": \"*\", \"@types/d3-fetch\": \"*\", \"@types/d3-force\": \"*\", \"@types/d3-format\": \"*\", \"@types/d3-geo\": \"*\", \"@types/d3-hierarchy\": \"*\", \"@types/d3-interpolate\": \"*\", \"@types/d3-path\": \"*\", \"@types/d3-polygon\": \"*\", \"@types/d3-quadtree\": \"*\", \"@types/d3-random\": \"*\", \"@types/d3-scale\": \"*\", \"@types/d3-scale-chromatic\": \"*\", \"@types/d3-selection\": \"*\", \"@types/d3-shape\": \"*\", \"@types/d3-time\": \"*\", \"@types/d3-time-format\": \"*\", \"@types/d3-timer\": \"*\", \"@types/d3-transition\": \"*\", \"@types/d3-zoom\": \"*\" } }, \"sha512-lZXZ9ckh5R8uiFVt8ogUNf+pIrK4EsWrx2Np75WvF/eTpJ0FMHNhjXk8CKEx/+gpHbNQyJWehbFaTvqmHWB3ww==\"],\n\n    \"@types/d3-array\": [\"@types/d3-array@3.2.1\", \"\", {}, \"sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==\"],\n\n    \"@types/d3-axis\": [\"@types/d3-axis@3.0.6\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-pYeijfZuBd87T0hGn0FO1vQ/cgLk6E1ALJjfkC0oJ8cbwkZl3TpgS8bVBLZN+2jjGgg38epgxb2zmoGtSfvgMw==\"],\n\n    \"@types/d3-brush\": [\"@types/d3-brush@3.0.6\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-nH60IZNNxEcrh6L1ZSMNA28rj27ut/2ZmI3r96Zd+1jrZD++zD3LsMIjWlvg4AYrHn/Pqz4CF3veCxGjtbqt7A==\"],\n\n    \"@types/d3-chord\": [\"@types/d3-chord@3.0.6\", \"\", {}, \"sha512-LFYWWd8nwfwEmTZG9PfQxd17HbNPksHBiJHaKuY1XeqscXacsS2tyoo6OdRsjf+NQYeB6XrNL3a25E3gH69lcg==\"],\n\n    \"@types/d3-color\": [\"@types/d3-color@3.1.3\", \"\", {}, \"sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==\"],\n\n    \"@types/d3-contour\": [\"@types/d3-contour@3.0.6\", \"\", { \"dependencies\": { \"@types/d3-array\": \"*\", \"@types/geojson\": \"*\" } }, \"sha512-BjzLgXGnCWjUSYGfH1cpdo41/hgdWETu4YxpezoztawmqsvCeep+8QGfiY6YbDvfgHz/DkjeIkkZVJavB4a3rg==\"],\n\n    \"@types/d3-delaunay\": [\"@types/d3-delaunay@6.0.4\", \"\", {}, \"sha512-ZMaSKu4THYCU6sV64Lhg6qjf1orxBthaC161plr5KuPHo3CNm8DTHiLw/5Eq2b6TsNP0W0iJrUOFscY6Q450Hw==\"],\n\n    \"@types/d3-dispatch\": [\"@types/d3-dispatch@3.0.7\", \"\", {}, \"sha512-5o9OIAdKkhN1QItV2oqaE5KMIiXAvDWBDPrD85e58Qlz1c1kI/J0NcqbEG88CoTwJrYe7ntUCVfeUl2UJKbWgA==\"],\n\n    \"@types/d3-drag\": [\"@types/d3-drag@3.0.7\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-HE3jVKlzU9AaMazNufooRJ5ZpWmLIoc90A37WU2JMmeq28w1FQqCZswHZ3xR+SuxYftzHq6WU6KJHvqxKzTxxQ==\"],\n\n    \"@types/d3-dsv\": [\"@types/d3-dsv@3.0.7\", \"\", {}, \"sha512-n6QBF9/+XASqcKK6waudgL0pf/S5XHPPI8APyMLLUHd8NqouBGLsU8MgtO7NINGtPBtk9Kko/W4ea0oAspwh9g==\"],\n\n    \"@types/d3-ease\": [\"@types/d3-ease@3.0.2\", \"\", {}, \"sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==\"],\n\n    \"@types/d3-fetch\": [\"@types/d3-fetch@3.0.7\", \"\", { \"dependencies\": { \"@types/d3-dsv\": \"*\" } }, \"sha512-fTAfNmxSb9SOWNB9IoG5c8Hg6R+AzUHDRlsXsDZsNp6sxAEOP0tkP3gKkNSO/qmHPoBFTxNrjDprVHDQDvo5aA==\"],\n\n    \"@types/d3-force\": [\"@types/d3-force@3.0.10\", \"\", {}, \"sha512-ZYeSaCF3p73RdOKcjj+swRlZfnYpK1EbaDiYICEEp5Q6sUiqFaFQ9qgoshp5CzIyyb/yD09kD9o2zEltCexlgw==\"],\n\n    \"@types/d3-format\": [\"@types/d3-format@3.0.4\", \"\", {}, \"sha512-fALi2aI6shfg7vM5KiR1wNJnZ7r6UuggVqtDA+xiEdPZQwy/trcQaHnwShLuLdta2rTymCNpxYTiMZX/e09F4g==\"],\n\n    \"@types/d3-geo\": [\"@types/d3-geo@3.1.0\", \"\", { \"dependencies\": { \"@types/geojson\": \"*\" } }, \"sha512-856sckF0oP/diXtS4jNsiQw/UuK5fQG8l/a9VVLeSouf1/PPbBE1i1W852zVwKwYCBkFJJB7nCFTbk6UMEXBOQ==\"],\n\n    \"@types/d3-hierarchy\": [\"@types/d3-hierarchy@3.1.7\", \"\", {}, \"sha512-tJFtNoYBtRtkNysX1Xq4sxtjK8YgoWUNpIiUee0/jHGRwqvzYxkq0hGVbbOGSz+JgFxxRu4K8nb3YpG3CMARtg==\"],\n\n    \"@types/d3-interpolate\": [\"@types/d3-interpolate@3.0.4\", \"\", { \"dependencies\": { \"@types/d3-color\": \"*\" } }, \"sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==\"],\n\n    \"@types/d3-path\": [\"@types/d3-path@3.1.1\", \"\", {}, \"sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==\"],\n\n    \"@types/d3-polygon\": [\"@types/d3-polygon@3.0.2\", \"\", {}, \"sha512-ZuWOtMaHCkN9xoeEMr1ubW2nGWsp4nIql+OPQRstu4ypeZ+zk3YKqQT0CXVe/PYqrKpZAi+J9mTs05TKwjXSRA==\"],\n\n    \"@types/d3-quadtree\": [\"@types/d3-quadtree@3.0.6\", \"\", {}, \"sha512-oUzyO1/Zm6rsxKRHA1vH0NEDG58HrT5icx/azi9MF1TWdtttWl0UIUsjEQBBh+SIkrpd21ZjEv7ptxWys1ncsg==\"],\n\n    \"@types/d3-random\": [\"@types/d3-random@3.0.3\", \"\", {}, \"sha512-Imagg1vJ3y76Y2ea0871wpabqp613+8/r0mCLEBfdtqC7xMSfj9idOnmBYyMoULfHePJyxMAw3nWhJxzc+LFwQ==\"],\n\n    \"@types/d3-scale\": [\"@types/d3-scale@4.0.9\", \"\", { \"dependencies\": { \"@types/d3-time\": \"*\" } }, \"sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==\"],\n\n    \"@types/d3-scale-chromatic\": [\"@types/d3-scale-chromatic@3.1.0\", \"\", {}, \"sha512-iWMJgwkK7yTRmWqRB5plb1kadXyQ5Sj8V/zYlFGMUBbIPKQScw+Dku9cAAMgJG+z5GYDoMjWGLVOvjghDEFnKQ==\"],\n\n    \"@types/d3-selection\": [\"@types/d3-selection@3.0.11\", \"\", {}, \"sha512-bhAXu23DJWsrI45xafYpkQ4NtcKMwWnAC/vKrd2l+nxMFuvOT3XMYTIj2opv8vq8AO5Yh7Qac/nSeP/3zjTK0w==\"],\n\n    \"@types/d3-shape\": [\"@types/d3-shape@3.1.7\", \"\", { \"dependencies\": { \"@types/d3-path\": \"*\" } }, \"sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==\"],\n\n    \"@types/d3-time\": [\"@types/d3-time@3.0.4\", \"\", {}, \"sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==\"],\n\n    \"@types/d3-time-format\": [\"@types/d3-time-format@4.0.3\", \"\", {}, \"sha512-5xg9rC+wWL8kdDj153qZcsJ0FWiFt0J5RB6LYUNZjwSnesfblqrI/bJ1wBdJ8OQfncgbJG5+2F+qfqnqyzYxyg==\"],\n\n    \"@types/d3-timer\": [\"@types/d3-timer@3.0.2\", \"\", {}, \"sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==\"],\n\n    \"@types/d3-transition\": [\"@types/d3-transition@3.0.9\", \"\", { \"dependencies\": { \"@types/d3-selection\": \"*\" } }, \"sha512-uZS5shfxzO3rGlu0cC3bjmMFKsXv+SmZZcgp0KD22ts4uGXp5EVYGzu/0YdwZeKmddhcAccYtREJKkPfXkZuCg==\"],\n\n    \"@types/d3-zoom\": [\"@types/d3-zoom@3.0.8\", \"\", { \"dependencies\": { \"@types/d3-interpolate\": \"*\", \"@types/d3-selection\": \"*\" } }, \"sha512-iqMC4/YlFCSlO8+2Ii1GGGliCAY4XdeG748w5vQUbevlbDu0zSjH/+jojorQVBK/se0j6DUFNPBGSqD3YWYnDw==\"],\n\n    \"@types/debug\": [\"@types/debug@4.1.12\", \"\", { \"dependencies\": { \"@types/ms\": \"*\" } }, \"sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==\"],\n\n    \"@types/diff\": [\"@types/diff@5.2.3\", \"\", {}, \"sha512-K0Oqlrq3kQMaO2RhfrNQX5trmt+XLyom88zS0u84nnIcLvFnRUMRRHmrGny5GSM+kNO9IZLARsdQHDzkhAgmrQ==\"],\n\n    \"@types/draco3d\": [\"@types/draco3d@1.4.10\", \"\", {}, \"sha512-AX22jp8Y7wwaBgAixaSvkoG4M/+PlAcm3Qs4OW8yT9DM4xUpWKeFhLueTAyZF39pviAdcDdeJoACapiAceqNcw==\"],\n\n    \"@types/estree\": [\"@types/estree@1.0.8\", \"\", {}, \"sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==\"],\n\n    \"@types/estree-jsx\": [\"@types/estree-jsx@1.0.5\", \"\", { \"dependencies\": { \"@types/estree\": \"*\" } }, \"sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==\"],\n\n    \"@types/express\": [\"@types/express@4.17.23\", \"\", { \"dependencies\": { \"@types/body-parser\": \"*\", \"@types/express-serve-static-core\": \"^4.17.33\", \"@types/qs\": \"*\", \"@types/serve-static\": \"*\" } }, \"sha512-Crp6WY9aTYP3qPi2wGDo9iUe/rceX01UMhnF1jmwDcKCFM6cx7YhGP/Mpr3y9AASpfHixIG0E6azCcL5OcDHsQ==\"],\n\n    \"@types/express-serve-static-core\": [\"@types/express-serve-static-core@4.19.6\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"@types/qs\": \"*\", \"@types/range-parser\": \"*\", \"@types/send\": \"*\" } }, \"sha512-N4LZ2xG7DatVqhCZzOGb1Yi5lMbXSZcmdLDe9EzSndPV2HpWYWzRbaerl2n27irrm94EPpprqa8KpskPT085+A==\"],\n\n    \"@types/geojson\": [\"@types/geojson@7946.0.16\", \"\", {}, \"sha512-6C8nqWur3j98U6+lXDfTUWIfgvZU+EumvpHKcYjujKH7woYyLj2sUmff0tRhrqM7BohUw7Pz3ZB1jj2gW9Fvmg==\"],\n\n    \"@types/graceful-fs\": [\"@types/graceful-fs@4.1.9\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==\"],\n\n    \"@types/hast\": [\"@types/hast@3.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"*\" } }, \"sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==\"],\n\n    \"@types/http-errors\": [\"@types/http-errors@2.0.5\", \"\", {}, \"sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==\"],\n\n    \"@types/istanbul-lib-coverage\": [\"@types/istanbul-lib-coverage@2.0.6\", \"\", {}, \"sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==\"],\n\n    \"@types/istanbul-lib-report\": [\"@types/istanbul-lib-report@3.0.3\", \"\", { \"dependencies\": { \"@types/istanbul-lib-coverage\": \"*\" } }, \"sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==\"],\n\n    \"@types/istanbul-reports\": [\"@types/istanbul-reports@3.0.4\", \"\", { \"dependencies\": { \"@types/istanbul-lib-report\": \"*\" } }, \"sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==\"],\n\n    \"@types/jest\": [\"@types/jest@29.5.14\", \"\", { \"dependencies\": { \"expect\": \"^29.0.0\", \"pretty-format\": \"^29.0.0\" } }, \"sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==\"],\n\n    \"@types/jsdom\": [\"@types/jsdom@20.0.1\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"@types/tough-cookie\": \"*\", \"parse5\": \"^7.0.0\" } }, \"sha512-d0r18sZPmMQr1eG35u12FZfhIXNrnsPU/g5wvRKCUf/tOGilKKwYMYGqh33BNR6ba+2gkHw1EUiHoN3mn7E5IQ==\"],\n\n    \"@types/json-schema\": [\"@types/json-schema@7.0.15\", \"\", {}, \"sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==\"],\n\n    \"@types/json5\": [\"@types/json5@0.0.29\", \"\", {}, \"sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==\"],\n\n    \"@types/lodash\": [\"@types/lodash@4.17.7\", \"\", {}, \"sha512-8wTvZawATi/lsmNu10/j2hk1KEP0IvjubqPE3cu1Xz7xfXXt5oCq3SNUz4fMIP4XGF9Ky+Ue2tBA3hcS7LSBlA==\"],\n\n    \"@types/mdast\": [\"@types/mdast@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"*\" } }, \"sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==\"],\n\n    \"@types/mdx\": [\"@types/mdx@2.0.13\", \"\", {}, \"sha512-+OWZQfAYyio6YkJb3HLxDrvnx6SWWDbC0zVPfBRzUk0/nqoDyf6dNxQi3eArPe8rJ473nobTMQ/8Zk+LxJ+Yuw==\"],\n\n    \"@types/micromatch\": [\"@types/micromatch@4.0.9\", \"\", { \"dependencies\": { \"@types/braces\": \"*\" } }, \"sha512-7V+8ncr22h4UoYRLnLXSpTxjQrNUXtWHGeMPRJt1nULXI57G9bIcpyrHlmrQ7QK24EyyuXvYcSSWAM8GA9nqCg==\"],\n\n    \"@types/mime\": [\"@types/mime@1.3.5\", \"\", {}, \"sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==\"],\n\n    \"@types/ms\": [\"@types/ms@2.1.0\", \"\", {}, \"sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==\"],\n\n    \"@types/node\": [\"@types/node@22.17.1\", \"\", { \"dependencies\": { \"undici-types\": \"~6.21.0\" } }, \"sha512-y3tBaz+rjspDTylNjAX37jEC3TETEFGNJL6uQDxwF9/8GLLIjW1rvVHlynyuUKMnMr1Roq8jOv3vkopBjC4/VA==\"],\n\n    \"@types/node-fetch\": [\"@types/node-fetch@2.6.13\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"form-data\": \"^4.0.4\" } }, \"sha512-QGpRVpzSaUs30JBSGPjOg4Uveu384erbHBoT1zeONvyCfwQxIkUshLAOqN/k9EjGviPRmWTTe6aH2qySWKTVSw==\"],\n\n    \"@types/offscreencanvas\": [\"@types/offscreencanvas@2019.7.3\", \"\", {}, \"sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==\"],\n\n    \"@types/parse-path\": [\"@types/parse-path@7.1.0\", \"\", { \"dependencies\": { \"parse-path\": \"*\" } }, \"sha512-EULJ8LApcVEPbrfND0cRQqutIOdiIgJ1Mgrhpy755r14xMohPTEpkV/k28SJvuOs9bHRFW8x+KeDAEPiGQPB9Q==\"],\n\n    \"@types/parse5\": [\"@types/parse5@6.0.3\", \"\", {}, \"sha512-SuT16Q1K51EAVPz1K29DJ/sXjhSQ0zjvsypYJ6tlwVsRV9jwW5Adq2ch8Dq8kDBCkYnELS7N7VNCSB5nC56t/g==\"],\n\n    \"@types/pg\": [\"@types/pg@8.15.5\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"pg-protocol\": \"*\", \"pg-types\": \"^2.2.0\" } }, \"sha512-LF7lF6zWEKxuT3/OR8wAZGzkg4ENGXFNyiV/JeOt9z5B+0ZVwbql9McqX5c/WStFq1GaGso7H1AzP/qSzmlCKQ==\"],\n\n    \"@types/prop-types\": [\"@types/prop-types@15.7.15\", \"\", {}, \"sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==\"],\n\n    \"@types/qs\": [\"@types/qs@6.14.0\", \"\", {}, \"sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==\"],\n\n    \"@types/range-parser\": [\"@types/range-parser@1.2.7\", \"\", {}, \"sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==\"],\n\n    \"@types/react\": [\"@types/react@18.3.23\", \"\", { \"dependencies\": { \"@types/prop-types\": \"*\", \"csstype\": \"^3.0.2\" } }, \"sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==\"],\n\n    \"@types/react-dom\": [\"@types/react-dom@18.3.7\", \"\", { \"peerDependencies\": { \"@types/react\": \"^18.0.0\" } }, \"sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==\"],\n\n    \"@types/react-reconciler\": [\"@types/react-reconciler@0.26.7\", \"\", { \"dependencies\": { \"@types/react\": \"*\" } }, \"sha512-mBDYl8x+oyPX/VBb3E638N0B7xG+SPk/EAMcVPeexqus/5aTpTphQi0curhhshOqRrc9t6OPoJfEUkbymse/lQ==\"],\n\n    \"@types/readable-stream\": [\"@types/readable-stream@4.0.21\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-19eKVv9tugr03IgfXlA9UVUVRbW6IuqRO5B92Dl4a6pT7K8uaGrNS0GkxiZD0BOk6PLuXl5FhWl//eX/pzYdTQ==\"],\n\n    \"@types/request\": [\"@types/request@2.48.13\", \"\", { \"dependencies\": { \"@types/caseless\": \"*\", \"@types/node\": \"*\", \"@types/tough-cookie\": \"*\", \"form-data\": \"^2.5.5\" } }, \"sha512-FGJ6udDNUCjd19pp0Q3iTiDkwhYup7J8hpMW9c4k53NrccQFFWKRho6hvtPPEhnXWKvukfwAlB6DbDz4yhH5Gg==\"],\n\n    \"@types/resolve\": [\"@types/resolve@1.20.6\", \"\", {}, \"sha512-A4STmOXPhMUtHH+S6ymgE2GiBSMqf4oTvcQZMcHzokuTLVYzXTB8ttjcgxOVaAp2lGwEdzZ0J+cRbbeevQj1UQ==\"],\n\n    \"@types/seedrandom\": [\"@types/seedrandom@3.0.8\", \"\", {}, \"sha512-TY1eezMU2zH2ozQoAFAQFOPpvP15g+ZgSfTZt31AUUH/Rxtnz3H+A/Sv1Snw2/amp//omibc+AEkTaA8KUeOLQ==\"],\n\n    \"@types/semver\": [\"@types/semver@7.7.0\", \"\", {}, \"sha512-k107IF4+Xr7UHjwDc7Cfd6PRQfbdkiRabXGRjo07b4WyPahFBZCZ1sE+BNxYIJPPg73UkfOsVOLwqVc/6ETrIA==\"],\n\n    \"@types/send\": [\"@types/send@0.17.5\", \"\", { \"dependencies\": { \"@types/mime\": \"^1\", \"@types/node\": \"*\" } }, \"sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==\"],\n\n    \"@types/serve-static\": [\"@types/serve-static@1.15.8\", \"\", { \"dependencies\": { \"@types/http-errors\": \"*\", \"@types/node\": \"*\", \"@types/send\": \"*\" } }, \"sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==\"],\n\n    \"@types/stack-utils\": [\"@types/stack-utils@2.0.3\", \"\", {}, \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\"],\n\n    \"@types/stats.js\": [\"@types/stats.js@0.17.4\", \"\", {}, \"sha512-jIBvWWShCvlBqBNIZt0KAshWpvSjhkwkEu4ZUcASoAvhmrgAUI2t1dXrjSL4xXVLB4FznPrIsX3nKXFl/Dt4vA==\"],\n\n    \"@types/three\": [\"@types/three@0.179.0\", \"\", { \"dependencies\": { \"@dimforge/rapier3d-compat\": \"~0.12.0\", \"@tweenjs/tween.js\": \"~23.1.3\", \"@types/stats.js\": \"*\", \"@types/webxr\": \"*\", \"@webgpu/types\": \"*\", \"fflate\": \"~0.8.2\", \"meshoptimizer\": \"~0.22.0\" } }, \"sha512-VgbFG2Pgsm84BqdegZzr7w2aKbQxmgzIu4Dy7/75ygiD/0P68LKmp5ie08KMPNqGTQwIge8s6D1guZf1RnZE0A==\"],\n\n    \"@types/tinycolor2\": [\"@types/tinycolor2@1.4.6\", \"\", {}, \"sha512-iEN8J0BoMnsWBqjVbWH/c0G0Hh7O21lpR2/+PrvAVgWdzL7eexIFm4JN/Wn10PTcmNdtS6U67r499mlWMXOxNw==\"],\n\n    \"@types/tough-cookie\": [\"@types/tough-cookie@4.0.5\", \"\", {}, \"sha512-/Ad8+nIOV7Rl++6f1BdKxFSMgmoqEoYbHRpPcx3JEfv8VRsQe9Z4mCXeJBzxs7mbHY/XOZZuXlRNfhpVPbs6ZA==\"],\n\n    \"@types/trusted-types\": [\"@types/trusted-types@2.0.7\", \"\", {}, \"sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw==\"],\n\n    \"@types/unist\": [\"@types/unist@3.0.3\", \"\", {}, \"sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==\"],\n\n    \"@types/webxr\": [\"@types/webxr@0.5.22\", \"\", {}, \"sha512-Vr6Stjv5jPRqH690f5I5GLjVk8GSsoQSYJ2FVd/3jJF7KaqfwPi3ehfBS96mlQ2kPCwZaX6U0rG2+NGHBKkA/A==\"],\n\n    \"@types/ws\": [\"@types/ws@8.18.1\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-ThVF6DCVhA8kUGy+aazFQ4kXQ7E1Ty7A3ypFOe0IcJV8O/M511G99AW24irKrW56Wt44yG9+ij8FaqoBGkuBXg==\"],\n\n    \"@types/yargs\": [\"@types/yargs@17.0.33\", \"\", { \"dependencies\": { \"@types/yargs-parser\": \"*\" } }, \"sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==\"],\n\n    \"@types/yargs-parser\": [\"@types/yargs-parser@21.0.3\", \"\", {}, \"sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==\"],\n\n    \"@types/yauzl\": [\"@types/yauzl@2.10.3\", \"\", { \"dependencies\": { \"@types/node\": \"*\" } }, \"sha512-oJoftv0LSuaDZE3Le4DbKX+KS9G36NzOeSap90UIK0yMA/NhKJhqlSGtNDORNRaIbQfzjXDrQa0ytJ6mNRGz/Q==\"],\n\n    \"@typescript-eslint/eslint-plugin\": [\"@typescript-eslint/eslint-plugin@6.21.0\", \"\", { \"dependencies\": { \"@eslint-community/regexpp\": \"^4.5.1\", \"@typescript-eslint/scope-manager\": \"6.21.0\", \"@typescript-eslint/type-utils\": \"6.21.0\", \"@typescript-eslint/utils\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\", \"debug\": \"^4.3.4\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^5.2.4\", \"natural-compare\": \"^1.4.0\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" }, \"peerDependencies\": { \"@typescript-eslint/parser\": \"^6.0.0 || ^6.0.0-alpha\", \"eslint\": \"^7.0.0 || ^8.0.0\" } }, \"sha512-oy9+hTPCUFpngkEZUSzbf9MxI65wbKFoQYsgPdILTfbUldp5ovUuphZVe4i30emU9M/kP+T64Di0mxl7dSw3MA==\"],\n\n    \"@typescript-eslint/parser\": [\"@typescript-eslint/parser@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/scope-manager\": \"8.39.1\", \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/typescript-estree\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-pUXGCuHnnKw6PyYq93lLRiZm3vjuslIy7tus1lIQTYVK9bL8XBgJnCWm8a0KcTtHC84Yya1Q6rtll+duSMj0dg==\"],\n\n    \"@typescript-eslint/project-service\": [\"@typescript-eslint/project-service@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/tsconfig-utils\": \"^8.39.1\", \"@typescript-eslint/types\": \"^8.39.1\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-8fZxek3ONTwBu9ptw5nCKqZOSkXshZB7uAxuFF0J/wTMkKydjXCzqqga7MlFMpHi9DoG4BadhmTkITBcg8Aybw==\"],\n\n    \"@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\" } }, \"sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg==\"],\n\n    \"@typescript-eslint/tsconfig-utils\": [\"@typescript-eslint/tsconfig-utils@8.39.1\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-ePUPGVtTMR8XMU2Hee8kD0Pu4NDE1CN9Q1sxGSGd/mbOtGZDM7pnhXNJnzW63zk/q+Z54zVzj44HtwXln5CvHA==\"],\n\n    \"@typescript-eslint/type-utils\": [\"@typescript-eslint/type-utils@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/typescript-estree\": \"6.21.0\", \"@typescript-eslint/utils\": \"6.21.0\", \"debug\": \"^4.3.4\", \"ts-api-utils\": \"^1.0.1\" }, \"peerDependencies\": { \"eslint\": \"^7.0.0 || ^8.0.0\" } }, \"sha512-rZQI7wHfao8qMX3Rd3xqeYSMCL3SoiSQLBATSiVKARdFGCYSRvmViieZjqc58jKgs8Y8i9YvVVhRbHSTA4VBag==\"],\n\n    \"@typescript-eslint/types\": [\"@typescript-eslint/types@8.39.1\", \"\", {}, \"sha512-7sPDKQQp+S11laqTrhHqeAbsCfMkwJMrV7oTDvtDds4mEofJYir414bYKUEb8YPUm9QL3U+8f6L6YExSoAGdQw==\"],\n\n    \"@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/project-service\": \"8.39.1\", \"@typescript-eslint/tsconfig-utils\": \"8.39.1\", \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\", \"debug\": \"^4.3.4\", \"fast-glob\": \"^3.3.2\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^2.1.0\" }, \"peerDependencies\": { \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-EKkpcPuIux48dddVDXyQBlKdeTPMmALqBUbEk38McWv0qVEZwOpVJBi7ugK5qVNgeuYjGNQxrrnoM/5+TI/BPw==\"],\n\n    \"@typescript-eslint/utils\": [\"@typescript-eslint/utils@6.21.0\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.4.0\", \"@types/json-schema\": \"^7.0.12\", \"@types/semver\": \"^7.5.0\", \"@typescript-eslint/scope-manager\": \"6.21.0\", \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/typescript-estree\": \"6.21.0\", \"semver\": \"^7.5.4\" }, \"peerDependencies\": { \"eslint\": \"^7.0.0 || ^8.0.0\" } }, \"sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ==\"],\n\n    \"@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"eslint-visitor-keys\": \"^3.4.1\" } }, \"sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A==\"],\n\n    \"@ungap/structured-clone\": [\"@ungap/structured-clone@1.3.0\", \"\", {}, \"sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==\"],\n\n    \"@unrs/resolver-binding-android-arm-eabi\": [\"@unrs/resolver-binding-android-arm-eabi@1.11.1\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==\"],\n\n    \"@unrs/resolver-binding-android-arm64\": [\"@unrs/resolver-binding-android-arm64@1.11.1\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==\"],\n\n    \"@unrs/resolver-binding-darwin-arm64\": [\"@unrs/resolver-binding-darwin-arm64@1.11.1\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==\"],\n\n    \"@unrs/resolver-binding-darwin-x64\": [\"@unrs/resolver-binding-darwin-x64@1.11.1\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==\"],\n\n    \"@unrs/resolver-binding-freebsd-x64\": [\"@unrs/resolver-binding-freebsd-x64@1.11.1\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==\"],\n\n    \"@unrs/resolver-binding-linux-arm-gnueabihf\": [\"@unrs/resolver-binding-linux-arm-gnueabihf@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==\"],\n\n    \"@unrs/resolver-binding-linux-arm-musleabihf\": [\"@unrs/resolver-binding-linux-arm-musleabihf@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==\"],\n\n    \"@unrs/resolver-binding-linux-arm64-gnu\": [\"@unrs/resolver-binding-linux-arm64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==\"],\n\n    \"@unrs/resolver-binding-linux-arm64-musl\": [\"@unrs/resolver-binding-linux-arm64-musl@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==\"],\n\n    \"@unrs/resolver-binding-linux-ppc64-gnu\": [\"@unrs/resolver-binding-linux-ppc64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==\"],\n\n    \"@unrs/resolver-binding-linux-riscv64-gnu\": [\"@unrs/resolver-binding-linux-riscv64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==\"],\n\n    \"@unrs/resolver-binding-linux-riscv64-musl\": [\"@unrs/resolver-binding-linux-riscv64-musl@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==\"],\n\n    \"@unrs/resolver-binding-linux-s390x-gnu\": [\"@unrs/resolver-binding-linux-s390x-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==\"],\n\n    \"@unrs/resolver-binding-linux-x64-gnu\": [\"@unrs/resolver-binding-linux-x64-gnu@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==\"],\n\n    \"@unrs/resolver-binding-linux-x64-musl\": [\"@unrs/resolver-binding-linux-x64-musl@1.11.1\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==\"],\n\n    \"@unrs/resolver-binding-wasm32-wasi\": [\"@unrs/resolver-binding-wasm32-wasi@1.11.1\", \"\", { \"dependencies\": { \"@napi-rs/wasm-runtime\": \"^0.2.11\" }, \"cpu\": \"none\" }, \"sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==\"],\n\n    \"@unrs/resolver-binding-win32-arm64-msvc\": [\"@unrs/resolver-binding-win32-arm64-msvc@1.11.1\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==\"],\n\n    \"@unrs/resolver-binding-win32-ia32-msvc\": [\"@unrs/resolver-binding-win32-ia32-msvc@1.11.1\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==\"],\n\n    \"@unrs/resolver-binding-win32-x64-msvc\": [\"@unrs/resolver-binding-win32-x64-msvc@1.11.1\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==\"],\n\n    \"@use-gesture/core\": [\"@use-gesture/core@10.3.1\", \"\", {}, \"sha512-WcINiDt8WjqBdUXye25anHiNxPc0VOrlT8F6LLkU6cycrOGUDyY/yyFmsg3k8i5OLvv25llc0QC45GhR/C8llw==\"],\n\n    \"@use-gesture/react\": [\"@use-gesture/react@10.3.1\", \"\", { \"dependencies\": { \"@use-gesture/core\": \"10.3.1\" }, \"peerDependencies\": { \"react\": \">= 16.8.0\" } }, \"sha512-Yy19y6O2GJq8f7CHf7L0nxL8bf4PZCPaVOCgJrusOeFHY1LvHgYXnmnXg6N5iwAnbgbZCDjo60SiM6IPJi9C5g==\"],\n\n    \"@vladfrangu/async_event_emitter\": [\"@vladfrangu/async_event_emitter@2.4.6\", \"\", {}, \"sha512-RaI5qZo6D2CVS6sTHFKg1v5Ohq/+Bo2LZ5gzUEwZ/WkHhwtGTCB/sVLw8ijOkAUxasZ+WshN/Rzj4ywsABJ5ZA==\"],\n\n    \"@vscode/ripgrep\": [\"@vscode/ripgrep@1.15.9\", \"\", { \"dependencies\": { \"https-proxy-agent\": \"^7.0.2\", \"proxy-from-env\": \"^1.1.0\", \"yauzl\": \"^2.9.2\" } }, \"sha512-4q2PXRvUvr3bF+LsfrifmUZgSPmCNcUZo6SbEAZgArIChchkezaxLoIeQMJe/z3CCKStvaVKpBXLxN3Z8lQjFQ==\"],\n\n    \"@vscode/tree-sitter-wasm\": [\"@vscode/tree-sitter-wasm@0.1.4\", \"\", {}, \"sha512-kQVVg/CamCYDM+/XYCZuNTQyixjZd8ts/Gf84UzjEY0eRnbg6kiy5I9z2/2i3XdqwhI87iG07rkMR2KwhqcSbA==\"],\n\n    \"@webgpu/types\": [\"@webgpu/types@0.1.64\", \"\", {}, \"sha512-84kRIAGV46LJTlJZWxShiOrNL30A+9KokD7RB3dRCIqODFjodS5tCD5yyiZ8kIReGVZSDfA3XkkwyyOIF6K62A==\"],\n\n    \"@yarnpkg/lockfile\": [\"@yarnpkg/lockfile@1.1.0\", \"\", {}, \"sha512-GpSwvyXOcOOlV70vbnzjj4fW5xW/FdUF6nQEt1ENy7m4ZCczi1+/buVUPAqmGfqznsORNFzUMjctTIp8a9tuCQ==\"],\n\n    \"@yarnpkg/parsers\": [\"@yarnpkg/parsers@3.0.2\", \"\", { \"dependencies\": { \"js-yaml\": \"^3.10.0\", \"tslib\": \"^2.4.0\" } }, \"sha512-/HcYgtUSiJiot/XWGLOlGxPYUG65+/31V8oqk17vZLW1xlCoR4PampyePljOxY2n8/3jz9+tIFzICsyGujJZoA==\"],\n\n    \"@zkochan/js-yaml\": [\"@zkochan/js-yaml@0.0.7\", \"\", { \"dependencies\": { \"argparse\": \"^2.0.1\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-nrUSn7hzt7J6JWgWGz78ZYI8wj+gdIJdk0Ynjpp8l+trkn58Uqsf6RYrYkEK+3X18EX+TNdtJI0WxAtc+L84SQ==\"],\n\n    \"JSONStream\": [\"JSONStream@1.3.5\", \"\", { \"dependencies\": { \"jsonparse\": \"^1.2.0\", \"through\": \">=2.2.7 <3\" }, \"bin\": { \"JSONStream\": \"./bin.js\" } }, \"sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==\"],\n\n    \"abab\": [\"abab@2.0.6\", \"\", {}, \"sha512-j2afSsaIENvHZN2B8GOpF566vZ5WVk5opAiMTvWgaQT8DkbOqsTfvNAvHoRGU2zzP8cPoqys+xHTRDWW8L+/BA==\"],\n\n    \"abort-controller\": [\"abort-controller@3.0.0\", \"\", { \"dependencies\": { \"event-target-shim\": \"^5.0.0\" } }, \"sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==\"],\n\n    \"accepts\": [\"accepts@1.3.8\", \"\", { \"dependencies\": { \"mime-types\": \"~2.1.34\", \"negotiator\": \"0.6.3\" } }, \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\"],\n\n    \"accessor-fn\": [\"accessor-fn@1.5.3\", \"\", {}, \"sha512-rkAofCwe/FvYFUlMB0v0gWmhqtfAtV1IUkdPbfhTUyYniu5LrC0A0UJkTH0Jv3S8SvwkmfuAlY+mQIJATdocMA==\"],\n\n    \"aceternity-ui\": [\"aceternity-ui@0.2.2\", \"\", { \"dependencies\": { \"@antfu/ni\": \"^0.21.4\", \"@babel/core\": \"^7.22.1\", \"@babel/parser\": \"^7.22.6\", \"@babel/plugin-transform-typescript\": \"^7.22.5\", \"chalk\": \"5.2.0\", \"commander\": \"^10.0.0\", \"configstore\": \"^6.0.0\", \"cosmiconfig\": \"^8.1.3\", \"diff\": \"^5.1.0\", \"dotenv\": \"^16.4.5\", \"execa\": \"^7.0.0\", \"fast-glob\": \"^3.3.2\", \"fs-extra\": \"^11.1.0\", \"gradient-string\": \"^2.0.2\", \"https-proxy-agent\": \"^6.2.0\", \"lodash.template\": \"^4.5.0\", \"node-fetch\": \"^3.3.0\", \"ora\": \"^6.1.2\", \"posthog-node\": \"^4.0.1\", \"prompts\": \"^2.4.2\", \"recast\": \"^0.23.2\", \"ts-morph\": \"^18.0.0\", \"tsconfig-paths\": \"^4.2.0\", \"zod\": \"^3.20.2\" }, \"bin\": { \"aceternity-ui\": \"dist/index.js\" } }, \"sha512-Z+3dearhf4+NilAf4fCqM4POAMNsWkUNNFjj/2YilNfd4DIghbZk3IU5eu7nsECkMFFzWup2JLKcprNURp0Big==\"],\n\n    \"acorn\": [\"acorn@8.15.0\", \"\", { \"bin\": { \"acorn\": \"bin/acorn\" } }, \"sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==\"],\n\n    \"acorn-globals\": [\"acorn-globals@7.0.1\", \"\", { \"dependencies\": { \"acorn\": \"^8.1.0\", \"acorn-walk\": \"^8.0.2\" } }, \"sha512-umOSDSDrfHbTNPuNpC2NSnnA3LUrqpevPb4T9jRx4MagXNS0rs+gwiTcAvqCRmsD6utzsrzNt+ebm00SNWiC3Q==\"],\n\n    \"acorn-jsx\": [\"acorn-jsx@5.3.2\", \"\", { \"peerDependencies\": { \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\" } }, \"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==\"],\n\n    \"acorn-walk\": [\"acorn-walk@8.3.4\", \"\", { \"dependencies\": { \"acorn\": \"^8.11.0\" } }, \"sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==\"],\n\n    \"agent-base\": [\"agent-base@7.1.4\", \"\", {}, \"sha512-MnA+YT8fwfJPgBx3m60MNqakm30XOkyIoH1y6huTQvC0PwZG7ki8NacLBcrPbNoo8vEZy7Jpuk7+jMO+CUovTQ==\"],\n\n    \"agentkeepalive\": [\"agentkeepalive@4.6.0\", \"\", { \"dependencies\": { \"humanize-ms\": \"^1.2.1\" } }, \"sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==\"],\n\n    \"ai\": [\"ai@5.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/gateway\": \"1.0.0\", \"@ai-sdk/provider\": \"2.0.0\", \"@ai-sdk/provider-utils\": \"3.0.0\", \"@opentelemetry/api\": \"1.9.0\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-F4jOhOSeiZD8lXpF4l1hRqyM1jbqoLKGVZNxAP467wmQCsWUtElMa3Ki5PrDMq6qvUNC3deUKfERDAsfj7IDlg==\"],\n\n    \"ajv\": [\"ajv@6.12.6\", \"\", { \"dependencies\": { \"fast-deep-equal\": \"^3.1.1\", \"fast-json-stable-stringify\": \"^2.0.0\", \"json-schema-traverse\": \"^0.4.1\", \"uri-js\": \"^4.2.2\" } }, \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\"],\n\n    \"anser\": [\"anser@1.4.10\", \"\", {}, \"sha512-hCv9AqTQ8ycjpSd3upOJd7vFwW1JaoYQ7tpham03GJ1ca8/65rqn0RpaWpItOAd6ylW9wAw6luXYPJIyPFVOww==\"],\n\n    \"ansi-colors\": [\"ansi-colors@4.1.3\", \"\", {}, \"sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==\"],\n\n    \"ansi-escapes\": [\"ansi-escapes@4.3.2\", \"\", { \"dependencies\": { \"type-fest\": \"^0.21.3\" } }, \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\"],\n\n    \"ansi-regex\": [\"ansi-regex@6.1.0\", \"\", {}, \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\"],\n\n    \"ansi-styles\": [\"ansi-styles@6.2.1\", \"\", {}, \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\"],\n\n    \"ansis\": [\"ansis@3.17.0\", \"\", {}, \"sha512-0qWUglt9JEqLFr3w1I1pbrChn1grhaiAR2ocX1PP/flRmxgtwTzPFFFnfIlD6aMOLQZgSuCRlidD70lvx8yhzg==\"],\n\n    \"any-promise\": [\"any-promise@1.3.0\", \"\", {}, \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\"],\n\n    \"anymatch\": [\"anymatch@3.1.3\", \"\", { \"dependencies\": { \"normalize-path\": \"^3.0.0\", \"picomatch\": \"^2.0.4\" } }, \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\"],\n\n    \"arg\": [\"arg@4.1.3\", \"\", {}, \"sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==\"],\n\n    \"argparse\": [\"argparse@2.0.1\", \"\", {}, \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"],\n\n    \"aria-hidden\": [\"aria-hidden@1.2.6\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.0\" } }, \"sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==\"],\n\n    \"aria-query\": [\"aria-query@5.3.2\", \"\", {}, \"sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==\"],\n\n    \"array-buffer-byte-length\": [\"array-buffer-byte-length@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"is-array-buffer\": \"^3.0.5\" } }, \"sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==\"],\n\n    \"array-flatten\": [\"array-flatten@1.1.1\", \"\", {}, \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"],\n\n    \"array-ify\": [\"array-ify@1.0.0\", \"\", {}, \"sha512-c5AMf34bKdvPhQ7tBGhqkgKNUzMr4WUs+WDtC2ZUGOUncbxKMTvqxYctiseW3+L4bA8ec+GcZ6/A/FW4m8ukng==\"],\n\n    \"array-includes\": [\"array-includes@3.1.9\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.24.0\", \"es-object-atoms\": \"^1.1.1\", \"get-intrinsic\": \"^1.3.0\", \"is-string\": \"^1.1.1\", \"math-intrinsics\": \"^1.1.0\" } }, \"sha512-FmeCCAenzH0KH381SPT5FZmiA/TmpndpcaShhfgEN9eCVjnFBqq3l1xrI42y8+PPLI6hypzou4GXw00WHmPBLQ==\"],\n\n    \"array-timsort\": [\"array-timsort@1.0.3\", \"\", {}, \"sha512-/+3GRL7dDAGEfM6TseQk/U+mi18TU2Ms9I3UlLdUMhz2hbvGNTKdj9xniwXfUqgYhHxRx0+8UnKkvlNwVU+cWQ==\"],\n\n    \"array-union\": [\"array-union@2.1.0\", \"\", {}, \"sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==\"],\n\n    \"array.prototype.findlast\": [\"array.prototype.findlast@1.2.5\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.2\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==\"],\n\n    \"array.prototype.findlastindex\": [\"array.prototype.findlastindex@1.2.6\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.9\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.1.1\", \"es-shim-unscopables\": \"^1.1.0\" } }, \"sha512-F/TKATkzseUExPlfvmwQKGITM3DGTK+vkAsCZoDc5daVygbJBnjEUCbgkAvVFsgfXfX4YIqZ/27G3k3tdXrTxQ==\"],\n\n    \"array.prototype.flat\": [\"array.prototype.flat@1.3.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-rwG/ja1neyLqCuGZ5YYrznA62D4mZXg0i1cIskIUKSiqF3Cje9/wXAls9B9s1Wa2fomMsIv8czB8jZcPmxCXFg==\"],\n\n    \"array.prototype.flatmap\": [\"array.prototype.flatmap@1.3.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-Y7Wt51eKJSyi80hFrJCePGGNo5ktJCslFuboqJsbf57CCPcm5zztluPlc4/aD8sWsKvlwatezpV4U1efk8kpjg==\"],\n\n    \"array.prototype.tosorted\": [\"array.prototype.tosorted@1.1.4\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.3\", \"es-errors\": \"^1.3.0\", \"es-shim-unscopables\": \"^1.0.2\" } }, \"sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==\"],\n\n    \"arraybuffer.prototype.slice\": [\"arraybuffer.prototype.slice@1.0.4\", \"\", { \"dependencies\": { \"array-buffer-byte-length\": \"^1.0.1\", \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.6\", \"is-array-buffer\": \"^3.0.4\" } }, \"sha512-BNoCY6SXXPQ7gF2opIP4GBE+Xw7U+pHMYKuzjgCN3GwiaIR09UUeKfheyIry77QtrCBlC0KK0q5/TER/tYh3PQ==\"],\n\n    \"arrify\": [\"arrify@2.0.1\", \"\", {}, \"sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==\"],\n\n    \"asap\": [\"asap@2.0.6\", \"\", {}, \"sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==\"],\n\n    \"ast-types\": [\"ast-types@0.16.1\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.1\" } }, \"sha512-6t10qk83GOG8p0vKmaCr8eiilZwO171AvbROMtvvNiwrTly62t+7XkA8RdIIVbpMhCASAsxgAzdRSwh6nw/5Dg==\"],\n\n    \"ast-types-flow\": [\"ast-types-flow@0.0.8\", \"\", {}, \"sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==\"],\n\n    \"astring\": [\"astring@1.9.0\", \"\", { \"bin\": { \"astring\": \"bin/astring\" } }, \"sha512-LElXdjswlqjWrPpJFg1Fx4wpkOCxj1TDHlSV4PlaRxHGWko024xICaa97ZkMfs6DRKlCguiAI+rbXv5GWwXIkg==\"],\n\n    \"async\": [\"async@3.2.6\", \"\", {}, \"sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\"],\n\n    \"async-function\": [\"async-function@1.0.0\", \"\", {}, \"sha512-hsU18Ae8CDTR6Kgu9DYf0EbCr/a5iGL0rytQDobUcdpYOKokk8LEjVphnXkDkgpi0wYVsqrXuP0bZxJaTqdgoA==\"],\n\n    \"async-limiter\": [\"async-limiter@1.0.1\", \"\", {}, \"sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==\"],\n\n    \"async-lock\": [\"async-lock@1.4.1\", \"\", {}, \"sha512-Az2ZTpuytrtqENulXwO3GGv1Bztugx6TT37NIo7imr/Qo0gsYiGtSdBa2B6fsXhTpVZDNfu1Qn3pk531e3q+nQ==\"],\n\n    \"asynckit\": [\"asynckit@0.4.0\", \"\", {}, \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\"],\n\n    \"atomic-sleep\": [\"atomic-sleep@1.0.0\", \"\", {}, \"sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==\"],\n\n    \"autoprefixer\": [\"autoprefixer@10.4.21\", \"\", { \"dependencies\": { \"browserslist\": \"^4.24.4\", \"caniuse-lite\": \"^1.0.30001702\", \"fraction.js\": \"^4.3.7\", \"normalize-range\": \"^0.1.2\", \"picocolors\": \"^1.1.1\", \"postcss-value-parser\": \"^4.2.0\" }, \"peerDependencies\": { \"postcss\": \"^8.1.0\" }, \"bin\": { \"autoprefixer\": \"bin/autoprefixer\" } }, \"sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==\"],\n\n    \"available-typed-arrays\": [\"available-typed-arrays@1.0.7\", \"\", { \"dependencies\": { \"possible-typed-array-names\": \"^1.0.0\" } }, \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\"],\n\n    \"axe-core\": [\"axe-core@4.10.3\", \"\", {}, \"sha512-Xm7bpRXnDSX2YE2YFfBk2FnF0ep6tmG7xPh8iHee8MIcrgq762Nkce856dYtJYLkuIoYZvGfTs/PbZhideTcEg==\"],\n\n    \"axios\": [\"axios@1.7.4\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.0\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-DukmaFRnY6AzAALSH4J2M3k6PkaC+MfaAGdEERRWcC9q3/TWQwLpHR8ZRLKTdQ3aBDL64EdluRDjJqKw+BPZEw==\"],\n\n    \"axobject-query\": [\"axobject-query@4.1.0\", \"\", {}, \"sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==\"],\n\n    \"b4a\": [\"b4a@1.6.7\", \"\", {}, \"sha512-OnAYlL5b7LEkALw87fUVafQw5rVR9RjwGd4KUwNQ6DrrNmaVaUCgLipfVlzrPQ4tWOR9P0IXGNOx50jYCCdSJg==\"],\n\n    \"babel-jest\": [\"babel-jest@29.7.0\", \"\", { \"dependencies\": { \"@jest/transform\": \"^29.7.0\", \"@types/babel__core\": \"^7.1.14\", \"babel-plugin-istanbul\": \"^6.1.1\", \"babel-preset-jest\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"graceful-fs\": \"^4.2.9\", \"slash\": \"^3.0.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.8.0\" } }, \"sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\"],\n\n    \"babel-plugin-istanbul\": [\"babel-plugin-istanbul@6.1.1\", \"\", { \"dependencies\": { \"@babel/helper-plugin-utils\": \"^7.0.0\", \"@istanbuljs/load-nyc-config\": \"^1.0.0\", \"@istanbuljs/schema\": \"^0.1.2\", \"istanbul-lib-instrument\": \"^5.0.4\", \"test-exclude\": \"^6.0.0\" } }, \"sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==\"],\n\n    \"babel-plugin-jest-hoist\": [\"babel-plugin-jest-hoist@29.6.3\", \"\", { \"dependencies\": { \"@babel/template\": \"^7.3.3\", \"@babel/types\": \"^7.3.3\", \"@types/babel__core\": \"^7.1.14\", \"@types/babel__traverse\": \"^7.0.6\" } }, \"sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==\"],\n\n    \"babel-plugin-polyfill-corejs2\": [\"babel-plugin-polyfill-corejs2@0.4.14\", \"\", { \"dependencies\": { \"@babel/compat-data\": \"^7.27.7\", \"@babel/helper-define-polyfill-provider\": \"^0.6.5\", \"semver\": \"^6.3.1\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-Co2Y9wX854ts6U8gAAPXfn0GmAyctHuK8n0Yhfjd6t30g7yvKjspvvOo9yG+z52PZRgFErt7Ka2pYnXCjLKEpg==\"],\n\n    \"babel-plugin-polyfill-corejs3\": [\"babel-plugin-polyfill-corejs3@0.13.0\", \"\", { \"dependencies\": { \"@babel/helper-define-polyfill-provider\": \"^0.6.5\", \"core-js-compat\": \"^3.43.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-U+GNwMdSFgzVmfhNm8GJUX88AadB3uo9KpJqS3FaqNIPKgySuvMb+bHPsOmmuWyIcuqZj/pzt1RUIUZns4y2+A==\"],\n\n    \"babel-plugin-polyfill-regenerator\": [\"babel-plugin-polyfill-regenerator@0.6.5\", \"\", { \"dependencies\": { \"@babel/helper-define-polyfill-provider\": \"^0.6.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.4.0 || ^8.0.0-0 <8.0.0\" } }, \"sha512-ISqQ2frbiNU9vIJkzg7dlPpznPZ4jOiUQ1uSmB0fEHeowtN3COYRsXr/xexn64NpU13P06jc/L5TgiJXOgrbEg==\"],\n\n    \"babel-plugin-syntax-hermes-parser\": [\"babel-plugin-syntax-hermes-parser@0.29.1\", \"\", { \"dependencies\": { \"hermes-parser\": \"0.29.1\" } }, \"sha512-2WFYnoWGdmih1I1J5eIqxATOeycOqRwYxAQBu3cUu/rhwInwHUg7k60AFNbuGjSDL8tje5GDrAnxzRLcu2pYcA==\"],\n\n    \"babel-plugin-transform-flow-enums\": [\"babel-plugin-transform-flow-enums@0.0.2\", \"\", { \"dependencies\": { \"@babel/plugin-syntax-flow\": \"^7.12.1\" } }, \"sha512-g4aaCrDDOsWjbm0PUUeVnkcVd6AKJsVc/MbnPhEotEpkeJQP6b8nzewohQi7+QS8UyPehOhGWn0nOwjvWpmMvQ==\"],\n\n    \"babel-preset-current-node-syntax\": [\"babel-preset-current-node-syntax@1.2.0\", \"\", { \"dependencies\": { \"@babel/plugin-syntax-async-generators\": \"^7.8.4\", \"@babel/plugin-syntax-bigint\": \"^7.8.3\", \"@babel/plugin-syntax-class-properties\": \"^7.12.13\", \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\", \"@babel/plugin-syntax-import-attributes\": \"^7.24.7\", \"@babel/plugin-syntax-import-meta\": \"^7.10.4\", \"@babel/plugin-syntax-json-strings\": \"^7.8.3\", \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\", \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\", \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\", \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\", \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\", \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\", \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\", \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0 || ^8.0.0-0\" } }, \"sha512-E/VlAEzRrsLEb2+dv8yp3bo4scof3l9nR4lrld+Iy5NyVqgVYUJnDAmunkhPMisRI32Qc4iRiz425d8vM++2fg==\"],\n\n    \"babel-preset-jest\": [\"babel-preset-jest@29.6.3\", \"\", { \"dependencies\": { \"babel-plugin-jest-hoist\": \"^29.6.3\", \"babel-preset-current-node-syntax\": \"^1.0.0\" }, \"peerDependencies\": { \"@babel/core\": \"^7.0.0\" } }, \"sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==\"],\n\n    \"bail\": [\"bail@2.0.2\", \"\", {}, \"sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==\"],\n\n    \"balanced-match\": [\"balanced-match@1.0.2\", \"\", {}, \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"],\n\n    \"bare-events\": [\"bare-events@2.6.1\", \"\", {}, \"sha512-AuTJkq9XmE6Vk0FJVNq5QxETrSA/vKHarWVBG5l/JbdCL1prJemiyJqUS0jrlXO0MftuPq4m3YVYhoNc5+aE/g==\"],\n\n    \"bare-fs\": [\"bare-fs@4.2.0\", \"\", { \"dependencies\": { \"bare-events\": \"^2.5.4\", \"bare-path\": \"^3.0.0\", \"bare-stream\": \"^2.6.4\" }, \"peerDependencies\": { \"bare-buffer\": \"*\" }, \"optionalPeers\": [\"bare-buffer\"] }, \"sha512-oRfrw7gwwBVAWx9S5zPMo2iiOjxyiZE12DmblmMQREgcogbNO0AFaZ+QBxxkEXiPspcpvO/Qtqn8LabUx4uYXg==\"],\n\n    \"bare-os\": [\"bare-os@3.6.1\", \"\", {}, \"sha512-uaIjxokhFidJP+bmmvKSgiMzj2sV5GPHaZVAIktcxcpCyBFFWO+YlikVAdhmUo2vYFvFhOXIAlldqV29L8126g==\"],\n\n    \"bare-path\": [\"bare-path@3.0.0\", \"\", { \"dependencies\": { \"bare-os\": \"^3.0.1\" } }, \"sha512-tyfW2cQcB5NN8Saijrhqn0Zh7AnFNsnczRcuWODH0eYAXBsJ5gVxAUuNr7tsHSC6IZ77cA0SitzT+s47kot8Mw==\"],\n\n    \"bare-stream\": [\"bare-stream@2.6.5\", \"\", { \"dependencies\": { \"streamx\": \"^2.21.0\" }, \"peerDependencies\": { \"bare-buffer\": \"*\", \"bare-events\": \"*\" }, \"optionalPeers\": [\"bare-buffer\", \"bare-events\"] }, \"sha512-jSmxKJNJmHySi6hC42zlZnq00rga4jjxcgNZjY9N5WlOe/iOoGRtdwGsHzQv2RlH2KOYMwGUXhf2zXd32BA9RA==\"],\n\n    \"base64-js\": [\"base64-js@1.5.1\", \"\", {}, \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\"],\n\n    \"basic-ftp\": [\"basic-ftp@5.0.5\", \"\", {}, \"sha512-4Bcg1P8xhUuqcii/S0Z9wiHIrQVPMermM1any+MX5GeGD7faD3/msQUDGLol9wOcz4/jbg/WJnGqoJF6LiBdtg==\"],\n\n    \"bidi-js\": [\"bidi-js@1.0.3\", \"\", { \"dependencies\": { \"require-from-string\": \"^2.0.2\" } }, \"sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==\"],\n\n    \"big.js\": [\"big.js@6.2.2\", \"\", {}, \"sha512-y/ie+Faknx7sZA5MfGA2xKlu0GDv8RWrXGsmlteyJQ2lvoKv9GBK/fpRMc2qlSoBAgNxrixICFCBefIq8WCQpQ==\"],\n\n    \"bignumber.js\": [\"bignumber.js@9.3.1\", \"\", {}, \"sha512-Ko0uX15oIUS7wJ3Rb30Fs6SkVbLmPBAKdlm7q9+ak9bbIeFf0MwuBsQV6z7+X768/cHsfg+WlysDWJcmthjsjQ==\"],\n\n    \"binary-extensions\": [\"binary-extensions@2.3.0\", \"\", {}, \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\"],\n\n    \"bl\": [\"bl@4.1.0\", \"\", { \"dependencies\": { \"buffer\": \"^5.5.0\", \"inherits\": \"^2.0.4\", \"readable-stream\": \"^3.4.0\" } }, \"sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==\"],\n\n    \"body-parser\": [\"body-parser@1.20.2\", \"\", { \"dependencies\": { \"bytes\": \"3.1.2\", \"content-type\": \"~1.0.5\", \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"destroy\": \"1.2.0\", \"http-errors\": \"2.0.0\", \"iconv-lite\": \"0.4.24\", \"on-finished\": \"2.4.1\", \"qs\": \"6.11.0\", \"raw-body\": \"2.5.2\", \"type-is\": \"~1.6.18\", \"unpipe\": \"1.0.0\" } }, \"sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==\"],\n\n    \"brace-expansion\": [\"brace-expansion@1.1.12\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\", \"concat-map\": \"0.0.1\" } }, \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\"],\n\n    \"braces\": [\"braces@3.0.3\", \"\", { \"dependencies\": { \"fill-range\": \"^7.1.1\" } }, \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\"],\n\n    \"browserslist\": [\"browserslist@4.25.2\", \"\", { \"dependencies\": { \"caniuse-lite\": \"^1.0.30001733\", \"electron-to-chromium\": \"^1.5.199\", \"node-releases\": \"^2.0.19\", \"update-browserslist-db\": \"^1.1.3\" }, \"bin\": { \"browserslist\": \"cli.js\" } }, \"sha512-0si2SJK3ooGzIawRu61ZdPCO1IncZwS8IzuX73sPZsXW6EQ/w/DAfPyKI8l1ETTCr2MnvqWitmlCUxgdul45jA==\"],\n\n    \"bser\": [\"bser@2.1.1\", \"\", { \"dependencies\": { \"node-int64\": \"^0.4.0\" } }, \"sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==\"],\n\n    \"buffer\": [\"buffer@6.0.3\", \"\", { \"dependencies\": { \"base64-js\": \"^1.3.1\", \"ieee754\": \"^1.2.1\" } }, \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\"],\n\n    \"buffer-crc32\": [\"buffer-crc32@0.2.13\", \"\", {}, \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==\"],\n\n    \"buffer-equal-constant-time\": [\"buffer-equal-constant-time@1.0.1\", \"\", {}, \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\"],\n\n    \"buffer-from\": [\"buffer-from@1.1.2\", \"\", {}, \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\"],\n\n    \"bun-types\": [\"bun-types@1.2.20\", \"\", { \"dependencies\": { \"@types/node\": \"*\" }, \"peerDependencies\": { \"@types/react\": \"^19\" } }, \"sha512-pxTnQYOrKvdOwyiyd/7sMt9yFOenN004Y6O4lCcCUoKVej48FS5cvTw9geRaEcB9TsDZaJKAxPTVvi8tFsVuXA==\"],\n\n    \"busboy\": [\"busboy@1.6.0\", \"\", { \"dependencies\": { \"streamsearch\": \"^1.1.0\" } }, \"sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==\"],\n\n    \"bytes\": [\"bytes@3.1.2\", \"\", {}, \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\"],\n\n    \"call-bind\": [\"call-bind@1.0.8\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.0\", \"es-define-property\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.4\", \"set-function-length\": \"^1.2.2\" } }, \"sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==\"],\n\n    \"call-bind-apply-helpers\": [\"call-bind-apply-helpers@1.0.2\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"function-bind\": \"^1.1.2\" } }, \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\"],\n\n    \"call-bound\": [\"call-bound@1.0.4\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.2\", \"get-intrinsic\": \"^1.3.0\" } }, \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\"],\n\n    \"caller-callsite\": [\"caller-callsite@2.0.0\", \"\", { \"dependencies\": { \"callsites\": \"^2.0.0\" } }, \"sha512-JuG3qI4QOftFsZyOn1qq87fq5grLIyk1JYd5lJmdA+fG7aQ9pA/i3JIJGcO3q0MrRcHlOt1U+ZeHW8Dq9axALQ==\"],\n\n    \"caller-path\": [\"caller-path@2.0.0\", \"\", { \"dependencies\": { \"caller-callsite\": \"^2.0.0\" } }, \"sha512-MCL3sf6nCSXOwCTzvPKhN18TU7AHTvdtam8DAogxcrJ8Rjfbbg7Lgng64H9Iy+vUV6VGFClN/TyxBkAebLRR4A==\"],\n\n    \"callsites\": [\"callsites@3.1.0\", \"\", {}, \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\"],\n\n    \"camel-case\": [\"camel-case@4.1.2\", \"\", { \"dependencies\": { \"pascal-case\": \"^3.1.2\", \"tslib\": \"^2.0.3\" } }, \"sha512-gxGWBrTT1JuMx6R+o5PTXMmUnhnVzLQ9SNutD4YqKtI6ap897t3tKECYla6gCWEkplXnlNybEkZg9GEGxKFCgw==\"],\n\n    \"camelcase\": [\"camelcase@6.3.0\", \"\", {}, \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\"],\n\n    \"camelcase-css\": [\"camelcase-css@2.0.1\", \"\", {}, \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\"],\n\n    \"camera-controls\": [\"camera-controls@2.10.1\", \"\", { \"peerDependencies\": { \"three\": \">=0.126.1\" } }, \"sha512-KnaKdcvkBJ1Irbrzl8XD6WtZltkRjp869Jx8c0ujs9K+9WD+1D7ryBsCiVqJYUqt6i/HR5FxT7RLASieUD+Q5w==\"],\n\n    \"caniuse-lite\": [\"caniuse-lite@1.0.30001734\", \"\", {}, \"sha512-uhE1Ye5vgqju6OI71HTQqcBCZrvHugk0MjLak7Q+HfoBgoq5Bi+5YnwjP4fjDgrtYr/l8MVRBvzz9dPD4KyK0A==\"],\n\n    \"ccount\": [\"ccount@2.0.1\", \"\", {}, \"sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==\"],\n\n    \"chalk\": [\"chalk@4.1.2\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.1.0\", \"supports-color\": \"^7.1.0\" } }, \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\"],\n\n    \"char-regex\": [\"char-regex@1.0.2\", \"\", {}, \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\"],\n\n    \"character-entities\": [\"character-entities@2.0.2\", \"\", {}, \"sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==\"],\n\n    \"character-entities-html4\": [\"character-entities-html4@2.1.0\", \"\", {}, \"sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==\"],\n\n    \"character-entities-legacy\": [\"character-entities-legacy@3.0.0\", \"\", {}, \"sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==\"],\n\n    \"character-reference-invalid\": [\"character-reference-invalid@2.0.1\", \"\", {}, \"sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==\"],\n\n    \"chevrotain\": [\"chevrotain@11.0.3\", \"\", { \"dependencies\": { \"@chevrotain/cst-dts-gen\": \"11.0.3\", \"@chevrotain/gast\": \"11.0.3\", \"@chevrotain/regexp-to-ast\": \"11.0.3\", \"@chevrotain/types\": \"11.0.3\", \"@chevrotain/utils\": \"11.0.3\", \"lodash-es\": \"4.17.21\" } }, \"sha512-ci2iJH6LeIkvP9eJW6gpueU8cnZhv85ELY8w8WiFtNjMHA5ad6pQLaJo9mEly/9qUyCpvqX8/POVUTf18/HFdw==\"],\n\n    \"chevrotain-allstar\": [\"chevrotain-allstar@0.3.1\", \"\", { \"dependencies\": { \"lodash-es\": \"^4.17.21\" }, \"peerDependencies\": { \"chevrotain\": \"^11.0.0\" } }, \"sha512-b7g+y9A0v4mxCW1qUhf3BSVPg+/NvGErk/dOkrDaHA0nQIQGAtrOjlX//9OQtRlSCy+x9rfB5N8yC71lH1nvMw==\"],\n\n    \"chokidar\": [\"chokidar@3.6.0\", \"\", { \"dependencies\": { \"anymatch\": \"~3.1.2\", \"braces\": \"~3.0.2\", \"glob-parent\": \"~5.1.2\", \"is-binary-path\": \"~2.1.0\", \"is-glob\": \"~4.0.1\", \"normalize-path\": \"~3.0.0\", \"readdirp\": \"~3.6.0\" }, \"optionalDependencies\": { \"fsevents\": \"~2.3.2\" } }, \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\"],\n\n    \"chrome-launcher\": [\"chrome-launcher@0.15.2\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"escape-string-regexp\": \"^4.0.0\", \"is-wsl\": \"^2.2.0\", \"lighthouse-logger\": \"^1.0.0\" }, \"bin\": { \"print-chrome-path\": \"bin/print-chrome-path.js\" } }, \"sha512-zdLEwNo3aUVzIhKhTtXfxhdvZhUghrnmkvcAq2NoDd+LeOHKf03H5jwZ8T/STsAlzyALkBVK552iaG1fGf1xVQ==\"],\n\n    \"chromium-bidi\": [\"chromium-bidi@7.3.1\", \"\", { \"dependencies\": { \"mitt\": \"^3.0.1\", \"zod\": \"^3.24.1\" }, \"peerDependencies\": { \"devtools-protocol\": \"*\" } }, \"sha512-i+BMGluhZZc4Jic9L1aHJBTfaopxmCqQxGklyMcqFx4fvF3nI4BJ3bCe1ad474nvYRIo/ZN/VrdA4eOaRZua4Q==\"],\n\n    \"chromium-edge-launcher\": [\"chromium-edge-launcher@0.2.0\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"escape-string-regexp\": \"^4.0.0\", \"is-wsl\": \"^2.2.0\", \"lighthouse-logger\": \"^1.0.0\", \"mkdirp\": \"^1.0.4\", \"rimraf\": \"^3.0.2\" } }, \"sha512-JfJjUnq25y9yg4FABRRVPmBGWPZZi+AQXT4mxupb67766/0UlhG8PAZCz6xzEMXTbW3CsSoE8PcCWA49n35mKg==\"],\n\n    \"ci-info\": [\"ci-info@3.9.0\", \"\", {}, \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==\"],\n\n    \"cjs-module-lexer\": [\"cjs-module-lexer@1.4.3\", \"\", {}, \"sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==\"],\n\n    \"class-variance-authority\": [\"class-variance-authority@0.7.1\", \"\", { \"dependencies\": { \"clsx\": \"^2.1.1\" } }, \"sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==\"],\n\n    \"clean-git-ref\": [\"clean-git-ref@2.0.1\", \"\", {}, \"sha512-bLSptAy2P0s6hU4PzuIMKmMJJSE6gLXGH1cntDu7bWJUksvuM+7ReOK61mozULErYvP6a15rnYl0zFDef+pyPw==\"],\n\n    \"clean-stack\": [\"clean-stack@3.0.1\", \"\", { \"dependencies\": { \"escape-string-regexp\": \"4.0.0\" } }, \"sha512-lR9wNiMRcVQjSB3a7xXGLuz4cr4wJuuXlaAEbRutGowQTmlp7R72/DOgN21e8jdwblMWl9UOJMJXarX94pzKdg==\"],\n\n    \"cli-cursor\": [\"cli-cursor@3.1.0\", \"\", { \"dependencies\": { \"restore-cursor\": \"^3.1.0\" } }, \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\"],\n\n    \"cli-spinners\": [\"cli-spinners@2.9.2\", \"\", {}, \"sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==\"],\n\n    \"cli-truncate\": [\"cli-truncate@4.0.0\", \"\", { \"dependencies\": { \"slice-ansi\": \"^5.0.0\", \"string-width\": \"^7.0.0\" } }, \"sha512-nPdaFdQ0h/GEigbPClz11D0v/ZJEwxmeVZGeMo3Z5StPtUTkA9o1lD6QwoirYiSDzbcwn2XcjwmCp68W1IS4TA==\"],\n\n    \"client-only\": [\"client-only@0.0.1\", \"\", {}, \"sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==\"],\n\n    \"clipanion\": [\"clipanion@3.2.1\", \"\", { \"dependencies\": { \"typanion\": \"^3.8.0\" } }, \"sha512-dYFdjLb7y1ajfxQopN05mylEpK9ZX0sO1/RfMXdfmwjlIsPkbh4p7A682x++zFPLDCo1x3p82dtljHf5cW2LKA==\"],\n\n    \"cliui\": [\"cliui@8.0.1\", \"\", { \"dependencies\": { \"string-width\": \"^4.2.0\", \"strip-ansi\": \"^6.0.1\", \"wrap-ansi\": \"^7.0.0\" } }, \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\"],\n\n    \"clone\": [\"clone@1.0.4\", \"\", {}, \"sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==\"],\n\n    \"clsx\": [\"clsx@2.1.1\", \"\", {}, \"sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==\"],\n\n    \"co\": [\"co@4.6.0\", \"\", {}, \"sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==\"],\n\n    \"cobe\": [\"cobe@0.6.4\", \"\", { \"dependencies\": { \"phenomenon\": \"^1.6.0\" } }, \"sha512-huuGFnDoXLy/tsCZYYa/H35BBRs9cxsS0XKJ3BXjRp699cQKuoEVrvKlAQMx0DKXG7+VUv4jsHVrS7yPbkLSkQ==\"],\n\n    \"code-block-writer\": [\"code-block-writer@12.0.0\", \"\", {}, \"sha512-q4dMFMlXtKR3XNBHyMHt/3pwYNA69EDk00lloMOaaUMKPUXBw6lpXtbu3MMVG6/uOihGnRDOlkyqsONEUj60+w==\"],\n\n    \"collapse-white-space\": [\"collapse-white-space@2.1.0\", \"\", {}, \"sha512-loKTxY1zCOuG4j9f6EPnuyyYkf58RnhhWTvRoZEokgB+WbdXehfjFviyOVYkqzEWz1Q5kRiZdBYS5SwxbQYwzw==\"],\n\n    \"collect-v8-coverage\": [\"collect-v8-coverage@1.0.2\", \"\", {}, \"sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==\"],\n\n    \"color-convert\": [\"color-convert@2.0.1\", \"\", { \"dependencies\": { \"color-name\": \"~1.1.4\" } }, \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\"],\n\n    \"color-name\": [\"color-name@1.1.4\", \"\", {}, \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\"],\n\n    \"colorette\": [\"colorette@2.0.20\", \"\", {}, \"sha512-IfEDxwoWIjkeXL1eXcDiow4UbKjhLdq6/EuSVR9GMN7KVH3r9gQ83e73hsz1Nd1T3ijd5xv1wcWRYO+D6kCI2w==\"],\n\n    \"combined-stream\": [\"combined-stream@1.0.8\", \"\", { \"dependencies\": { \"delayed-stream\": \"~1.0.0\" } }, \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\"],\n\n    \"comma-separated-tokens\": [\"comma-separated-tokens@2.0.3\", \"\", {}, \"sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==\"],\n\n    \"commander\": [\"commander@13.1.0\", \"\", {}, \"sha512-/rFeCpNJQbhSZjGVwO9RFV3xPqbnERS8MmIQzCtD/zl6gpJuV/bMLuN92oG3F7d8oDEHHRrujSXNUr8fpjntKw==\"],\n\n    \"comment-json\": [\"comment-json@4.2.5\", \"\", { \"dependencies\": { \"array-timsort\": \"^1.0.3\", \"core-util-is\": \"^1.0.3\", \"esprima\": \"^4.0.1\", \"has-own-prop\": \"^2.0.0\", \"repeat-string\": \"^1.6.1\" } }, \"sha512-bKw/r35jR3HGt5PEPm1ljsQQGyCrR8sFGNiN5L+ykDHdpO8Smxkrkla9Yi6NkQyUrb8V54PGhfMs6NrIwtxtdw==\"],\n\n    \"compare-func\": [\"compare-func@2.0.0\", \"\", { \"dependencies\": { \"array-ify\": \"^1.0.0\", \"dot-prop\": \"^5.1.0\" } }, \"sha512-zHig5N+tPWARooBnb0Zx1MFcdfpyJrfTJ3Y5L+IFvUm8rM74hHz66z0gw0x4tijh5CorKkKUCnW82R2vmpeCRA==\"],\n\n    \"concat-map\": [\"concat-map@0.0.1\", \"\", {}, \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\"],\n\n    \"confbox\": [\"confbox@0.2.2\", \"\", {}, \"sha512-1NB+BKqhtNipMsov4xI/NnhCKp9XG9NamYp5PVm9klAT0fsrNPjaFICsCFhNhwZJKNh7zB/3q8qXz0E9oaMNtQ==\"],\n\n    \"configstore\": [\"configstore@6.0.0\", \"\", { \"dependencies\": { \"dot-prop\": \"^6.0.1\", \"graceful-fs\": \"^4.2.6\", \"unique-string\": \"^3.0.0\", \"write-file-atomic\": \"^3.0.3\", \"xdg-basedir\": \"^5.0.1\" } }, \"sha512-cD31W1v3GqUlQvbBCGcXmd2Nj9SvLDOP1oQ0YFuLETufzSPaKp11rYBsSOm7rCsW3OnIRAFM3OxRhceaXNYHkA==\"],\n\n    \"connect\": [\"connect@3.7.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"finalhandler\": \"1.1.2\", \"parseurl\": \"~1.3.3\", \"utils-merge\": \"1.0.1\" } }, \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\"],\n\n    \"content-disposition\": [\"content-disposition@0.5.4\", \"\", { \"dependencies\": { \"safe-buffer\": \"5.2.1\" } }, \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\"],\n\n    \"content-type\": [\"content-type@1.0.5\", \"\", {}, \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\"],\n\n    \"contentlayer\": [\"contentlayer@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/cli\": \"0.3.4\", \"@contentlayer/client\": \"0.3.4\", \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/source-files\": \"0.3.4\", \"@contentlayer/source-remote-files\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\" }, \"bin\": \"./bin/cli.cjs\" }, \"sha512-FYDdTUFaN4yqep0waswrhcXjmMJnPD5iXDTtxcUCGdklfuIrXM2xLx51xl748cHmGA6IsC+27YZFxU6Ym13QIA==\"],\n\n    \"conventional-changelog-angular\": [\"conventional-changelog-angular@7.0.0\", \"\", { \"dependencies\": { \"compare-func\": \"^2.0.0\" } }, \"sha512-ROjNchA9LgfNMTTFSIWPzebCwOGFdgkEq45EnvvrmSLvCtAw0HSmrCs7/ty+wAeYUZyNay0YMUNYFTRL72PkBQ==\"],\n\n    \"conventional-changelog-conventionalcommits\": [\"conventional-changelog-conventionalcommits@7.0.2\", \"\", { \"dependencies\": { \"compare-func\": \"^2.0.0\" } }, \"sha512-NKXYmMR/Hr1DevQegFB4MwfM5Vv0m4UIxKZTTYuD98lpTknaZlSRrDOG4X7wIXpGkfsYxZTghUN+Qq+T0YQI7w==\"],\n\n    \"conventional-commits-parser\": [\"conventional-commits-parser@5.0.0\", \"\", { \"dependencies\": { \"JSONStream\": \"^1.3.5\", \"is-text-path\": \"^2.0.0\", \"meow\": \"^12.0.1\", \"split2\": \"^4.0.0\" }, \"bin\": { \"conventional-commits-parser\": \"cli.mjs\" } }, \"sha512-ZPMl0ZJbw74iS9LuX9YIAiW8pfM5p3yh2o/NbXHbkFuZzY5jvdi5jFycEOkmBW5H5I7nA+D6f3UcsCLP2vvSEA==\"],\n\n    \"convert-source-map\": [\"convert-source-map@2.0.0\", \"\", {}, \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\"],\n\n    \"cookie\": [\"cookie@0.6.0\", \"\", {}, \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\"],\n\n    \"cookie-signature\": [\"cookie-signature@1.0.6\", \"\", {}, \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"],\n\n    \"core-js\": [\"core-js@3.45.0\", \"\", {}, \"sha512-c2KZL9lP4DjkN3hk/an4pWn5b5ZefhRJnAc42n6LJ19kSnbeRbdQZE5dSeE2LBol1OwJD3X1BQvFTAsa8ReeDA==\"],\n\n    \"core-js-compat\": [\"core-js-compat@3.45.0\", \"\", { \"dependencies\": { \"browserslist\": \"^4.25.1\" } }, \"sha512-gRoVMBawZg0OnxaVv3zpqLLxaHmsubEGyTnqdpI/CEBvX4JadI1dMSHxagThprYRtSVbuQxvi6iUatdPxohHpA==\"],\n\n    \"core-util-is\": [\"core-util-is@1.0.3\", \"\", {}, \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\"],\n\n    \"cors\": [\"cors@2.8.5\", \"\", { \"dependencies\": { \"object-assign\": \"^4\", \"vary\": \"^1\" } }, \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\"],\n\n    \"cose-base\": [\"cose-base@1.0.3\", \"\", { \"dependencies\": { \"layout-base\": \"^1.0.0\" } }, \"sha512-s9whTXInMSgAp/NVXVNuVxVKzGH2qck3aQlVHxDCdAEPgtMKwc4Wq6/QKhgdEdgbLSi9rBTAcPoRa6JpiG4ksg==\"],\n\n    \"cosmiconfig\": [\"cosmiconfig@8.3.6\", \"\", { \"dependencies\": { \"import-fresh\": \"^3.3.0\", \"js-yaml\": \"^4.1.0\", \"parse-json\": \"^5.2.0\", \"path-type\": \"^4.0.0\" }, \"peerDependencies\": { \"typescript\": \">=4.9.5\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-kcZ6+W5QzcJ3P1Mt+83OUv/oHFqZHIx8DuxG6eZ5RGMERoLqp4BuGjhHLYGK+Kf5XVkQvqBSmAy/nGWN3qDgEA==\"],\n\n    \"cosmiconfig-typescript-loader\": [\"cosmiconfig-typescript-loader@6.1.0\", \"\", { \"dependencies\": { \"jiti\": \"^2.4.1\" }, \"peerDependencies\": { \"@types/node\": \"*\", \"cosmiconfig\": \">=9\", \"typescript\": \">=5\" } }, \"sha512-tJ1w35ZRUiM5FeTzT7DtYWAFFv37ZLqSRkGi2oeCK1gPhvaWjkAtfXvLmvE1pRfxxp9aQo6ba/Pvg1dKj05D4g==\"],\n\n    \"crc-32\": [\"crc-32@1.2.2\", \"\", { \"bin\": { \"crc32\": \"bin/crc32.njs\" } }, \"sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==\"],\n\n    \"create-jest\": [\"create-jest@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"exit\": \"^0.1.2\", \"graceful-fs\": \"^4.2.9\", \"jest-config\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"prompts\": \"^2.0.1\" }, \"bin\": { \"create-jest\": \"bin/create-jest.js\" } }, \"sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==\"],\n\n    \"create-require\": [\"create-require@1.1.1\", \"\", {}, \"sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==\"],\n\n    \"cross-env\": [\"cross-env@7.0.3\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.1\" }, \"bin\": { \"cross-env\": \"src/bin/cross-env.js\", \"cross-env-shell\": \"src/bin/cross-env-shell.js\" } }, \"sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==\"],\n\n    \"cross-spawn\": [\"cross-spawn@7.0.6\", \"\", { \"dependencies\": { \"path-key\": \"^3.1.0\", \"shebang-command\": \"^2.0.0\", \"which\": \"^2.0.1\" } }, \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\"],\n\n    \"crypto-random-string\": [\"crypto-random-string@4.0.0\", \"\", { \"dependencies\": { \"type-fest\": \"^1.0.1\" } }, \"sha512-x8dy3RnvYdlUcPOjkEHqozhiwzKNSq7GcPuXFbnyMOCHxX8V3OgIg/pYuabl2sbUPfIJaeAQB7PMOK8DFIdoRA==\"],\n\n    \"css.escape\": [\"css.escape@1.5.1\", \"\", {}, \"sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==\"],\n\n    \"cssesc\": [\"cssesc@3.0.0\", \"\", { \"bin\": { \"cssesc\": \"bin/cssesc\" } }, \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\"],\n\n    \"cssom\": [\"cssom@0.5.0\", \"\", {}, \"sha512-iKuQcq+NdHqlAcwUY0o/HL69XQrUaQdMjmStJ8JFmUaiiQErlhrmuigkg/CU4E2J0IyUKUrMAgl36TvN67MqTw==\"],\n\n    \"cssstyle\": [\"cssstyle@2.3.0\", \"\", { \"dependencies\": { \"cssom\": \"~0.3.6\" } }, \"sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4n1lDStOtj7FKycP71A==\"],\n\n    \"csstype\": [\"csstype@3.1.3\", \"\", {}, \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\"],\n\n    \"cytoscape\": [\"cytoscape@3.33.1\", \"\", {}, \"sha512-iJc4TwyANnOGR1OmWhsS9ayRS3s+XQ185FmuHObThD+5AeJCakAAbWv8KimMTt08xCCLNgneQwFp+JRJOr9qGQ==\"],\n\n    \"cytoscape-cose-bilkent\": [\"cytoscape-cose-bilkent@4.1.0\", \"\", { \"dependencies\": { \"cose-base\": \"^1.0.0\" }, \"peerDependencies\": { \"cytoscape\": \"^3.2.0\" } }, \"sha512-wgQlVIUJF13Quxiv5e1gstZ08rnZj2XaLHGoFMYXz7SkNfCDOOteKBE6SYRfA9WxxI/iBc3ajfDoc6hb/MRAHQ==\"],\n\n    \"cytoscape-fcose\": [\"cytoscape-fcose@2.2.0\", \"\", { \"dependencies\": { \"cose-base\": \"^2.2.0\" }, \"peerDependencies\": { \"cytoscape\": \"^3.2.0\" } }, \"sha512-ki1/VuRIHFCzxWNrsshHYPs6L7TvLu3DL+TyIGEsRcvVERmxokbf5Gdk7mFxZnTdiGtnA4cfSmjZJMviqSuZrQ==\"],\n\n    \"d3\": [\"d3@7.9.0\", \"\", { \"dependencies\": { \"d3-array\": \"3\", \"d3-axis\": \"3\", \"d3-brush\": \"3\", \"d3-chord\": \"3\", \"d3-color\": \"3\", \"d3-contour\": \"4\", \"d3-delaunay\": \"6\", \"d3-dispatch\": \"3\", \"d3-drag\": \"3\", \"d3-dsv\": \"3\", \"d3-ease\": \"3\", \"d3-fetch\": \"3\", \"d3-force\": \"3\", \"d3-format\": \"3\", \"d3-geo\": \"3\", \"d3-hierarchy\": \"3\", \"d3-interpolate\": \"3\", \"d3-path\": \"3\", \"d3-polygon\": \"3\", \"d3-quadtree\": \"3\", \"d3-random\": \"3\", \"d3-scale\": \"4\", \"d3-scale-chromatic\": \"3\", \"d3-selection\": \"3\", \"d3-shape\": \"3\", \"d3-time\": \"3\", \"d3-time-format\": \"4\", \"d3-timer\": \"3\", \"d3-transition\": \"3\", \"d3-zoom\": \"3\" } }, \"sha512-e1U46jVP+w7Iut8Jt8ri1YsPOvFpg46k+K8TpCb0P+zjCkjkPnV7WzfDJzMHy1LnA+wj5pLT1wjO901gLXeEhA==\"],\n\n    \"d3-array\": [\"d3-array@3.2.4\", \"\", { \"dependencies\": { \"internmap\": \"1 - 2\" } }, \"sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==\"],\n\n    \"d3-axis\": [\"d3-axis@3.0.0\", \"\", {}, \"sha512-IH5tgjV4jE/GhHkRV0HiVYPDtvfjHQlQfJHs0usq7M30XcSBvOotpmH1IgkcXsO/5gEQZD43B//fc7SRT5S+xw==\"],\n\n    \"d3-brush\": [\"d3-brush@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-drag\": \"2 - 3\", \"d3-interpolate\": \"1 - 3\", \"d3-selection\": \"3\", \"d3-transition\": \"3\" } }, \"sha512-ALnjWlVYkXsVIGlOsuWH1+3udkYFI48Ljihfnh8FZPF2QS9o+PzGLBslO0PjzVoHLZ2KCVgAM8NVkXPJB2aNnQ==\"],\n\n    \"d3-chord\": [\"d3-chord@3.0.1\", \"\", { \"dependencies\": { \"d3-path\": \"1 - 3\" } }, \"sha512-VE5S6TNa+j8msksl7HwjxMHDM2yNK3XCkusIlpX5kwauBfXuyLAtNg9jCp/iHH61tgI4sb6R/EIMWCqEIdjT/g==\"],\n\n    \"d3-color\": [\"d3-color@3.1.0\", \"\", {}, \"sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==\"],\n\n    \"d3-contour\": [\"d3-contour@4.0.2\", \"\", { \"dependencies\": { \"d3-array\": \"^3.2.0\" } }, \"sha512-4EzFTRIikzs47RGmdxbeUvLWtGedDUNkTcmzoeyg4sP/dvCexO47AaQL7VKy/gul85TOxw+IBgA8US2xwbToNA==\"],\n\n    \"d3-delaunay\": [\"d3-delaunay@6.0.4\", \"\", { \"dependencies\": { \"delaunator\": \"5\" } }, \"sha512-mdjtIZ1XLAM8bm/hx3WwjfHt6Sggek7qH043O8KEjDXN40xi3vx/6pYSVTwLjEgiXQTbvaouWKynLBiUZ6SK6A==\"],\n\n    \"d3-dispatch\": [\"d3-dispatch@3.0.1\", \"\", {}, \"sha512-rzUyPU/S7rwUflMyLc1ETDeBj0NRuHKKAcvukozwhshr6g6c5d8zh4c2gQjY2bZ0dXeGLWc1PF174P2tVvKhfg==\"],\n\n    \"d3-drag\": [\"d3-drag@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-selection\": \"3\" } }, \"sha512-pWbUJLdETVA8lQNJecMxoXfH6x+mO2UQo8rSmZ+QqxcbyA3hfeprFgIT//HW2nlHChWeIIMwS2Fq+gEARkhTkg==\"],\n\n    \"d3-dsv\": [\"d3-dsv@3.0.1\", \"\", { \"dependencies\": { \"commander\": \"7\", \"iconv-lite\": \"0.6\", \"rw\": \"1\" }, \"bin\": { \"csv2json\": \"bin/dsv2json.js\", \"csv2tsv\": \"bin/dsv2dsv.js\", \"dsv2dsv\": \"bin/dsv2dsv.js\", \"dsv2json\": \"bin/dsv2json.js\", \"json2csv\": \"bin/json2dsv.js\", \"json2dsv\": \"bin/json2dsv.js\", \"json2tsv\": \"bin/json2dsv.js\", \"tsv2csv\": \"bin/dsv2dsv.js\", \"tsv2json\": \"bin/dsv2json.js\" } }, \"sha512-UG6OvdI5afDIFP9w4G0mNq50dSOsXHJaRE8arAS5o9ApWnIElp8GZw1Dun8vP8OyHOZ/QJUKUJwxiiCCnUwm+Q==\"],\n\n    \"d3-ease\": [\"d3-ease@3.0.1\", \"\", {}, \"sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==\"],\n\n    \"d3-fetch\": [\"d3-fetch@3.0.1\", \"\", { \"dependencies\": { \"d3-dsv\": \"1 - 3\" } }, \"sha512-kpkQIM20n3oLVBKGg6oHrUchHM3xODkTzjMoj7aWQFq5QEM+R6E4WkzT5+tojDY7yjez8KgCBRoj4aEr99Fdqw==\"],\n\n    \"d3-force\": [\"d3-force@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-quadtree\": \"1 - 3\", \"d3-timer\": \"1 - 3\" } }, \"sha512-zxV/SsA+U4yte8051P4ECydjD/S+qeYtnaIyAs9tgHCqfguma/aAQDjo85A9Z6EKhBirHRJHXIgJUlffT4wdLg==\"],\n\n    \"d3-format\": [\"d3-format@3.1.0\", \"\", {}, \"sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==\"],\n\n    \"d3-geo\": [\"d3-geo@3.1.1\", \"\", { \"dependencies\": { \"d3-array\": \"2.5.0 - 3\" } }, \"sha512-637ln3gXKXOwhalDzinUgY83KzNWZRKbYubaG+fGVuc/dxO64RRljtCTnf5ecMyE1RIdtqpkVcq0IbtU2S8j2Q==\"],\n\n    \"d3-geo-voronoi\": [\"d3-geo-voronoi@2.1.0\", \"\", { \"dependencies\": { \"d3-array\": \"3\", \"d3-delaunay\": \"6\", \"d3-geo\": \"3\", \"d3-tricontour\": \"1\" } }, \"sha512-kqE4yYuOjPbKdBXG0xztCacPwkVSK2REF1opSNrnqqtXJmNcM++UbwQ8SxvwP6IQTj9RvIjjK4qeiVsEfj0Z2Q==\"],\n\n    \"d3-hierarchy\": [\"d3-hierarchy@3.1.2\", \"\", {}, \"sha512-FX/9frcub54beBdugHjDCdikxThEqjnR93Qt7PvQTOHxyiNCAlvMrHhclk3cD5VeAaq9fxmfRp+CnWw9rEMBuA==\"],\n\n    \"d3-interpolate\": [\"d3-interpolate@3.0.1\", \"\", { \"dependencies\": { \"d3-color\": \"1 - 3\" } }, \"sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==\"],\n\n    \"d3-octree\": [\"d3-octree@1.1.0\", \"\", {}, \"sha512-F8gPlqpP+HwRPMO/8uOu5wjH110+6q4cgJvgJT6vlpy3BEaDIKlTZrgHKZSp/i1InRpVfh4puY/kvL6MxK930A==\"],\n\n    \"d3-path\": [\"d3-path@3.1.0\", \"\", {}, \"sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==\"],\n\n    \"d3-polygon\": [\"d3-polygon@3.0.1\", \"\", {}, \"sha512-3vbA7vXYwfe1SYhED++fPUQlWSYTTGmFmQiany/gdbiWgU/iEyQzyymwL9SkJjFFuCS4902BSzewVGsHHmHtXg==\"],\n\n    \"d3-quadtree\": [\"d3-quadtree@3.0.1\", \"\", {}, \"sha512-04xDrxQTDTCFwP5H6hRhsRcb9xxv2RzkcsygFzmkSIOJy3PeRJP7sNk3VRIbKXcog561P9oU0/rVH6vDROAgUw==\"],\n\n    \"d3-random\": [\"d3-random@3.0.1\", \"\", {}, \"sha512-FXMe9GfxTxqd5D6jFsQ+DJ8BJS4E/fT5mqqdjovykEB2oFbTMDVdg1MGFxfQW+FBOGoB++k8swBrgwSHT1cUXQ==\"],\n\n    \"d3-sankey\": [\"d3-sankey@0.12.3\", \"\", { \"dependencies\": { \"d3-array\": \"1 - 2\", \"d3-shape\": \"^1.2.0\" } }, \"sha512-nQhsBRmM19Ax5xEIPLMY9ZmJ/cDvd1BG3UVvt5h3WRxKg5zGRbvnteTyWAbzeSvlh3tW7ZEmq4VwR5mB3tutmQ==\"],\n\n    \"d3-scale\": [\"d3-scale@4.0.2\", \"\", { \"dependencies\": { \"d3-array\": \"2.10.0 - 3\", \"d3-format\": \"1 - 3\", \"d3-interpolate\": \"1.2.0 - 3\", \"d3-time\": \"2.1.1 - 3\", \"d3-time-format\": \"2 - 4\" } }, \"sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==\"],\n\n    \"d3-scale-chromatic\": [\"d3-scale-chromatic@3.1.0\", \"\", { \"dependencies\": { \"d3-color\": \"1 - 3\", \"d3-interpolate\": \"1 - 3\" } }, \"sha512-A3s5PWiZ9YCXFye1o246KoscMWqf8BsD9eRiJ3He7C9OBaxKhAd5TFCdEx/7VbKtxxTsu//1mMJFrEt572cEyQ==\"],\n\n    \"d3-selection\": [\"d3-selection@3.0.0\", \"\", {}, \"sha512-fmTRWbNMmsmWq6xJV8D19U/gw/bwrHfNXxrIN+HfZgnzqTHp9jOmKMhsTUjXOJnZOdZY9Q28y4yebKzqDKlxlQ==\"],\n\n    \"d3-shape\": [\"d3-shape@3.2.0\", \"\", { \"dependencies\": { \"d3-path\": \"^3.1.0\" } }, \"sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==\"],\n\n    \"d3-time\": [\"d3-time@3.1.0\", \"\", { \"dependencies\": { \"d3-array\": \"2 - 3\" } }, \"sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==\"],\n\n    \"d3-time-format\": [\"d3-time-format@4.1.0\", \"\", { \"dependencies\": { \"d3-time\": \"1 - 3\" } }, \"sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==\"],\n\n    \"d3-timer\": [\"d3-timer@3.0.1\", \"\", {}, \"sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==\"],\n\n    \"d3-transition\": [\"d3-transition@3.0.1\", \"\", { \"dependencies\": { \"d3-color\": \"1 - 3\", \"d3-dispatch\": \"1 - 3\", \"d3-ease\": \"1 - 3\", \"d3-interpolate\": \"1 - 3\", \"d3-timer\": \"1 - 3\" }, \"peerDependencies\": { \"d3-selection\": \"2 - 3\" } }, \"sha512-ApKvfjsSR6tg06xrL434C0WydLr7JewBB3V+/39RMHsaXTOG0zmt/OAXeng5M5LBm0ojmxJrpomQVZ1aPvBL4w==\"],\n\n    \"d3-tricontour\": [\"d3-tricontour@1.0.2\", \"\", { \"dependencies\": { \"d3-delaunay\": \"6\", \"d3-scale\": \"4\" } }, \"sha512-HIRxHzHagPtUPNabjOlfcyismJYIsc+Xlq4mlsts4e8eAcwyq9Tgk/sYdyhlBpQ0MHwVquc/8j+e29YjXnmxeA==\"],\n\n    \"d3-zoom\": [\"d3-zoom@3.0.0\", \"\", { \"dependencies\": { \"d3-dispatch\": \"1 - 3\", \"d3-drag\": \"2 - 3\", \"d3-interpolate\": \"1 - 3\", \"d3-selection\": \"2 - 3\", \"d3-transition\": \"2 - 3\" } }, \"sha512-b8AmV3kfQaqWAuacbPuNbL6vahnOJflOhexLzMMNLga62+/nh0JzvJ0aO/5a5MVgUFGS7Hu1P9P03o3fJkDCyw==\"],\n\n    \"dagre-d3-es\": [\"dagre-d3-es@7.0.11\", \"\", { \"dependencies\": { \"d3\": \"^7.9.0\", \"lodash-es\": \"^4.17.21\" } }, \"sha512-tvlJLyQf834SylNKax8Wkzco/1ias1OPw8DcUMDE7oUIoSEW25riQVuiu/0OWEFqT0cxHT3Pa9/D82Jr47IONw==\"],\n\n    \"damerau-levenshtein\": [\"damerau-levenshtein@1.0.8\", \"\", {}, \"sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==\"],\n\n    \"dargs\": [\"dargs@8.1.0\", \"\", {}, \"sha512-wAV9QHOsNbwnWdNW2FYvE1P56wtgSbM+3SZcdGiWQILwVjACCXDCI3Ai8QlCjMDB8YK5zySiXZYBiwGmNY3lnw==\"],\n\n    \"data-bind-mapper\": [\"data-bind-mapper@1.0.3\", \"\", { \"dependencies\": { \"accessor-fn\": \"1\" } }, \"sha512-QmU3lyEnbENQPo0M1F9BMu4s6cqNNp8iJA+b/HP2sSb7pf3dxwF3+EP1eO69rwBfH9kFJ1apmzrtogAmVt2/Xw==\"],\n\n    \"data-uri-to-buffer\": [\"data-uri-to-buffer@4.0.1\", \"\", {}, \"sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==\"],\n\n    \"data-urls\": [\"data-urls@3.0.2\", \"\", { \"dependencies\": { \"abab\": \"^2.0.6\", \"whatwg-mimetype\": \"^3.0.0\", \"whatwg-url\": \"^11.0.0\" } }, \"sha512-Jy/tj3ldjZJo63sVAvg6LHt2mHvl4V6AgRAmNDtLdm7faqtsx+aJG42rsyCo9JCoRVKwPFzKlIPx3DIibwSIaQ==\"],\n\n    \"data-view-buffer\": [\"data-view-buffer@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"is-data-view\": \"^1.0.2\" } }, \"sha512-EmKO5V3OLXh1rtK2wgXRansaK1/mtVdTUEiEI0W8RkvgT05kfxaH29PliLnpLP73yYO6142Q72QNa8Wx/A5CqQ==\"],\n\n    \"data-view-byte-length\": [\"data-view-byte-length@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"is-data-view\": \"^1.0.2\" } }, \"sha512-tuhGbE6CfTM9+5ANGf+oQb72Ky/0+s3xKUpHvShfiz2RxMFgFPjsXuRLBVMtvMs15awe45SRb83D6wH4ew6wlQ==\"],\n\n    \"data-view-byte-offset\": [\"data-view-byte-offset@1.0.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"is-data-view\": \"^1.0.1\" } }, \"sha512-BS8PfmtDGnrgYdOonGZQdLZslWIeCGFP9tpan0hi1Co2Zr2NKADsvGYA8XxuG/4UWgJ6Cjtv+YJnB6MM69QGlQ==\"],\n\n    \"dayjs\": [\"dayjs@1.11.13\", \"\", {}, \"sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==\"],\n\n    \"debug\": [\"debug@4.4.1\", \"\", { \"dependencies\": { \"ms\": \"^2.1.3\" } }, \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\"],\n\n    \"decimal.js\": [\"decimal.js@10.6.0\", \"\", {}, \"sha512-YpgQiITW3JXGntzdUmyUR1V812Hn8T1YVXhCu+wO3OpS4eU9l4YdD3qjyiKdV6mvV29zapkMeD390UVEf2lkUg==\"],\n\n    \"decode-named-character-reference\": [\"decode-named-character-reference@1.2.0\", \"\", { \"dependencies\": { \"character-entities\": \"^2.0.0\" } }, \"sha512-c6fcElNV6ShtZXmsgNgFFV5tVX2PaV4g+MOAkb8eXHvn6sryJBrZa9r0zV6+dtTyoCKxtDy5tyQ5ZwQuidtd+Q==\"],\n\n    \"decompress-response\": [\"decompress-response@6.0.0\", \"\", { \"dependencies\": { \"mimic-response\": \"^3.1.0\" } }, \"sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==\"],\n\n    \"dedent\": [\"dedent@1.6.0\", \"\", { \"peerDependencies\": { \"babel-plugin-macros\": \"^3.1.0\" }, \"optionalPeers\": [\"babel-plugin-macros\"] }, \"sha512-F1Z+5UCFpmQUzJa11agbyPVMbpgT/qA3/SKyJ1jyBgm7dUcUEa8v9JwDkerSQXfakBwFljIxhOJqGkjUwZ9FSA==\"],\n\n    \"deep-is\": [\"deep-is@0.1.4\", \"\", {}, \"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==\"],\n\n    \"deepmerge\": [\"deepmerge@4.3.1\", \"\", {}, \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\"],\n\n    \"defaults\": [\"defaults@1.0.4\", \"\", { \"dependencies\": { \"clone\": \"^1.0.2\" } }, \"sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==\"],\n\n    \"define-data-property\": [\"define-data-property@1.1.4\", \"\", { \"dependencies\": { \"es-define-property\": \"^1.0.0\", \"es-errors\": \"^1.3.0\", \"gopd\": \"^1.0.1\" } }, \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\"],\n\n    \"define-lazy-prop\": [\"define-lazy-prop@2.0.0\", \"\", {}, \"sha512-Ds09qNh8yw3khSjiJjiUInaGX9xlqZDY7JVryGxdxV7NPeuqQfplOpQ66yJFZut3jLa5zOwkXw1g9EI2uKh4Og==\"],\n\n    \"define-properties\": [\"define-properties@1.2.1\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.0.1\", \"has-property-descriptors\": \"^1.0.0\", \"object-keys\": \"^1.1.1\" } }, \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\"],\n\n    \"degenerator\": [\"degenerator@5.0.1\", \"\", { \"dependencies\": { \"ast-types\": \"^0.13.4\", \"escodegen\": \"^2.1.0\", \"esprima\": \"^4.0.1\" } }, \"sha512-TllpMR/t0M5sqCXfj85i4XaAzxmS5tVA16dqvdkMwGmzI+dXLXnw3J+3Vdv7VKw+ThlTMboK6i9rnZ6Nntj5CQ==\"],\n\n    \"delaunator\": [\"delaunator@5.0.1\", \"\", { \"dependencies\": { \"robust-predicates\": \"^3.0.2\" } }, \"sha512-8nvh+XBe96aCESrGOqMp/84b13H9cdKbG5P2ejQCh4d4sK9RL4371qou9drQjMhvnPmhWl5hnmqbEE0fXr9Xnw==\"],\n\n    \"delayed-stream\": [\"delayed-stream@1.0.0\", \"\", {}, \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\"],\n\n    \"depd\": [\"depd@2.0.0\", \"\", {}, \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\"],\n\n    \"dequal\": [\"dequal@2.0.3\", \"\", {}, \"sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==\"],\n\n    \"destroy\": [\"destroy@1.2.0\", \"\", {}, \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\"],\n\n    \"detect-gpu\": [\"detect-gpu@5.0.70\", \"\", { \"dependencies\": { \"webgl-constants\": \"^1.1.1\" } }, \"sha512-bqerEP1Ese6nt3rFkwPnGbsUF9a4q+gMmpTVVOEzoCyeCc+y7/RvJnQZJx1JwhgQI5Ntg0Kgat8Uu7XpBqnz1w==\"],\n\n    \"detect-newline\": [\"detect-newline@3.1.0\", \"\", {}, \"sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==\"],\n\n    \"detect-node-es\": [\"detect-node-es@1.1.0\", \"\", {}, \"sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==\"],\n\n    \"devlop\": [\"devlop@1.1.0\", \"\", { \"dependencies\": { \"dequal\": \"^2.0.0\" } }, \"sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==\"],\n\n    \"devtools-protocol\": [\"devtools-protocol@0.0.1475386\", \"\", {}, \"sha512-RQ809ykTfJ+dgj9bftdeL2vRVxASAuGU+I9LEx9Ij5TXU5HrgAQVmzi72VA+mkzscE12uzlRv5/tWWv9R9J1SA==\"],\n\n    \"didyoumean\": [\"didyoumean@1.2.2\", \"\", {}, \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\"],\n\n    \"diff\": [\"diff@5.2.0\", \"\", {}, \"sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==\"],\n\n    \"diff-sequences\": [\"diff-sequences@29.6.3\", \"\", {}, \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\"],\n\n    \"diff3\": [\"diff3@0.0.3\", \"\", {}, \"sha512-iSq8ngPOt0K53A6eVr4d5Kn6GNrM2nQZtC740pzIriHtn4pOQ2lyzEXQMBeVcWERN0ye7fhBsk9PbLLQOnUx/g==\"],\n\n    \"dir-glob\": [\"dir-glob@3.0.1\", \"\", { \"dependencies\": { \"path-type\": \"^4.0.0\" } }, \"sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==\"],\n\n    \"discord-api-types\": [\"discord-api-types@0.38.19\", \"\", {}, \"sha512-NUNMTgjYrgxt7wrTNEqnEez4hIAYbfyBpsjxT5gW7+82GjQCPDZvN+em6t+4/P5kGWnnwDa4ci070BV7eI6GbA==\"],\n\n    \"discord.js\": [\"discord.js@14.21.0\", \"\", { \"dependencies\": { \"@discordjs/builders\": \"^1.11.2\", \"@discordjs/collection\": \"1.5.3\", \"@discordjs/formatters\": \"^0.6.1\", \"@discordjs/rest\": \"^2.5.1\", \"@discordjs/util\": \"^1.1.1\", \"@discordjs/ws\": \"^1.2.3\", \"@sapphire/snowflake\": \"3.5.3\", \"discord-api-types\": \"^0.38.1\", \"fast-deep-equal\": \"3.1.3\", \"lodash.snakecase\": \"4.1.1\", \"magic-bytes.js\": \"^1.10.0\", \"tslib\": \"^2.6.3\", \"undici\": \"6.21.3\" } }, \"sha512-U5w41cEmcnSfwKYlLv5RJjB8Joa+QJyRwIJz5i/eg+v2Qvv6EYpCRhN9I2Rlf0900LuqSDg8edakUATrDZQncQ==\"],\n\n    \"dlv\": [\"dlv@1.1.3\", \"\", {}, \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\"],\n\n    \"doctrine\": [\"doctrine@2.1.0\", \"\", { \"dependencies\": { \"esutils\": \"^2.0.2\" } }, \"sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==\"],\n\n    \"dom-accessibility-api\": [\"dom-accessibility-api@0.6.3\", \"\", {}, \"sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==\"],\n\n    \"domexception\": [\"domexception@4.0.0\", \"\", { \"dependencies\": { \"webidl-conversions\": \"^7.0.0\" } }, \"sha512-A2is4PLG+eeSfoTMA95/s4pvAoSo2mKtiM5jlHkAVewmiO8ISFTFKZjH7UAM1Atli/OT/7JHOrJRJiMKUZKYBw==\"],\n\n    \"dompurify\": [\"dompurify@3.2.6\", \"\", { \"optionalDependencies\": { \"@types/trusted-types\": \"^2.0.7\" } }, \"sha512-/2GogDQlohXPZe6D6NOgQvXLPSYBqIWMnZ8zzOhn09REE4eyAzb+Hed3jhoM9OkuaJ8P6ZGTTVWQKAi8ieIzfQ==\"],\n\n    \"dot-prop\": [\"dot-prop@6.0.1\", \"\", { \"dependencies\": { \"is-obj\": \"^2.0.0\" } }, \"sha512-tE7ztYzXHIeyvc7N+hR3oi7FIbf/NIjVP9hmAt3yMXzrQ072/fpjGLx2GxNxGxUl5V73MEqYzioOMoVhGMJ5cA==\"],\n\n    \"dotenv\": [\"dotenv@16.4.5\", \"\", {}, \"sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==\"],\n\n    \"dotenv-expand\": [\"dotenv-expand@11.0.7\", \"\", { \"dependencies\": { \"dotenv\": \"^16.4.5\" } }, \"sha512-zIHwmZPRshsCdpMDyVsqGmgyP0yT8GAgXUnkdAoJisxvf33k7yO6OuoKmcTGuXPWSsm8Oh88nZicRLA9Y0rUeA==\"],\n\n    \"draco3d\": [\"draco3d@1.5.7\", \"\", {}, \"sha512-m6WCKt/erDXcw+70IJXnG7M3awwQPAsZvJGX5zY7beBqpELw6RDGkYVU0W43AFxye4pDZ5i2Lbyc/NNGqwjUVQ==\"],\n\n    \"drizzle-kit\": [\"drizzle-kit@0.28.1\", \"\", { \"dependencies\": { \"@drizzle-team/brocli\": \"^0.10.2\", \"@esbuild-kit/esm-loader\": \"^2.5.5\", \"esbuild\": \"^0.19.7\", \"esbuild-register\": \"^3.5.0\" }, \"bin\": { \"drizzle-kit\": \"bin.cjs\" } }, \"sha512-JimOV+ystXTWMgZkLHYHf2w3oS28hxiH1FR0dkmJLc7GHzdGJoJAQtQS5DRppnabsRZwE2U1F6CuezVBgmsBBQ==\"],\n\n    \"drizzle-orm\": [\"drizzle-orm@0.36.4\", \"\", { \"peerDependencies\": { \"@aws-sdk/client-rds-data\": \">=3\", \"@cloudflare/workers-types\": \">=3\", \"@electric-sql/pglite\": \">=0.2.0\", \"@libsql/client\": \">=0.10.0\", \"@libsql/client-wasm\": \">=0.10.0\", \"@neondatabase/serverless\": \">=0.10.0\", \"@op-engineering/op-sqlite\": \">=2\", \"@opentelemetry/api\": \"^1.4.1\", \"@planetscale/database\": \">=1\", \"@prisma/client\": \"*\", \"@tidbcloud/serverless\": \"*\", \"@types/better-sqlite3\": \"*\", \"@types/pg\": \"*\", \"@types/react\": \">=18\", \"@types/sql.js\": \"*\", \"@vercel/postgres\": \">=0.8.0\", \"@xata.io/client\": \"*\", \"better-sqlite3\": \">=7\", \"bun-types\": \"*\", \"expo-sqlite\": \">=14.0.0\", \"knex\": \"*\", \"kysely\": \"*\", \"mysql2\": \">=2\", \"pg\": \">=8\", \"postgres\": \">=3\", \"react\": \">=18\", \"sql.js\": \">=1\", \"sqlite3\": \">=5\" }, \"optionalPeers\": [\"@aws-sdk/client-rds-data\", \"@cloudflare/workers-types\", \"@electric-sql/pglite\", \"@libsql/client\", \"@libsql/client-wasm\", \"@neondatabase/serverless\", \"@op-engineering/op-sqlite\", \"@opentelemetry/api\", \"@planetscale/database\", \"@prisma/client\", \"@tidbcloud/serverless\", \"@types/better-sqlite3\", \"@types/pg\", \"@types/react\", \"@types/sql.js\", \"@vercel/postgres\", \"@xata.io/client\", \"better-sqlite3\", \"bun-types\", \"expo-sqlite\", \"knex\", \"kysely\", \"mysql2\", \"pg\", \"postgres\", \"react\", \"sql.js\", \"sqlite3\"] }, \"sha512-1OZY3PXD7BR00Gl61UUOFihslDldfH4NFRH2MbP54Yxi0G/PKn4HfO65JYZ7c16DeP3SpM3Aw+VXVG9j6CRSXA==\"],\n\n    \"dunder-proto\": [\"dunder-proto@1.0.1\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"gopd\": \"^1.2.0\" } }, \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\"],\n\n    \"duplexify\": [\"duplexify@4.1.3\", \"\", { \"dependencies\": { \"end-of-stream\": \"^1.4.1\", \"inherits\": \"^2.0.3\", \"readable-stream\": \"^3.1.1\", \"stream-shift\": \"^1.0.2\" } }, \"sha512-M3BmBhwJRZsSx38lZyhE53Csddgzl5R7xGJNk7CVddZD6CcmwMCH8J+7AprIrQKH7TonKxaCjcv27Qmf+sQ+oA==\"],\n\n    \"earcut\": [\"earcut@3.0.2\", \"\", {}, \"sha512-X7hshQbLyMJ/3RPhyObLARM2sNxxmRALLKx1+NVFFnQ9gKzmCrxm9+uLIAdBcvc8FNLpctqlQ2V6AE92Ol9UDQ==\"],\n\n    \"eastasianwidth\": [\"eastasianwidth@0.2.0\", \"\", {}, \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\"],\n\n    \"ecdsa-sig-formatter\": [\"ecdsa-sig-formatter@1.0.11\", \"\", { \"dependencies\": { \"safe-buffer\": \"^5.0.1\" } }, \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\"],\n\n    \"ee-first\": [\"ee-first@1.1.1\", \"\", {}, \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"],\n\n    \"ejs\": [\"ejs@3.1.10\", \"\", { \"dependencies\": { \"jake\": \"^10.8.5\" }, \"bin\": { \"ejs\": \"bin/cli.js\" } }, \"sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==\"],\n\n    \"electron-to-chromium\": [\"electron-to-chromium@1.5.200\", \"\", {}, \"sha512-rFCxROw7aOe4uPTfIAx+rXv9cEcGx+buAF4npnhtTqCJk5KDFRnh3+KYj7rdVh6lsFt5/aPs+Irj9rZ33WMA7w==\"],\n\n    \"emittery\": [\"emittery@0.13.1\", \"\", {}, \"sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==\"],\n\n    \"emoji-regex\": [\"emoji-regex@10.4.0\", \"\", {}, \"sha512-EC+0oUMY1Rqm4O6LLrgjtYDvcVYTy7chDnM4Q7030tP4Kwj3u/pR6gP9ygnp2CJMK5Gq+9Q2oqmrFJAz01DXjw==\"],\n\n    \"encodeurl\": [\"encodeurl@1.0.2\", \"\", {}, \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\"],\n\n    \"end-of-stream\": [\"end-of-stream@1.4.5\", \"\", { \"dependencies\": { \"once\": \"^1.4.0\" } }, \"sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==\"],\n\n    \"enquirer\": [\"enquirer@2.3.6\", \"\", { \"dependencies\": { \"ansi-colors\": \"^4.1.1\" } }, \"sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==\"],\n\n    \"entities\": [\"entities@6.0.1\", \"\", {}, \"sha512-aN97NXWF6AWBTahfVOIrB/NShkzi5H7F9r1s9mD3cDj4Ko5f2qhhVoYMibXF7GlLveb/D2ioWay8lxI97Ven3g==\"],\n\n    \"env-paths\": [\"env-paths@2.2.1\", \"\", {}, \"sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==\"],\n\n    \"environment\": [\"environment@1.1.0\", \"\", {}, \"sha512-xUtoPkMggbz0MPyPiIWr1Kp4aeWJjDZ6SMvURhimjdZgsRuDplF5/s9hcgGhyXMhs+6vpnuoiZ2kFiu3FMnS8Q==\"],\n\n    \"error-ex\": [\"error-ex@1.3.2\", \"\", { \"dependencies\": { \"is-arrayish\": \"^0.2.1\" } }, \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\"],\n\n    \"error-stack-parser\": [\"error-stack-parser@2.1.4\", \"\", { \"dependencies\": { \"stackframe\": \"^1.3.4\" } }, \"sha512-Sk5V6wVazPhq5MhpO+AUxJn5x7XSXGl1R93Vn7i+zS15KDVxQijejNCrz8340/2bgLBjR9GtEG8ZVKONDjcqGQ==\"],\n\n    \"es-abstract\": [\"es-abstract@1.24.0\", \"\", { \"dependencies\": { \"array-buffer-byte-length\": \"^1.0.2\", \"arraybuffer.prototype.slice\": \"^1.0.4\", \"available-typed-arrays\": \"^1.0.7\", \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"data-view-buffer\": \"^1.0.2\", \"data-view-byte-length\": \"^1.0.2\", \"data-view-byte-offset\": \"^1.0.1\", \"es-define-property\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.1.1\", \"es-set-tostringtag\": \"^2.1.0\", \"es-to-primitive\": \"^1.3.0\", \"function.prototype.name\": \"^1.1.8\", \"get-intrinsic\": \"^1.3.0\", \"get-proto\": \"^1.0.1\", \"get-symbol-description\": \"^1.1.0\", \"globalthis\": \"^1.0.4\", \"gopd\": \"^1.2.0\", \"has-property-descriptors\": \"^1.0.2\", \"has-proto\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"hasown\": \"^2.0.2\", \"internal-slot\": \"^1.1.0\", \"is-array-buffer\": \"^3.0.5\", \"is-callable\": \"^1.2.7\", \"is-data-view\": \"^1.0.2\", \"is-negative-zero\": \"^2.0.3\", \"is-regex\": \"^1.2.1\", \"is-set\": \"^2.0.3\", \"is-shared-array-buffer\": \"^1.0.4\", \"is-string\": \"^1.1.1\", \"is-typed-array\": \"^1.1.15\", \"is-weakref\": \"^1.1.1\", \"math-intrinsics\": \"^1.1.0\", \"object-inspect\": \"^1.13.4\", \"object-keys\": \"^1.1.1\", \"object.assign\": \"^4.1.7\", \"own-keys\": \"^1.0.1\", \"regexp.prototype.flags\": \"^1.5.4\", \"safe-array-concat\": \"^1.1.3\", \"safe-push-apply\": \"^1.0.0\", \"safe-regex-test\": \"^1.1.0\", \"set-proto\": \"^1.0.0\", \"stop-iteration-iterator\": \"^1.1.0\", \"string.prototype.trim\": \"^1.2.10\", \"string.prototype.trimend\": \"^1.0.9\", \"string.prototype.trimstart\": \"^1.0.8\", \"typed-array-buffer\": \"^1.0.3\", \"typed-array-byte-length\": \"^1.0.3\", \"typed-array-byte-offset\": \"^1.0.4\", \"typed-array-length\": \"^1.0.7\", \"unbox-primitive\": \"^1.1.0\", \"which-typed-array\": \"^1.1.19\" } }, \"sha512-WSzPgsdLtTcQwm4CROfS5ju2Wa1QQcVeT37jFjYzdFz1r9ahadC8B8/a4qxJxM+09F18iumCdRmlr96ZYkQvEg==\"],\n\n    \"es-define-property\": [\"es-define-property@1.0.1\", \"\", {}, \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\"],\n\n    \"es-errors\": [\"es-errors@1.3.0\", \"\", {}, \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\"],\n\n    \"es-iterator-helpers\": [\"es-iterator-helpers@1.2.1\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.6\", \"es-errors\": \"^1.3.0\", \"es-set-tostringtag\": \"^2.0.3\", \"function-bind\": \"^1.1.2\", \"get-intrinsic\": \"^1.2.6\", \"globalthis\": \"^1.0.4\", \"gopd\": \"^1.2.0\", \"has-property-descriptors\": \"^1.0.2\", \"has-proto\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"internal-slot\": \"^1.1.0\", \"iterator.prototype\": \"^1.1.4\", \"safe-array-concat\": \"^1.1.3\" } }, \"sha512-uDn+FE1yrDzyC0pCo961B2IHbdM8y/ACZsKD4dG6WqrjV53BADjwa7D+1aom2rsNVfLyDgU/eigvlJGJ08OQ4w==\"],\n\n    \"es-object-atoms\": [\"es-object-atoms@1.1.1\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\" } }, \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\"],\n\n    \"es-set-tostringtag\": [\"es-set-tostringtag@2.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.6\", \"has-tostringtag\": \"^1.0.2\", \"hasown\": \"^2.0.2\" } }, \"sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==\"],\n\n    \"es-shim-unscopables\": [\"es-shim-unscopables@1.1.0\", \"\", { \"dependencies\": { \"hasown\": \"^2.0.2\" } }, \"sha512-d9T8ucsEhh8Bi1woXCf+TIKDIROLG5WCkxg8geBCbvk22kzwC5G2OnXVMO6FUsvQlgUUXQ2itephWDLqDzbeCw==\"],\n\n    \"es-to-primitive\": [\"es-to-primitive@1.3.0\", \"\", { \"dependencies\": { \"is-callable\": \"^1.2.7\", \"is-date-object\": \"^1.0.5\", \"is-symbol\": \"^1.0.4\" } }, \"sha512-w+5mJ3GuFL+NjVtJlvydShqE1eN3h3PbI7/5LAsYJP/2qtuMXjfL2LpHSRqo4b4eSF5K/DH1JXKUAHSB2UW50g==\"],\n\n    \"esast-util-from-estree\": [\"esast-util-from-estree@2.0.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-visit\": \"^2.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\" } }, \"sha512-4CyanoAudUSBAn5K13H4JhsMH6L9ZP7XbLVe/dKybkxMO7eDyLsT8UHl9TRNrU2Gr9nz+FovfSIjuXWJ81uVwQ==\"],\n\n    \"esast-util-from-js\": [\"esast-util-from-js@2.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"acorn\": \"^8.0.0\", \"esast-util-from-estree\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-8Ja+rNJ0Lt56Pcf3TAmpBZjmx8ZcK5Ts4cAzIOjsjevg9oSXJnl6SUQ2EevU8tv3h6ZLWmoKL5H4fgWvdvfETw==\"],\n\n    \"esbuild\": [\"esbuild@0.19.12\", \"\", { \"optionalDependencies\": { \"@esbuild/aix-ppc64\": \"0.19.12\", \"@esbuild/android-arm\": \"0.19.12\", \"@esbuild/android-arm64\": \"0.19.12\", \"@esbuild/android-x64\": \"0.19.12\", \"@esbuild/darwin-arm64\": \"0.19.12\", \"@esbuild/darwin-x64\": \"0.19.12\", \"@esbuild/freebsd-arm64\": \"0.19.12\", \"@esbuild/freebsd-x64\": \"0.19.12\", \"@esbuild/linux-arm\": \"0.19.12\", \"@esbuild/linux-arm64\": \"0.19.12\", \"@esbuild/linux-ia32\": \"0.19.12\", \"@esbuild/linux-loong64\": \"0.19.12\", \"@esbuild/linux-mips64el\": \"0.19.12\", \"@esbuild/linux-ppc64\": \"0.19.12\", \"@esbuild/linux-riscv64\": \"0.19.12\", \"@esbuild/linux-s390x\": \"0.19.12\", \"@esbuild/linux-x64\": \"0.19.12\", \"@esbuild/netbsd-x64\": \"0.19.12\", \"@esbuild/openbsd-x64\": \"0.19.12\", \"@esbuild/sunos-x64\": \"0.19.12\", \"@esbuild/win32-arm64\": \"0.19.12\", \"@esbuild/win32-ia32\": \"0.19.12\", \"@esbuild/win32-x64\": \"0.19.12\" }, \"bin\": { \"esbuild\": \"bin/esbuild\" } }, \"sha512-aARqgq8roFBj054KvQr5f1sFu0D65G+miZRCuJyJ0G13Zwx7vRar5Zhn2tkQNzIXcBrNVsv/8stehpj+GAjgbg==\"],\n\n    \"esbuild-register\": [\"esbuild-register@3.6.0\", \"\", { \"dependencies\": { \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"esbuild\": \">=0.12 <1\" } }, \"sha512-H2/S7Pm8a9CL1uhp9OvjwrBh5Pvx0H8qVOxNu8Wed9Y7qv56MPtq+GGM8RJpq6glYJn9Wspr8uw7l55uyinNeg==\"],\n\n    \"escalade\": [\"escalade@3.2.0\", \"\", {}, \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\"],\n\n    \"escape-html\": [\"escape-html@1.0.3\", \"\", {}, \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"],\n\n    \"escape-string-regexp\": [\"escape-string-regexp@4.0.0\", \"\", {}, \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\"],\n\n    \"escodegen\": [\"escodegen@2.1.0\", \"\", { \"dependencies\": { \"esprima\": \"^4.0.1\", \"estraverse\": \"^5.2.0\", \"esutils\": \"^2.0.2\" }, \"optionalDependencies\": { \"source-map\": \"~0.6.1\" }, \"bin\": { \"esgenerate\": \"bin/esgenerate.js\", \"escodegen\": \"bin/escodegen.js\" } }, \"sha512-2NlIDTwUWJN0mRPQOdtQBzbUHvdGY2P1VXSyU83Q3xKxM7WHX2Ql8dKq782Q9TgQUNOLEzEYu9bzLNj1q88I5w==\"],\n\n    \"eslint\": [\"eslint@8.57.1\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.2.0\", \"@eslint-community/regexpp\": \"^4.6.1\", \"@eslint/eslintrc\": \"^2.1.4\", \"@eslint/js\": \"8.57.1\", \"@humanwhocodes/config-array\": \"^0.13.0\", \"@humanwhocodes/module-importer\": \"^1.0.1\", \"@nodelib/fs.walk\": \"^1.2.8\", \"@ungap/structured-clone\": \"^1.2.0\", \"ajv\": \"^6.12.4\", \"chalk\": \"^4.0.0\", \"cross-spawn\": \"^7.0.2\", \"debug\": \"^4.3.2\", \"doctrine\": \"^3.0.0\", \"escape-string-regexp\": \"^4.0.0\", \"eslint-scope\": \"^7.2.2\", \"eslint-visitor-keys\": \"^3.4.3\", \"espree\": \"^9.6.1\", \"esquery\": \"^1.4.2\", \"esutils\": \"^2.0.2\", \"fast-deep-equal\": \"^3.1.3\", \"file-entry-cache\": \"^6.0.1\", \"find-up\": \"^5.0.0\", \"glob-parent\": \"^6.0.2\", \"globals\": \"^13.19.0\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^5.2.0\", \"imurmurhash\": \"^0.1.4\", \"is-glob\": \"^4.0.0\", \"is-path-inside\": \"^3.0.3\", \"js-yaml\": \"^4.1.0\", \"json-stable-stringify-without-jsonify\": \"^1.0.1\", \"levn\": \"^0.4.1\", \"lodash.merge\": \"^4.6.2\", \"minimatch\": \"^3.1.2\", \"natural-compare\": \"^1.4.0\", \"optionator\": \"^0.9.3\", \"strip-ansi\": \"^6.0.1\", \"text-table\": \"^0.2.0\" }, \"bin\": { \"eslint\": \"bin/eslint.js\" } }, \"sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==\"],\n\n    \"eslint-config-next\": [\"eslint-config-next@14.2.11\", \"\", { \"dependencies\": { \"@next/eslint-plugin-next\": \"14.2.11\", \"@rushstack/eslint-patch\": \"^1.3.3\", \"@typescript-eslint/eslint-plugin\": \"^5.4.2 || ^6.0.0 || 7.0.0 - 7.2.0\", \"@typescript-eslint/parser\": \"^5.4.2 || ^6.0.0 || 7.0.0 - 7.2.0\", \"eslint-import-resolver-node\": \"^0.3.6\", \"eslint-import-resolver-typescript\": \"^3.5.2\", \"eslint-plugin-import\": \"^2.28.1\", \"eslint-plugin-jsx-a11y\": \"^6.7.1\", \"eslint-plugin-react\": \"^7.33.2\", \"eslint-plugin-react-hooks\": \"^4.5.0 || 5.0.0-canary-7118f5dd7-20230705\" }, \"peerDependencies\": { \"eslint\": \"^7.23.0 || ^8.0.0\", \"typescript\": \">=3.3.1\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-gGIoBoHCJuLn6vaV1Ke8UurVvgb7JjQv6oRlWmI6RAAxz7KwJOYxxm2blctavA0a3eofbE9TdgKvvTb2G55OHQ==\"],\n\n    \"eslint-config-prettier\": [\"eslint-config-prettier@9.1.2\", \"\", { \"peerDependencies\": { \"eslint\": \">=7.0.0\" }, \"bin\": { \"eslint-config-prettier\": \"bin/cli.js\" } }, \"sha512-iI1f+D2ViGn+uvv5HuHVUamg8ll4tN+JRHGc6IJi4TP9Kl976C57fzPXgseXNs8v0iA8aSJpHsTWjDb9QJamGQ==\"],\n\n    \"eslint-import-resolver-node\": [\"eslint-import-resolver-node@0.3.9\", \"\", { \"dependencies\": { \"debug\": \"^3.2.7\", \"is-core-module\": \"^2.13.0\", \"resolve\": \"^1.22.4\" } }, \"sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==\"],\n\n    \"eslint-import-resolver-typescript\": [\"eslint-import-resolver-typescript@3.10.1\", \"\", { \"dependencies\": { \"@nolyfill/is-core-module\": \"1.0.39\", \"debug\": \"^4.4.0\", \"get-tsconfig\": \"^4.10.0\", \"is-bun-module\": \"^2.0.0\", \"stable-hash\": \"^0.0.5\", \"tinyglobby\": \"^0.2.13\", \"unrs-resolver\": \"^1.6.2\" }, \"peerDependencies\": { \"eslint\": \"*\", \"eslint-plugin-import\": \"*\", \"eslint-plugin-import-x\": \"*\" }, \"optionalPeers\": [\"eslint-plugin-import\", \"eslint-plugin-import-x\"] }, \"sha512-A1rHYb06zjMGAxdLSkN2fXPBwuSaQ0iO5M/hdyS0Ajj1VBaRp0sPD3dn1FhME3c/JluGFbwSxyCfqdSbtQLAHQ==\"],\n\n    \"eslint-module-utils\": [\"eslint-module-utils@2.12.1\", \"\", { \"dependencies\": { \"debug\": \"^3.2.7\" } }, \"sha512-L8jSWTze7K2mTg0vos/RuLRS5soomksDPoJLXIslC7c8Wmut3bx7CPpJijDcBZtxQ5lrbUdM+s0OlNbz0DCDNw==\"],\n\n    \"eslint-plugin-import\": [\"eslint-plugin-import@2.32.0\", \"\", { \"dependencies\": { \"@rtsao/scc\": \"^1.1.0\", \"array-includes\": \"^3.1.9\", \"array.prototype.findlastindex\": \"^1.2.6\", \"array.prototype.flat\": \"^1.3.3\", \"array.prototype.flatmap\": \"^1.3.3\", \"debug\": \"^3.2.7\", \"doctrine\": \"^2.1.0\", \"eslint-import-resolver-node\": \"^0.3.9\", \"eslint-module-utils\": \"^2.12.1\", \"hasown\": \"^2.0.2\", \"is-core-module\": \"^2.16.1\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^3.1.2\", \"object.fromentries\": \"^2.0.8\", \"object.groupby\": \"^1.0.3\", \"object.values\": \"^1.2.1\", \"semver\": \"^6.3.1\", \"string.prototype.trimend\": \"^1.0.9\", \"tsconfig-paths\": \"^3.15.0\" }, \"peerDependencies\": { \"eslint\": \"^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8 || ^9\" } }, \"sha512-whOE1HFo/qJDyX4SnXzP4N6zOWn79WhnCUY/iDR0mPfQZO8wcYE4JClzI2oZrhBnnMUCBCHZhO6VQyoBU95mZA==\"],\n\n    \"eslint-plugin-jsx-a11y\": [\"eslint-plugin-jsx-a11y@6.10.2\", \"\", { \"dependencies\": { \"aria-query\": \"^5.3.2\", \"array-includes\": \"^3.1.8\", \"array.prototype.flatmap\": \"^1.3.2\", \"ast-types-flow\": \"^0.0.8\", \"axe-core\": \"^4.10.0\", \"axobject-query\": \"^4.1.0\", \"damerau-levenshtein\": \"^1.0.8\", \"emoji-regex\": \"^9.2.2\", \"hasown\": \"^2.0.2\", \"jsx-ast-utils\": \"^3.3.5\", \"language-tags\": \"^1.0.9\", \"minimatch\": \"^3.1.2\", \"object.fromentries\": \"^2.0.8\", \"safe-regex-test\": \"^1.0.3\", \"string.prototype.includes\": \"^2.0.1\" }, \"peerDependencies\": { \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9\" } }, \"sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==\"],\n\n    \"eslint-plugin-prettier\": [\"eslint-plugin-prettier@5.5.4\", \"\", { \"dependencies\": { \"prettier-linter-helpers\": \"^1.0.0\", \"synckit\": \"^0.11.7\" }, \"peerDependencies\": { \"@types/eslint\": \">=8.0.0\", \"eslint\": \">=8.0.0\", \"eslint-config-prettier\": \">= 7.0.0 <10.0.0 || >=10.1.0\", \"prettier\": \">=3.0.0\" }, \"optionalPeers\": [\"@types/eslint\", \"eslint-config-prettier\"] }, \"sha512-swNtI95SToIz05YINMA6Ox5R057IMAmWZ26GqPxusAp1TZzj+IdY9tXNWWD3vkF/wEqydCONcwjTFpxybBqZsg==\"],\n\n    \"eslint-plugin-react\": [\"eslint-plugin-react@7.37.5\", \"\", { \"dependencies\": { \"array-includes\": \"^3.1.8\", \"array.prototype.findlast\": \"^1.2.5\", \"array.prototype.flatmap\": \"^1.3.3\", \"array.prototype.tosorted\": \"^1.1.4\", \"doctrine\": \"^2.1.0\", \"es-iterator-helpers\": \"^1.2.1\", \"estraverse\": \"^5.3.0\", \"hasown\": \"^2.0.2\", \"jsx-ast-utils\": \"^2.4.1 || ^3.0.0\", \"minimatch\": \"^3.1.2\", \"object.entries\": \"^1.1.9\", \"object.fromentries\": \"^2.0.8\", \"object.values\": \"^1.2.1\", \"prop-types\": \"^15.8.1\", \"resolve\": \"^2.0.0-next.5\", \"semver\": \"^6.3.1\", \"string.prototype.matchall\": \"^4.0.12\", \"string.prototype.repeat\": \"^1.0.0\" }, \"peerDependencies\": { \"eslint\": \"^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\" } }, \"sha512-Qteup0SqU15kdocexFNAJMvCJEfa2xUKNV4CC1xsVMrIIqEy3SQ/rqyxCWNzfrd3/ldy6HMlD2e0JDVpDg2qIA==\"],\n\n    \"eslint-plugin-react-hooks\": [\"eslint-plugin-react-hooks@4.6.2\", \"\", { \"peerDependencies\": { \"eslint\": \"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\" } }, \"sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==\"],\n\n    \"eslint-plugin-tailwindcss\": [\"eslint-plugin-tailwindcss@3.18.2\", \"\", { \"dependencies\": { \"fast-glob\": \"^3.2.5\", \"postcss\": \"^8.4.4\" }, \"peerDependencies\": { \"tailwindcss\": \"^3.4.0\" } }, \"sha512-QbkMLDC/OkkjFQ1iz/5jkMdHfiMu/uwujUHLAJK5iwNHD8RTxVTlsUezE0toTZ6VhybNBsk+gYGPDq2agfeRNA==\"],\n\n    \"eslint-plugin-unused-imports\": [\"eslint-plugin-unused-imports@4.1.4\", \"\", { \"peerDependencies\": { \"@typescript-eslint/eslint-plugin\": \"^8.0.0-0 || ^7.0.0 || ^6.0.0 || ^5.0.0\", \"eslint\": \"^9.0.0 || ^8.0.0\" }, \"optionalPeers\": [\"@typescript-eslint/eslint-plugin\"] }, \"sha512-YptD6IzQjDardkl0POxnnRBhU1OEePMV0nd6siHaRBbd+lyh6NAhFEobiznKU7kTsSsDeSD62Pe7kAM1b7dAZQ==\"],\n\n    \"eslint-scope\": [\"eslint-scope@7.2.2\", \"\", { \"dependencies\": { \"esrecurse\": \"^4.3.0\", \"estraverse\": \"^5.2.0\" } }, \"sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==\"],\n\n    \"eslint-visitor-keys\": [\"eslint-visitor-keys@3.4.3\", \"\", {}, \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\"],\n\n    \"espree\": [\"espree@9.6.1\", \"\", { \"dependencies\": { \"acorn\": \"^8.9.0\", \"acorn-jsx\": \"^5.3.2\", \"eslint-visitor-keys\": \"^3.4.1\" } }, \"sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==\"],\n\n    \"esprima\": [\"esprima@4.0.1\", \"\", { \"bin\": { \"esparse\": \"./bin/esparse.js\", \"esvalidate\": \"./bin/esvalidate.js\" } }, \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\"],\n\n    \"esquery\": [\"esquery@1.6.0\", \"\", { \"dependencies\": { \"estraverse\": \"^5.1.0\" } }, \"sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==\"],\n\n    \"esrecurse\": [\"esrecurse@4.3.0\", \"\", { \"dependencies\": { \"estraverse\": \"^5.2.0\" } }, \"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==\"],\n\n    \"estraverse\": [\"estraverse@5.3.0\", \"\", {}, \"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==\"],\n\n    \"estree-util-attach-comments\": [\"estree-util-attach-comments@3.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\" } }, \"sha512-cKUwm/HUcTDsYh/9FgnuFqpfquUbwIqwKM26BVCGDPVgvaCl/nDCCjUfiLlx6lsEZ3Z4RFxNbOQ60pkaEwFxGw==\"],\n\n    \"estree-util-build-jsx\": [\"estree-util-build-jsx@3.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"estree-walker\": \"^3.0.0\" } }, \"sha512-8U5eiL6BTrPxp/CHbs2yMgP8ftMhR5ww1eIKoWRMlqvltHF8fZn5LRDvTKuxD3DUn+shRbLGqXemcP51oFCsGQ==\"],\n\n    \"estree-util-is-identifier-name\": [\"estree-util-is-identifier-name@3.0.0\", \"\", {}, \"sha512-hFtqIDZTIUZ9BXLb8y4pYGyk6+wekIivNVTcmvk8NoOh+VeRn5y6cEHzbURrWbfp1fIqdVipilzj+lfaadNZmg==\"],\n\n    \"estree-util-scope\": [\"estree-util-scope@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\" } }, \"sha512-2CAASclonf+JFWBNJPndcOpA8EMJwa0Q8LUFJEKqXLW6+qBvbFZuF5gItbQOs/umBUkjviCSDCbBwU2cXbmrhQ==\"],\n\n    \"estree-util-to-js\": [\"estree-util-to-js@2.0.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"astring\": \"^1.8.0\", \"source-map\": \"^0.7.0\" } }, \"sha512-WDF+xj5rRWmD5tj6bIqRi6CkLIXbbNQUcxQHzGysQzvHmdYG2G7p/Tf0J0gpxGgkeMZNTIjT/AoSvC9Xehcgdg==\"],\n\n    \"estree-util-value-to-estree\": [\"estree-util-value-to-estree@1.3.0\", \"\", { \"dependencies\": { \"is-plain-obj\": \"^3.0.0\" } }, \"sha512-Y+ughcF9jSUJvncXwqRageavjrNPAI+1M/L3BI3PyLp1nmgYTGUXU6t5z1Y7OWuThoDdhPME07bQU+d5LxdJqw==\"],\n\n    \"estree-util-visit\": [\"estree-util-visit@2.0.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^3.0.0\" } }, \"sha512-m5KgiH85xAhhW8Wta0vShLcUvOsh3LLPI2YVwcbio1l7E09NTLL1EyMZFM1OyWowoH0skScNbhOPl4kcBgzTww==\"],\n\n    \"estree-walker\": [\"estree-walker@3.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\" } }, \"sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==\"],\n\n    \"esutils\": [\"esutils@2.0.3\", \"\", {}, \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\"],\n\n    \"etag\": [\"etag@1.8.1\", \"\", {}, \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\"],\n\n    \"event-target-shim\": [\"event-target-shim@5.0.1\", \"\", {}, \"sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==\"],\n\n    \"eventemitter3\": [\"eventemitter3@5.0.1\", \"\", {}, \"sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==\"],\n\n    \"events\": [\"events@3.3.0\", \"\", {}, \"sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==\"],\n\n    \"eventsource-parser\": [\"eventsource-parser@3.0.3\", \"\", {}, \"sha512-nVpZkTMM9rF6AQ9gPJpFsNAMt48wIzB5TQgiTLdHiuO8XEDhUgZEhqKlZWXbIzo9VmJ/HvysHqEaVeD5v9TPvA==\"],\n\n    \"execa\": [\"execa@7.2.0\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.3\", \"get-stream\": \"^6.0.1\", \"human-signals\": \"^4.3.0\", \"is-stream\": \"^3.0.0\", \"merge-stream\": \"^2.0.0\", \"npm-run-path\": \"^5.1.0\", \"onetime\": \"^6.0.0\", \"signal-exit\": \"^3.0.7\", \"strip-final-newline\": \"^3.0.0\" } }, \"sha512-UduyVP7TLB5IcAQl+OzLyLcS/l32W/GLg+AhHJ+ow40FOk2U3SAllPwR44v4vmdFwIWqpdwxxpQbF1n5ta9seA==\"],\n\n    \"exit\": [\"exit@0.1.2\", \"\", {}, \"sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==\"],\n\n    \"expect\": [\"expect@29.7.0\", \"\", { \"dependencies\": { \"@jest/expect-utils\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"jest-matcher-utils\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\" } }, \"sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==\"],\n\n    \"exponential-backoff\": [\"exponential-backoff@3.1.2\", \"\", {}, \"sha512-8QxYTVXUkuy7fIIoitQkPwGonB8F3Zj8eEO8Sqg9Zv/bkI7RJAzowee4gr81Hak/dUTpA2Z7VfQgoijjPNlUZA==\"],\n\n    \"express\": [\"express@4.19.2\", \"\", { \"dependencies\": { \"accepts\": \"~1.3.8\", \"array-flatten\": \"1.1.1\", \"body-parser\": \"1.20.2\", \"content-disposition\": \"0.5.4\", \"content-type\": \"~1.0.4\", \"cookie\": \"0.6.0\", \"cookie-signature\": \"1.0.6\", \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"etag\": \"~1.8.1\", \"finalhandler\": \"1.2.0\", \"fresh\": \"0.5.2\", \"http-errors\": \"2.0.0\", \"merge-descriptors\": \"1.0.1\", \"methods\": \"~1.1.2\", \"on-finished\": \"2.4.1\", \"parseurl\": \"~1.3.3\", \"path-to-regexp\": \"0.1.7\", \"proxy-addr\": \"~2.0.7\", \"qs\": \"6.11.0\", \"range-parser\": \"~1.2.1\", \"safe-buffer\": \"5.2.1\", \"send\": \"0.18.0\", \"serve-static\": \"1.15.0\", \"setprototypeof\": \"1.2.0\", \"statuses\": \"2.0.1\", \"type-is\": \"~1.6.18\", \"utils-merge\": \"1.0.1\", \"vary\": \"~1.1.2\" } }, \"sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==\"],\n\n    \"exsolve\": [\"exsolve@1.0.7\", \"\", {}, \"sha512-VO5fQUzZtI6C+vx4w/4BWJpg3s/5l+6pRQEHzFRM8WFi4XffSP1Z+4qi7GbjWbvRQEbdIco5mIMq+zX4rPuLrw==\"],\n\n    \"extend\": [\"extend@3.0.2\", \"\", {}, \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\"],\n\n    \"extend-shallow\": [\"extend-shallow@2.0.1\", \"\", { \"dependencies\": { \"is-extendable\": \"^0.1.0\" } }, \"sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==\"],\n\n    \"extract-zip\": [\"extract-zip@2.0.1\", \"\", { \"dependencies\": { \"debug\": \"^4.1.1\", \"get-stream\": \"^5.1.0\", \"yauzl\": \"^2.10.0\" }, \"optionalDependencies\": { \"@types/yauzl\": \"^2.9.1\" }, \"bin\": { \"extract-zip\": \"cli.js\" } }, \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg==\"],\n\n    \"fast-deep-equal\": [\"fast-deep-equal@3.1.3\", \"\", {}, \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\"],\n\n    \"fast-diff\": [\"fast-diff@1.3.0\", \"\", {}, \"sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==\"],\n\n    \"fast-fifo\": [\"fast-fifo@1.3.2\", \"\", {}, \"sha512-/d9sfos4yxzpwkDkuN7k2SqFKtYNmCTzgfEpz82x34IM9/zc8KGxQoXg1liNC/izpRM/MBdt44Nmx41ZWqk+FQ==\"],\n\n    \"fast-glob\": [\"fast-glob@3.3.3\", \"\", { \"dependencies\": { \"@nodelib/fs.stat\": \"^2.0.2\", \"@nodelib/fs.walk\": \"^1.2.3\", \"glob-parent\": \"^5.1.2\", \"merge2\": \"^1.3.0\", \"micromatch\": \"^4.0.8\" } }, \"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\"],\n\n    \"fast-json-stable-stringify\": [\"fast-json-stable-stringify@2.1.0\", \"\", {}, \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\"],\n\n    \"fast-levenshtein\": [\"fast-levenshtein@2.0.6\", \"\", {}, \"sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==\"],\n\n    \"fast-redact\": [\"fast-redact@3.5.0\", \"\", {}, \"sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==\"],\n\n    \"fast-uri\": [\"fast-uri@3.0.6\", \"\", {}, \"sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==\"],\n\n    \"fastq\": [\"fastq@1.19.1\", \"\", { \"dependencies\": { \"reusify\": \"^1.0.4\" } }, \"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\"],\n\n    \"fault\": [\"fault@2.0.1\", \"\", { \"dependencies\": { \"format\": \"^0.2.0\" } }, \"sha512-WtySTkS4OKev5JtpHXnib4Gxiurzh5NCGvWrFaZ34m6JehfTUhKZvn9njTfw48t6JumVQOmrKqpmGcdwxnhqBQ==\"],\n\n    \"fb-watchman\": [\"fb-watchman@2.0.2\", \"\", { \"dependencies\": { \"bser\": \"2.1.1\" } }, \"sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==\"],\n\n    \"fd-slicer\": [\"fd-slicer@1.1.0\", \"\", { \"dependencies\": { \"pend\": \"~1.2.0\" } }, \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g==\"],\n\n    \"fdir\": [\"fdir@6.4.6\", \"\", { \"peerDependencies\": { \"picomatch\": \"^3 || ^4\" }, \"optionalPeers\": [\"picomatch\"] }, \"sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==\"],\n\n    \"fetch-blob\": [\"fetch-blob@3.2.0\", \"\", { \"dependencies\": { \"node-domexception\": \"^1.0.0\", \"web-streams-polyfill\": \"^3.0.3\" } }, \"sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==\"],\n\n    \"fflate\": [\"fflate@0.4.8\", \"\", {}, \"sha512-FJqqoDBR00Mdj9ppamLa/Y7vxm+PRmNWA67N846RvsoYVMKB4q3y/de5PA7gUmRMYK/8CMz2GDZQmCRN1wBcWA==\"],\n\n    \"figures\": [\"figures@3.2.0\", \"\", { \"dependencies\": { \"escape-string-regexp\": \"^1.0.5\" } }, \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\"],\n\n    \"file-entry-cache\": [\"file-entry-cache@6.0.1\", \"\", { \"dependencies\": { \"flat-cache\": \"^3.0.4\" } }, \"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==\"],\n\n    \"filelist\": [\"filelist@1.0.4\", \"\", { \"dependencies\": { \"minimatch\": \"^5.0.1\" } }, \"sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==\"],\n\n    \"fill-range\": [\"fill-range@7.1.1\", \"\", { \"dependencies\": { \"to-regex-range\": \"^5.0.1\" } }, \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\"],\n\n    \"finalhandler\": [\"finalhandler@1.2.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"on-finished\": \"2.4.1\", \"parseurl\": \"~1.3.3\", \"statuses\": \"2.0.1\", \"unpipe\": \"~1.0.0\" } }, \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\"],\n\n    \"find-up\": [\"find-up@5.0.0\", \"\", { \"dependencies\": { \"locate-path\": \"^6.0.0\", \"path-exists\": \"^4.0.0\" } }, \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\"],\n\n    \"flat\": [\"flat@5.0.2\", \"\", { \"bin\": { \"flat\": \"cli.js\" } }, \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\"],\n\n    \"flat-cache\": [\"flat-cache@3.2.0\", \"\", { \"dependencies\": { \"flatted\": \"^3.2.9\", \"keyv\": \"^4.5.3\", \"rimraf\": \"^3.0.2\" } }, \"sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==\"],\n\n    \"flatted\": [\"flatted@3.3.3\", \"\", {}, \"sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==\"],\n\n    \"flow-enums-runtime\": [\"flow-enums-runtime@0.0.6\", \"\", {}, \"sha512-3PYnM29RFXwvAN6Pc/scUfkI7RwhQ/xqyLUyPNlXUp9S40zI8nup9tUSrTLSVnWGBN38FNiGWbwZOB6uR4OGdw==\"],\n\n    \"follow-redirects\": [\"follow-redirects@1.15.11\", \"\", {}, \"sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==\"],\n\n    \"for-each\": [\"for-each@0.3.5\", \"\", { \"dependencies\": { \"is-callable\": \"^1.2.7\" } }, \"sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==\"],\n\n    \"foreground-child\": [\"foreground-child@3.3.1\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.6\", \"signal-exit\": \"^4.0.1\" } }, \"sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==\"],\n\n    \"form-data\": [\"form-data@4.0.4\", \"\", { \"dependencies\": { \"asynckit\": \"^0.4.0\", \"combined-stream\": \"^1.0.8\", \"es-set-tostringtag\": \"^2.1.0\", \"hasown\": \"^2.0.2\", \"mime-types\": \"^2.1.12\" } }, \"sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==\"],\n\n    \"form-data-encoder\": [\"form-data-encoder@1.7.2\", \"\", {}, \"sha512-qfqtYan3rxrnCk1VYaA4H+Ms9xdpPqvLZa6xmMgFvhO32x7/3J/ExcTd6qpxM0vH2GdMI+poehyBZvqfMTto8A==\"],\n\n    \"format\": [\"format@0.2.2\", \"\", {}, \"sha512-wzsgA6WOq+09wrU1tsJ09udeR/YZRaeArL9e1wPbFg3GG2yDnC2ldKpxs4xunpFF9DgqCqOIra3bc1HWrJ37Ww==\"],\n\n    \"formdata-node\": [\"formdata-node@4.4.1\", \"\", { \"dependencies\": { \"node-domexception\": \"1.0.0\", \"web-streams-polyfill\": \"4.0.0-beta.3\" } }, \"sha512-0iirZp3uVDjVGt9p49aTaqjk84TrglENEDuqfdlZQ1roC9CWlPk6Avf8EEnZNcAqPonwkG35x4n3ww/1THYAeQ==\"],\n\n    \"formdata-polyfill\": [\"formdata-polyfill@4.0.10\", \"\", { \"dependencies\": { \"fetch-blob\": \"^3.1.2\" } }, \"sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==\"],\n\n    \"forwarded\": [\"forwarded@0.2.0\", \"\", {}, \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\"],\n\n    \"fraction.js\": [\"fraction.js@4.3.7\", \"\", {}, \"sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==\"],\n\n    \"frame-ticker\": [\"frame-ticker@1.0.3\", \"\", { \"dependencies\": { \"simplesignal\": \"^2.1.6\" } }, \"sha512-E0X2u2JIvbEMrqEg5+4BpTqaD22OwojJI63K7MdKHdncjtAhGRbCR8nJCr2vwEt9NWBPCPcu70X9smPviEBy8Q==\"],\n\n    \"framer-motion\": [\"framer-motion@11.18.2\", \"\", { \"dependencies\": { \"motion-dom\": \"^11.18.1\", \"motion-utils\": \"^11.18.1\", \"tslib\": \"^2.4.0\" }, \"peerDependencies\": { \"@emotion/is-prop-valid\": \"*\", \"react\": \"^18.0.0 || ^19.0.0\", \"react-dom\": \"^18.0.0 || ^19.0.0\" }, \"optionalPeers\": [\"@emotion/is-prop-valid\", \"react\", \"react-dom\"] }, \"sha512-5F5Och7wrvtLVElIpclDT0CBzMVg3dL22B64aZwHtsIY8RB4mXICLrkajK4G9R+ieSAGcgrLeae2SeUTg2pr6w==\"],\n\n    \"fresh\": [\"fresh@0.5.2\", \"\", {}, \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\"],\n\n    \"front-matter\": [\"front-matter@4.0.2\", \"\", { \"dependencies\": { \"js-yaml\": \"^3.13.1\" } }, \"sha512-I8ZuJ/qG92NWX8i5x1Y8qyj3vizhXS31OxjKDu3LKP+7/qBgfIKValiZIEwoVoJKUHlhWtYrktkxV1XsX+pPlg==\"],\n\n    \"fs-constants\": [\"fs-constants@1.0.0\", \"\", {}, \"sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==\"],\n\n    \"fs-extra\": [\"fs-extra@11.3.1\", \"\", { \"dependencies\": { \"graceful-fs\": \"^4.2.0\", \"jsonfile\": \"^6.0.1\", \"universalify\": \"^2.0.0\" } }, \"sha512-eXvGGwZ5CL17ZSwHWd3bbgk7UUpF6IFHtP57NYYakPvHOs8GDgDe5KJI36jIJzDkJ6eJjuzRA8eBQb6SkKue0g==\"],\n\n    \"fs-monkey\": [\"fs-monkey@1.1.0\", \"\", {}, \"sha512-QMUezzXWII9EV5aTFXW1UBVUO77wYPpjqIF8/AviUCThNeSYZykpoTixUeaNNBwmCev0AMDWMAni+f8Hxb1IFw==\"],\n\n    \"fs.realpath\": [\"fs.realpath@1.0.0\", \"\", {}, \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\"],\n\n    \"fsevents\": [\"fsevents@2.3.3\", \"\", { \"os\": \"darwin\" }, \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\"],\n\n    \"function-bind\": [\"function-bind@1.1.2\", \"\", {}, \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\"],\n\n    \"function.prototype.name\": [\"function.prototype.name@1.1.8\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"functions-have-names\": \"^1.2.3\", \"hasown\": \"^2.0.2\", \"is-callable\": \"^1.2.7\" } }, \"sha512-e5iwyodOHhbMr/yNrc7fDYG4qlbIvI5gajyzPnb5TCwyhjApznQh1BMFou9b30SevY43gCJKXycoCBjMbsuW0Q==\"],\n\n    \"functions-have-names\": [\"functions-have-names@1.2.3\", \"\", {}, \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\"],\n\n    \"gaxios\": [\"gaxios@6.7.1\", \"\", { \"dependencies\": { \"extend\": \"^3.0.2\", \"https-proxy-agent\": \"^7.0.1\", \"is-stream\": \"^2.0.0\", \"node-fetch\": \"^2.6.9\", \"uuid\": \"^9.0.1\" } }, \"sha512-LDODD4TMYx7XXdpwxAVRAIAuB0bzv0s+ywFonY46k126qzQHT9ygyoa9tncmOiQmmDrik65UYsEkv3lbfqQ3yQ==\"],\n\n    \"gcp-metadata\": [\"gcp-metadata@6.1.1\", \"\", { \"dependencies\": { \"gaxios\": \"^6.1.1\", \"google-logging-utils\": \"^0.0.2\", \"json-bigint\": \"^1.0.0\" } }, \"sha512-a4tiq7E0/5fTjxPAaH4jpjkSv/uCaU2p5KC6HVGrvl0cDjA8iBZv4vv1gyzlmK0ZUKqwpOyQMKzZQe3lTit77A==\"],\n\n    \"gensync\": [\"gensync@1.0.0-beta.2\", \"\", {}, \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\"],\n\n    \"get-caller-file\": [\"get-caller-file@2.0.5\", \"\", {}, \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\"],\n\n    \"get-east-asian-width\": [\"get-east-asian-width@1.3.0\", \"\", {}, \"sha512-vpeMIQKxczTD/0s2CdEWHcb0eeJe6TFjxb+J5xgX7hScxqrGuyjmv4c1D4A/gelKfyox0gJJwIHF+fLjeaM8kQ==\"],\n\n    \"get-intrinsic\": [\"get-intrinsic@1.3.0\", \"\", { \"dependencies\": { \"call-bind-apply-helpers\": \"^1.0.2\", \"es-define-property\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.1.1\", \"function-bind\": \"^1.1.2\", \"get-proto\": \"^1.0.1\", \"gopd\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"hasown\": \"^2.0.2\", \"math-intrinsics\": \"^1.1.0\" } }, \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\"],\n\n    \"get-nonce\": [\"get-nonce@1.0.1\", \"\", {}, \"sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==\"],\n\n    \"get-package-type\": [\"get-package-type@0.1.0\", \"\", {}, \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\"],\n\n    \"get-proto\": [\"get-proto@1.0.1\", \"\", { \"dependencies\": { \"dunder-proto\": \"^1.0.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\"],\n\n    \"get-stream\": [\"get-stream@6.0.1\", \"\", {}, \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\"],\n\n    \"get-symbol-description\": [\"get-symbol-description@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.6\" } }, \"sha512-w9UMqWwJxHNOvoNzSJ2oPF5wvYcvP7jUvYzhp67yEhTi17ZDBBC1z9pTdGuzjD+EFIqLSYRweZjqfiPzQ06Ebg==\"],\n\n    \"get-tsconfig\": [\"get-tsconfig@4.10.1\", \"\", { \"dependencies\": { \"resolve-pkg-maps\": \"^1.0.0\" } }, \"sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==\"],\n\n    \"get-uri\": [\"get-uri@6.0.5\", \"\", { \"dependencies\": { \"basic-ftp\": \"^5.0.2\", \"data-uri-to-buffer\": \"^6.0.2\", \"debug\": \"^4.3.4\" } }, \"sha512-b1O07XYq8eRuVzBNgJLstU6FYc1tS6wnMtF1I1D9lE8LxZSOGZ7LhxN54yPP6mGw5f2CkXY2BQUL9Fx41qvcIg==\"],\n\n    \"git-raw-commits\": [\"git-raw-commits@4.0.0\", \"\", { \"dependencies\": { \"dargs\": \"^8.0.0\", \"meow\": \"^12.0.1\", \"split2\": \"^4.0.0\" }, \"bin\": { \"git-raw-commits\": \"cli.mjs\" } }, \"sha512-ICsMM1Wk8xSGMowkOmPrzo2Fgmfo4bMHLNX6ytHjajRJUqvHOw/TFapQ+QG75c3X/tTDDhOSRPGC52dDbNM8FQ==\"],\n\n    \"git-up\": [\"git-up@8.1.1\", \"\", { \"dependencies\": { \"is-ssh\": \"^1.4.0\", \"parse-url\": \"^9.2.0\" } }, \"sha512-FDenSF3fVqBYSaJoYy1KSc2wosx0gCvKP+c+PRBht7cAaiCeQlBtfBDX9vgnNOHmdePlSFITVcn4pFfcgNvx3g==\"],\n\n    \"git-url-parse\": [\"git-url-parse@16.1.0\", \"\", { \"dependencies\": { \"git-up\": \"^8.1.0\" } }, \"sha512-cPLz4HuK86wClEW7iDdeAKcCVlWXmrLpb2L+G9goW0Z1dtpNS6BXXSOckUTlJT/LDQViE1QZKstNORzHsLnobw==\"],\n\n    \"glob\": [\"glob@10.3.10\", \"\", { \"dependencies\": { \"foreground-child\": \"^3.1.0\", \"jackspeak\": \"^2.3.5\", \"minimatch\": \"^9.0.1\", \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\", \"path-scurry\": \"^1.10.1\" }, \"bin\": { \"glob\": \"dist/esm/bin.mjs\" } }, \"sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==\"],\n\n    \"glob-parent\": [\"glob-parent@6.0.2\", \"\", { \"dependencies\": { \"is-glob\": \"^4.0.3\" } }, \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\"],\n\n    \"global-directory\": [\"global-directory@4.0.1\", \"\", { \"dependencies\": { \"ini\": \"4.1.1\" } }, \"sha512-wHTUcDUoZ1H5/0iVqEudYW4/kAlN5cZ3j/bXn0Dpbizl9iaUVeWSHqiOjsgk6OW2bkLclbBjzewBz6weQ1zA2Q==\"],\n\n    \"globals\": [\"globals@13.24.0\", \"\", { \"dependencies\": { \"type-fest\": \"^0.20.2\" } }, \"sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==\"],\n\n    \"globalthis\": [\"globalthis@1.0.4\", \"\", { \"dependencies\": { \"define-properties\": \"^1.2.1\", \"gopd\": \"^1.0.1\" } }, \"sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==\"],\n\n    \"globby\": [\"globby@11.1.0\", \"\", { \"dependencies\": { \"array-union\": \"^2.1.0\", \"dir-glob\": \"^3.0.1\", \"fast-glob\": \"^3.2.9\", \"ignore\": \"^5.2.0\", \"merge2\": \"^1.4.1\", \"slash\": \"^3.0.0\" } }, \"sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==\"],\n\n    \"glsl-noise\": [\"glsl-noise@0.0.0\", \"\", {}, \"sha512-b/ZCF6amfAUb7dJM/MxRs7AetQEahYzJ8PtgfrmEdtw6uyGOr+ZSGtgjFm6mfsBkxJ4d2W7kg+Nlqzqvn3Bc0w==\"],\n\n    \"google-auth-library\": [\"google-auth-library@9.15.1\", \"\", { \"dependencies\": { \"base64-js\": \"^1.3.0\", \"ecdsa-sig-formatter\": \"^1.0.11\", \"gaxios\": \"^6.1.1\", \"gcp-metadata\": \"^6.1.0\", \"gtoken\": \"^7.0.0\", \"jws\": \"^4.0.0\" } }, \"sha512-Jb6Z0+nvECVz+2lzSMt9u98UsoakXxA2HGHMCxh+so3n90XgYWkq5dur19JAJV7ONiJY22yBTyJB1TSkvPq9Ng==\"],\n\n    \"google-logging-utils\": [\"google-logging-utils@0.0.2\", \"\", {}, \"sha512-NEgUnEcBiP5HrPzufUkBzJOD/Sxsco3rLNo1F1TNf7ieU8ryUzBhqba8r756CjLX7rn3fHl6iLEwPYuqpoKgQQ==\"],\n\n    \"gopd\": [\"gopd@1.2.0\", \"\", {}, \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\"],\n\n    \"gpt-tokenizer\": [\"gpt-tokenizer@2.8.1\", \"\", {}, \"sha512-8+a9ojzqfgiF3TK4oivGYjlycD8g5igLt8NQw3ndOIgLVKSGJDhUDNAfYSbtyyuTkha3R/R9F8XrwC7/B5TKfQ==\"],\n\n    \"graceful-fs\": [\"graceful-fs@4.2.11\", \"\", {}, \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\"],\n\n    \"gradient-string\": [\"gradient-string@2.0.2\", \"\", { \"dependencies\": { \"chalk\": \"^4.1.2\", \"tinygradient\": \"^1.1.5\" } }, \"sha512-rEDCuqUQ4tbD78TpzsMtt5OIf0cBCSDWSJtUDaF6JsAh+k0v9r++NzxNEG87oDZx9ZwGhD8DaezR2L/yrw0Jdw==\"],\n\n    \"graphemer\": [\"graphemer@1.4.0\", \"\", {}, \"sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==\"],\n\n    \"gray-matter\": [\"gray-matter@4.0.3\", \"\", { \"dependencies\": { \"js-yaml\": \"^3.13.1\", \"kind-of\": \"^6.0.2\", \"section-matter\": \"^1.0.0\", \"strip-bom-string\": \"^1.0.0\" } }, \"sha512-5v6yZd4JK3eMI3FqqCouswVqwugaA9r4dNZB1wwcmrD02QkV5H0y7XBQW8QwQqEaZY1pM9aqORSORhJRdNK44Q==\"],\n\n    \"gtoken\": [\"gtoken@7.1.0\", \"\", { \"dependencies\": { \"gaxios\": \"^6.0.0\", \"jws\": \"^4.0.0\" } }, \"sha512-pCcEwRi+TKpMlxAQObHDQ56KawURgyAf6jtIY046fJ5tIv3zDe/LEIubckAO8fj6JnAxLdmWkUfNyulQ2iKdEw==\"],\n\n    \"h3-js\": [\"h3-js@4.2.1\", \"\", {}, \"sha512-HYiUrq5qTRFqMuQu3jEHqxXLk1zsSJiby9Lja/k42wHjabZG7tN9rOuzT/PEFf+Wa7rsnHLMHRWIu0mgcJ0ewQ==\"],\n\n    \"hachure-fill\": [\"hachure-fill@0.5.2\", \"\", {}, \"sha512-3GKBOn+m2LX9iq+JC1064cSFprJY4jL1jCXTcpnfER5HYE2l/4EfWSGzkPa/ZDBmYI0ZOEj5VHV/eKnPGkHuOg==\"],\n\n    \"has-bigints\": [\"has-bigints@1.1.0\", \"\", {}, \"sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==\"],\n\n    \"has-flag\": [\"has-flag@4.0.0\", \"\", {}, \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\"],\n\n    \"has-own-prop\": [\"has-own-prop@2.0.0\", \"\", {}, \"sha512-Pq0h+hvsVm6dDEa8x82GnLSYHOzNDt7f0ddFa3FqcQlgzEiptPqL+XrOJNavjOzSYiYWIrgeVYYgGlLmnxwilQ==\"],\n\n    \"has-property-descriptors\": [\"has-property-descriptors@1.0.2\", \"\", { \"dependencies\": { \"es-define-property\": \"^1.0.0\" } }, \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\"],\n\n    \"has-proto\": [\"has-proto@1.2.0\", \"\", { \"dependencies\": { \"dunder-proto\": \"^1.0.0\" } }, \"sha512-KIL7eQPfHQRC8+XluaIw7BHUwwqL19bQn4hzNgdr+1wXoU0KKj6rufu47lhY7KbJR2C6T6+PfyN0Ea7wkSS+qQ==\"],\n\n    \"has-symbols\": [\"has-symbols@1.1.0\", \"\", {}, \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\"],\n\n    \"has-tostringtag\": [\"has-tostringtag@1.0.2\", \"\", { \"dependencies\": { \"has-symbols\": \"^1.0.3\" } }, \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\"],\n\n    \"hash-wasm\": [\"hash-wasm@4.12.0\", \"\", {}, \"sha512-+/2B2rYLb48I/evdOIhP+K/DD2ca2fgBjp6O+GBEnCDk2e4rpeXIK8GvIyRPjTezgmWn9gmKwkQjjx6BtqDHVQ==\"],\n\n    \"hasown\": [\"hasown@2.0.2\", \"\", { \"dependencies\": { \"function-bind\": \"^1.1.2\" } }, \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\"],\n\n    \"hast-util-from-parse5\": [\"hast-util-from-parse5@7.1.2\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/unist\": \"^2.0.0\", \"hastscript\": \"^7.0.0\", \"property-information\": \"^6.0.0\", \"vfile\": \"^5.0.0\", \"vfile-location\": \"^4.0.0\", \"web-namespaces\": \"^2.0.0\" } }, \"sha512-Nz7FfPBuljzsN3tCQ4kCBKqdNhQE2l0Tn+X1ubgKBPRoiDIu1mL08Cfw4k7q71+Duyaw7DXDN+VTAp4Vh3oCOw==\"],\n\n    \"hast-util-parse-selector\": [\"hast-util-parse-selector@3.1.1\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\" } }, \"sha512-jdlwBjEexy1oGz0aJ2f4GKMaVKkA9jwjr4MjAAI22E5fM/TXVZHuS5OpONtdeIkRKqAaryQ2E9xNQxijoThSZA==\"],\n\n    \"hast-util-raw\": [\"hast-util-raw@7.2.3\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/parse5\": \"^6.0.0\", \"hast-util-from-parse5\": \"^7.0.0\", \"hast-util-to-parse5\": \"^7.0.0\", \"html-void-elements\": \"^2.0.0\", \"parse5\": \"^6.0.0\", \"unist-util-position\": \"^4.0.0\", \"unist-util-visit\": \"^4.0.0\", \"vfile\": \"^5.0.0\", \"web-namespaces\": \"^2.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-RujVQfVsOrxzPOPSzZFiwofMArbQke6DJjnFfceiEbFh7S05CbPt0cYN+A5YeD3pso0JQk6O1aHBnx9+Pm2uqg==\"],\n\n    \"hast-util-to-estree\": [\"hast-util-to-estree@3.1.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-attach-comments\": \"^3.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"hast-util-whitespace\": \"^3.0.0\", \"mdast-util-mdx-expression\": \"^2.0.0\", \"mdast-util-mdx-jsx\": \"^3.0.0\", \"mdast-util-mdxjs-esm\": \"^2.0.0\", \"property-information\": \"^7.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"style-to-js\": \"^1.0.0\", \"unist-util-position\": \"^5.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-48+B/rJWAp0jamNbAAf9M7Uf//UVqAoMmgXhBdxTDJLGKY+LRnZ99qcG+Qjl5HfMpYNzS5v4EAwVEF34LeAj7w==\"],\n\n    \"hast-util-to-html\": [\"hast-util-to-html@8.0.4\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/unist\": \"^2.0.0\", \"ccount\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"hast-util-raw\": \"^7.0.0\", \"hast-util-whitespace\": \"^2.0.0\", \"html-void-elements\": \"^2.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"stringify-entities\": \"^4.0.0\", \"zwitch\": \"^2.0.4\" } }, \"sha512-4tpQTUOr9BMjtYyNlt0P50mH7xj0Ks2xpo8M943Vykljf99HW6EzulIoJP1N3eKOSScEHzyzi9dm7/cn0RfGwA==\"],\n\n    \"hast-util-to-jsx-runtime\": [\"hast-util-to-jsx-runtime@2.3.6\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/unist\": \"^3.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"hast-util-whitespace\": \"^3.0.0\", \"mdast-util-mdx-expression\": \"^2.0.0\", \"mdast-util-mdx-jsx\": \"^3.0.0\", \"mdast-util-mdxjs-esm\": \"^2.0.0\", \"property-information\": \"^7.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"style-to-js\": \"^1.0.0\", \"unist-util-position\": \"^5.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-zl6s8LwNyo1P9uw+XJGvZtdFF1GdAkOg8ujOw+4Pyb76874fLps4ueHXDhXWdk6YHQ6OgUtinliG7RsYvCbbBg==\"],\n\n    \"hast-util-to-parse5\": [\"hast-util-to-parse5@7.1.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"web-namespaces\": \"^2.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-YNRgAJkH2Jky5ySkIqFXTQiaqcAtJyVE+D5lkN6CdtOqrnkLfGYYrEcKuHOJZlp+MwjSwuD3fZuawI+sic/RBw==\"],\n\n    \"hast-util-whitespace\": [\"hast-util-whitespace@3.0.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^3.0.0\" } }, \"sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==\"],\n\n    \"hastscript\": [\"hastscript@7.2.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"hast-util-parse-selector\": \"^3.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\" } }, \"sha512-TtYPq24IldU8iKoJQqvZOuhi5CyCQRAbvDOX0x1eW6rsHSxa/1i2CCiptNTotGHJ3VoHRGmqiv6/D3q113ikkw==\"],\n\n    \"hermes-estree\": [\"hermes-estree@0.29.1\", \"\", {}, \"sha512-jl+x31n4/w+wEqm0I2r4CMimukLbLQEYpisys5oCre611CI5fc9TxhqkBBCJ1edDG4Kza0f7CgNz8xVMLZQOmQ==\"],\n\n    \"hermes-parser\": [\"hermes-parser@0.29.1\", \"\", { \"dependencies\": { \"hermes-estree\": \"0.29.1\" } }, \"sha512-xBHWmUtRC5e/UL0tI7Ivt2riA/YBq9+SiYFU7C1oBa/j2jYGlIF9043oak1F47ihuDIxQ5nbsKueYJDRY02UgA==\"],\n\n    \"hls.js\": [\"hls.js@1.6.9\", \"\", {}, \"sha512-q7qPrri6GRwjcNd7EkFCmhiJ6PBIxeUsdxKbquBkQZpg9jAnp6zSAeN9eEWFlOB09J8JfzAQGoXL5ZEAltjO9g==\"],\n\n    \"html-encoding-sniffer\": [\"html-encoding-sniffer@3.0.0\", \"\", { \"dependencies\": { \"whatwg-encoding\": \"^2.0.0\" } }, \"sha512-oWv4T4yJ52iKrufjnyZPkrN0CH3QnrUqdB6In1g5Fe1mia8GmF36gnfNySxoZtxD5+NmYw1EElVXiBk93UeskA==\"],\n\n    \"html-entities\": [\"html-entities@2.6.0\", \"\", {}, \"sha512-kig+rMn/QOVRvr7c86gQ8lWXq+Hkv6CbAH1hLu+RG338StTpE8Z0b44SDVaqVu7HGKf27frdmUYEs9hTUX/cLQ==\"],\n\n    \"html-escaper\": [\"html-escaper@2.0.2\", \"\", {}, \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\"],\n\n    \"html-void-elements\": [\"html-void-elements@2.0.1\", \"\", {}, \"sha512-0quDb7s97CfemeJAnW9wC0hw78MtW7NU3hqtCD75g2vFlDLt36llsYD7uB7SUzojLMP24N5IatXf7ylGXiGG9A==\"],\n\n    \"http-errors\": [\"http-errors@2.0.0\", \"\", { \"dependencies\": { \"depd\": \"2.0.0\", \"inherits\": \"2.0.4\", \"setprototypeof\": \"1.2.0\", \"statuses\": \"2.0.1\", \"toidentifier\": \"1.0.1\" } }, \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\"],\n\n    \"http-proxy-agent\": [\"http-proxy-agent@5.0.0\", \"\", { \"dependencies\": { \"@tootallnate/once\": \"2\", \"agent-base\": \"6\", \"debug\": \"4\" } }, \"sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==\"],\n\n    \"https-proxy-agent\": [\"https-proxy-agent@7.0.6\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.2\", \"debug\": \"4\" } }, \"sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==\"],\n\n    \"human-signals\": [\"human-signals@4.3.1\", \"\", {}, \"sha512-nZXjEF2nbo7lIw3mgYjItAfgQXog3OjJogSbKa2CQIIvSGWcKgeJnQlNXip6NglNzYH45nSRiEVimMvYL8DDqQ==\"],\n\n    \"humanize-ms\": [\"humanize-ms@1.2.1\", \"\", { \"dependencies\": { \"ms\": \"^2.0.0\" } }, \"sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==\"],\n\n    \"husky\": [\"husky@9.1.7\", \"\", { \"bin\": { \"husky\": \"bin.js\" } }, \"sha512-5gs5ytaNjBrh5Ow3zrvdUUY+0VxIuWVL4i9irt6friV+BqdCfmV11CQTWMiBYWHbXhco+J1kHfTOUkePhCDvMA==\"],\n\n    \"iconv-lite\": [\"iconv-lite@0.4.24\", \"\", { \"dependencies\": { \"safer-buffer\": \">= 2.1.2 < 3\" } }, \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\"],\n\n    \"ieee754\": [\"ieee754@1.2.1\", \"\", {}, \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\"],\n\n    \"ignore\": [\"ignore@6.0.2\", \"\", {}, \"sha512-InwqeHHN2XpumIkMvpl/DCJVrAHgCsG5+cn1XlnLWGwtZBm8QJfSusItfrwx81CTp5agNZqpKU2J/ccC5nGT4A==\"],\n\n    \"image-size\": [\"image-size@1.2.1\", \"\", { \"dependencies\": { \"queue\": \"6.0.2\" }, \"bin\": { \"image-size\": \"bin/image-size.js\" } }, \"sha512-rH+46sQJ2dlwfjfhCyNx5thzrv+dtmBIhPHk0zgRUukHzZ/kRueTJXoYYsclBaKcSMBWuGbOFXtioLpzTb5euw==\"],\n\n    \"imagescript\": [\"imagescript@1.3.1\", \"\", {}, \"sha512-ue/zxSyEzj7je8Nlt2vjY9GEa2BbScFSRZJq7OTVDZFp0r57fyuxrlsF8qWgxTP+kP8WklTw4by/ZEYVX5S13w==\"],\n\n    \"immediate\": [\"immediate@3.0.6\", \"\", {}, \"sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==\"],\n\n    \"import-fresh\": [\"import-fresh@3.3.1\", \"\", { \"dependencies\": { \"parent-module\": \"^1.0.0\", \"resolve-from\": \"^4.0.0\" } }, \"sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==\"],\n\n    \"import-local\": [\"import-local@3.2.0\", \"\", { \"dependencies\": { \"pkg-dir\": \"^4.2.0\", \"resolve-cwd\": \"^3.0.0\" }, \"bin\": { \"import-local-fixture\": \"fixtures/cli.js\" } }, \"sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==\"],\n\n    \"import-meta-resolve\": [\"import-meta-resolve@4.1.0\", \"\", {}, \"sha512-I6fiaX09Xivtk+THaMfAwnA3MVA5Big1WHF1Dfx9hFuvNIWpXnorlkzhcQf6ehrqQiiZECRt1poOAkPmer3ruw==\"],\n\n    \"imurmurhash\": [\"imurmurhash@0.1.4\", \"\", {}, \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\"],\n\n    \"indent-string\": [\"indent-string@4.0.0\", \"\", {}, \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\"],\n\n    \"index-array-by\": [\"index-array-by@1.4.2\", \"\", {}, \"sha512-SP23P27OUKzXWEC/TOyWlwLviofQkCSCKONnc62eItjp69yCZZPqDQtr3Pw5gJDnPeUMqExmKydNZaJO0FU9pw==\"],\n\n    \"inflection\": [\"inflection@2.0.1\", \"\", {}, \"sha512-wzkZHqpb4eGrOKBl34xy3umnYHx8Si5R1U4fwmdxLo5gdH6mEK8gclckTj/qWqy4Je0bsDYe/qazZYuO7xe3XQ==\"],\n\n    \"inflight\": [\"inflight@1.0.6\", \"\", { \"dependencies\": { \"once\": \"^1.3.0\", \"wrappy\": \"1\" } }, \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\"],\n\n    \"inherits\": [\"inherits@2.0.4\", \"\", {}, \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"],\n\n    \"ini\": [\"ini@4.1.1\", \"\", {}, \"sha512-QQnnxNyfvmHFIsj7gkPcYymR8Jdw/o7mp5ZFihxn6h8Ci6fh3Dx4E1gPjpQEpIuPo9XVNY/ZUwh4BPMjGyL01g==\"],\n\n    \"inline-style-parser\": [\"inline-style-parser@0.2.4\", \"\", {}, \"sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==\"],\n\n    \"internal-slot\": [\"internal-slot@1.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"hasown\": \"^2.0.2\", \"side-channel\": \"^1.1.0\" } }, \"sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==\"],\n\n    \"internmap\": [\"internmap@2.0.3\", \"\", {}, \"sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==\"],\n\n    \"invariant\": [\"invariant@2.2.4\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.0.0\" } }, \"sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==\"],\n\n    \"ip-address\": [\"ip-address@10.0.1\", \"\", {}, \"sha512-NWv9YLW4PoW2B7xtzaS3NCot75m6nK7Icdv0o3lfMceJVRfSoQwqD4wEH5rLwoKJwUiZ/rfpiVBhnaF0FK4HoA==\"],\n\n    \"ipaddr.js\": [\"ipaddr.js@1.9.1\", \"\", {}, \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\"],\n\n    \"is\": [\"is@3.3.2\", \"\", {}, \"sha512-a2xr4E3s1PjDS8ORcGgXpWx6V+liNs+O3JRD2mb9aeugD7rtkkZ0zgLdYgw0tWsKhsdiezGYptSiMlVazCBTuQ==\"],\n\n    \"is-alphabetical\": [\"is-alphabetical@2.0.1\", \"\", {}, \"sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==\"],\n\n    \"is-alphanumerical\": [\"is-alphanumerical@2.0.1\", \"\", { \"dependencies\": { \"is-alphabetical\": \"^2.0.0\", \"is-decimal\": \"^2.0.0\" } }, \"sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==\"],\n\n    \"is-array-buffer\": [\"is-array-buffer@3.0.5\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"get-intrinsic\": \"^1.2.6\" } }, \"sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==\"],\n\n    \"is-arrayish\": [\"is-arrayish@0.2.1\", \"\", {}, \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\"],\n\n    \"is-async-function\": [\"is-async-function@2.1.1\", \"\", { \"dependencies\": { \"async-function\": \"^1.0.0\", \"call-bound\": \"^1.0.3\", \"get-proto\": \"^1.0.1\", \"has-tostringtag\": \"^1.0.2\", \"safe-regex-test\": \"^1.1.0\" } }, \"sha512-9dgM/cZBnNvjzaMYHVoxxfPj2QXt22Ev7SuuPrs+xav0ukGB0S6d4ydZdEiM48kLx5kDV+QBPrpVnFyefL8kkQ==\"],\n\n    \"is-bigint\": [\"is-bigint@1.1.0\", \"\", { \"dependencies\": { \"has-bigints\": \"^1.0.2\" } }, \"sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==\"],\n\n    \"is-binary-path\": [\"is-binary-path@2.1.0\", \"\", { \"dependencies\": { \"binary-extensions\": \"^2.0.0\" } }, \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\"],\n\n    \"is-boolean-object\": [\"is-boolean-object@1.2.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==\"],\n\n    \"is-buffer\": [\"is-buffer@2.0.5\", \"\", {}, \"sha512-i2R6zNFDwgEHJyQUtJEk0XFi1i0dPFn/oqjK3/vPCcDeJvW5NQ83V8QbicfF1SupOaB0h8ntgBC2YiE7dfyctQ==\"],\n\n    \"is-bun-module\": [\"is-bun-module@2.0.0\", \"\", { \"dependencies\": { \"semver\": \"^7.7.1\" } }, \"sha512-gNCGbnnnnFAUGKeZ9PdbyeGYJqewpmc2aKHUEMO5nQPWU9lOmv7jcmQIv+qHD8fXW6W7qfuCwX4rY9LNRjXrkQ==\"],\n\n    \"is-callable\": [\"is-callable@1.2.7\", \"\", {}, \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\"],\n\n    \"is-core-module\": [\"is-core-module@2.16.1\", \"\", { \"dependencies\": { \"hasown\": \"^2.0.2\" } }, \"sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==\"],\n\n    \"is-data-view\": [\"is-data-view@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"get-intrinsic\": \"^1.2.6\", \"is-typed-array\": \"^1.1.13\" } }, \"sha512-RKtWF8pGmS87i2D6gqQu/l7EYRlVdfzemCJN/P3UOs//x1QE7mfhvzHIApBTRf7axvT6DMGwSwBXYCT0nfB9xw==\"],\n\n    \"is-date-object\": [\"is-date-object@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==\"],\n\n    \"is-decimal\": [\"is-decimal@2.0.1\", \"\", {}, \"sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==\"],\n\n    \"is-directory\": [\"is-directory@0.3.1\", \"\", {}, \"sha512-yVChGzahRFvbkscn2MlwGismPO12i9+znNruC5gVEntG3qu0xQMzsGg/JFbrsqDOHtHFPci+V5aP5T9I+yeKqw==\"],\n\n    \"is-docker\": [\"is-docker@2.2.1\", \"\", { \"bin\": { \"is-docker\": \"cli.js\" } }, \"sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==\"],\n\n    \"is-extendable\": [\"is-extendable@0.1.1\", \"\", {}, \"sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==\"],\n\n    \"is-extglob\": [\"is-extglob@2.1.1\", \"\", {}, \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\"],\n\n    \"is-finalizationregistry\": [\"is-finalizationregistry@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\" } }, \"sha512-1pC6N8qWJbWoPtEjgcL2xyhQOP491EQjeUo3qTKcmV8YSDDJrOepfG8pcC7h/QgnQHYSv0mJ3Z/ZWxmatVrysg==\"],\n\n    \"is-fullwidth-code-point\": [\"is-fullwidth-code-point@3.0.0\", \"\", {}, \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\"],\n\n    \"is-generator-fn\": [\"is-generator-fn@2.1.0\", \"\", {}, \"sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==\"],\n\n    \"is-generator-function\": [\"is-generator-function@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"get-proto\": \"^1.0.0\", \"has-tostringtag\": \"^1.0.2\", \"safe-regex-test\": \"^1.1.0\" } }, \"sha512-nPUB5km40q9e8UfN/Zc24eLlzdSf9OfKByBw9CIdw4H1giPMeA0OIJvbchsCu4npfI2QcMVBsGEBHKZ7wLTWmQ==\"],\n\n    \"is-glob\": [\"is-glob@4.0.3\", \"\", { \"dependencies\": { \"is-extglob\": \"^2.1.1\" } }, \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\"],\n\n    \"is-hexadecimal\": [\"is-hexadecimal@2.0.1\", \"\", {}, \"sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==\"],\n\n    \"is-interactive\": [\"is-interactive@2.0.0\", \"\", {}, \"sha512-qP1vozQRI+BMOPcjFzrjXuQvdak2pHNUMZoeG2eRbiSqyvbEf/wQtEOTOX1guk6E3t36RkaqiSt8A/6YElNxLQ==\"],\n\n    \"is-map\": [\"is-map@2.0.3\", \"\", {}, \"sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==\"],\n\n    \"is-negative-zero\": [\"is-negative-zero@2.0.3\", \"\", {}, \"sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==\"],\n\n    \"is-number\": [\"is-number@7.0.0\", \"\", {}, \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\"],\n\n    \"is-number-object\": [\"is-number-object@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==\"],\n\n    \"is-obj\": [\"is-obj@2.0.0\", \"\", {}, \"sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==\"],\n\n    \"is-path-inside\": [\"is-path-inside@3.0.3\", \"\", {}, \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==\"],\n\n    \"is-plain-obj\": [\"is-plain-obj@4.1.0\", \"\", {}, \"sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==\"],\n\n    \"is-potential-custom-element-name\": [\"is-potential-custom-element-name@1.0.1\", \"\", {}, \"sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==\"],\n\n    \"is-promise\": [\"is-promise@2.2.2\", \"\", {}, \"sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ==\"],\n\n    \"is-reference\": [\"is-reference@3.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.6\" } }, \"sha512-ixkJoqQvAP88E6wLydLGGqCJsrFUnqoH6HnaczB8XmDH1oaWU+xxdptvikTgaEhtZ53Ky6YXiBuUI2WXLMCwjw==\"],\n\n    \"is-regex\": [\"is-regex@1.2.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"gopd\": \"^1.2.0\", \"has-tostringtag\": \"^1.0.2\", \"hasown\": \"^2.0.2\" } }, \"sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==\"],\n\n    \"is-set\": [\"is-set@2.0.3\", \"\", {}, \"sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==\"],\n\n    \"is-shared-array-buffer\": [\"is-shared-array-buffer@1.0.4\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\" } }, \"sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==\"],\n\n    \"is-ssh\": [\"is-ssh@1.4.1\", \"\", { \"dependencies\": { \"protocols\": \"^2.0.1\" } }, \"sha512-JNeu1wQsHjyHgn9NcWTaXq6zWSR6hqE0++zhfZlkFBbScNkyvxCdeV8sRkSBaeLKxmbpR21brail63ACNxJ0Tg==\"],\n\n    \"is-stream\": [\"is-stream@3.0.0\", \"\", {}, \"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\"],\n\n    \"is-string\": [\"is-string@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==\"],\n\n    \"is-symbol\": [\"is-symbol@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"has-symbols\": \"^1.1.0\", \"safe-regex-test\": \"^1.1.0\" } }, \"sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==\"],\n\n    \"is-text-path\": [\"is-text-path@2.0.0\", \"\", { \"dependencies\": { \"text-extensions\": \"^2.0.0\" } }, \"sha512-+oDTluR6WEjdXEJMnC2z6A4FRwFoYuvShVVEGsS7ewc0UTi2QtAKMDJuL4BDEVt+5T7MjFo12RP8ghOM75oKJw==\"],\n\n    \"is-typed-array\": [\"is-typed-array@1.1.15\", \"\", { \"dependencies\": { \"which-typed-array\": \"^1.1.16\" } }, \"sha512-p3EcsicXjit7SaskXHs1hA91QxgTw46Fv6EFKKGS5DRFLD8yKnohjF3hxoju94b/OcMZoQukzpPpBE9uLVKzgQ==\"],\n\n    \"is-typedarray\": [\"is-typedarray@1.0.0\", \"\", {}, \"sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==\"],\n\n    \"is-unicode-supported\": [\"is-unicode-supported@1.3.0\", \"\", {}, \"sha512-43r2mRvz+8JRIKnWJ+3j8JtjRKZ6GmjzfaE/qiBJnikNnYv/6bagRJ1kUhNk8R5EX/GkobD+r+sfxCPJsiKBLQ==\"],\n\n    \"is-weakmap\": [\"is-weakmap@2.0.2\", \"\", {}, \"sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==\"],\n\n    \"is-weakref\": [\"is-weakref@1.1.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\" } }, \"sha512-6i9mGWSlqzNMEqpCp93KwRS1uUOodk2OJ6b+sq7ZPDSy2WuI5NFIxp/254TytR8ftefexkWn5xNiHUNpPOfSew==\"],\n\n    \"is-weakset\": [\"is-weakset@2.0.4\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"get-intrinsic\": \"^1.2.6\" } }, \"sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==\"],\n\n    \"is-wsl\": [\"is-wsl@2.2.0\", \"\", { \"dependencies\": { \"is-docker\": \"^2.0.0\" } }, \"sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==\"],\n\n    \"isarray\": [\"isarray@2.0.5\", \"\", {}, \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\"],\n\n    \"isexe\": [\"isexe@2.0.0\", \"\", {}, \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"],\n\n    \"isomorphic-git\": [\"isomorphic-git@1.32.3\", \"\", { \"dependencies\": { \"async-lock\": \"^1.4.1\", \"clean-git-ref\": \"^2.0.1\", \"crc-32\": \"^1.2.0\", \"diff3\": \"0.0.3\", \"ignore\": \"^5.1.4\", \"minimisted\": \"^2.0.0\", \"pako\": \"^1.0.10\", \"path-browserify\": \"^1.0.1\", \"pify\": \"^4.0.1\", \"readable-stream\": \"^3.4.0\", \"sha.js\": \"^2.4.9\", \"simple-get\": \"^4.0.1\" }, \"bin\": { \"isogit\": \"cli.cjs\" } }, \"sha512-gTcJH3JaUdj7WFGnPKnn7XpO1qAeu3nsiC7m2vEdHEsJx8fmBVQ8ji4FQG26JJArFd3MYyuA43pA7bk0DI6+Ww==\"],\n\n    \"istanbul-lib-coverage\": [\"istanbul-lib-coverage@3.2.2\", \"\", {}, \"sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==\"],\n\n    \"istanbul-lib-instrument\": [\"istanbul-lib-instrument@6.0.3\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.23.9\", \"@babel/parser\": \"^7.23.9\", \"@istanbuljs/schema\": \"^0.1.3\", \"istanbul-lib-coverage\": \"^3.2.0\", \"semver\": \"^7.5.4\" } }, \"sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==\"],\n\n    \"istanbul-lib-report\": [\"istanbul-lib-report@3.0.1\", \"\", { \"dependencies\": { \"istanbul-lib-coverage\": \"^3.0.0\", \"make-dir\": \"^4.0.0\", \"supports-color\": \"^7.1.0\" } }, \"sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==\"],\n\n    \"istanbul-lib-source-maps\": [\"istanbul-lib-source-maps@4.0.1\", \"\", { \"dependencies\": { \"debug\": \"^4.1.1\", \"istanbul-lib-coverage\": \"^3.0.0\", \"source-map\": \"^0.6.1\" } }, \"sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==\"],\n\n    \"istanbul-reports\": [\"istanbul-reports@3.1.7\", \"\", { \"dependencies\": { \"html-escaper\": \"^2.0.0\", \"istanbul-lib-report\": \"^3.0.0\" } }, \"sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==\"],\n\n    \"iterator.prototype\": [\"iterator.prototype@1.1.5\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.1.4\", \"es-object-atoms\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.6\", \"get-proto\": \"^1.0.0\", \"has-symbols\": \"^1.1.0\", \"set-function-name\": \"^2.0.2\" } }, \"sha512-H0dkQoCa3b2VEeKQBOxFph+JAbcrQdE7KC0UkqwpLmv2EC4P41QXP+rqo9wYodACiG5/WM5s9oDApTU8utwj9g==\"],\n\n    \"its-fine\": [\"its-fine@1.2.5\", \"\", { \"dependencies\": { \"@types/react-reconciler\": \"^0.28.0\" }, \"peerDependencies\": { \"react\": \">=18.0\" } }, \"sha512-fXtDA0X0t0eBYAGLVM5YsgJGsJ5jEmqZEPrGbzdf5awjv0xE7nqv3TVnvtUF060Tkes15DbDAKW/I48vsb6SyA==\"],\n\n    \"jackspeak\": [\"jackspeak@2.3.6\", \"\", { \"dependencies\": { \"@isaacs/cliui\": \"^8.0.2\" }, \"optionalDependencies\": { \"@pkgjs/parseargs\": \"^0.11.0\" } }, \"sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==\"],\n\n    \"jake\": [\"jake@10.9.4\", \"\", { \"dependencies\": { \"async\": \"^3.2.6\", \"filelist\": \"^1.0.4\", \"picocolors\": \"^1.1.1\" }, \"bin\": { \"jake\": \"bin/cli.js\" } }, \"sha512-wpHYzhxiVQL+IV05BLE2Xn34zW1S223hvjtqk0+gsPrwd/8JNLXJgZZM/iPFsYc1xyphF+6M6EvdE5E9MBGkDA==\"],\n\n    \"jest\": [\"jest@29.7.0\", \"\", { \"dependencies\": { \"@jest/core\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"import-local\": \"^3.0.2\", \"jest-cli\": \"^29.7.0\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"], \"bin\": { \"jest\": \"bin/jest.js\" } }, \"sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\"],\n\n    \"jest-changed-files\": [\"jest-changed-files@29.7.0\", \"\", { \"dependencies\": { \"execa\": \"^5.0.0\", \"jest-util\": \"^29.7.0\", \"p-limit\": \"^3.1.0\" } }, \"sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==\"],\n\n    \"jest-circus\": [\"jest-circus@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/expect\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"co\": \"^4.6.0\", \"dedent\": \"^1.0.0\", \"is-generator-fn\": \"^2.0.0\", \"jest-each\": \"^29.7.0\", \"jest-matcher-utils\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-runtime\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"p-limit\": \"^3.1.0\", \"pretty-format\": \"^29.7.0\", \"pure-rand\": \"^6.0.0\", \"slash\": \"^3.0.0\", \"stack-utils\": \"^2.0.3\" } }, \"sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==\"],\n\n    \"jest-cli\": [\"jest-cli@29.7.0\", \"\", { \"dependencies\": { \"@jest/core\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"create-jest\": \"^29.7.0\", \"exit\": \"^0.1.2\", \"import-local\": \"^3.0.2\", \"jest-config\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"yargs\": \"^17.3.1\" }, \"peerDependencies\": { \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\" }, \"optionalPeers\": [\"node-notifier\"], \"bin\": { \"jest\": \"bin/jest.js\" } }, \"sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==\"],\n\n    \"jest-config\": [\"jest-config@29.7.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.11.6\", \"@jest/test-sequencer\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"babel-jest\": \"^29.7.0\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^3.2.0\", \"deepmerge\": \"^4.2.2\", \"glob\": \"^7.1.3\", \"graceful-fs\": \"^4.2.9\", \"jest-circus\": \"^29.7.0\", \"jest-environment-node\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"jest-regex-util\": \"^29.6.3\", \"jest-resolve\": \"^29.7.0\", \"jest-runner\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"parse-json\": \"^5.2.0\", \"pretty-format\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"strip-json-comments\": \"^3.1.1\" }, \"peerDependencies\": { \"@types/node\": \"*\", \"ts-node\": \">=9.0.0\" }, \"optionalPeers\": [\"@types/node\", \"ts-node\"] }, \"sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==\"],\n\n    \"jest-diff\": [\"jest-diff@30.0.5\", \"\", { \"dependencies\": { \"@jest/diff-sequences\": \"30.0.1\", \"@jest/get-type\": \"30.0.1\", \"chalk\": \"^4.1.2\", \"pretty-format\": \"30.0.5\" } }, \"sha512-1UIqE9PoEKaHcIKvq2vbibrCog4Y8G0zmOxgQUVEiTqwR5hJVMCoDsN1vFvI5JvwD37hjueZ1C4l2FyGnfpE0A==\"],\n\n    \"jest-docblock\": [\"jest-docblock@29.7.0\", \"\", { \"dependencies\": { \"detect-newline\": \"^3.0.0\" } }, \"sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==\"],\n\n    \"jest-each\": [\"jest-each@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"chalk\": \"^4.0.0\", \"jest-get-type\": \"^29.6.3\", \"jest-util\": \"^29.7.0\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==\"],\n\n    \"jest-environment-jsdom\": [\"jest-environment-jsdom@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/fake-timers\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/jsdom\": \"^20.0.0\", \"@types/node\": \"*\", \"jest-mock\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jsdom\": \"^20.0.0\" }, \"peerDependencies\": { \"canvas\": \"^2.5.0\" }, \"optionalPeers\": [\"canvas\"] }, \"sha512-k9iQbsf9OyOfdzWH8HDmrRT0gSIcX+FLNW7IQq94tFX0gynPwqDTW0Ho6iMVNjGz/nb+l/vW3dWM2bbLLpkbXA==\"],\n\n    \"jest-environment-node\": [\"jest-environment-node@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/fake-timers\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"jest-mock\": \"^29.7.0\", \"jest-util\": \"^29.7.0\" } }, \"sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==\"],\n\n    \"jest-get-type\": [\"jest-get-type@29.6.3\", \"\", {}, \"sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==\"],\n\n    \"jest-haste-map\": [\"jest-haste-map@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/graceful-fs\": \"^4.1.3\", \"@types/node\": \"*\", \"anymatch\": \"^3.0.3\", \"fb-watchman\": \"^2.0.0\", \"graceful-fs\": \"^4.2.9\", \"jest-regex-util\": \"^29.6.3\", \"jest-util\": \"^29.7.0\", \"jest-worker\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"walker\": \"^1.0.8\" }, \"optionalDependencies\": { \"fsevents\": \"^2.3.2\" } }, \"sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==\"],\n\n    \"jest-leak-detector\": [\"jest-leak-detector@29.7.0\", \"\", { \"dependencies\": { \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==\"],\n\n    \"jest-matcher-utils\": [\"jest-matcher-utils@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"jest-diff\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==\"],\n\n    \"jest-message-util\": [\"jest-message-util@29.7.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.12.13\", \"@jest/types\": \"^29.6.3\", \"@types/stack-utils\": \"^2.0.0\", \"chalk\": \"^4.0.0\", \"graceful-fs\": \"^4.2.9\", \"micromatch\": \"^4.0.4\", \"pretty-format\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"stack-utils\": \"^2.0.3\" } }, \"sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==\"],\n\n    \"jest-mock\": [\"jest-mock@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"jest-util\": \"^29.7.0\" } }, \"sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==\"],\n\n    \"jest-pnp-resolver\": [\"jest-pnp-resolver@1.2.3\", \"\", { \"peerDependencies\": { \"jest-resolve\": \"*\" }, \"optionalPeers\": [\"jest-resolve\"] }, \"sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==\"],\n\n    \"jest-regex-util\": [\"jest-regex-util@29.6.3\", \"\", {}, \"sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==\"],\n\n    \"jest-resolve\": [\"jest-resolve@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"jest-pnp-resolver\": \"^1.2.2\", \"jest-util\": \"^29.7.0\", \"jest-validate\": \"^29.7.0\", \"resolve\": \"^1.20.0\", \"resolve.exports\": \"^2.0.0\", \"slash\": \"^3.0.0\" } }, \"sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\"],\n\n    \"jest-resolve-dependencies\": [\"jest-resolve-dependencies@29.7.0\", \"\", { \"dependencies\": { \"jest-regex-util\": \"^29.6.3\", \"jest-snapshot\": \"^29.7.0\" } }, \"sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==\"],\n\n    \"jest-runner\": [\"jest-runner@29.7.0\", \"\", { \"dependencies\": { \"@jest/console\": \"^29.7.0\", \"@jest/environment\": \"^29.7.0\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"emittery\": \"^0.13.1\", \"graceful-fs\": \"^4.2.9\", \"jest-docblock\": \"^29.7.0\", \"jest-environment-node\": \"^29.7.0\", \"jest-haste-map\": \"^29.7.0\", \"jest-leak-detector\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-resolve\": \"^29.7.0\", \"jest-runtime\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"jest-watcher\": \"^29.7.0\", \"jest-worker\": \"^29.7.0\", \"p-limit\": \"^3.1.0\", \"source-map-support\": \"0.5.13\" } }, \"sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==\"],\n\n    \"jest-runtime\": [\"jest-runtime@29.7.0\", \"\", { \"dependencies\": { \"@jest/environment\": \"^29.7.0\", \"@jest/fake-timers\": \"^29.7.0\", \"@jest/globals\": \"^29.7.0\", \"@jest/source-map\": \"^29.6.3\", \"@jest/test-result\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"cjs-module-lexer\": \"^1.0.0\", \"collect-v8-coverage\": \"^1.0.0\", \"glob\": \"^7.1.3\", \"graceful-fs\": \"^4.2.9\", \"jest-haste-map\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-mock\": \"^29.7.0\", \"jest-regex-util\": \"^29.6.3\", \"jest-resolve\": \"^29.7.0\", \"jest-snapshot\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"slash\": \"^3.0.0\", \"strip-bom\": \"^4.0.0\" } }, \"sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==\"],\n\n    \"jest-snapshot\": [\"jest-snapshot@29.7.0\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.11.6\", \"@babel/generator\": \"^7.7.2\", \"@babel/plugin-syntax-jsx\": \"^7.7.2\", \"@babel/plugin-syntax-typescript\": \"^7.7.2\", \"@babel/types\": \"^7.3.3\", \"@jest/expect-utils\": \"^29.7.0\", \"@jest/transform\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"babel-preset-current-node-syntax\": \"^1.0.0\", \"chalk\": \"^4.0.0\", \"expect\": \"^29.7.0\", \"graceful-fs\": \"^4.2.9\", \"jest-diff\": \"^29.7.0\", \"jest-get-type\": \"^29.6.3\", \"jest-matcher-utils\": \"^29.7.0\", \"jest-message-util\": \"^29.7.0\", \"jest-util\": \"^29.7.0\", \"natural-compare\": \"^1.4.0\", \"pretty-format\": \"^29.7.0\", \"semver\": \"^7.5.3\" } }, \"sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==\"],\n\n    \"jest-util\": [\"jest-util@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^3.2.0\", \"graceful-fs\": \"^4.2.9\", \"picomatch\": \"^2.2.3\" } }, \"sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\"],\n\n    \"jest-validate\": [\"jest-validate@29.7.0\", \"\", { \"dependencies\": { \"@jest/types\": \"^29.6.3\", \"camelcase\": \"^6.2.0\", \"chalk\": \"^4.0.0\", \"jest-get-type\": \"^29.6.3\", \"leven\": \"^3.1.0\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==\"],\n\n    \"jest-watcher\": [\"jest-watcher@29.7.0\", \"\", { \"dependencies\": { \"@jest/test-result\": \"^29.7.0\", \"@jest/types\": \"^29.6.3\", \"@types/node\": \"*\", \"ansi-escapes\": \"^4.2.1\", \"chalk\": \"^4.0.0\", \"emittery\": \"^0.13.1\", \"jest-util\": \"^29.7.0\", \"string-length\": \"^4.0.1\" } }, \"sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==\"],\n\n    \"jest-worker\": [\"jest-worker@29.7.0\", \"\", { \"dependencies\": { \"@types/node\": \"*\", \"jest-util\": \"^29.7.0\", \"merge-stream\": \"^2.0.0\", \"supports-color\": \"^8.0.0\" } }, \"sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==\"],\n\n    \"jiti\": [\"jiti@1.21.7\", \"\", { \"bin\": { \"jiti\": \"bin/jiti.js\" } }, \"sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==\"],\n\n    \"jose\": [\"jose@4.15.9\", \"\", {}, \"sha512-1vUQX+IdDMVPj4k8kOxgUqlcK518yluMuGZwqlr44FS1ppZB/5GWh4rZG89erpOBOJjU/OBsnCVFfapsRz6nEA==\"],\n\n    \"js-tokens\": [\"js-tokens@4.0.0\", \"\", {}, \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"],\n\n    \"js-yaml\": [\"js-yaml@4.1.0\", \"\", { \"dependencies\": { \"argparse\": \"^2.0.1\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\"],\n\n    \"jsbi\": [\"jsbi@4.3.2\", \"\", {}, \"sha512-9fqMSQbhJykSeii05nxKl4m6Eqn2P6rOlYiS+C5Dr/HPIU/7yZxu5qzbs40tgaFORiw2Amd0mirjxatXYMkIew==\"],\n\n    \"jsc-safe-url\": [\"jsc-safe-url@0.2.4\", \"\", {}, \"sha512-0wM3YBWtYePOjfyXQH5MWQ8H7sdk5EXSwZvmSLKk2RboVQ2Bu239jycHDz5J/8Blf3K0Qnoy2b6xD+z10MFB+Q==\"],\n\n    \"jsdom\": [\"jsdom@20.0.3\", \"\", { \"dependencies\": { \"abab\": \"^2.0.6\", \"acorn\": \"^8.8.1\", \"acorn-globals\": \"^7.0.0\", \"cssom\": \"^0.5.0\", \"cssstyle\": \"^2.3.0\", \"data-urls\": \"^3.0.2\", \"decimal.js\": \"^10.4.2\", \"domexception\": \"^4.0.0\", \"escodegen\": \"^2.0.0\", \"form-data\": \"^4.0.0\", \"html-encoding-sniffer\": \"^3.0.0\", \"http-proxy-agent\": \"^5.0.0\", \"https-proxy-agent\": \"^5.0.1\", \"is-potential-custom-element-name\": \"^1.0.1\", \"nwsapi\": \"^2.2.2\", \"parse5\": \"^7.1.1\", \"saxes\": \"^6.0.0\", \"symbol-tree\": \"^3.2.4\", \"tough-cookie\": \"^4.1.2\", \"w3c-xmlserializer\": \"^4.0.0\", \"webidl-conversions\": \"^7.0.0\", \"whatwg-encoding\": \"^2.0.0\", \"whatwg-mimetype\": \"^3.0.0\", \"whatwg-url\": \"^11.0.0\", \"ws\": \"^8.11.0\", \"xml-name-validator\": \"^4.0.0\" }, \"peerDependencies\": { \"canvas\": \"^2.5.0\" }, \"optionalPeers\": [\"canvas\"] }, \"sha512-SYhBvTh89tTfCD/CRdSOm13mOBa42iTaTyfyEWBdKcGdPxPtLFBXuHR8XHb33YNYaP+lLbmSvBTsnoesCNJEsQ==\"],\n\n    \"jsesc\": [\"jsesc@3.1.0\", \"\", { \"bin\": { \"jsesc\": \"bin/jsesc\" } }, \"sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==\"],\n\n    \"json-bigint\": [\"json-bigint@1.0.0\", \"\", { \"dependencies\": { \"bignumber.js\": \"^9.0.0\" } }, \"sha512-SiPv/8VpZuWbvLSMtTDU8hEfrZWg/mH/nV/b4o0CYbSxu1UIQPLdwKOCIyLQX+VIPO5vrLX3i8qtqFyhdPSUSQ==\"],\n\n    \"json-buffer\": [\"json-buffer@3.0.1\", \"\", {}, \"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==\"],\n\n    \"json-parse-better-errors\": [\"json-parse-better-errors@1.0.2\", \"\", {}, \"sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==\"],\n\n    \"json-parse-even-better-errors\": [\"json-parse-even-better-errors@2.3.1\", \"\", {}, \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"],\n\n    \"json-schema\": [\"json-schema@0.4.0\", \"\", {}, \"sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==\"],\n\n    \"json-schema-traverse\": [\"json-schema-traverse@0.4.1\", \"\", {}, \"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\"],\n\n    \"json-stable-stringify-without-jsonify\": [\"json-stable-stringify-without-jsonify@1.0.1\", \"\", {}, \"sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==\"],\n\n    \"json5\": [\"json5@2.2.3\", \"\", { \"bin\": { \"json5\": \"lib/cli.js\" } }, \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\"],\n\n    \"jsonc-parser\": [\"jsonc-parser@3.2.0\", \"\", {}, \"sha512-gfFQZrcTc8CnKXp6Y4/CBT3fTc0OVuDofpre4aEeEpSBPV5X5v4+Vmx+8snU7RLPrNHPKSgLxGo9YuQzz20o+w==\"],\n\n    \"jsonfile\": [\"jsonfile@6.2.0\", \"\", { \"dependencies\": { \"universalify\": \"^2.0.0\" }, \"optionalDependencies\": { \"graceful-fs\": \"^4.1.6\" } }, \"sha512-FGuPw30AdOIUTRMC2OMRtQV+jkVj2cfPqSeWXv1NEAJ1qZ5zb1X6z1mFhbfOB/iy3ssJCD+3KuZ8r8C3uVFlAg==\"],\n\n    \"jsonparse\": [\"jsonparse@1.3.1\", \"\", {}, \"sha512-POQXvpdL69+CluYsillJ7SUhKvytYjW9vG/GKpnf+xP8UWgYEM/RaMzHHofbALDiKbbP1W8UEYmgGl39WkPZsg==\"],\n\n    \"jsx-ast-utils\": [\"jsx-ast-utils@3.3.5\", \"\", { \"dependencies\": { \"array-includes\": \"^3.1.6\", \"array.prototype.flat\": \"^1.3.1\", \"object.assign\": \"^4.1.4\", \"object.values\": \"^1.1.6\" } }, \"sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==\"],\n\n    \"jwa\": [\"jwa@2.0.1\", \"\", { \"dependencies\": { \"buffer-equal-constant-time\": \"^1.0.1\", \"ecdsa-sig-formatter\": \"1.0.11\", \"safe-buffer\": \"^5.0.1\" } }, \"sha512-hRF04fqJIP8Abbkq5NKGN0Bbr3JxlQ+qhZufXVr0DvujKy93ZCbXZMHDL4EOtodSbCWxOqR8MS1tXA5hwqCXDg==\"],\n\n    \"jws\": [\"jws@4.0.0\", \"\", { \"dependencies\": { \"jwa\": \"^2.0.0\", \"safe-buffer\": \"^5.0.1\" } }, \"sha512-KDncfTmOZoOMTFG4mBlG0qUIOlc03fmzH+ru6RgYVZhPkyiy/92Owlt/8UEN+a4TXR1FQetfIpJE8ApdvdVxTg==\"],\n\n    \"kapsule\": [\"kapsule@1.16.3\", \"\", { \"dependencies\": { \"lodash-es\": \"4\" } }, \"sha512-4+5mNNf4vZDSwPhKprKwz3330iisPrb08JyMgbsdFrimBCKNHecua/WBwvVg3n7vwx0C1ARjfhwIpbrbd9n5wg==\"],\n\n    \"katex\": [\"katex@0.16.22\", \"\", { \"dependencies\": { \"commander\": \"^8.3.0\" }, \"bin\": { \"katex\": \"cli.js\" } }, \"sha512-XCHRdUw4lf3SKBaJe4EvgqIuWwkPSo9XoeO8GjQW94Bp7TWv9hNhzZjZ+OH9yf1UmLygb7DIT5GSFQiyt16zYg==\"],\n\n    \"keyv\": [\"keyv@4.5.4\", \"\", { \"dependencies\": { \"json-buffer\": \"3.0.1\" } }, \"sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==\"],\n\n    \"khroma\": [\"khroma@2.1.0\", \"\", {}, \"sha512-Ls993zuzfayK269Svk9hzpeGUKob/sIgZzyHYdjQoAdQetRKpOLj+k/QQQ/6Qi0Yz65mlROrfd+Ev+1+7dz9Kw==\"],\n\n    \"kind-of\": [\"kind-of@6.0.3\", \"\", {}, \"sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\"],\n\n    \"kleur\": [\"kleur@3.0.3\", \"\", {}, \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\"],\n\n    \"kolorist\": [\"kolorist@1.8.0\", \"\", {}, \"sha512-Y+60/zizpJ3HRH8DCss+q95yr6145JXZo46OTpFvDZWLfRCE4qChOyk1b26nMaNpfHHgxagk9dXT5OP0Tfe+dQ==\"],\n\n    \"konva\": [\"konva@9.3.22\", \"\", {}, \"sha512-yQI5d1bmELlD/fowuyfOp9ff+oamg26WOCkyqUyc+nczD/lhRa3EvD2MZOoc4c1293TAubW9n34fSQLgSeEgSw==\"],\n\n    \"langium\": [\"langium@3.3.1\", \"\", { \"dependencies\": { \"chevrotain\": \"~11.0.3\", \"chevrotain-allstar\": \"~0.3.0\", \"vscode-languageserver\": \"~9.0.1\", \"vscode-languageserver-textdocument\": \"~1.0.11\", \"vscode-uri\": \"~3.0.8\" } }, \"sha512-QJv/h939gDpvT+9SiLVlY7tZC3xB2qK57v0J04Sh9wpMb6MP1q8gB21L3WIo8T5P1MSMg3Ep14L7KkDCFG3y4w==\"],\n\n    \"language-subtag-registry\": [\"language-subtag-registry@0.3.23\", \"\", {}, \"sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==\"],\n\n    \"language-tags\": [\"language-tags@1.0.9\", \"\", { \"dependencies\": { \"language-subtag-registry\": \"^0.3.20\" } }, \"sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==\"],\n\n    \"layout-base\": [\"layout-base@1.0.2\", \"\", {}, \"sha512-8h2oVEZNktL4BH2JCOI90iD1yXwL6iNW7KcCKT2QZgQJR2vbqDsldCTPRU9NifTCqHZci57XvQQ15YTu+sTYPg==\"],\n\n    \"leven\": [\"leven@3.1.0\", \"\", {}, \"sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==\"],\n\n    \"levn\": [\"levn@0.4.1\", \"\", { \"dependencies\": { \"prelude-ls\": \"^1.2.1\", \"type-check\": \"~0.4.0\" } }, \"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\"],\n\n    \"lie\": [\"lie@3.3.0\", \"\", { \"dependencies\": { \"immediate\": \"~3.0.5\" } }, \"sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==\"],\n\n    \"lighthouse-logger\": [\"lighthouse-logger@1.4.2\", \"\", { \"dependencies\": { \"debug\": \"^2.6.9\", \"marky\": \"^1.2.2\" } }, \"sha512-gPWxznF6TKmUHrOQjlVo2UbaL2EJ71mb2CCeRs/2qBpi4L/g4LUVc9+3lKQ6DTUZwJswfM7ainGrLO1+fOqa2g==\"],\n\n    \"lilconfig\": [\"lilconfig@3.1.3\", \"\", {}, \"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\"],\n\n    \"lines-and-columns\": [\"lines-and-columns@2.0.3\", \"\", {}, \"sha512-cNOjgCnLB+FnvWWtyRTzmB3POJ+cXxTA81LoW7u8JdmhfXzriropYwpjShnz1QLLWsQwY7nIxoDmcPTwphDK9w==\"],\n\n    \"lint-staged\": [\"lint-staged@15.5.2\", \"\", { \"dependencies\": { \"chalk\": \"^5.4.1\", \"commander\": \"^13.1.0\", \"debug\": \"^4.4.0\", \"execa\": \"^8.0.1\", \"lilconfig\": \"^3.1.3\", \"listr2\": \"^8.2.5\", \"micromatch\": \"^4.0.8\", \"pidtree\": \"^0.6.0\", \"string-argv\": \"^0.3.2\", \"yaml\": \"^2.7.0\" }, \"bin\": { \"lint-staged\": \"bin/lint-staged.js\" } }, \"sha512-YUSOLq9VeRNAo/CTaVmhGDKG+LBtA8KF1X4K5+ykMSwWST1vDxJRB2kv2COgLb1fvpCo+A/y9A0G0znNVmdx4w==\"],\n\n    \"listr2\": [\"listr2@8.3.3\", \"\", { \"dependencies\": { \"cli-truncate\": \"^4.0.0\", \"colorette\": \"^2.0.20\", \"eventemitter3\": \"^5.0.1\", \"log-update\": \"^6.1.0\", \"rfdc\": \"^1.4.1\", \"wrap-ansi\": \"^9.0.0\" } }, \"sha512-LWzX2KsqcB1wqQ4AHgYb4RsDXauQiqhjLk+6hjbaeHG4zpjjVAB6wC/gz6X0l+Du1cN3pUB5ZlrvTbhGSNnUQQ==\"],\n\n    \"local-pkg\": [\"local-pkg@1.1.1\", \"\", { \"dependencies\": { \"mlly\": \"^1.7.4\", \"pkg-types\": \"^2.0.1\", \"quansync\": \"^0.2.8\" } }, \"sha512-WunYko2W1NcdfAFpuLUoucsgULmgDBRkdxHxWQ7mK0cQqwPiy8E1enjuRBrhLtZkB5iScJ1XIPdhVEFK8aOLSg==\"],\n\n    \"locate-path\": [\"locate-path@6.0.0\", \"\", { \"dependencies\": { \"p-locate\": \"^5.0.0\" } }, \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\"],\n\n    \"lodash\": [\"lodash@4.17.21\", \"\", {}, \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\"],\n\n    \"lodash-es\": [\"lodash-es@4.17.21\", \"\", {}, \"sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==\"],\n\n    \"lodash._reinterpolate\": [\"lodash._reinterpolate@3.0.0\", \"\", {}, \"sha512-xYHt68QRoYGjeeM/XOE1uJtvXQAgvszfBhjV4yvsQH0u2i9I6cI6c6/eG4Hh3UAOVn0y/xAXwmTzEay49Q//HA==\"],\n\n    \"lodash.camelcase\": [\"lodash.camelcase@4.3.0\", \"\", {}, \"sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==\"],\n\n    \"lodash.castarray\": [\"lodash.castarray@4.4.0\", \"\", {}, \"sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==\"],\n\n    \"lodash.debounce\": [\"lodash.debounce@4.0.8\", \"\", {}, \"sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==\"],\n\n    \"lodash.isplainobject\": [\"lodash.isplainobject@4.0.6\", \"\", {}, \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\"],\n\n    \"lodash.kebabcase\": [\"lodash.kebabcase@4.1.1\", \"\", {}, \"sha512-N8XRTIMMqqDgSy4VLKPnJ/+hpGZN+PHQiJnSenYqPaVV/NCqEogTnAdZLQiGKhxX+JCs8waWq2t1XHWKOmlY8g==\"],\n\n    \"lodash.merge\": [\"lodash.merge@4.6.2\", \"\", {}, \"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==\"],\n\n    \"lodash.mergewith\": [\"lodash.mergewith@4.6.2\", \"\", {}, \"sha512-GK3g5RPZWTRSeLSpgP8Xhra+pnjBC56q9FZYe1d5RN3TJ35dbkGy3YqBSMbyCrlbi+CM9Z3Jk5yTL7RCsqboyQ==\"],\n\n    \"lodash.snakecase\": [\"lodash.snakecase@4.1.1\", \"\", {}, \"sha512-QZ1d4xoBHYUeuouhEq3lk3Uq7ldgyFXGBhg04+oRLnIz8o9T65Eh+8YdroUwn846zchkA9yDsDl5CVVaV2nqYw==\"],\n\n    \"lodash.startcase\": [\"lodash.startcase@4.4.0\", \"\", {}, \"sha512-+WKqsK294HMSc2jEbNgpHpd0JfIBhp7rEV4aqXWqFr6AlXov+SlcgB1Fv01y2kGe3Gc8nMW7VA0SrGuSkRfIEg==\"],\n\n    \"lodash.template\": [\"lodash.template@4.5.0\", \"\", { \"dependencies\": { \"lodash._reinterpolate\": \"^3.0.0\", \"lodash.templatesettings\": \"^4.0.0\" } }, \"sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==\"],\n\n    \"lodash.templatesettings\": [\"lodash.templatesettings@4.2.0\", \"\", { \"dependencies\": { \"lodash._reinterpolate\": \"^3.0.0\" } }, \"sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==\"],\n\n    \"lodash.throttle\": [\"lodash.throttle@4.1.1\", \"\", {}, \"sha512-wIkUCfVKpVsWo3JSZlc+8MB5it+2AN5W8J7YVMST30UrvcQNZ1Okbj+rbVniijTWE6FGYy4XJq/rHkas8qJMLQ==\"],\n\n    \"lodash.uniq\": [\"lodash.uniq@4.5.0\", \"\", {}, \"sha512-xfBaXQd9ryd9dlSDvnvI0lvxfLJlYAZzXomUYzLKtUeOQvOP5piqAWuGtrhWeqaXK9hhoM/iyJc5AV+XfsX3HQ==\"],\n\n    \"lodash.upperfirst\": [\"lodash.upperfirst@4.3.1\", \"\", {}, \"sha512-sReKOYJIJf74dhJONhU4e0/shzi1trVbSWDOhKYE5XV2O+H7Sb2Dihwuc7xWxVl+DgFPyTqIN3zMfT9cq5iWDg==\"],\n\n    \"log-symbols\": [\"log-symbols@5.1.0\", \"\", { \"dependencies\": { \"chalk\": \"^5.0.0\", \"is-unicode-supported\": \"^1.1.0\" } }, \"sha512-l0x2DvrW294C9uDCoQe1VSU4gf529FkSZ6leBl4TiqZH/e+0R7hSfHQBNut2mNygDgHwvYHfFLn6Oxb3VWj2rA==\"],\n\n    \"log-update\": [\"log-update@6.1.0\", \"\", { \"dependencies\": { \"ansi-escapes\": \"^7.0.0\", \"cli-cursor\": \"^5.0.0\", \"slice-ansi\": \"^7.1.0\", \"strip-ansi\": \"^7.1.0\", \"wrap-ansi\": \"^9.0.0\" } }, \"sha512-9ie8ItPR6tjY5uYJh8K/Zrv/RMZ5VOlOWvtZdEHYSTFKZfIBPQa9tOAEeAWhd+AnIneLJ22w5fjOYtoutpWq5w==\"],\n\n    \"long\": [\"long@5.3.2\", \"\", {}, \"sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==\"],\n\n    \"longest-streak\": [\"longest-streak@3.1.0\", \"\", {}, \"sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==\"],\n\n    \"loops\": [\"loops@5.0.1\", \"\", {}, \"sha512-xM1c9mnlr8Hr4cHW944TQoK6ApynjinUWOgYZd9/B0/3lwTThq24BQ7+XLjgbFAP5kJzqDTRDQi3t+Diy51Udw==\"],\n\n    \"loose-envify\": [\"loose-envify@1.4.0\", \"\", { \"dependencies\": { \"js-tokens\": \"^3.0.0 || ^4.0.0\" }, \"bin\": { \"loose-envify\": \"cli.js\" } }, \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\"],\n\n    \"lower-case\": [\"lower-case@2.0.2\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.3\" } }, \"sha512-7fm3l3NAF9WfN6W3JOmf5drwpVqX78JtoGJ3A6W0a6ZnldM41w2fV5D490psKFTpMds8TJse/eHLFFsNHHjHgg==\"],\n\n    \"lru-cache\": [\"lru-cache@6.0.0\", \"\", { \"dependencies\": { \"yallist\": \"^4.0.0\" } }, \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\"],\n\n    \"lucide-react\": [\"lucide-react@0.487.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\" } }, \"sha512-aKqhOQ+YmFnwq8dWgGjOuLc8V1R9/c/yOd+zDY4+ohsR2Jo05lSGc3WsstYPIzcTpeosN7LoCkLReUUITvaIvw==\"],\n\n    \"lz-string\": [\"lz-string@1.5.0\", \"\", { \"bin\": { \"lz-string\": \"bin/bin.js\" } }, \"sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==\"],\n\n    \"maath\": [\"maath@0.10.8\", \"\", { \"peerDependencies\": { \"@types/three\": \">=0.134.0\", \"three\": \">=0.134.0\" } }, \"sha512-tRvbDF0Pgqz+9XUa4jjfgAQ8/aPKmQdWXilFu2tMy4GWj4NOsx99HlULO4IeREfbO3a0sA145DZYyvXPkybm0g==\"],\n\n    \"magic-bytes.js\": [\"magic-bytes.js@1.12.1\", \"\", {}, \"sha512-ThQLOhN86ZkJ7qemtVRGYM+gRgR8GEXNli9H/PMvpnZsE44Xfh3wx9kGJaldg314v85m+bFW6WBMaVHJc/c3zA==\"],\n\n    \"make-dir\": [\"make-dir@4.0.0\", \"\", { \"dependencies\": { \"semver\": \"^7.5.3\" } }, \"sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==\"],\n\n    \"make-error\": [\"make-error@1.3.6\", \"\", {}, \"sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==\"],\n\n    \"makeerror\": [\"makeerror@1.0.12\", \"\", { \"dependencies\": { \"tmpl\": \"1.0.5\" } }, \"sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==\"],\n\n    \"markdown-extensions\": [\"markdown-extensions@2.0.0\", \"\", {}, \"sha512-o5vL7aDWatOTX8LzaS1WMoaoxIiLRQJuIKKe2wAw6IeULDHaqbiqiggmx+pKvZDb1Sj+pE46Sn1T7lCqfFtg1Q==\"],\n\n    \"marked\": [\"marked@16.1.2\", \"\", { \"bin\": { \"marked\": \"bin/marked.js\" } }, \"sha512-rNQt5EvRinalby7zJZu/mB+BvaAY2oz3wCuCjt1RDrWNpS1Pdf9xqMOeC9Hm5adBdcV/3XZPJpG58eT+WBc0XQ==\"],\n\n    \"marky\": [\"marky@1.3.0\", \"\", {}, \"sha512-ocnPZQLNpvbedwTy9kNrQEsknEfgvcLMvOtz3sFeWApDq1MXH1TqkCIx58xlpESsfwQOnuBO9beyQuNGzVvuhQ==\"],\n\n    \"math-intrinsics\": [\"math-intrinsics@1.1.0\", \"\", {}, \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\"],\n\n    \"mdast-util-definitions\": [\"mdast-util-definitions@5.1.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-8SVPMuHqlPME/z3gqVwWY4zVXn8lqKv/pAhC57FuJ40ImXyBpmO5ukh98zB2v7Blql2FiHjHv9LVztSIqjY+MA==\"],\n\n    \"mdast-util-from-markdown\": [\"mdast-util-from-markdown@2.0.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"@types/unist\": \"^3.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"mdast-util-to-string\": \"^4.0.0\", \"micromark\": \"^4.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^2.0.0\", \"micromark-util-decode-string\": \"^2.0.0\", \"micromark-util-normalize-identifier\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unist-util-stringify-position\": \"^4.0.0\" } }, \"sha512-uZhTV/8NBuw0WHkPTrCqDOl0zVe1BIng5ZtHoDk49ME1qqcjYmmLmOf0gELgcRMxN4w2iuIeVso5/6QymSrgmA==\"],\n\n    \"mdast-util-frontmatter\": [\"mdast-util-frontmatter@1.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-to-markdown\": \"^1.3.0\", \"micromark-extension-frontmatter\": \"^1.0.0\" } }, \"sha512-JjA2OjxRqAa8wEG8hloD0uTU0kdn8kbtOWpPP94NBkfAlbxn4S8gCGf/9DwFtEeGPXrDcNXdiDjVaRdUFqYokw==\"],\n\n    \"mdast-util-mdx\": [\"mdast-util-mdx@3.0.0\", \"\", { \"dependencies\": { \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-mdx-expression\": \"^2.0.0\", \"mdast-util-mdx-jsx\": \"^3.0.0\", \"mdast-util-mdxjs-esm\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\" } }, \"sha512-JfbYLAW7XnYTTbUsmpu0kdBUVe+yKVJZBItEjwyYJiDJuZ9w4eeaqks4HQO+R7objWgS2ymV60GYpI14Ug554w==\"],\n\n    \"mdast-util-mdx-expression\": [\"mdast-util-mdx-expression@2.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"devlop\": \"^1.0.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\" } }, \"sha512-J6f+9hUp+ldTZqKRSg7Vw5V6MqjATc+3E4gf3CFNcuZNWD8XdyI6zQ8GqH7f8169MM6P7hMBRDVGnn7oHB9kXQ==\"],\n\n    \"mdast-util-mdx-jsx\": [\"mdast-util-mdx-jsx@3.2.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"@types/unist\": \"^3.0.0\", \"ccount\": \"^2.0.0\", \"devlop\": \"^1.1.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\", \"parse-entities\": \"^4.0.0\", \"stringify-entities\": \"^4.0.0\", \"unist-util-stringify-position\": \"^4.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-lj/z8v0r6ZtsN/cGNNtemmmfoLAFZnjMbNyLzBafjzikOM+glrjNHPlf6lQDOTccj9n5b0PPihEBbhneMyGs1Q==\"],\n\n    \"mdast-util-mdxjs-esm\": [\"mdast-util-mdxjs-esm@2.0.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"devlop\": \"^1.0.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\" } }, \"sha512-EcmOpxsZ96CvlP03NghtH1EsLtr0n9Tm4lPUJUBccV9RwUOneqSycg19n5HGzCf+10LozMRSObtVr3ee1WoHtg==\"],\n\n    \"mdast-util-phrasing\": [\"mdast-util-phrasing@4.1.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"unist-util-is\": \"^6.0.0\" } }, \"sha512-TqICwyvJJpBwvGAMZjj4J2n0X8QWp21b9l0o7eXyVJ25YNWYbJDVIyD1bZXE6WtV6RmKJVYmQAKWa0zWOABz2w==\"],\n\n    \"mdast-util-to-hast\": [\"mdast-util-to-hast@13.2.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"@ungap/structured-clone\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^2.0.0\", \"trim-lines\": \"^3.0.0\", \"unist-util-position\": \"^5.0.0\", \"unist-util-visit\": \"^5.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==\"],\n\n    \"mdast-util-to-markdown\": [\"mdast-util-to-markdown@2.1.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"@types/unist\": \"^3.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^4.0.0\", \"mdast-util-to-string\": \"^4.0.0\", \"micromark-util-classify-character\": \"^2.0.0\", \"micromark-util-decode-string\": \"^2.0.0\", \"unist-util-visit\": \"^5.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-xj68wMTvGXVOKonmog6LwyJKrYXZPvlwabaryTjLh9LuvovB/KAH+kvi8Gjj+7rJjsFi23nkUxRQv1KqSroMqA==\"],\n\n    \"mdast-util-to-string\": [\"mdast-util-to-string@4.0.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\" } }, \"sha512-0H44vDimn51F0YwvxSJSm0eCDOJTRlmN0R1yBh4HLj9wiV1Dn0QoXGbvFAWj2hSItVTlCmBF1hqKlIyUBVFLPg==\"],\n\n    \"mdx-bundler\": [\"mdx-bundler@9.2.1\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.16.3\", \"@esbuild-plugins/node-resolve\": \"^0.1.4\", \"@fal-works/esbuild-plugin-global-externals\": \"^2.1.2\", \"@mdx-js/esbuild\": \"^2.0.0\", \"gray-matter\": \"^4.0.3\", \"remark-frontmatter\": \"^4.0.1\", \"remark-mdx-frontmatter\": \"^1.1.1\", \"uuid\": \"^8.3.2\", \"vfile\": \"^5.3.2\" }, \"peerDependencies\": { \"esbuild\": \"0.*\" } }, \"sha512-hWEEip1KU9MCNqeH2rqwzAZ1pdqPPbfkx9OTJjADqGPQz4t9BO85fhI7AP9gVYrpmfArf9/xJZUN0yBErg/G/Q==\"],\n\n    \"media-typer\": [\"media-typer@0.3.0\", \"\", {}, \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\"],\n\n    \"memfs\": [\"memfs@3.6.0\", \"\", { \"dependencies\": { \"fs-monkey\": \"^1.0.4\" } }, \"sha512-EGowvkkgbMcIChjMTMkESFDbZeSh8xZ7kNSF0hAiAN4Jh6jgHCRS0Ga/+C8y6Au+oqpezRHCfPsmJ2+DwAgiwQ==\"],\n\n    \"memoize-one\": [\"memoize-one@5.2.1\", \"\", {}, \"sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==\"],\n\n    \"meow\": [\"meow@12.1.1\", \"\", {}, \"sha512-BhXM0Au22RwUneMPwSCnyhTOizdWoIEPU9sp0Aqa1PnDMR5Wv2FGXYDjuzJEIX+Eo2Rb8xuYe5jrnm5QowQFkw==\"],\n\n    \"merge-descriptors\": [\"merge-descriptors@1.0.1\", \"\", {}, \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"],\n\n    \"merge-stream\": [\"merge-stream@2.0.0\", \"\", {}, \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\"],\n\n    \"merge2\": [\"merge2@1.4.1\", \"\", {}, \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\"],\n\n    \"mermaid\": [\"mermaid@11.9.0\", \"\", { \"dependencies\": { \"@braintree/sanitize-url\": \"^7.0.4\", \"@iconify/utils\": \"^2.1.33\", \"@mermaid-js/parser\": \"^0.6.2\", \"@types/d3\": \"^7.4.3\", \"cytoscape\": \"^3.29.3\", \"cytoscape-cose-bilkent\": \"^4.1.0\", \"cytoscape-fcose\": \"^2.2.0\", \"d3\": \"^7.9.0\", \"d3-sankey\": \"^0.12.3\", \"dagre-d3-es\": \"7.0.11\", \"dayjs\": \"^1.11.13\", \"dompurify\": \"^3.2.5\", \"katex\": \"^0.16.22\", \"khroma\": \"^2.1.0\", \"lodash-es\": \"^4.17.21\", \"marked\": \"^16.0.0\", \"roughjs\": \"^4.6.6\", \"stylis\": \"^4.3.6\", \"ts-dedent\": \"^2.2.0\", \"uuid\": \"^11.1.0\" } }, \"sha512-YdPXn9slEwO0omQfQIsW6vS84weVQftIyyTGAZCwM//MGhPzL1+l6vO6bkf0wnP4tHigH1alZ5Ooy3HXI2gOag==\"],\n\n    \"meshline\": [\"meshline@3.3.1\", \"\", { \"peerDependencies\": { \"three\": \">=0.137\" } }, \"sha512-/TQj+JdZkeSUOl5Mk2J7eLcYTLiQm2IDzmlSvYm7ov15anEcDJ92GHqqazxTSreeNgfnYu24kiEvvv0WlbCdFQ==\"],\n\n    \"meshoptimizer\": [\"meshoptimizer@0.22.0\", \"\", {}, \"sha512-IebiK79sqIy+E4EgOr+CAw+Ke8hAspXKzBd0JdgEmPHiAwmvEj2S4h1rfvo+o/BnfEYd/jAOg5IeeIjzlzSnDg==\"],\n\n    \"methods\": [\"methods@1.1.2\", \"\", {}, \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\"],\n\n    \"metro\": [\"metro@0.83.1\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.24.7\", \"@babel/core\": \"^7.25.2\", \"@babel/generator\": \"^7.25.0\", \"@babel/parser\": \"^7.25.3\", \"@babel/template\": \"^7.25.0\", \"@babel/traverse\": \"^7.25.3\", \"@babel/types\": \"^7.25.2\", \"accepts\": \"^1.3.7\", \"chalk\": \"^4.0.0\", \"ci-info\": \"^2.0.0\", \"connect\": \"^3.6.5\", \"debug\": \"^4.4.0\", \"error-stack-parser\": \"^2.0.6\", \"flow-enums-runtime\": \"^0.0.6\", \"graceful-fs\": \"^4.2.4\", \"hermes-parser\": \"0.29.1\", \"image-size\": \"^1.0.2\", \"invariant\": \"^2.2.4\", \"jest-worker\": \"^29.7.0\", \"jsc-safe-url\": \"^0.2.2\", \"lodash.throttle\": \"^4.1.1\", \"metro-babel-transformer\": \"0.83.1\", \"metro-cache\": \"0.83.1\", \"metro-cache-key\": \"0.83.1\", \"metro-config\": \"0.83.1\", \"metro-core\": \"0.83.1\", \"metro-file-map\": \"0.83.1\", \"metro-resolver\": \"0.83.1\", \"metro-runtime\": \"0.83.1\", \"metro-source-map\": \"0.83.1\", \"metro-symbolicate\": \"0.83.1\", \"metro-transform-plugins\": \"0.83.1\", \"metro-transform-worker\": \"0.83.1\", \"mime-types\": \"^2.1.27\", \"nullthrows\": \"^1.1.1\", \"serialize-error\": \"^2.1.0\", \"source-map\": \"^0.5.6\", \"throat\": \"^5.0.0\", \"ws\": \"^7.5.10\", \"yargs\": \"^17.6.2\" }, \"bin\": { \"metro\": \"src/cli.js\" } }, \"sha512-UGKepmTxoGD4HkQV8YWvpvwef7fUujNtTgG4Ygf7m/M0qjvb9VuDmAsEU+UdriRX7F61pnVK/opz89hjKlYTXA==\"],\n\n    \"metro-babel-transformer\": [\"metro-babel-transformer@0.83.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"flow-enums-runtime\": \"^0.0.6\", \"hermes-parser\": \"0.29.1\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-r3xAD3964E8dwDBaZNSO2aIIvWXjIK80uO2xo0/pi3WI8XWT9h5SCjtGWtMtE5PRWw+t20TN0q1WMRsjvhC1rQ==\"],\n\n    \"metro-cache\": [\"metro-cache@0.83.1\", \"\", { \"dependencies\": { \"exponential-backoff\": \"^3.1.1\", \"flow-enums-runtime\": \"^0.0.6\", \"https-proxy-agent\": \"^7.0.5\", \"metro-core\": \"0.83.1\" } }, \"sha512-7N/Ad1PHa1YMWDNiyynTPq34Op2qIE68NWryGEQ4TSE3Zy6a8GpsYnEEZE4Qi6aHgsE+yZHKkRczeBgxhnFIxQ==\"],\n\n    \"metro-cache-key\": [\"metro-cache-key@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-ZUs+GD5CNeDLxx5UUWmfg26IL+Dnbryd+TLqTlZnDEgehkIa11kUSvgF92OFfJhONeXzV4rZDRGNXoo6JT+8Gg==\"],\n\n    \"metro-config\": [\"metro-config@0.83.1\", \"\", { \"dependencies\": { \"connect\": \"^3.6.5\", \"cosmiconfig\": \"^5.0.5\", \"flow-enums-runtime\": \"^0.0.6\", \"jest-validate\": \"^29.7.0\", \"metro\": \"0.83.1\", \"metro-cache\": \"0.83.1\", \"metro-core\": \"0.83.1\", \"metro-runtime\": \"0.83.1\" } }, \"sha512-HJhpZx3wyOkux/jeF1o7akFJzZFdbn6Zf7UQqWrvp7gqFqNulQ8Mju09raBgPmmSxKDl4LbbNeigkX0/nKY1QA==\"],\n\n    \"metro-core\": [\"metro-core@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\", \"lodash.throttle\": \"^4.1.1\", \"metro-resolver\": \"0.83.1\" } }, \"sha512-uVL1eAJcMFd2o2Q7dsbpg8COaxjZBBGaXqO2OHnivpCdfanraVL8dPmY6It9ZeqWLOihUKZ2yHW4b6soVCzH/Q==\"],\n\n    \"metro-file-map\": [\"metro-file-map@0.83.1\", \"\", { \"dependencies\": { \"debug\": \"^4.4.0\", \"fb-watchman\": \"^2.0.0\", \"flow-enums-runtime\": \"^0.0.6\", \"graceful-fs\": \"^4.2.4\", \"invariant\": \"^2.2.4\", \"jest-worker\": \"^29.7.0\", \"micromatch\": \"^4.0.4\", \"nullthrows\": \"^1.1.1\", \"walker\": \"^1.0.7\" } }, \"sha512-Yu429lnexKl44PttKw3nhqgmpBR+6UQ/tRaYcxPeEShtcza9DWakCn7cjqDTQZtWR2A8xSNv139izJMyQ4CG+w==\"],\n\n    \"metro-minify-terser\": [\"metro-minify-terser@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\", \"terser\": \"^5.15.0\" } }, \"sha512-kmooOxXLvKVxkh80IVSYO4weBdJDhCpg5NSPkjzzAnPJP43u6+usGXobkTWxxrAlq900bhzqKek4pBsUchlX6A==\"],\n\n    \"metro-resolver\": [\"metro-resolver@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-t8j46kiILAqqFS5RNa+xpQyVjULxRxlvMidqUswPEk5nQVNdlJslqizDm/Et3v/JKwOtQGkYAQCHxP1zGStR/g==\"],\n\n    \"metro-runtime\": [\"metro-runtime@0.83.1\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.25.0\", \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-3Ag8ZS4IwafL/JUKlaeM6/CbkooY+WcVeqdNlBG0m4S0Qz0om3rdFdy1y6fYBpl6AwXJwWeMuXrvZdMuByTcRA==\"],\n\n    \"metro-source-map\": [\"metro-source-map@0.83.1\", \"\", { \"dependencies\": { \"@babel/traverse\": \"^7.25.3\", \"@babel/traverse--for-generate-function-map\": \"npm:@babel/traverse@^7.25.3\", \"@babel/types\": \"^7.25.2\", \"flow-enums-runtime\": \"^0.0.6\", \"invariant\": \"^2.2.4\", \"metro-symbolicate\": \"0.83.1\", \"nullthrows\": \"^1.1.1\", \"ob1\": \"0.83.1\", \"source-map\": \"^0.5.6\", \"vlq\": \"^1.0.0\" } }, \"sha512-De7Vbeo96fFZ2cqmI0fWwVJbtHIwPZv++LYlWSwzTiCzxBDJORncN0LcT48Vi2UlQLzXJg+/CuTAcy7NBVh69A==\"],\n\n    \"metro-symbolicate\": [\"metro-symbolicate@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\", \"invariant\": \"^2.2.4\", \"metro-source-map\": \"0.83.1\", \"nullthrows\": \"^1.1.1\", \"source-map\": \"^0.5.6\", \"vlq\": \"^1.0.0\" }, \"bin\": { \"metro-symbolicate\": \"src/index.js\" } }, \"sha512-wPxYkONlq/Sv8Ji7vHEx5OzFouXAMQJjpcPW41ySKMLP/Ir18SsiJK2h4YkdKpYrTS1+0xf8oqF6nxCsT3uWtg==\"],\n\n    \"metro-transform-plugins\": [\"metro-transform-plugins@0.83.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@babel/generator\": \"^7.25.0\", \"@babel/template\": \"^7.25.0\", \"@babel/traverse\": \"^7.25.3\", \"flow-enums-runtime\": \"^0.0.6\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-1Y+I8oozXwhuS0qwC+ezaHXBf0jXW4oeYn4X39XWbZt9X2HfjodqY9bH9r6RUTsoiK7S4j8Ni2C91bUC+sktJQ==\"],\n\n    \"metro-transform-worker\": [\"metro-transform-worker@0.83.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.25.2\", \"@babel/generator\": \"^7.25.0\", \"@babel/parser\": \"^7.25.3\", \"@babel/types\": \"^7.25.2\", \"flow-enums-runtime\": \"^0.0.6\", \"metro\": \"0.83.1\", \"metro-babel-transformer\": \"0.83.1\", \"metro-cache\": \"0.83.1\", \"metro-cache-key\": \"0.83.1\", \"metro-minify-terser\": \"0.83.1\", \"metro-source-map\": \"0.83.1\", \"metro-transform-plugins\": \"0.83.1\", \"nullthrows\": \"^1.1.1\" } }, \"sha512-owCrhPyUxdLgXEEEAL2b14GWTPZ2zYuab1VQXcfEy0sJE71iciD7fuMcrngoufh7e7UHDZ56q4ktXg8wgiYA1Q==\"],\n\n    \"micromark\": [\"micromark@4.0.2\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-core-commonmark\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-combine-extensions\": \"^2.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^2.0.0\", \"micromark-util-encode\": \"^2.0.0\", \"micromark-util-normalize-identifier\": \"^2.0.0\", \"micromark-util-resolve-all\": \"^2.0.0\", \"micromark-util-sanitize-uri\": \"^2.0.0\", \"micromark-util-subtokenize\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-zpe98Q6kvavpCr1NPVSCMebCKfD7CA2NqZ+rykeNhONIJBpc1tFKt9hucLGwha3jNTNI8lHpctWJWoimVF4PfA==\"],\n\n    \"micromark-core-commonmark\": [\"micromark-core-commonmark@2.0.3\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-factory-destination\": \"^2.0.0\", \"micromark-factory-label\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-factory-title\": \"^2.0.0\", \"micromark-factory-whitespace\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-classify-character\": \"^2.0.0\", \"micromark-util-html-tag-name\": \"^2.0.0\", \"micromark-util-normalize-identifier\": \"^2.0.0\", \"micromark-util-resolve-all\": \"^2.0.0\", \"micromark-util-subtokenize\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-RDBrHEMSxVFLg6xvnXmb1Ayr2WzLAWjeSATAoxwKYJV94TeNavgoIdA0a9ytzDSVzBy2YKFK+emCPOEibLeCrg==\"],\n\n    \"micromark-extension-frontmatter\": [\"micromark-extension-frontmatter@1.1.1\", \"\", { \"dependencies\": { \"fault\": \"^2.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-m2UH9a7n3W8VAH9JO9y01APpPKmNNNs71P0RbknEmYSaZU5Ghogv38BYO94AI5Xw6OYfxZRdHZZ2nYjs/Z+SZQ==\"],\n\n    \"micromark-extension-mdx-expression\": [\"micromark-extension-mdx-expression@3.0.1\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-factory-mdx-expression\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-dD/ADLJ1AeMvSAKBwO22zG22N4ybhe7kFIZ3LsDI0GlsNr2A3KYxb0LdC1u5rj4Nw+CHKY0RVdnHX8vj8ejm4Q==\"],\n\n    \"micromark-extension-mdx-jsx\": [\"micromark-extension-mdx-jsx@3.0.2\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^3.0.0\", \"micromark-factory-mdx-expression\": \"^2.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-e5+q1DjMh62LZAJOnDraSSbDMvGJ8x3cbjygy2qFEi7HCeUT4BDKCvMozPozcD6WmOt6sVvYDNBKhFSz3kjOVQ==\"],\n\n    \"micromark-extension-mdx-md\": [\"micromark-extension-mdx-md@2.0.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-EpAiszsB3blw4Rpba7xTOUptcFeBFi+6PY8VnJ2hhimH+vCQDirWgsMpz7w1XcZE7LVrSAUGb9VJpG9ghlYvYQ==\"],\n\n    \"micromark-extension-mdxjs\": [\"micromark-extension-mdxjs@3.0.0\", \"\", { \"dependencies\": { \"acorn\": \"^8.0.0\", \"acorn-jsx\": \"^5.0.0\", \"micromark-extension-mdx-expression\": \"^3.0.0\", \"micromark-extension-mdx-jsx\": \"^3.0.0\", \"micromark-extension-mdx-md\": \"^2.0.0\", \"micromark-extension-mdxjs-esm\": \"^3.0.0\", \"micromark-util-combine-extensions\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-A873fJfhnJ2siZyUrJ31l34Uqwy4xIFmvPY1oj+Ean5PHcPBYzEsvqvWGaWcfEIr11O5Dlw3p2y0tZWpKHDejQ==\"],\n\n    \"micromark-extension-mdxjs-esm\": [\"micromark-extension-mdxjs-esm@3.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-core-commonmark\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-DJFl4ZqkErRpq/dAPyeWp15tGrcrrJho1hKK5uBS70BCtfrIFg81sqcTVu3Ta+KD1Tk5vAtBNElWxtAa+m8K9A==\"],\n\n    \"micromark-factory-destination\": [\"micromark-factory-destination@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-Xe6rDdJlkmbFRExpTOmRj9N3MaWmbAgdpSrBQvCFqhezUn4AHqJHbaEnfbVYYiexVSs//tqOdY/DxhjdCiJnIA==\"],\n\n    \"micromark-factory-label\": [\"micromark-factory-label@2.0.1\", \"\", { \"dependencies\": { \"devlop\": \"^1.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-VFMekyQExqIW7xIChcXn4ok29YE3rnuyveW3wZQWWqF4Nv9Wk5rgJ99KzPvHjkmPXF93FXIbBp6YdW3t71/7Vg==\"],\n\n    \"micromark-factory-mdx-expression\": [\"micromark-factory-mdx-expression@2.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"devlop\": \"^1.0.0\", \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-events-to-acorn\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unist-util-position-from-estree\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-kQnEtA3vzucU2BkrIa8/VaSAsP+EJ3CKOvhMuJgOEGg9KDC6OAY6nSnNDVRiVNRqj7Y4SlSzcStaH/5jge8JdQ==\"],\n\n    \"micromark-factory-space\": [\"micromark-factory-space@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-zRkxjtBxxLd2Sc0d+fbnEunsTj46SWXgXciZmHq0kDYGnck/ZSGj9/wULTV95uoeYiK5hRXP2mJ98Uo4cq/LQg==\"],\n\n    \"micromark-factory-title\": [\"micromark-factory-title@2.0.1\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-5bZ+3CjhAd9eChYTHsjy6TGxpOFSKgKKJPJxr293jTbfry2KDoWkhBb6TcPVB4NmzaPhMs1Frm9AZH7OD4Cjzw==\"],\n\n    \"micromark-factory-whitespace\": [\"micromark-factory-whitespace@2.0.1\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^2.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-Ob0nuZ3PKt/n0hORHyvoD9uZhr+Za8sFoP+OnMcnWK5lngSzALgQYKMr9RJVOWLqQYuyn6ulqGWSXdwf6F80lQ==\"],\n\n    \"micromark-util-character\": [\"micromark-util-character@2.1.1\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==\"],\n\n    \"micromark-util-chunked\": [\"micromark-util-chunked@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-QUNFEOPELfmvv+4xiNg2sRYeS/P84pTW0TCgP5zc9FpXetHY0ab7SxKyAQCNCc1eK0459uoLI1y5oO5Vc1dbhA==\"],\n\n    \"micromark-util-classify-character\": [\"micromark-util-classify-character@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-K0kHzM6afW/MbeWYWLjoHQv1sgg2Q9EccHEDzSkxiP/EaagNzCm7T/WMKZ3rjMbvIpvBiZgwR3dKMygtA4mG1Q==\"],\n\n    \"micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-OnAnH8Ujmy59JcyZw8JSbK9cGpdVY44NKgSM7E9Eh7DiLS2E9RNQf0dONaGDzEG9yjEl5hcqeIsj4hfRkLH/Bg==\"],\n\n    \"micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@2.0.2\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-ccUbYk6CwVdkmCQMyr64dXz42EfHGkPQlBj5p7YVGzq8I7CtjXZJrubAYezf7Rp+bjPseiROqe7G6foFd+lEuw==\"],\n\n    \"micromark-util-decode-string\": [\"micromark-util-decode-string@2.0.1\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^2.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-nDV/77Fj6eH1ynwscYTOsbK7rR//Uj0bZXBwJZRfaLEJ1iGBR6kIfNmlNqaqJf649EP0F3NWNdeJi03elllNUQ==\"],\n\n    \"micromark-util-encode\": [\"micromark-util-encode@2.0.1\", \"\", {}, \"sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==\"],\n\n    \"micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@2.0.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^3.0.0\", \"devlop\": \"^1.0.0\", \"estree-util-visit\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-jmsiEIiZ1n7X1Rr5k8wVExBQCg5jy4UXVADItHmNk1zkwEVhBuIUKRu3fqv+hs4nxLISi2DQGlqIOGiFxgbfHg==\"],\n\n    \"micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@2.0.1\", \"\", {}, \"sha512-2cNEiYDhCWKI+Gs9T0Tiysk136SnR13hhO8yW6BGNyhOC4qYFnwF1nKfD3HFAIXA5c45RrIG1ub11GiXeYd1xA==\"],\n\n    \"micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-sxPqmo70LyARJs0w2UclACPUUEqltCkJ6PhKdMIDuJ3gSf/Q+/GIe3WKl0Ijb/GyH9lOpUkRAO2wp0GVkLvS9Q==\"],\n\n    \"micromark-util-resolve-all\": [\"micromark-util-resolve-all@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-VdQyxFWFT2/FGJgwQnJYbe1jjQoNTS4RjglmSjTUlpUMa95Htx9NHeYW4rGDJzbjvCsl9eLjMQwGeElsqmzcHg==\"],\n\n    \"micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@2.0.1\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^2.0.0\", \"micromark-util-encode\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\" } }, \"sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==\"],\n\n    \"micromark-util-subtokenize\": [\"micromark-util-subtokenize@2.1.0\", \"\", { \"dependencies\": { \"devlop\": \"^1.0.0\", \"micromark-util-chunked\": \"^2.0.0\", \"micromark-util-symbol\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\" } }, \"sha512-XQLu552iSctvnEcgXw6+Sx75GflAPNED1qx7eBJ+wydBb2KCbRZe+NwvIEEMM83uml1+2WSXpBAcp9IUCgCYWA==\"],\n\n    \"micromark-util-symbol\": [\"micromark-util-symbol@2.0.1\", \"\", {}, \"sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==\"],\n\n    \"micromark-util-types\": [\"micromark-util-types@2.0.2\", \"\", {}, \"sha512-Yw0ECSpJoViF1qTU4DC6NwtC4aWGt1EkzaQB8KPPyCRR8z9TWeV0HbEFGTO+ZY1wB22zmxnJqhPyTpOVCpeHTA==\"],\n\n    \"micromatch\": [\"micromatch@4.0.8\", \"\", { \"dependencies\": { \"braces\": \"^3.0.3\", \"picomatch\": \"^2.3.1\" } }, \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\"],\n\n    \"mime\": [\"mime@1.6.0\", \"\", { \"bin\": { \"mime\": \"cli.js\" } }, \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\"],\n\n    \"mime-db\": [\"mime-db@1.52.0\", \"\", {}, \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\"],\n\n    \"mime-types\": [\"mime-types@2.1.35\", \"\", { \"dependencies\": { \"mime-db\": \"1.52.0\" } }, \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\"],\n\n    \"mimic-fn\": [\"mimic-fn@2.1.0\", \"\", {}, \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\"],\n\n    \"mimic-function\": [\"mimic-function@5.0.1\", \"\", {}, \"sha512-VP79XUPxV2CigYP3jWwAUFSku2aKqBH7uTAapFWCBqutsbmDo96KY5o8uh6U+/YSIn5OxJnXp73beVkpqMIGhA==\"],\n\n    \"mimic-response\": [\"mimic-response@3.1.0\", \"\", {}, \"sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==\"],\n\n    \"min-indent\": [\"min-indent@1.0.1\", \"\", {}, \"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\"],\n\n    \"minimatch\": [\"minimatch@3.1.2\", \"\", { \"dependencies\": { \"brace-expansion\": \"^1.1.7\" } }, \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\"],\n\n    \"minimist\": [\"minimist@1.2.8\", \"\", {}, \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\"],\n\n    \"minimisted\": [\"minimisted@2.0.1\", \"\", { \"dependencies\": { \"minimist\": \"^1.2.5\" } }, \"sha512-1oPjfuLQa2caorJUM8HV8lGgWCc0qqAO1MNv/k05G4qslmsndV/5WdNZrqCiyqiz3wohia2Ij2B7w2Dr7/IyrA==\"],\n\n    \"minipass\": [\"minipass@7.1.2\", \"\", {}, \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\"],\n\n    \"mitt\": [\"mitt@3.0.1\", \"\", {}, \"sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==\"],\n\n    \"mkdirp\": [\"mkdirp@2.1.6\", \"\", { \"bin\": { \"mkdirp\": \"dist/cjs/src/bin.js\" } }, \"sha512-+hEnITedc8LAtIP9u3HJDFIdcLV2vXP33sqLLIzkv1Db1zO/1OxbvYf0Y1OC/S/Qo5dxHXepofhmxL02PsKe+A==\"],\n\n    \"mlly\": [\"mlly@1.7.4\", \"\", { \"dependencies\": { \"acorn\": \"^8.14.0\", \"pathe\": \"^2.0.1\", \"pkg-types\": \"^1.3.0\", \"ufo\": \"^1.5.4\" } }, \"sha512-qmdSIPC4bDJXgZTCR7XosJiNKySV7O215tsPtDN9iEO/7q/76b/ijtgRu/+epFXSJhijtTCCGp3DWS549P3xKw==\"],\n\n    \"motion-dom\": [\"motion-dom@11.18.1\", \"\", { \"dependencies\": { \"motion-utils\": \"^11.18.1\" } }, \"sha512-g76KvA001z+atjfxczdRtw/RXOM3OMSdd1f4DL77qCTF/+avrRJiawSG4yDibEQ215sr9kpinSlX2pCTJ9zbhw==\"],\n\n    \"motion-utils\": [\"motion-utils@11.18.1\", \"\", {}, \"sha512-49Kt+HKjtbJKLtgO/LKj9Ld+6vw9BjH5d9sc40R/kVyH8GLAXgT42M2NnuPcJNuA3s9ZfZBUcwIgpmZWGEE+hA==\"],\n\n    \"mri\": [\"mri@1.2.0\", \"\", {}, \"sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==\"],\n\n    \"ms\": [\"ms@2.1.3\", \"\", {}, \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"],\n\n    \"mylas\": [\"mylas@2.1.13\", \"\", {}, \"sha512-+MrqnJRtxdF+xngFfUUkIMQrUUL0KsxbADUkn23Z/4ibGg192Q+z+CQyiYwvWTsYjJygmMR8+w3ZDa98Zh6ESg==\"],\n\n    \"mz\": [\"mz@2.7.0\", \"\", { \"dependencies\": { \"any-promise\": \"^1.0.0\", \"object-assign\": \"^4.0.1\", \"thenify-all\": \"^1.0.0\" } }, \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\"],\n\n    \"nanoid\": [\"nanoid@5.0.7\", \"\", { \"bin\": { \"nanoid\": \"bin/nanoid.js\" } }, \"sha512-oLxFY2gd2IqnjcYyOXD8XGCftpGtZP2AbHbOkthDkvRywH5ayNtPVy9YlOPcHckXzbLTCHpkb7FB+yuxKV13pQ==\"],\n\n    \"napi-postinstall\": [\"napi-postinstall@0.3.3\", \"\", { \"bin\": { \"napi-postinstall\": \"lib/cli.js\" } }, \"sha512-uTp172LLXSxuSYHv/kou+f6KW3SMppU9ivthaVTXian9sOt3XM/zHYHpRZiLgQoxeWfYUnslNWQHF1+G71xcow==\"],\n\n    \"natural-compare\": [\"natural-compare@1.4.0\", \"\", {}, \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\"],\n\n    \"negotiator\": [\"negotiator@0.6.3\", \"\", {}, \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\"],\n\n    \"netmask\": [\"netmask@2.0.2\", \"\", {}, \"sha512-dBpDMdxv9Irdq66304OLfEmQ9tbNRFnFTuZiLo+bD+r332bBmMJ8GBLXklIXXgxd3+v9+KUnZaUR5PJMa75Gsg==\"],\n\n    \"next\": [\"next@14.2.13\", \"\", { \"dependencies\": { \"@next/env\": \"14.2.13\", \"@swc/helpers\": \"0.5.5\", \"busboy\": \"1.6.0\", \"caniuse-lite\": \"^1.0.30001579\", \"graceful-fs\": \"^4.2.11\", \"postcss\": \"8.4.31\", \"styled-jsx\": \"5.1.1\" }, \"optionalDependencies\": { \"@next/swc-darwin-arm64\": \"14.2.13\", \"@next/swc-darwin-x64\": \"14.2.13\", \"@next/swc-linux-arm64-gnu\": \"14.2.13\", \"@next/swc-linux-arm64-musl\": \"14.2.13\", \"@next/swc-linux-x64-gnu\": \"14.2.13\", \"@next/swc-linux-x64-musl\": \"14.2.13\", \"@next/swc-win32-arm64-msvc\": \"14.2.13\", \"@next/swc-win32-ia32-msvc\": \"14.2.13\", \"@next/swc-win32-x64-msvc\": \"14.2.13\" }, \"peerDependencies\": { \"@opentelemetry/api\": \"^1.1.0\", \"@playwright/test\": \"^1.41.2\", \"react\": \"^18.2.0\", \"react-dom\": \"^18.2.0\", \"sass\": \"^1.3.0\" }, \"optionalPeers\": [\"@opentelemetry/api\", \"@playwright/test\", \"sass\"], \"bin\": { \"next\": \"dist/bin/next\" } }, \"sha512-BseY9YNw8QJSwLYD7hlZzl6QVDoSFHL/URN5K64kVEVpCsSOWeyjbIGK+dZUaRViHTaMQX8aqmnn0PHBbGZezg==\"],\n\n    \"next-auth\": [\"next-auth@4.24.11\", \"\", { \"dependencies\": { \"@babel/runtime\": \"^7.20.13\", \"@panva/hkdf\": \"^1.0.2\", \"cookie\": \"^0.7.0\", \"jose\": \"^4.15.5\", \"oauth\": \"^0.9.15\", \"openid-client\": \"^5.4.0\", \"preact\": \"^10.6.3\", \"preact-render-to-string\": \"^5.1.19\", \"uuid\": \"^8.3.2\" }, \"peerDependencies\": { \"@auth/core\": \"0.34.2\", \"next\": \"^12.2.5 || ^13 || ^14 || ^15\", \"nodemailer\": \"^6.6.5\", \"react\": \"^17.0.2 || ^18 || ^19\", \"react-dom\": \"^17.0.2 || ^18 || ^19\" }, \"optionalPeers\": [\"@auth/core\", \"nodemailer\"] }, \"sha512-pCFXzIDQX7xmHFs4KVH4luCjaCbuPRtZ9oBUjUhOk84mZ9WVPf94n87TxYI4rSRf9HmfHEF8Yep3JrYDVOo3Cw==\"],\n\n    \"next-contentlayer\": [\"next-contentlayer@0.3.4\", \"\", { \"dependencies\": { \"@contentlayer/core\": \"0.3.4\", \"@contentlayer/utils\": \"0.3.4\" }, \"peerDependencies\": { \"contentlayer\": \"0.3.4\", \"next\": \"^12 || ^13\", \"react\": \"*\", \"react-dom\": \"*\" } }, \"sha512-UtUCwgAl159KwfhNaOwyiI7Lg6sdioyKMeh+E7jxx0CJ29JuXGxBEYmCI6+72NxFGIFZKx8lvttbbQhbnYWYSw==\"],\n\n    \"next-themes\": [\"next-themes@0.3.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.8 || ^17 || ^18\", \"react-dom\": \"^16.8 || ^17 || ^18\" } }, \"sha512-/QHIrsYpd6Kfk7xakK4svpDI5mmXP0gfvCoJdGpZQ2TOrQZmsW0QxjaiLn8wbIKjtm4BTSqLoix4lxYYOnLJ/w==\"],\n\n    \"nextjs-linkedin-insight-tag\": [\"nextjs-linkedin-insight-tag@0.0.6\", \"\", { \"dependencies\": { \"typescript\": \"^4.9.4\" }, \"peerDependencies\": { \"next\": \">=11.0.0\", \"react\": \">=17.0.0\" } }, \"sha512-hk3cHpz+1SLbe0hd2nFjUP2AlFmgeDMHHudXGTYrtIvRri/qliFEIpURH7FJWKxQLXm9f1X8B5O20Wvj2wNPCg==\"],\n\n    \"no-case\": [\"no-case@3.0.4\", \"\", { \"dependencies\": { \"lower-case\": \"^2.0.2\", \"tslib\": \"^2.0.3\" } }, \"sha512-fgAN3jGAh+RoxUGZHTSOLJIqUc2wmoBwGR4tbpNAKmmovFoWq0OdRkb0VkldReO2a2iBT/OEulG9XSUc10r3zg==\"],\n\n    \"node-domexception\": [\"node-domexception@1.0.0\", \"\", {}, \"sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==\"],\n\n    \"node-fetch\": [\"node-fetch@2.7.0\", \"\", { \"dependencies\": { \"whatwg-url\": \"^5.0.0\" }, \"peerDependencies\": { \"encoding\": \"^0.1.0\" }, \"optionalPeers\": [\"encoding\"] }, \"sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==\"],\n\n    \"node-int64\": [\"node-int64@0.4.0\", \"\", {}, \"sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==\"],\n\n    \"node-machine-id\": [\"node-machine-id@1.1.12\", \"\", {}, \"sha512-QNABxbrPa3qEIfrE6GOJ7BYIuignnJw7iQ2YPbc3Nla1HzRJjXzZOiikfF8m7eAMfichLt3M4VgLOetqgDmgGQ==\"],\n\n    \"node-releases\": [\"node-releases@2.0.19\", \"\", {}, \"sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==\"],\n\n    \"normalize-path\": [\"normalize-path@3.0.0\", \"\", {}, \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\"],\n\n    \"normalize-range\": [\"normalize-range@0.1.2\", \"\", {}, \"sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==\"],\n\n    \"npm-run-path\": [\"npm-run-path@4.0.1\", \"\", { \"dependencies\": { \"path-key\": \"^3.0.0\" } }, \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\"],\n\n    \"nullthrows\": [\"nullthrows@1.1.1\", \"\", {}, \"sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw==\"],\n\n    \"nwsapi\": [\"nwsapi@2.2.21\", \"\", {}, \"sha512-o6nIY3qwiSXl7/LuOU0Dmuctd34Yay0yeuZRLFmDPrrdHpXKFndPj3hM+YEPVHYC5fx2otBx4Ilc/gyYSAUaIA==\"],\n\n    \"nx\": [\"nx@21.3.11\", \"\", { \"dependencies\": { \"@napi-rs/wasm-runtime\": \"0.2.4\", \"@yarnpkg/lockfile\": \"^1.1.0\", \"@yarnpkg/parsers\": \"3.0.2\", \"@zkochan/js-yaml\": \"0.0.7\", \"axios\": \"^1.8.3\", \"chalk\": \"^4.1.0\", \"cli-cursor\": \"3.1.0\", \"cli-spinners\": \"2.6.1\", \"cliui\": \"^8.0.1\", \"dotenv\": \"~16.4.5\", \"dotenv-expand\": \"~11.0.6\", \"enquirer\": \"~2.3.6\", \"figures\": \"3.2.0\", \"flat\": \"^5.0.2\", \"front-matter\": \"^4.0.2\", \"ignore\": \"^5.0.4\", \"jest-diff\": \"^30.0.2\", \"jsonc-parser\": \"3.2.0\", \"lines-and-columns\": \"2.0.3\", \"minimatch\": \"9.0.3\", \"node-machine-id\": \"1.1.12\", \"npm-run-path\": \"^4.0.1\", \"open\": \"^8.4.0\", \"ora\": \"5.3.0\", \"resolve.exports\": \"2.0.3\", \"semver\": \"^7.5.3\", \"string-width\": \"^4.2.3\", \"tar-stream\": \"~2.2.0\", \"tmp\": \"~0.2.1\", \"tree-kill\": \"^1.2.2\", \"tsconfig-paths\": \"^4.1.2\", \"tslib\": \"^2.3.0\", \"yaml\": \"^2.6.0\", \"yargs\": \"^17.6.2\", \"yargs-parser\": \"21.1.1\" }, \"optionalDependencies\": { \"@nx/nx-darwin-arm64\": \"21.3.11\", \"@nx/nx-darwin-x64\": \"21.3.11\", \"@nx/nx-freebsd-x64\": \"21.3.11\", \"@nx/nx-linux-arm-gnueabihf\": \"21.3.11\", \"@nx/nx-linux-arm64-gnu\": \"21.3.11\", \"@nx/nx-linux-arm64-musl\": \"21.3.11\", \"@nx/nx-linux-x64-gnu\": \"21.3.11\", \"@nx/nx-linux-x64-musl\": \"21.3.11\", \"@nx/nx-win32-arm64-msvc\": \"21.3.11\", \"@nx/nx-win32-x64-msvc\": \"21.3.11\" }, \"peerDependencies\": { \"@swc-node/register\": \"^1.8.0\", \"@swc/core\": \"^1.3.85\" }, \"optionalPeers\": [\"@swc-node/register\", \"@swc/core\"], \"bin\": { \"nx\": \"bin/nx.js\", \"nx-cloud\": \"bin/nx-cloud.js\" } }, \"sha512-nj2snZ3mHZnbHcoB3NUdxbch9L1sQKV1XccLs1B79fmI/N5oOgWgctm/bWoZH2UH5b4A8ZLAMTsC6YnSJGbcaw==\"],\n\n    \"oauth\": [\"oauth@0.9.15\", \"\", {}, \"sha512-a5ERWK1kh38ExDEfoO6qUHJb32rd7aYmPHuyCu3Fta/cnICvYmgd2uhuKXvPD+PXB+gCEYYEaQdIRAjCOwAKNA==\"],\n\n    \"oauth4webapi\": [\"oauth4webapi@3.7.0\", \"\", {}, \"sha512-Q52wTPUWPsVLVVmTViXPQFMW2h2xv2jnDGxypjpelCFKaOjLsm7AxYuOk1oQgFm95VNDbuggasu9htXrz6XwKw==\"],\n\n    \"ob1\": [\"ob1@0.83.1\", \"\", { \"dependencies\": { \"flow-enums-runtime\": \"^0.0.6\" } }, \"sha512-ngwqewtdUzFyycomdbdIhFLjePPSOt1awKMUXQ0L7iLHgWEPF3DsCerblzjzfAUHaXuvE9ccJymWQ/4PNNqvnQ==\"],\n\n    \"object-assign\": [\"object-assign@4.1.1\", \"\", {}, \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\"],\n\n    \"object-hash\": [\"object-hash@3.0.0\", \"\", {}, \"sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==\"],\n\n    \"object-inspect\": [\"object-inspect@1.13.4\", \"\", {}, \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\"],\n\n    \"object-keys\": [\"object-keys@1.1.1\", \"\", {}, \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\"],\n\n    \"object.assign\": [\"object.assign@4.1.7\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\", \"has-symbols\": \"^1.1.0\", \"object-keys\": \"^1.1.1\" } }, \"sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==\"],\n\n    \"object.entries\": [\"object.entries@1.1.9\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.1.1\" } }, \"sha512-8u/hfXFRBD1O0hPUjioLhoWFHRmt6tKA4/vZPyckBr18l1KE9uHrFaFaUi8MDRTpi4uak2goyPTSNJLXX2k2Hw==\"],\n\n    \"object.fromentries\": [\"object.fromentries@2.0.8\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.2\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==\"],\n\n    \"object.groupby\": [\"object.groupby@1.0.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.2\" } }, \"sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==\"],\n\n    \"object.values\": [\"object.values@1.2.1\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-gXah6aZrcUxjWg2zR2MwouP2eHlCBzdV4pygudehaKXSGW4v2AsRQUK+lwwXhii6KFZcunEnmSUoYp5CXibxtA==\"],\n\n    \"oidc-token-hash\": [\"oidc-token-hash@5.1.1\", \"\", {}, \"sha512-D7EmwxJV6DsEB6vOFLrBM2OzsVgQzgPWyHlV2OOAVj772n+WTXpudC9e9u5BVKQnYwaD30Ivhi9b+4UeBcGu9g==\"],\n\n    \"on-exit-leak-free\": [\"on-exit-leak-free@2.1.2\", \"\", {}, \"sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==\"],\n\n    \"on-finished\": [\"on-finished@2.4.1\", \"\", { \"dependencies\": { \"ee-first\": \"1.1.1\" } }, \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\"],\n\n    \"once\": [\"once@1.4.0\", \"\", { \"dependencies\": { \"wrappy\": \"1\" } }, \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\"],\n\n    \"onetime\": [\"onetime@5.1.2\", \"\", { \"dependencies\": { \"mimic-fn\": \"^2.1.0\" } }, \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\"],\n\n    \"oo-ascii-tree\": [\"oo-ascii-tree@1.113.0\", \"\", {}, \"sha512-9hGp+3S8qy0MSdBzp5pX2448Iv+w6QyXI6KBVihdt+Sb8nw1MxNu6ErMadTAXmyfCwZzZoEpn9hybTHEQuSJcQ==\"],\n\n    \"open\": [\"open@8.4.2\", \"\", { \"dependencies\": { \"define-lazy-prop\": \"^2.0.0\", \"is-docker\": \"^2.1.1\", \"is-wsl\": \"^2.2.0\" } }, \"sha512-7x81NCL719oNbsq/3mh+hVrAWmFuEYUqrq/Iw3kUzH8ReypT9QQ0BLoJS7/G9k6N81XjW4qHWtjWwe/9eLy1EQ==\"],\n\n    \"openai\": [\"openai@4.104.0\", \"\", { \"dependencies\": { \"@types/node\": \"^18.11.18\", \"@types/node-fetch\": \"^2.6.4\", \"abort-controller\": \"^3.0.0\", \"agentkeepalive\": \"^4.2.1\", \"form-data-encoder\": \"1.7.2\", \"formdata-node\": \"^4.3.2\", \"node-fetch\": \"^2.6.7\" }, \"peerDependencies\": { \"ws\": \"^8.18.0\", \"zod\": \"^3.23.8\" }, \"optionalPeers\": [\"ws\", \"zod\"], \"bin\": { \"openai\": \"bin/cli\" } }, \"sha512-p99EFNsA/yX6UhVO93f5kJsDRLAg+CTA2RBqdHK4RtK8u5IJw32Hyb2dTGKbnnFmnuoBv5r7Z2CURI9sGZpSuA==\"],\n\n    \"openid-client\": [\"openid-client@5.7.1\", \"\", { \"dependencies\": { \"jose\": \"^4.15.9\", \"lru-cache\": \"^6.0.0\", \"object-hash\": \"^2.2.0\", \"oidc-token-hash\": \"^5.0.3\" } }, \"sha512-jDBPgSVfTnkIh71Hg9pRvtJc6wTwqjRkN88+gCFtYWrlP4Yx2Dsrow8uPi3qLr/aeymPF3o2+dS+wOpglK04ew==\"],\n\n    \"optionator\": [\"optionator@0.9.4\", \"\", { \"dependencies\": { \"deep-is\": \"^0.1.3\", \"fast-levenshtein\": \"^2.0.6\", \"levn\": \"^0.4.1\", \"prelude-ls\": \"^1.2.1\", \"type-check\": \"^0.4.0\", \"word-wrap\": \"^1.2.5\" } }, \"sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==\"],\n\n    \"ora\": [\"ora@6.3.1\", \"\", { \"dependencies\": { \"chalk\": \"^5.0.0\", \"cli-cursor\": \"^4.0.0\", \"cli-spinners\": \"^2.6.1\", \"is-interactive\": \"^2.0.0\", \"is-unicode-supported\": \"^1.1.0\", \"log-symbols\": \"^5.1.0\", \"stdin-discarder\": \"^0.1.0\", \"strip-ansi\": \"^7.0.1\", \"wcwidth\": \"^1.0.1\" } }, \"sha512-ERAyNnZOfqM+Ao3RAvIXkYh5joP220yf59gVe2X/cI6SiCxIdi4c9HZKZD8R6q/RDXEje1THBju6iExiSsgJaQ==\"],\n\n    \"own-keys\": [\"own-keys@1.0.1\", \"\", { \"dependencies\": { \"get-intrinsic\": \"^1.2.6\", \"object-keys\": \"^1.1.1\", \"safe-push-apply\": \"^1.0.0\" } }, \"sha512-qFOyK5PjiWZd+QQIh+1jhdb9LpxTF0qs7Pm8o5QHYZ0M3vKqSqzsZaEB6oWlxZ+q2sJBMI/Ktgd2N5ZwQoRHfg==\"],\n\n    \"p-limit\": [\"p-limit@6.2.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^1.1.1\" } }, \"sha512-kuUqqHNUqoIWp/c467RI4X6mmyuojY5jGutNU0wVTmEOOfcuwLqyMVoAi9MKi2Ak+5i9+nhmrK4ufZE8069kHA==\"],\n\n    \"p-locate\": [\"p-locate@5.0.0\", \"\", { \"dependencies\": { \"p-limit\": \"^3.0.2\" } }, \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\"],\n\n    \"p-try\": [\"p-try@2.2.0\", \"\", {}, \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\"],\n\n    \"pac-proxy-agent\": [\"pac-proxy-agent@7.2.0\", \"\", { \"dependencies\": { \"@tootallnate/quickjs-emscripten\": \"^0.23.0\", \"agent-base\": \"^7.1.2\", \"debug\": \"^4.3.4\", \"get-uri\": \"^6.0.1\", \"http-proxy-agent\": \"^7.0.0\", \"https-proxy-agent\": \"^7.0.6\", \"pac-resolver\": \"^7.0.1\", \"socks-proxy-agent\": \"^8.0.5\" } }, \"sha512-TEB8ESquiLMc0lV8vcd5Ql/JAKAoyzHFXaStwjkzpOpC5Yv+pIzLfHvjTSdf3vpa2bMiUQrg9i6276yn8666aA==\"],\n\n    \"pac-resolver\": [\"pac-resolver@7.0.1\", \"\", { \"dependencies\": { \"degenerator\": \"^5.0.0\", \"netmask\": \"^2.0.2\" } }, \"sha512-5NPgf87AT2STgwa2ntRMr45jTKrYBGkVU36yT0ig/n/GMAa3oPqhZfIQ2kMEimReg0+t9kZViDVZ83qfVUlckg==\"],\n\n    \"package-manager-detector\": [\"package-manager-detector@1.3.0\", \"\", {}, \"sha512-ZsEbbZORsyHuO00lY1kV3/t72yp6Ysay6Pd17ZAlNGuGwmWDLCJxFpRs0IzfXfj1o4icJOkUEioexFHzyPurSQ==\"],\n\n    \"pako\": [\"pako@1.0.11\", \"\", {}, \"sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==\"],\n\n    \"parent-module\": [\"parent-module@1.0.1\", \"\", { \"dependencies\": { \"callsites\": \"^3.0.0\" } }, \"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\"],\n\n    \"parse-entities\": [\"parse-entities@4.0.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"character-entities-legacy\": \"^3.0.0\", \"character-reference-invalid\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"is-alphanumerical\": \"^2.0.0\", \"is-decimal\": \"^2.0.0\", \"is-hexadecimal\": \"^2.0.0\" } }, \"sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==\"],\n\n    \"parse-json\": [\"parse-json@5.2.0\", \"\", { \"dependencies\": { \"@babel/code-frame\": \"^7.0.0\", \"error-ex\": \"^1.3.1\", \"json-parse-even-better-errors\": \"^2.3.0\", \"lines-and-columns\": \"^1.1.6\" } }, \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\"],\n\n    \"parse-path\": [\"parse-path@7.1.0\", \"\", { \"dependencies\": { \"protocols\": \"^2.0.0\" } }, \"sha512-EuCycjZtfPcjWk7KTksnJ5xPMvWGA/6i4zrLYhRG0hGvC3GPU/jGUj3Cy+ZR0v30duV3e23R95T1lE2+lsndSw==\"],\n\n    \"parse-url\": [\"parse-url@9.2.0\", \"\", { \"dependencies\": { \"@types/parse-path\": \"^7.0.0\", \"parse-path\": \"^7.0.0\" } }, \"sha512-bCgsFI+GeGWPAvAiUv63ZorMeif3/U0zaXABGJbOWt5OH2KCaPHF6S+0ok4aqM9RuIPGyZdx9tR9l13PsW4AYQ==\"],\n\n    \"parse5\": [\"parse5@7.3.0\", \"\", { \"dependencies\": { \"entities\": \"^6.0.0\" } }, \"sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==\"],\n\n    \"parseurl\": [\"parseurl@1.3.3\", \"\", {}, \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\"],\n\n    \"partial-json\": [\"partial-json@0.1.7\", \"\", {}, \"sha512-Njv/59hHaokb/hRUjce3Hdv12wd60MtM9Z5Olmn+nehe0QDAsRtRbJPvJ0Z91TusF0SuZRIvnM+S4l6EIP8leA==\"],\n\n    \"pascal-case\": [\"pascal-case@3.1.2\", \"\", { \"dependencies\": { \"no-case\": \"^3.0.4\", \"tslib\": \"^2.0.3\" } }, \"sha512-uWlGT3YSnK9x3BQJaOdcZwrnV6hPpd8jFH1/ucpiLRPh/2zCVJKS19E4GvYHvaCcACn3foXZ0cLB9Wrx1KGe5g==\"],\n\n    \"path-browserify\": [\"path-browserify@1.0.1\", \"\", {}, \"sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==\"],\n\n    \"path-data-parser\": [\"path-data-parser@0.1.0\", \"\", {}, \"sha512-NOnmBpt5Y2RWbuv0LMzsayp3lVylAHLPUTut412ZA3l+C4uw4ZVkQbjShYCQ8TCpUMdPapr4YjUqLYD6v68j+w==\"],\n\n    \"path-exists\": [\"path-exists@4.0.0\", \"\", {}, \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\"],\n\n    \"path-is-absolute\": [\"path-is-absolute@1.0.1\", \"\", {}, \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\"],\n\n    \"path-key\": [\"path-key@3.1.1\", \"\", {}, \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\"],\n\n    \"path-parse\": [\"path-parse@1.0.7\", \"\", {}, \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\"],\n\n    \"path-scurry\": [\"path-scurry@1.11.1\", \"\", { \"dependencies\": { \"lru-cache\": \"^10.2.0\", \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\" } }, \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\"],\n\n    \"path-to-regexp\": [\"path-to-regexp@0.1.7\", \"\", {}, \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"],\n\n    \"path-type\": [\"path-type@4.0.0\", \"\", {}, \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\"],\n\n    \"pathe\": [\"pathe@2.0.3\", \"\", {}, \"sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==\"],\n\n    \"pend\": [\"pend@1.2.0\", \"\", {}, \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg==\"],\n\n    \"periscopic\": [\"periscopic@3.1.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"estree-walker\": \"^3.0.0\", \"is-reference\": \"^3.0.0\" } }, \"sha512-vKiQ8RRtkl9P+r/+oefh25C3fhybptkHKCZSPlcXiJux2tJF55GnEj3BVn4A5gKfq9NWWXXrxkHBwVPUfH0opw==\"],\n\n    \"pg\": [\"pg@8.16.3\", \"\", { \"dependencies\": { \"pg-connection-string\": \"^2.9.1\", \"pg-pool\": \"^3.10.1\", \"pg-protocol\": \"^1.10.3\", \"pg-types\": \"2.2.0\", \"pgpass\": \"1.0.5\" }, \"optionalDependencies\": { \"pg-cloudflare\": \"^1.2.7\" }, \"peerDependencies\": { \"pg-native\": \">=3.0.1\" }, \"optionalPeers\": [\"pg-native\"] }, \"sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==\"],\n\n    \"pg-cloudflare\": [\"pg-cloudflare@1.2.7\", \"\", {}, \"sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==\"],\n\n    \"pg-connection-string\": [\"pg-connection-string@2.9.1\", \"\", {}, \"sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w==\"],\n\n    \"pg-int8\": [\"pg-int8@1.0.1\", \"\", {}, \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\"],\n\n    \"pg-pool\": [\"pg-pool@3.10.1\", \"\", { \"peerDependencies\": { \"pg\": \">=8.0\" } }, \"sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==\"],\n\n    \"pg-protocol\": [\"pg-protocol@1.10.3\", \"\", {}, \"sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ==\"],\n\n    \"pg-types\": [\"pg-types@2.2.0\", \"\", { \"dependencies\": { \"pg-int8\": \"1.0.1\", \"postgres-array\": \"~2.0.0\", \"postgres-bytea\": \"~1.0.0\", \"postgres-date\": \"~1.0.4\", \"postgres-interval\": \"^1.1.0\" } }, \"sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==\"],\n\n    \"pgpass\": [\"pgpass@1.0.5\", \"\", { \"dependencies\": { \"split2\": \"^4.1.0\" } }, \"sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==\"],\n\n    \"phenomenon\": [\"phenomenon@1.6.0\", \"\", {}, \"sha512-7h9/fjPD3qNlgggzm88cY58l9sudZ6Ey+UmZsizfhtawO6E3srZQXywaNm2lBwT72TbpHYRPy7ytIHeBUD/G0A==\"],\n\n    \"picocolors\": [\"picocolors@1.1.0\", \"\", {}, \"sha512-TQ92mBOW0l3LeMeyLV6mzy/kWr8lkd/hp3mTg7wYK7zJhuBStmGMBG0BdeDZS/dZx1IukaX6Bk11zcln25o1Aw==\"],\n\n    \"picomatch\": [\"picomatch@2.3.1\", \"\", {}, \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\"],\n\n    \"pidtree\": [\"pidtree@0.6.0\", \"\", { \"bin\": { \"pidtree\": \"bin/pidtree.js\" } }, \"sha512-eG2dWTVw5bzqGRztnHExczNxt5VGsE6OwTeCG3fdUf9KBsZzO3R5OIIIzWR+iZA0NtZ+RDVdaoE2dK1cn6jH4g==\"],\n\n    \"pify\": [\"pify@4.0.1\", \"\", {}, \"sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==\"],\n\n    \"pino\": [\"pino@9.4.0\", \"\", { \"dependencies\": { \"atomic-sleep\": \"^1.0.0\", \"fast-redact\": \"^3.1.1\", \"on-exit-leak-free\": \"^2.1.0\", \"pino-abstract-transport\": \"^1.2.0\", \"pino-std-serializers\": \"^7.0.0\", \"process-warning\": \"^4.0.0\", \"quick-format-unescaped\": \"^4.0.3\", \"real-require\": \"^0.2.0\", \"safe-stable-stringify\": \"^2.3.1\", \"sonic-boom\": \"^4.0.1\", \"thread-stream\": \"^3.0.0\" }, \"bin\": { \"pino\": \"bin.js\" } }, \"sha512-nbkQb5+9YPhQRz/BeQmrWpEknAaqjpAqRK8NwJpmrX/JHu7JuZC5G1CeAwJDJfGes4h+YihC6in3Q2nGb+Y09w==\"],\n\n    \"pino-abstract-transport\": [\"pino-abstract-transport@1.2.0\", \"\", { \"dependencies\": { \"readable-stream\": \"^4.0.0\", \"split2\": \"^4.0.0\" } }, \"sha512-Guhh8EZfPCfH+PMXAb6rKOjGQEoy0xlAIn+irODG5kgfYV+BQ0rGYYWTIel3P5mmyXqkYkPmdIkywsn6QKUR1Q==\"],\n\n    \"pino-std-serializers\": [\"pino-std-serializers@7.0.0\", \"\", {}, \"sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA==\"],\n\n    \"pirates\": [\"pirates@4.0.7\", \"\", {}, \"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\"],\n\n    \"pkg-dir\": [\"pkg-dir@4.2.0\", \"\", { \"dependencies\": { \"find-up\": \"^4.0.0\" } }, \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\"],\n\n    \"pkg-types\": [\"pkg-types@2.2.0\", \"\", { \"dependencies\": { \"confbox\": \"^0.2.2\", \"exsolve\": \"^1.0.7\", \"pathe\": \"^2.0.3\" } }, \"sha512-2SM/GZGAEkPp3KWORxQZns4M+WSeXbC2HEvmOIJe3Cmiv6ieAJvdVhDldtHqM5J1Y7MrR1XhkBT/rMlhh9FdqQ==\"],\n\n    \"playwright\": [\"playwright@1.54.2\", \"\", { \"dependencies\": { \"playwright-core\": \"1.54.2\" }, \"optionalDependencies\": { \"fsevents\": \"2.3.2\" }, \"bin\": { \"playwright\": \"cli.js\" } }, \"sha512-Hu/BMoA1NAdRUuulyvQC0pEqZ4vQbGfn8f7wPXcnqQmM+zct9UliKxsIkLNmz/ku7LElUNqmaiv1TG/aL5ACsw==\"],\n\n    \"playwright-core\": [\"playwright-core@1.54.2\", \"\", { \"bin\": { \"playwright-core\": \"cli.js\" } }, \"sha512-n5r4HFbMmWsB4twG7tJLDN9gmBUeSPcsBZiWSE4DnYz9mJMAFqr2ID7+eGC9kpEnxExJ1epttwR59LEWCk8mtA==\"],\n\n    \"plimit-lit\": [\"plimit-lit@1.6.1\", \"\", { \"dependencies\": { \"queue-lit\": \"^1.5.1\" } }, \"sha512-B7+VDyb8Tl6oMJT9oSO2CW8XC/T4UcJGrwOVoNGwOQsQYhlpfajmrMj5xeejqaASq3V/EqThyOeATEOMuSEXiA==\"],\n\n    \"point-in-polygon-hao\": [\"point-in-polygon-hao@1.2.4\", \"\", { \"dependencies\": { \"robust-predicates\": \"^3.0.2\" } }, \"sha512-x2pcvXeqhRHlNRdhLs/tgFapAbSSe86wa/eqmj1G6pWftbEs5aVRJhRGM6FYSUERKu0PjekJzMq0gsI2XyiclQ==\"],\n\n    \"points-on-curve\": [\"points-on-curve@0.2.0\", \"\", {}, \"sha512-0mYKnYYe9ZcqMCWhUjItv/oHjvgEsfKvnUTg8sAtnHr3GVy7rGkXCb6d5cSyqrWqL4k81b9CPg3urd+T7aop3A==\"],\n\n    \"points-on-path\": [\"points-on-path@0.2.1\", \"\", { \"dependencies\": { \"path-data-parser\": \"0.1.0\", \"points-on-curve\": \"0.2.0\" } }, \"sha512-25ClnWWuw7JbWZcgqY/gJ4FQWadKxGWk+3kR/7kD0tCaDtPPMj7oHu2ToLaVhfpnHrZzYby2w6tUA0eOIuUg8g==\"],\n\n    \"possible-typed-array-names\": [\"possible-typed-array-names@1.1.0\", \"\", {}, \"sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==\"],\n\n    \"postcss\": [\"postcss@8.5.6\", \"\", { \"dependencies\": { \"nanoid\": \"^3.3.11\", \"picocolors\": \"^1.1.1\", \"source-map-js\": \"^1.2.1\" } }, \"sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==\"],\n\n    \"postcss-import\": [\"postcss-import@15.1.0\", \"\", { \"dependencies\": { \"postcss-value-parser\": \"^4.0.0\", \"read-cache\": \"^1.0.0\", \"resolve\": \"^1.1.7\" }, \"peerDependencies\": { \"postcss\": \"^8.0.0\" } }, \"sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==\"],\n\n    \"postcss-js\": [\"postcss-js@4.0.1\", \"\", { \"dependencies\": { \"camelcase-css\": \"^2.0.1\" }, \"peerDependencies\": { \"postcss\": \"^8.4.21\" } }, \"sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==\"],\n\n    \"postcss-load-config\": [\"postcss-load-config@4.0.2\", \"\", { \"dependencies\": { \"lilconfig\": \"^3.0.0\", \"yaml\": \"^2.3.4\" }, \"peerDependencies\": { \"postcss\": \">=8.0.9\", \"ts-node\": \">=9.0.0\" }, \"optionalPeers\": [\"postcss\", \"ts-node\"] }, \"sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==\"],\n\n    \"postcss-nested\": [\"postcss-nested@6.2.0\", \"\", { \"dependencies\": { \"postcss-selector-parser\": \"^6.1.1\" }, \"peerDependencies\": { \"postcss\": \"^8.2.14\" } }, \"sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==\"],\n\n    \"postcss-selector-parser\": [\"postcss-selector-parser@6.0.10\", \"\", { \"dependencies\": { \"cssesc\": \"^3.0.0\", \"util-deprecate\": \"^1.0.2\" } }, \"sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==\"],\n\n    \"postcss-value-parser\": [\"postcss-value-parser@4.2.0\", \"\", {}, \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\"],\n\n    \"postgres\": [\"postgres@3.4.4\", \"\", {}, \"sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==\"],\n\n    \"postgres-array\": [\"postgres-array@2.0.0\", \"\", {}, \"sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==\"],\n\n    \"postgres-bytea\": [\"postgres-bytea@1.0.0\", \"\", {}, \"sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==\"],\n\n    \"postgres-date\": [\"postgres-date@1.0.7\", \"\", {}, \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\"],\n\n    \"postgres-interval\": [\"postgres-interval@1.2.0\", \"\", { \"dependencies\": { \"xtend\": \"^4.0.0\" } }, \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\"],\n\n    \"posthog-js\": [\"posthog-js@1.259.0\", \"\", { \"dependencies\": { \"core-js\": \"^3.38.1\", \"fflate\": \"^0.4.8\", \"preact\": \"^10.19.3\", \"web-vitals\": \"^4.2.4\" }, \"peerDependencies\": { \"@rrweb/types\": \"2.0.0-alpha.17\", \"rrweb-snapshot\": \"2.0.0-alpha.17\" }, \"optionalPeers\": [\"@rrweb/types\", \"rrweb-snapshot\"] }, \"sha512-6usLnJshky8fQ82ask7PIJh4BSFOU0VkRbFg8Zanm/HIlYMG1VOdRWlToA63JXeO7Bzm9TuREq1wFm5U2VEVCg==\"],\n\n    \"posthog-node\": [\"posthog-node@4.18.0\", \"\", { \"dependencies\": { \"axios\": \"^1.8.2\" } }, \"sha512-XROs1h+DNatgKh/AlIlCtDxWzwrKdYDb2mOs58n4yN8BkGN9ewqeQwG5ApS4/IzwCb7HPttUkOVulkYatd2PIw==\"],\n\n    \"potpack\": [\"potpack@1.0.2\", \"\", {}, \"sha512-choctRBIV9EMT9WGAZHn3V7t0Z2pMQyl0EZE6pFc/6ml3ssw7Dlf/oAOvFwjm1HVsqfQN8GfeFyJ+d8tRzqueQ==\"],\n\n    \"preact\": [\"preact@10.27.0\", \"\", {}, \"sha512-/DTYoB6mwwgPytiqQTh/7SFRL98ZdiD8Sk8zIUVOxtwq4oWcwrcd1uno9fE/zZmUaUrFNYzbH14CPebOz9tZQw==\"],\n\n    \"preact-render-to-string\": [\"preact-render-to-string@5.2.6\", \"\", { \"dependencies\": { \"pretty-format\": \"^3.8.0\" }, \"peerDependencies\": { \"preact\": \">=10\" } }, \"sha512-JyhErpYOvBV1hEPwIxc/fHWXPfnEGdRKxc8gFdAZ7XV4tlzyzG847XAyEZqoDnynP88akM4eaHcSOzNcLWFguw==\"],\n\n    \"prelude-ls\": [\"prelude-ls@1.2.1\", \"\", {}, \"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\"],\n\n    \"prettier\": [\"prettier@3.3.2\", \"\", { \"bin\": { \"prettier\": \"bin/prettier.cjs\" } }, \"sha512-rAVeHYMcv8ATV5d508CFdn+8/pHPpXeIid1DdrPwXnaAdH7cqjVbpJaT5eq4yRAFU/lsbwYwSF/n5iNrdJHPQA==\"],\n\n    \"prettier-linter-helpers\": [\"prettier-linter-helpers@1.0.0\", \"\", { \"dependencies\": { \"fast-diff\": \"^1.1.2\" } }, \"sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==\"],\n\n    \"pretty-format\": [\"pretty-format@29.7.0\", \"\", { \"dependencies\": { \"@jest/schemas\": \"^29.6.3\", \"ansi-styles\": \"^5.0.0\", \"react-is\": \"^18.0.0\" } }, \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\"],\n\n    \"process\": [\"process@0.11.10\", \"\", {}, \"sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A==\"],\n\n    \"process-warning\": [\"process-warning@4.0.1\", \"\", {}, \"sha512-3c2LzQ3rY9d0hc1emcsHhfT9Jwz0cChib/QN89oME2R451w5fy3f0afAhERFZAwrbDU43wk12d0ORBpDVME50Q==\"],\n\n    \"progress\": [\"progress@2.0.3\", \"\", {}, \"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\"],\n\n    \"promise\": [\"promise@8.3.0\", \"\", { \"dependencies\": { \"asap\": \"~2.0.6\" } }, \"sha512-rZPNPKTOYVNEEKFaq1HqTgOwZD+4/YHS5ukLzQCypkj+OkYx7iv0mA91lJlpPPZ8vMau3IIGj5Qlwrx+8iiSmg==\"],\n\n    \"promise-worker-transferable\": [\"promise-worker-transferable@1.0.4\", \"\", { \"dependencies\": { \"is-promise\": \"^2.1.0\", \"lie\": \"^3.0.2\" } }, \"sha512-bN+0ehEnrXfxV2ZQvU2PetO0n4gqBD4ulq3MI1WOPLgr7/Mg9yRQkX5+0v1vagr74ZTsl7XtzlaYDo2EuCeYJw==\"],\n\n    \"prompts\": [\"prompts@2.4.2\", \"\", { \"dependencies\": { \"kleur\": \"^3.0.3\", \"sisteransi\": \"^1.0.5\" } }, \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\"],\n\n    \"prop-types\": [\"prop-types@15.8.1\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.4.0\", \"object-assign\": \"^4.1.1\", \"react-is\": \"^16.13.1\" } }, \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\"],\n\n    \"property-information\": [\"property-information@7.1.0\", \"\", {}, \"sha512-TwEZ+X+yCJmYfL7TPUOcvBZ4QfoT5YenQiJuX//0th53DE6w0xxLEtfK3iyryQFddXuvkIk51EEgrJQ0WJkOmQ==\"],\n\n    \"protobufjs\": [\"protobufjs@7.5.3\", \"\", { \"dependencies\": { \"@protobufjs/aspromise\": \"^1.1.2\", \"@protobufjs/base64\": \"^1.1.2\", \"@protobufjs/codegen\": \"^2.0.4\", \"@protobufjs/eventemitter\": \"^1.1.0\", \"@protobufjs/fetch\": \"^1.1.0\", \"@protobufjs/float\": \"^1.0.2\", \"@protobufjs/inquire\": \"^1.1.0\", \"@protobufjs/path\": \"^1.1.2\", \"@protobufjs/pool\": \"^1.1.0\", \"@protobufjs/utf8\": \"^1.1.0\", \"@types/node\": \">=13.7.0\", \"long\": \"^5.0.0\" } }, \"sha512-sildjKwVqOI2kmFDiXQ6aEB0fjYTafpEvIBs8tOR8qI4spuL9OPROLVu2qZqi/xgCfsHIwVqlaF8JBjWFHnKbw==\"],\n\n    \"protocols\": [\"protocols@2.0.2\", \"\", {}, \"sha512-hHVTzba3wboROl0/aWRRG9dMytgH6ow//STBZh43l/wQgmMhYhOFi0EHWAPtoCz9IAUymsyP0TSBHkhgMEGNnQ==\"],\n\n    \"proxy-addr\": [\"proxy-addr@2.0.7\", \"\", { \"dependencies\": { \"forwarded\": \"0.2.0\", \"ipaddr.js\": \"1.9.1\" } }, \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\"],\n\n    \"proxy-agent\": [\"proxy-agent@6.5.0\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.2\", \"debug\": \"^4.3.4\", \"http-proxy-agent\": \"^7.0.1\", \"https-proxy-agent\": \"^7.0.6\", \"lru-cache\": \"^7.14.1\", \"pac-proxy-agent\": \"^7.1.0\", \"proxy-from-env\": \"^1.1.0\", \"socks-proxy-agent\": \"^8.0.5\" } }, \"sha512-TmatMXdr2KlRiA2CyDu8GqR8EjahTG3aY3nXjdzFyoZbmB8hrBsTyMezhULIXKnC0jpfjlmiZ3+EaCzoInSu/A==\"],\n\n    \"proxy-from-env\": [\"proxy-from-env@1.1.0\", \"\", {}, \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\"],\n\n    \"psl\": [\"psl@1.15.0\", \"\", { \"dependencies\": { \"punycode\": \"^2.3.1\" } }, \"sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==\"],\n\n    \"pump\": [\"pump@3.0.3\", \"\", { \"dependencies\": { \"end-of-stream\": \"^1.1.0\", \"once\": \"^1.3.1\" } }, \"sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==\"],\n\n    \"punycode\": [\"punycode@2.3.1\", \"\", {}, \"sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==\"],\n\n    \"puppeteer-core\": [\"puppeteer-core@24.16.1\", \"\", { \"dependencies\": { \"@puppeteer/browsers\": \"2.10.6\", \"chromium-bidi\": \"7.3.1\", \"debug\": \"^4.4.1\", \"devtools-protocol\": \"0.0.1475386\", \"typed-query-selector\": \"^2.12.0\", \"ws\": \"^8.18.3\" } }, \"sha512-0dGD2kxoH9jqj/xiz4KZLcPKpqWygs+VSEBzvuVbU3KoT2cCw4HnMT9r/7NvYl1lIa+JCa5yIyRqi+4R3UyYfQ==\"],\n\n    \"pure-rand\": [\"pure-rand@6.1.0\", \"\", {}, \"sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==\"],\n\n    \"qs\": [\"qs@6.11.0\", \"\", { \"dependencies\": { \"side-channel\": \"^1.0.4\" } }, \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\"],\n\n    \"quansync\": [\"quansync@0.2.10\", \"\", {}, \"sha512-t41VRkMYbkHyCYmOvx/6URnN80H7k4X0lLdBMGsz+maAwrJQYB1djpV6vHrQIBE0WBSGqhtEHrK9U3DWWH8v7A==\"],\n\n    \"querystringify\": [\"querystringify@2.2.0\", \"\", {}, \"sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==\"],\n\n    \"queue\": [\"queue@6.0.2\", \"\", { \"dependencies\": { \"inherits\": \"~2.0.3\" } }, \"sha512-iHZWu+q3IdFZFX36ro/lKBkSvfkztY5Y7HMiPlOUjhupPcG2JMfst2KKEpu5XndviX/3UhFbRngUPNKtgvtZiA==\"],\n\n    \"queue-lit\": [\"queue-lit@1.5.2\", \"\", {}, \"sha512-tLc36IOPeMAubu8BkW8YDBV+WyIgKlYU7zUNs0J5Vk9skSZ4JfGlPOqplP0aHdfv7HL0B2Pg6nwiq60Qc6M2Hw==\"],\n\n    \"queue-microtask\": [\"queue-microtask@1.2.3\", \"\", {}, \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\"],\n\n    \"quick-format-unescaped\": [\"quick-format-unescaped@4.0.4\", \"\", {}, \"sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg==\"],\n\n    \"quickjs-emscripten-core\": [\"quickjs-emscripten-core@0.31.0\", \"\", { \"dependencies\": { \"@jitl/quickjs-ffi-types\": \"0.31.0\" } }, \"sha512-oQz8p0SiKDBc1TC7ZBK2fr0GoSHZKA0jZIeXxsnCyCs4y32FStzCW4d1h6E1sE0uHDMbGITbk2zhNaytaoJwXQ==\"],\n\n    \"range-parser\": [\"range-parser@1.2.1\", \"\", {}, \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\"],\n\n    \"raw-body\": [\"raw-body@2.5.2\", \"\", { \"dependencies\": { \"bytes\": \"3.1.2\", \"http-errors\": \"2.0.0\", \"iconv-lite\": \"0.4.24\", \"unpipe\": \"1.0.0\" } }, \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\"],\n\n    \"react\": [\"react@18.3.1\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==\"],\n\n    \"react-composer\": [\"react-composer@5.0.3\", \"\", { \"dependencies\": { \"prop-types\": \"^15.6.0\" }, \"peerDependencies\": { \"react\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-1uWd07EME6XZvMfapwZmc7NgCZqDemcvicRi3wMJzXsQLvZ3L7fTHVyPy1bZdnWXM4iPjYuNE+uJ41MLKeTtnA==\"],\n\n    \"react-devtools-core\": [\"react-devtools-core@6.1.5\", \"\", { \"dependencies\": { \"shell-quote\": \"^1.6.1\", \"ws\": \"^7\" } }, \"sha512-ePrwPfxAnB+7hgnEr8vpKxL9cmnp7F322t8oqcPshbIQQhDKgFDW4tjhF2wjVbdXF9O/nyuy3sQWd9JGpiLPvA==\"],\n\n    \"react-dom\": [\"react-dom@18.3.1\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\", \"scheduler\": \"^0.23.2\" }, \"peerDependencies\": { \"react\": \"^18.3.1\" } }, \"sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==\"],\n\n    \"react-hook-form\": [\"react-hook-form@7.62.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.8.0 || ^17 || ^18 || ^19\" } }, \"sha512-7KWFejc98xqG/F4bAxpL41NB3o1nnvQO1RWZT3TqRZYL8RryQETGfEdVnJN2fy1crCiBLLjkRBVK05j24FxJGA==\"],\n\n    \"react-is\": [\"react-is@18.3.1\", \"\", {}, \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\"],\n\n    \"react-konva\": [\"react-konva@18.2.12\", \"\", { \"dependencies\": { \"@types/react-reconciler\": \"^0.28.2\", \"its-fine\": \"^1.1.1\", \"react-reconciler\": \"~0.29.0\", \"scheduler\": \"^0.23.0\" }, \"peerDependencies\": { \"konva\": \"^8.0.1 || ^7.2.5 || ^9.0.0\", \"react\": \">=18.0.0\", \"react-dom\": \">=18.0.0\" } }, \"sha512-tszrM/emkX1u2reJTn3M9nMG9kuFv09s974dUEXK7luIN3z0VRD8PUjwyaLWi8Ba52ntQceZ0nfYWC6VlPa3vA==\"],\n\n    \"react-native\": [\"react-native@0.81.0\", \"\", { \"dependencies\": { \"@jest/create-cache-key-function\": \"^29.7.0\", \"@react-native/assets-registry\": \"0.81.0\", \"@react-native/codegen\": \"0.81.0\", \"@react-native/community-cli-plugin\": \"0.81.0\", \"@react-native/gradle-plugin\": \"0.81.0\", \"@react-native/js-polyfills\": \"0.81.0\", \"@react-native/normalize-colors\": \"0.81.0\", \"@react-native/virtualized-lists\": \"0.81.0\", \"abort-controller\": \"^3.0.0\", \"anser\": \"^1.4.9\", \"ansi-regex\": \"^5.0.0\", \"babel-jest\": \"^29.7.0\", \"babel-plugin-syntax-hermes-parser\": \"0.29.1\", \"base64-js\": \"^1.5.1\", \"commander\": \"^12.0.0\", \"flow-enums-runtime\": \"^0.0.6\", \"glob\": \"^7.1.1\", \"invariant\": \"^2.2.4\", \"jest-environment-node\": \"^29.7.0\", \"memoize-one\": \"^5.0.0\", \"metro-runtime\": \"^0.83.1\", \"metro-source-map\": \"^0.83.1\", \"nullthrows\": \"^1.1.1\", \"pretty-format\": \"^29.7.0\", \"promise\": \"^8.3.0\", \"react-devtools-core\": \"^6.1.5\", \"react-refresh\": \"^0.14.0\", \"regenerator-runtime\": \"^0.13.2\", \"scheduler\": \"0.26.0\", \"semver\": \"^7.1.3\", \"stacktrace-parser\": \"^0.1.10\", \"whatwg-fetch\": \"^3.0.0\", \"ws\": \"^6.2.3\", \"yargs\": \"^17.6.2\" }, \"peerDependencies\": { \"@types/react\": \"^19.1.0\", \"react\": \"^19.1.0\" }, \"optionalPeers\": [\"@types/react\"], \"bin\": { \"react-native\": \"cli.js\" } }, \"sha512-RDWhewHGsAa5uZpwIxnJNiv5tW2y6/DrQUjEBdAHPzGMwuMTshern2s4gZaWYeRU3SQguExVddCjiss9IBhxqA==\"],\n\n    \"react-reconciler\": [\"react-reconciler@0.27.0\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\", \"scheduler\": \"^0.21.0\" }, \"peerDependencies\": { \"react\": \"^18.0.0\" } }, \"sha512-HmMDKciQjYmBRGuuhIaKA1ba/7a+UsM5FzOZsMO2JYHt9Jh8reCb7j1eDC95NOyUlKM9KRyvdx0flBuDvYSBoA==\"],\n\n    \"react-refresh\": [\"react-refresh@0.14.2\", \"\", {}, \"sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==\"],\n\n    \"react-remove-scroll\": [\"react-remove-scroll@2.7.1\", \"\", { \"dependencies\": { \"react-remove-scroll-bar\": \"^2.3.7\", \"react-style-singleton\": \"^2.2.3\", \"tslib\": \"^2.1.0\", \"use-callback-ref\": \"^1.3.3\", \"use-sidecar\": \"^1.1.3\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-HpMh8+oahmIdOuS5aFKKY6Pyog+FNaZV/XyJOq7b4YFwsFHe5yYfdbIalI4k3vU2nSDql7YskmUseHsRrJqIPA==\"],\n\n    \"react-remove-scroll-bar\": [\"react-remove-scroll-bar@2.3.8\", \"\", { \"dependencies\": { \"react-style-singleton\": \"^2.2.2\", \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==\"],\n\n    \"react-spring\": [\"react-spring@9.7.5\", \"\", { \"dependencies\": { \"@react-spring/core\": \"~9.7.5\", \"@react-spring/konva\": \"~9.7.5\", \"@react-spring/native\": \"~9.7.5\", \"@react-spring/three\": \"~9.7.5\", \"@react-spring/web\": \"~9.7.5\", \"@react-spring/zdog\": \"~9.7.5\" }, \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\", \"react-dom\": \"^16.8.0 || ^17.0.0 || ^18.0.0\" } }, \"sha512-oG6DkDZIASHzPiGYw5KwrCvoFZqsaO3t2R7KE37U6S/+8qWSph/UjRQalPpZxlbgheqV9LT62H6H9IyoopHdug==\"],\n\n    \"react-style-singleton\": [\"react-style-singleton@2.2.3\", \"\", { \"dependencies\": { \"get-nonce\": \"^1.0.0\", \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==\"],\n\n    \"react-use-measure\": [\"react-use-measure@2.1.7\", \"\", { \"peerDependencies\": { \"react\": \">=16.13\", \"react-dom\": \">=16.13\" }, \"optionalPeers\": [\"react-dom\"] }, \"sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==\"],\n\n    \"react-zdog\": [\"react-zdog@1.2.2\", \"\", { \"dependencies\": { \"react\": \"^18.2.0\", \"react-dom\": \"^18.2.0\", \"resize-observer-polyfill\": \"^1.5.1\" } }, \"sha512-Ix7ALha91aOEwiHuxumCeYbARS5XNpc/w0v145oGkM6poF/CvhKJwzLhM5sEZbtrghMA+psAhOJkCTzJoseicA==\"],\n\n    \"read-cache\": [\"read-cache@1.0.0\", \"\", { \"dependencies\": { \"pify\": \"^2.3.0\" } }, \"sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==\"],\n\n    \"readable-stream\": [\"readable-stream@4.7.0\", \"\", { \"dependencies\": { \"abort-controller\": \"^3.0.0\", \"buffer\": \"^6.0.3\", \"events\": \"^3.3.0\", \"process\": \"^0.11.10\", \"string_decoder\": \"^1.3.0\" } }, \"sha512-oIGGmcpTLwPga8Bn6/Z75SVaH1z5dUut2ibSyAMVhmUggWpmDn2dapB0n7f8nwaSiRtepAsfJyfXIO5DCVAODg==\"],\n\n    \"readdirp\": [\"readdirp@3.6.0\", \"\", { \"dependencies\": { \"picomatch\": \"^2.2.1\" } }, \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\"],\n\n    \"real-require\": [\"real-require@0.2.0\", \"\", {}, \"sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==\"],\n\n    \"recast\": [\"recast@0.23.11\", \"\", { \"dependencies\": { \"ast-types\": \"^0.16.1\", \"esprima\": \"~4.0.0\", \"source-map\": \"~0.6.1\", \"tiny-invariant\": \"^1.3.3\", \"tslib\": \"^2.0.1\" } }, \"sha512-YTUo+Flmw4ZXiWfQKGcwwc11KnoRAYgzAE2E7mXKCjSviTKShtxBsN6YUUBB2gtaBzKzeKunxhUwNHQuRryhWA==\"],\n\n    \"recma-build-jsx\": [\"recma-build-jsx@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"estree-util-build-jsx\": \"^3.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-8GtdyqaBcDfva+GUKDr3nev3VpKAhup1+RvkMvUxURHpW7QyIvk9F5wz7Vzo06CEMSilw6uArgRqhpiUcWp8ew==\"],\n\n    \"recma-jsx\": [\"recma-jsx@1.0.1\", \"\", { \"dependencies\": { \"acorn-jsx\": \"^5.0.0\", \"estree-util-to-js\": \"^2.0.0\", \"recma-parse\": \"^1.0.0\", \"recma-stringify\": \"^1.0.0\", \"unified\": \"^11.0.0\" }, \"peerDependencies\": { \"acorn\": \"^6.0.0 || ^7.0.0 || ^8.0.0\" } }, \"sha512-huSIy7VU2Z5OLv6oFLosQGGDqPqdO1iq6bWNAdhzMxSJP7RAso4fCZ1cKu8j9YHCZf3TPrq4dw3okhrylgcd7w==\"],\n\n    \"recma-parse\": [\"recma-parse@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"esast-util-from-js\": \"^2.0.0\", \"unified\": \"^11.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-OYLsIGBB5Y5wjnSnQW6t3Xg7q3fQ7FWbw/vcXtORTnyaSFscOtABg+7Pnz6YZ6c27fG1/aN8CjfwoUEUIdwqWQ==\"],\n\n    \"recma-stringify\": [\"recma-stringify@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"estree-util-to-js\": \"^2.0.0\", \"unified\": \"^11.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-cjwII1MdIIVloKvC9ErQ+OgAtwHBmcZ0Bg4ciz78FtbT8In39aAYbaA7zvxQ61xVMSPE8WxhLwLbhif4Js2C+g==\"],\n\n    \"redent\": [\"redent@3.0.0\", \"\", { \"dependencies\": { \"indent-string\": \"^4.0.0\", \"strip-indent\": \"^3.0.0\" } }, \"sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==\"],\n\n    \"reflect.getprototypeof\": [\"reflect.getprototypeof@1.0.10\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.9\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.7\", \"get-proto\": \"^1.0.1\", \"which-builtin-type\": \"^1.2.1\" } }, \"sha512-00o4I+DVrefhv+nX0ulyi3biSHCPDe+yLv5o/p6d/UVlirijB8E16FtfwSAi4g3tcqrQ4lRAqQSoFEZJehYEcw==\"],\n\n    \"regenerate\": [\"regenerate@1.4.2\", \"\", {}, \"sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==\"],\n\n    \"regenerate-unicode-properties\": [\"regenerate-unicode-properties@10.2.0\", \"\", { \"dependencies\": { \"regenerate\": \"^1.4.2\" } }, \"sha512-DqHn3DwbmmPVzeKj9woBadqmXxLvQoQIwu7nopMc72ztvxVmVk2SBhSnx67zuye5TP+lJsb/TBQsjLKhnDf3MA==\"],\n\n    \"regenerator-runtime\": [\"regenerator-runtime@0.13.11\", \"\", {}, \"sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==\"],\n\n    \"regexp.prototype.flags\": [\"regexp.prototype.flags@1.5.4\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"define-properties\": \"^1.2.1\", \"es-errors\": \"^1.3.0\", \"get-proto\": \"^1.0.1\", \"gopd\": \"^1.2.0\", \"set-function-name\": \"^2.0.2\" } }, \"sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==\"],\n\n    \"regexpu-core\": [\"regexpu-core@6.2.0\", \"\", { \"dependencies\": { \"regenerate\": \"^1.4.2\", \"regenerate-unicode-properties\": \"^10.2.0\", \"regjsgen\": \"^0.8.0\", \"regjsparser\": \"^0.12.0\", \"unicode-match-property-ecmascript\": \"^2.0.0\", \"unicode-match-property-value-ecmascript\": \"^2.1.0\" } }, \"sha512-H66BPQMrv+V16t8xtmq+UC0CBpiTBA60V8ibS1QVReIp8T1z8hwFxqcGzm9K6lgsN7sB5edVH8a+ze6Fqm4weA==\"],\n\n    \"regjsgen\": [\"regjsgen@0.8.0\", \"\", {}, \"sha512-RvwtGe3d7LvWiDQXeQw8p5asZUmfU1G/l6WbUXeHta7Y2PEIvBTwH6E2EfmYUK8pxcxEdEmaomqyp0vZZ7C+3Q==\"],\n\n    \"regjsparser\": [\"regjsparser@0.12.0\", \"\", { \"dependencies\": { \"jsesc\": \"~3.0.2\" }, \"bin\": { \"regjsparser\": \"bin/parser\" } }, \"sha512-cnE+y8bz4NhMjISKbgeVJtqNbtf5QpjZP+Bslo+UqkIt9QPnX9q095eiRRASJG1/tz6dlNr6Z5NsBiWYokp6EQ==\"],\n\n    \"rehype-recma\": [\"rehype-recma@1.0.0\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/hast\": \"^3.0.0\", \"hast-util-to-estree\": \"^3.0.0\" } }, \"sha512-lqA4rGUf1JmacCNWWZx0Wv1dHqMwxzsDWYMTowuplHF3xH0N/MmrZ/G3BDZnzAkRmxDadujCjaKM2hqYdCBOGw==\"],\n\n    \"rehype-stringify\": [\"rehype-stringify@9.0.4\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"hast-util-to-html\": \"^8.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-Uk5xu1YKdqobe5XpSskwPvo1XeHUUucWEQSl8hTrXt5selvca1e8K1EZ37E6YoZ4BT8BCqCdVfQW7OfHfthtVQ==\"],\n\n    \"remark-frontmatter\": [\"remark-frontmatter@4.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-frontmatter\": \"^1.0.0\", \"micromark-extension-frontmatter\": \"^1.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-38fJrB0KnmD3E33a5jZC/5+gGAC2WKNiPw1/fdXJvijBlhA7RCsvJklrYJakS0HedninvaCYW8lQGf9C918GfA==\"],\n\n    \"remark-mdx\": [\"remark-mdx@3.1.0\", \"\", { \"dependencies\": { \"mdast-util-mdx\": \"^3.0.0\", \"micromark-extension-mdxjs\": \"^3.0.0\" } }, \"sha512-Ngl/H3YXyBV9RcRNdlYsZujAmhsxwzxpDzpDEhFBVAGthS4GDgnctpDjgFl/ULx5UEDzqtW1cyBSNKqYYrqLBA==\"],\n\n    \"remark-mdx-frontmatter\": [\"remark-mdx-frontmatter@1.1.1\", \"\", { \"dependencies\": { \"estree-util-is-identifier-name\": \"^1.0.0\", \"estree-util-value-to-estree\": \"^1.0.0\", \"js-yaml\": \"^4.0.0\", \"toml\": \"^3.0.0\" } }, \"sha512-7teX9DW4tI2WZkXS4DBxneYSY7NHiXl4AKdWDO9LXVweULlCT8OPWsOjLEnMIXViN1j+QcY8mfbq3k0EK6x3uA==\"],\n\n    \"remark-parse\": [\"remark-parse@11.0.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"mdast-util-from-markdown\": \"^2.0.0\", \"micromark-util-types\": \"^2.0.0\", \"unified\": \"^11.0.0\" } }, \"sha512-FCxlKLNGknS5ba/1lmpYijMUzX2esxW5xQqjWxw2eHFfS2MSdaHVINFmhjo+qN1WhZhNimq0dZATN9pH0IDrpA==\"],\n\n    \"remark-rehype\": [\"remark-rehype@11.1.2\", \"\", { \"dependencies\": { \"@types/hast\": \"^3.0.0\", \"@types/mdast\": \"^4.0.0\", \"mdast-util-to-hast\": \"^13.0.0\", \"unified\": \"^11.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-Dh7l57ianaEoIpzbp0PC9UKAdCSVklD8E5Rpw7ETfbTl3FqcOOgq5q2LVDhgGCkaBv7p24JXikPdvhhmHvKMsw==\"],\n\n    \"remark-stringify\": [\"remark-stringify@11.0.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^4.0.0\", \"mdast-util-to-markdown\": \"^2.0.0\", \"unified\": \"^11.0.0\" } }, \"sha512-1OSmLd3awB/t8qdoEOMazZkNsfVTeY4fTsgzcQFdXNq8ToTN4ZGwrMnlda4K6smTFKD+GRV6O48i6Z4iKgPPpw==\"],\n\n    \"repeat-string\": [\"repeat-string@1.6.1\", \"\", {}, \"sha512-PV0dzCYDNfRi1jCDbJzpW7jNNDRuCOG/jI5ctQcGKt/clZD+YcPS3yIlWuTJMmESC8aevCFmWJy5wjAFgNqN6w==\"],\n\n    \"require-directory\": [\"require-directory@2.1.1\", \"\", {}, \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\"],\n\n    \"require-from-string\": [\"require-from-string@2.0.2\", \"\", {}, \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\"],\n\n    \"requires-port\": [\"requires-port@1.0.0\", \"\", {}, \"sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==\"],\n\n    \"resize-observer-polyfill\": [\"resize-observer-polyfill@1.5.1\", \"\", {}, \"sha512-LwZrotdHOo12nQuZlHEmtuXdqGoOD0OhaxopaNFxWzInpEgaLWoVuAMbTzixuosCx2nEG58ngzW3vxdWoxIgdg==\"],\n\n    \"resolve\": [\"resolve@1.22.10\", \"\", { \"dependencies\": { \"is-core-module\": \"^2.16.0\", \"path-parse\": \"^1.0.7\", \"supports-preserve-symlinks-flag\": \"^1.0.0\" }, \"bin\": { \"resolve\": \"bin/resolve\" } }, \"sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==\"],\n\n    \"resolve-cwd\": [\"resolve-cwd@3.0.0\", \"\", { \"dependencies\": { \"resolve-from\": \"^5.0.0\" } }, \"sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==\"],\n\n    \"resolve-from\": [\"resolve-from@5.0.0\", \"\", {}, \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\"],\n\n    \"resolve-pkg-maps\": [\"resolve-pkg-maps@1.0.0\", \"\", {}, \"sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==\"],\n\n    \"resolve.exports\": [\"resolve.exports@2.0.3\", \"\", {}, \"sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==\"],\n\n    \"restore-cursor\": [\"restore-cursor@3.1.0\", \"\", { \"dependencies\": { \"onetime\": \"^5.1.0\", \"signal-exit\": \"^3.0.2\" } }, \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\"],\n\n    \"retry-request\": [\"retry-request@7.0.2\", \"\", { \"dependencies\": { \"@types/request\": \"^2.48.8\", \"extend\": \"^3.0.2\", \"teeny-request\": \"^9.0.0\" } }, \"sha512-dUOvLMJ0/JJYEn8NrpOaGNE7X3vpI5XlZS/u0ANjqtcZVKnIxP7IgCFwrKTxENw29emmwug53awKtaMm4i9g5w==\"],\n\n    \"reusify\": [\"reusify@1.1.0\", \"\", {}, \"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\"],\n\n    \"rfdc\": [\"rfdc@1.4.1\", \"\", {}, \"sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA==\"],\n\n    \"rimraf\": [\"rimraf@3.0.2\", \"\", { \"dependencies\": { \"glob\": \"^7.1.3\" }, \"bin\": { \"rimraf\": \"bin.js\" } }, \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\"],\n\n    \"robust-predicates\": [\"robust-predicates@3.0.2\", \"\", {}, \"sha512-IXgzBWvWQwE6PrDI05OvmXUIruQTcoMDzRsOd5CDvHCVLcLHMTSYvOK5Cm46kWqlV3yAbuSpBZdJ5oP5OUoStg==\"],\n\n    \"roughjs\": [\"roughjs@4.6.6\", \"\", { \"dependencies\": { \"hachure-fill\": \"^0.5.2\", \"path-data-parser\": \"^0.1.0\", \"points-on-curve\": \"^0.2.0\", \"points-on-path\": \"^0.2.1\" } }, \"sha512-ZUz/69+SYpFN/g/lUlo2FXcIjRkSu3nDarreVdGGndHEBJ6cXPdKguS8JGxwj5HA5xIbVKSmLgr5b3AWxtRfvQ==\"],\n\n    \"run-parallel\": [\"run-parallel@1.2.0\", \"\", { \"dependencies\": { \"queue-microtask\": \"^1.2.2\" } }, \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\"],\n\n    \"rw\": [\"rw@1.3.3\", \"\", {}, \"sha512-PdhdWy89SiZogBLaw42zdeqtRJ//zFd2PgQavcICDUgJT5oW10QCRKbJ6bg4r0/UY2M6BWd5tkxuGFRvCkgfHQ==\"],\n\n    \"sade\": [\"sade@1.8.1\", \"\", { \"dependencies\": { \"mri\": \"^1.1.0\" } }, \"sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==\"],\n\n    \"safe-array-concat\": [\"safe-array-concat@1.1.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.2\", \"get-intrinsic\": \"^1.2.6\", \"has-symbols\": \"^1.1.0\", \"isarray\": \"^2.0.5\" } }, \"sha512-AURm5f0jYEOydBj7VQlVvDrjeFgthDdEF5H1dP+6mNpoXOMo1quQqJ4wvJDyRZ9+pO3kGWoOdmV08cSv2aJV6Q==\"],\n\n    \"safe-buffer\": [\"safe-buffer@5.2.1\", \"\", {}, \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\"],\n\n    \"safe-push-apply\": [\"safe-push-apply@1.0.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"isarray\": \"^2.0.5\" } }, \"sha512-iKE9w/Z7xCzUMIZqdBsp6pEQvwuEebH4vdpjcDWnyzaI6yl6O9FHvVpmGelvEHNsoY6wGblkxR6Zty/h00WiSA==\"],\n\n    \"safe-regex-test\": [\"safe-regex-test@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"is-regex\": \"^1.2.1\" } }, \"sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==\"],\n\n    \"safe-stable-stringify\": [\"safe-stable-stringify@2.5.0\", \"\", {}, \"sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==\"],\n\n    \"safer-buffer\": [\"safer-buffer@2.1.2\", \"\", {}, \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"],\n\n    \"saxes\": [\"saxes@6.0.0\", \"\", { \"dependencies\": { \"xmlchars\": \"^2.2.0\" } }, \"sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==\"],\n\n    \"scheduler\": [\"scheduler@0.21.0\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-1r87x5fz9MXqswA2ERLo0EbOAU74DpIUO090gIasYTqlVoJeMcl+Z1Rg7WHz+qtPujhS/hGIt9kxZOYBV3faRQ==\"],\n\n    \"section-matter\": [\"section-matter@1.0.0\", \"\", { \"dependencies\": { \"extend-shallow\": \"^2.0.1\", \"kind-of\": \"^6.0.0\" } }, \"sha512-vfD3pmTzGpufjScBh50YHKzEu2lxBWhVEHsNGoEXmCmn2hKGfeNLYMzCJpe8cD7gqX7TJluOVpBkAequ6dgMmA==\"],\n\n    \"seedrandom\": [\"seedrandom@3.0.5\", \"\", {}, \"sha512-8OwmbklUNzwezjGInmZ+2clQmExQPvomqjL7LFqOYqtmuxRgQYqOD3mHaU+MvZn5FLUeVxVfQjwLZW/n/JFuqg==\"],\n\n    \"semver\": [\"semver@7.7.2\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\"],\n\n    \"send\": [\"send@0.18.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"destroy\": \"1.2.0\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"etag\": \"~1.8.1\", \"fresh\": \"0.5.2\", \"http-errors\": \"2.0.0\", \"mime\": \"1.6.0\", \"ms\": \"2.1.3\", \"on-finished\": \"2.4.1\", \"range-parser\": \"~1.2.1\", \"statuses\": \"2.0.1\" } }, \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\"],\n\n    \"serialize-error\": [\"serialize-error@2.1.0\", \"\", {}, \"sha512-ghgmKt5o4Tly5yEG/UJp8qTd0AN7Xalw4XBtDEKP655B699qMEtra1WlXeE6WIvdEG481JvRxULKsInq/iNysw==\"],\n\n    \"serve-static\": [\"serve-static@1.15.0\", \"\", { \"dependencies\": { \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"parseurl\": \"~1.3.3\", \"send\": \"0.18.0\" } }, \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\"],\n\n    \"server-only\": [\"server-only@0.0.1\", \"\", {}, \"sha512-qepMx2JxAa5jjfzxG79yPPq+8BuFToHd1hm7kI+Z4zAq1ftQiP7HcxMhDDItrbtwVeLg/cY2JnKnrcFkmiswNA==\"],\n\n    \"set-function-length\": [\"set-function-length@1.2.2\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.1.4\", \"es-errors\": \"^1.3.0\", \"function-bind\": \"^1.1.2\", \"get-intrinsic\": \"^1.2.4\", \"gopd\": \"^1.0.1\", \"has-property-descriptors\": \"^1.0.2\" } }, \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\"],\n\n    \"set-function-name\": [\"set-function-name@2.0.2\", \"\", { \"dependencies\": { \"define-data-property\": \"^1.1.4\", \"es-errors\": \"^1.3.0\", \"functions-have-names\": \"^1.2.3\", \"has-property-descriptors\": \"^1.0.2\" } }, \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\"],\n\n    \"set-proto\": [\"set-proto@1.0.0\", \"\", { \"dependencies\": { \"dunder-proto\": \"^1.0.1\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-RJRdvCo6IAnPdsvP/7m6bsQqNnn1FCBX5ZNtFL98MmFF/4xAIJTIg1YbHW5DC2W5SKZanrC6i4HsJqlajw/dZw==\"],\n\n    \"setprototypeof\": [\"setprototypeof@1.2.0\", \"\", {}, \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"],\n\n    \"sha.js\": [\"sha.js@2.4.12\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.4\", \"safe-buffer\": \"^5.2.1\", \"to-buffer\": \"^1.2.0\" }, \"bin\": { \"sha.js\": \"bin.js\" } }, \"sha512-8LzC5+bvI45BjpfXU8V5fdU2mfeKiQe1D1gIMn7XUlF3OTUrpdJpPPH4EMAnF0DsHHdSZqCdSss5qCmJKuiO3w==\"],\n\n    \"shadcn-ui\": [\"shadcn-ui@0.9.5\", \"\", { \"dependencies\": { \"chalk\": \"^5.4.1\" }, \"bin\": { \"shadcn-ui\": \"dist/index.js\" } }, \"sha512-dsBQWpdLLYCdSdmvOmu53nJhhWnQD1OiblhuhkI4rPYxPKTyfbmZ2NTJHWMu1fXN9PTfN6IVK5vvh+BrjHJx2g==\"],\n\n    \"shebang-command\": [\"shebang-command@2.0.0\", \"\", { \"dependencies\": { \"shebang-regex\": \"^3.0.0\" } }, \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\"],\n\n    \"shebang-regex\": [\"shebang-regex@3.0.0\", \"\", {}, \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\"],\n\n    \"shell-quote\": [\"shell-quote@1.8.3\", \"\", {}, \"sha512-ObmnIF4hXNg1BqhnHmgbDETF8dLPCggZWBjkQfhZpbszZnYur5DUljTcCHii5LC3J5E0yeO/1LIMyH+UvHQgyw==\"],\n\n    \"side-channel\": [\"side-channel@1.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"object-inspect\": \"^1.13.3\", \"side-channel-list\": \"^1.0.0\", \"side-channel-map\": \"^1.0.1\", \"side-channel-weakmap\": \"^1.0.2\" } }, \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\"],\n\n    \"side-channel-list\": [\"side-channel-list@1.0.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"object-inspect\": \"^1.13.3\" } }, \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\"],\n\n    \"side-channel-map\": [\"side-channel-map@1.0.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.5\", \"object-inspect\": \"^1.13.3\" } }, \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\"],\n\n    \"side-channel-weakmap\": [\"side-channel-weakmap@1.0.2\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"es-errors\": \"^1.3.0\", \"get-intrinsic\": \"^1.2.5\", \"object-inspect\": \"^1.13.3\", \"side-channel-map\": \"^1.0.1\" } }, \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\"],\n\n    \"signal-exit\": [\"signal-exit@3.0.7\", \"\", {}, \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\"],\n\n    \"simple-concat\": [\"simple-concat@1.0.1\", \"\", {}, \"sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==\"],\n\n    \"simple-get\": [\"simple-get@4.0.1\", \"\", { \"dependencies\": { \"decompress-response\": \"^6.0.0\", \"once\": \"^1.3.1\", \"simple-concat\": \"^1.0.0\" } }, \"sha512-brv7p5WgH0jmQJr1ZDDfKDOSeWWg+OVypG99A/5vYGPqJ6pxiaHLy8nxtFjBA7oMa01ebA9gfh1uMCFqOuXxvA==\"],\n\n    \"simplesignal\": [\"simplesignal@2.1.7\", \"\", {}, \"sha512-PEo2qWpUke7IMhlqiBxrulIFvhJRLkl1ih52Rwa+bPjzhJepcd4GIjn2RiQmFSx3dQvsEAgF0/lXMwMN7vODaA==\"],\n\n    \"sisteransi\": [\"sisteransi@1.0.5\", \"\", {}, \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\"],\n\n    \"slash\": [\"slash@3.0.0\", \"\", {}, \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\"],\n\n    \"slice-ansi\": [\"slice-ansi@5.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.0.0\", \"is-fullwidth-code-point\": \"^4.0.0\" } }, \"sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==\"],\n\n    \"smart-buffer\": [\"smart-buffer@4.2.0\", \"\", {}, \"sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==\"],\n\n    \"socks\": [\"socks@2.8.7\", \"\", { \"dependencies\": { \"ip-address\": \"^10.0.1\", \"smart-buffer\": \"^4.2.0\" } }, \"sha512-HLpt+uLy/pxB+bum/9DzAgiKS8CX1EvbWxI4zlmgGCExImLdiad2iCwXT5Z4c9c3Eq8rP2318mPW2c+QbtjK8A==\"],\n\n    \"socks-proxy-agent\": [\"socks-proxy-agent@8.0.5\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.2\", \"debug\": \"^4.3.4\", \"socks\": \"^2.8.3\" } }, \"sha512-HehCEsotFqbPW9sJ8WVYB6UbmIMv7kUUORIF2Nncq4VQvBfNBLibW9YZR5dlYCSUhwcD628pRllm7n+E+YTzJw==\"],\n\n    \"sonic-boom\": [\"sonic-boom@4.2.0\", \"\", { \"dependencies\": { \"atomic-sleep\": \"^1.0.0\" } }, \"sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==\"],\n\n    \"source-map\": [\"source-map@0.7.6\", \"\", {}, \"sha512-i5uvt8C3ikiWeNZSVZNWcfZPItFQOsYTUAOkcUPGd8DqDy1uOUikjt5dG+uRlwyvR108Fb9DOd4GvXfT0N2/uQ==\"],\n\n    \"source-map-js\": [\"source-map-js@1.2.1\", \"\", {}, \"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\"],\n\n    \"source-map-support\": [\"source-map-support@0.5.21\", \"\", { \"dependencies\": { \"buffer-from\": \"^1.0.0\", \"source-map\": \"^0.6.0\" } }, \"sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==\"],\n\n    \"space-separated-tokens\": [\"space-separated-tokens@2.0.2\", \"\", {}, \"sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==\"],\n\n    \"split2\": [\"split2@4.2.0\", \"\", {}, \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\"],\n\n    \"sprintf-js\": [\"sprintf-js@1.0.3\", \"\", {}, \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\"],\n\n    \"stable-hash\": [\"stable-hash@0.0.5\", \"\", {}, \"sha512-+L3ccpzibovGXFK+Ap/f8LOS0ahMrHTf3xu7mMLSpEGU0EO9ucaysSylKo9eRDFNhWve/y275iPmIZ4z39a9iA==\"],\n\n    \"stack-utils\": [\"stack-utils@2.0.6\", \"\", { \"dependencies\": { \"escape-string-regexp\": \"^2.0.0\" } }, \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\"],\n\n    \"stackframe\": [\"stackframe@1.3.4\", \"\", {}, \"sha512-oeVtt7eWQS+Na6F//S4kJ2K2VbRlS9D43mAlMyVpVWovy9o+jfgH8O9agzANzaiLjclA0oYzUXEM4PurhSUChw==\"],\n\n    \"stacktrace-parser\": [\"stacktrace-parser@0.1.11\", \"\", { \"dependencies\": { \"type-fest\": \"^0.7.1\" } }, \"sha512-WjlahMgHmCJpqzU8bIBy4qtsZdU9lRlcZE3Lvyej6t4tuOuv1vk57OW3MBrj6hXBFx/nNoC9MPMTcr5YA7NQbg==\"],\n\n    \"stats-gl\": [\"stats-gl@2.4.2\", \"\", { \"dependencies\": { \"@types/three\": \"*\", \"three\": \"^0.170.0\" } }, \"sha512-g5O9B0hm9CvnM36+v7SFl39T7hmAlv541tU81ME8YeSb3i1CIP5/QdDeSB3A0la0bKNHpxpwxOVRo2wFTYEosQ==\"],\n\n    \"stats.js\": [\"stats.js@0.17.0\", \"\", {}, \"sha512-hNKz8phvYLPEcRkeG1rsGmV5ChMjKDAWU7/OJJdDErPBNChQXxCo3WZurGpnWc6gZhAzEPFad1aVgyOANH1sMw==\"],\n\n    \"statuses\": [\"statuses@2.0.1\", \"\", {}, \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\"],\n\n    \"stdin-discarder\": [\"stdin-discarder@0.1.0\", \"\", { \"dependencies\": { \"bl\": \"^5.0.0\" } }, \"sha512-xhV7w8S+bUwlPTb4bAOUQhv8/cSS5offJuX8GQGq32ONF0ZtDWKfkdomM3HMRA+LhX6um/FZ0COqlwsjD53LeQ==\"],\n\n    \"stop-iteration-iterator\": [\"stop-iteration-iterator@1.1.0\", \"\", { \"dependencies\": { \"es-errors\": \"^1.3.0\", \"internal-slot\": \"^1.1.0\" } }, \"sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==\"],\n\n    \"stream-events\": [\"stream-events@1.0.5\", \"\", { \"dependencies\": { \"stubs\": \"^3.0.0\" } }, \"sha512-E1GUzBSgvct8Jsb3v2X15pjzN1tYebtbLaMg+eBOUOAxgbLoSbT2NS91ckc5lJD1KfLjId+jXJRgo0qnV5Nerg==\"],\n\n    \"stream-shift\": [\"stream-shift@1.0.3\", \"\", {}, \"sha512-76ORR0DO1o1hlKwTbi/DM3EXWGf3ZJYO8cXX5RJwnul2DEg2oyoZyjLNoQM8WsvZiFKCRfC1O0J7iCvie3RZmQ==\"],\n\n    \"streamsearch\": [\"streamsearch@1.1.0\", \"\", {}, \"sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==\"],\n\n    \"streamx\": [\"streamx@2.22.1\", \"\", { \"dependencies\": { \"fast-fifo\": \"^1.3.2\", \"text-decoder\": \"^1.1.0\" }, \"optionalDependencies\": { \"bare-events\": \"^2.2.0\" } }, \"sha512-znKXEBxfatz2GBNK02kRnCXjV+AA4kjZIUxeWSr3UGirZMJfTE9uiwKHobnbgxWyL/JWro8tTq+vOqAK1/qbSA==\"],\n\n    \"string-argv\": [\"string-argv@0.3.2\", \"\", {}, \"sha512-aqD2Q0144Z+/RqG52NeHEkZauTAUWJO8c6yTftGJKO3Tja5tUgIfmIl6kExvhtxSDP7fXB6DvzkfMpCd/F3G+Q==\"],\n\n    \"string-length\": [\"string-length@4.0.2\", \"\", { \"dependencies\": { \"char-regex\": \"^1.0.2\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==\"],\n\n    \"string-width\": [\"string-width@7.2.0\", \"\", { \"dependencies\": { \"emoji-regex\": \"^10.3.0\", \"get-east-asian-width\": \"^1.0.0\", \"strip-ansi\": \"^7.1.0\" } }, \"sha512-tsaTIkKW9b4N+AEj+SVA+WhJzV7/zMhcSu78mLKWSk7cXMOSHsBKFWUs0fWwq8QyK3MgJBQRX6Gbi4kYbdvGkQ==\"],\n\n    \"string-width-cjs\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"string.prototype.includes\": [\"string.prototype.includes@2.0.1\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.3\" } }, \"sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==\"],\n\n    \"string.prototype.matchall\": [\"string.prototype.matchall@4.0.12\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.3\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.6\", \"es-errors\": \"^1.3.0\", \"es-object-atoms\": \"^1.0.0\", \"get-intrinsic\": \"^1.2.6\", \"gopd\": \"^1.2.0\", \"has-symbols\": \"^1.1.0\", \"internal-slot\": \"^1.1.0\", \"regexp.prototype.flags\": \"^1.5.3\", \"set-function-name\": \"^2.0.2\", \"side-channel\": \"^1.1.0\" } }, \"sha512-6CC9uyBL+/48dYizRf7H7VAYCMCNTBeM78x/VTUe9bFEaxBepPJDa1Ow99LqI/1yF7kuy7Q3cQsYMrcjGUcskA==\"],\n\n    \"string.prototype.repeat\": [\"string.prototype.repeat@1.0.0\", \"\", { \"dependencies\": { \"define-properties\": \"^1.1.3\", \"es-abstract\": \"^1.17.5\" } }, \"sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==\"],\n\n    \"string.prototype.trim\": [\"string.prototype.trim@1.2.10\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.2\", \"define-data-property\": \"^1.1.4\", \"define-properties\": \"^1.2.1\", \"es-abstract\": \"^1.23.5\", \"es-object-atoms\": \"^1.0.0\", \"has-property-descriptors\": \"^1.0.2\" } }, \"sha512-Rs66F0P/1kedk5lyYyH9uBzuiI/kNRmwJAR9quK6VOtIpZ2G+hMZd+HQbbv25MgCA6gEffoMZYxlTod4WcdrKA==\"],\n\n    \"string.prototype.trimend\": [\"string.prototype.trimend@1.0.9\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.2\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-G7Ok5C6E/j4SGfyLCloXTrngQIQU3PWtXGst3yM7Bea9FRURf1S42ZHlZZtsNque2FN2PoUhfZXYLNWwEr4dLQ==\"],\n\n    \"string.prototype.trimstart\": [\"string.prototype.trimstart@1.0.8\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"define-properties\": \"^1.2.1\", \"es-object-atoms\": \"^1.0.0\" } }, \"sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==\"],\n\n    \"string_decoder\": [\"string_decoder@1.3.0\", \"\", { \"dependencies\": { \"safe-buffer\": \"~5.2.0\" } }, \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\"],\n\n    \"stringify-entities\": [\"stringify-entities@4.0.4\", \"\", { \"dependencies\": { \"character-entities-html4\": \"^2.0.0\", \"character-entities-legacy\": \"^3.0.0\" } }, \"sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==\"],\n\n    \"strip-ansi\": [\"strip-ansi@7.1.0\", \"\", { \"dependencies\": { \"ansi-regex\": \"^6.0.1\" } }, \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\"],\n\n    \"strip-ansi-cjs\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"strip-bom\": [\"strip-bom@3.0.0\", \"\", {}, \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\"],\n\n    \"strip-bom-string\": [\"strip-bom-string@1.0.0\", \"\", {}, \"sha512-uCC2VHvQRYu+lMh4My/sFNmF2klFymLX1wHJeXnbEJERpV/ZsVuonzerjfrGpIGF7LBVa1O7i9kjiWvJiFck8g==\"],\n\n    \"strip-final-newline\": [\"strip-final-newline@3.0.0\", \"\", {}, \"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\"],\n\n    \"strip-indent\": [\"strip-indent@3.0.0\", \"\", { \"dependencies\": { \"min-indent\": \"^1.0.0\" } }, \"sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==\"],\n\n    \"strip-json-comments\": [\"strip-json-comments@3.1.1\", \"\", {}, \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\"],\n\n    \"stripe\": [\"stripe@16.12.0\", \"\", { \"dependencies\": { \"@types/node\": \">=8.1.0\", \"qs\": \"^6.11.0\" } }, \"sha512-H7eFVLDxeTNNSn4JTRfL2//LzCbDrMSZ+2q1c7CanVWgK2qIW5TwS+0V7N9KcKZZNpYh/uCqK0PyZh/2UsaAtQ==\"],\n\n    \"stubs\": [\"stubs@3.0.0\", \"\", {}, \"sha512-PdHt7hHUJKxvTCgbKX9C1V/ftOcjJQgz8BZwNfV5c4B6dcGqlpelTbJ999jBGZ2jYiPAwcX5dP6oBwVlBlUbxw==\"],\n\n    \"style-to-js\": [\"style-to-js@1.1.17\", \"\", { \"dependencies\": { \"style-to-object\": \"1.0.9\" } }, \"sha512-xQcBGDxJb6jjFCTzvQtfiPn6YvvP2O8U1MDIPNfJQlWMYfktPy+iGsHE7cssjs7y84d9fQaK4UF3RIJaAHSoYA==\"],\n\n    \"style-to-object\": [\"style-to-object@1.0.9\", \"\", { \"dependencies\": { \"inline-style-parser\": \"0.2.4\" } }, \"sha512-G4qppLgKu/k6FwRpHiGiKPaPTFcG3g4wNVX/Qsfu+RqQM30E7Tyu/TEgxcL9PNLF5pdRLwQdE3YKKf+KF2Dzlw==\"],\n\n    \"styled-jsx\": [\"styled-jsx@5.1.1\", \"\", { \"dependencies\": { \"client-only\": \"0.0.1\" }, \"peerDependencies\": { \"react\": \">= 16.8.0 || 17.x.x || ^18.0.0-0\" } }, \"sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==\"],\n\n    \"stylis\": [\"stylis@4.3.6\", \"\", {}, \"sha512-yQ3rwFWRfwNUY7H5vpU0wfdkNSnvnJinhF9830Swlaxl03zsOjCfmX0ugac+3LtK0lYSgwL/KXc8oYL3mG4YFQ==\"],\n\n    \"sucrase\": [\"sucrase@3.35.0\", \"\", { \"dependencies\": { \"@jridgewell/gen-mapping\": \"^0.3.2\", \"commander\": \"^4.0.0\", \"glob\": \"^10.3.10\", \"lines-and-columns\": \"^1.1.6\", \"mz\": \"^2.7.0\", \"pirates\": \"^4.0.1\", \"ts-interface-checker\": \"^0.1.9\" }, \"bin\": { \"sucrase\": \"bin/sucrase\", \"sucrase-node\": \"bin/sucrase-node\" } }, \"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\"],\n\n    \"supports-color\": [\"supports-color@8.1.1\", \"\", { \"dependencies\": { \"has-flag\": \"^4.0.0\" } }, \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\"],\n\n    \"supports-preserve-symlinks-flag\": [\"supports-preserve-symlinks-flag@1.0.0\", \"\", {}, \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\"],\n\n    \"suspend-react\": [\"suspend-react@0.1.3\", \"\", { \"peerDependencies\": { \"react\": \">=17.0\" } }, \"sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==\"],\n\n    \"symbol-tree\": [\"symbol-tree@3.2.4\", \"\", {}, \"sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==\"],\n\n    \"synckit\": [\"synckit@0.11.11\", \"\", { \"dependencies\": { \"@pkgr/core\": \"^0.2.9\" } }, \"sha512-MeQTA1r0litLUf0Rp/iisCaL8761lKAZHaimlbGK4j0HysC4PLfqygQj9srcs0m2RdtDYnF8UuYyKpbjHYp7Jw==\"],\n\n    \"systeminformation\": [\"systeminformation@5.23.4\", \"\", { \"os\": \"!aix\", \"bin\": { \"systeminformation\": \"lib/cli.js\" } }, \"sha512-mD2R9xnOzKOOmIVtxekosf/ghOE/DGLqAPmsEgQMWJK0pMKxBtX19riz1Ss0tN4omcfS2FQ2RDJ4lkxgADxIPw==\"],\n\n    \"tailwind-merge\": [\"tailwind-merge@2.6.0\", \"\", {}, \"sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==\"],\n\n    \"tailwindcss\": [\"tailwindcss@3.4.17\", \"\", { \"dependencies\": { \"@alloc/quick-lru\": \"^5.2.0\", \"arg\": \"^5.0.2\", \"chokidar\": \"^3.6.0\", \"didyoumean\": \"^1.2.2\", \"dlv\": \"^1.1.3\", \"fast-glob\": \"^3.3.2\", \"glob-parent\": \"^6.0.2\", \"is-glob\": \"^4.0.3\", \"jiti\": \"^1.21.6\", \"lilconfig\": \"^3.1.3\", \"micromatch\": \"^4.0.8\", \"normalize-path\": \"^3.0.0\", \"object-hash\": \"^3.0.0\", \"picocolors\": \"^1.1.1\", \"postcss\": \"^8.4.47\", \"postcss-import\": \"^15.1.0\", \"postcss-js\": \"^4.0.1\", \"postcss-load-config\": \"^4.0.2\", \"postcss-nested\": \"^6.2.0\", \"postcss-selector-parser\": \"^6.1.2\", \"resolve\": \"^1.22.8\", \"sucrase\": \"^3.35.0\" }, \"bin\": { \"tailwind\": \"lib/cli.js\", \"tailwindcss\": \"lib/cli.js\" } }, \"sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==\"],\n\n    \"tailwindcss-animate\": [\"tailwindcss-animate@1.0.7\", \"\", { \"peerDependencies\": { \"tailwindcss\": \">=3.0.0 || insiders\" } }, \"sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==\"],\n\n    \"tar-fs\": [\"tar-fs@3.1.0\", \"\", { \"dependencies\": { \"pump\": \"^3.0.0\", \"tar-stream\": \"^3.1.5\" }, \"optionalDependencies\": { \"bare-fs\": \"^4.0.1\", \"bare-path\": \"^3.0.0\" } }, \"sha512-5Mty5y/sOF1YWj1J6GiBodjlDc05CUR8PKXrsnFAiSG0xA+GHeWLovaZPYUDXkH/1iKRf2+M5+OrRgzC7O9b7w==\"],\n\n    \"tar-stream\": [\"tar-stream@2.2.0\", \"\", { \"dependencies\": { \"bl\": \"^4.0.3\", \"end-of-stream\": \"^1.4.1\", \"fs-constants\": \"^1.0.0\", \"inherits\": \"^2.0.3\", \"readable-stream\": \"^3.1.1\" } }, \"sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==\"],\n\n    \"teeny-request\": [\"teeny-request@9.0.0\", \"\", { \"dependencies\": { \"http-proxy-agent\": \"^5.0.0\", \"https-proxy-agent\": \"^5.0.0\", \"node-fetch\": \"^2.6.9\", \"stream-events\": \"^1.0.5\", \"uuid\": \"^9.0.0\" } }, \"sha512-resvxdc6Mgb7YEThw6G6bExlXKkv6+YbuzGg9xuXxSgxJF7Ozs+o8Y9+2R3sArdWdW8nOokoQb1yrpFB0pQK2g==\"],\n\n    \"terser\": [\"terser@5.43.1\", \"\", { \"dependencies\": { \"@jridgewell/source-map\": \"^0.3.3\", \"acorn\": \"^8.14.0\", \"commander\": \"^2.20.0\", \"source-map-support\": \"~0.5.20\" }, \"bin\": { \"terser\": \"bin/terser\" } }, \"sha512-+6erLbBm0+LROX2sPXlUYx/ux5PyE9K/a92Wrt6oA+WDAoFTdpHE5tCYCI5PNzq2y8df4rA+QgHLJuR4jNymsg==\"],\n\n    \"test-exclude\": [\"test-exclude@6.0.0\", \"\", { \"dependencies\": { \"@istanbuljs/schema\": \"^0.1.2\", \"glob\": \"^7.1.4\", \"minimatch\": \"^3.0.4\" } }, \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\"],\n\n    \"text-decoder\": [\"text-decoder@1.2.3\", \"\", { \"dependencies\": { \"b4a\": \"^1.6.4\" } }, \"sha512-3/o9z3X0X0fTupwsYvR03pJ/DjWuqqrfwBgTQzdWDiQSm9KitAyz/9WqsT2JQW7KV2m+bC2ol/zqpW37NHxLaA==\"],\n\n    \"text-extensions\": [\"text-extensions@2.4.0\", \"\", {}, \"sha512-te/NtwBwfiNRLf9Ijqx3T0nlqZiQ2XrrtBvu+cLL8ZRrGkO0NHTug8MYFKyoSrv/sHTaSKfilUkizV6XhxMJ3g==\"],\n\n    \"text-table\": [\"text-table@0.2.0\", \"\", {}, \"sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==\"],\n\n    \"thenify\": [\"thenify@3.3.1\", \"\", { \"dependencies\": { \"any-promise\": \"^1.0.0\" } }, \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\"],\n\n    \"thenify-all\": [\"thenify-all@1.6.0\", \"\", { \"dependencies\": { \"thenify\": \">= 3.1.0 < 4\" } }, \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\"],\n\n    \"thread-stream\": [\"thread-stream@3.1.0\", \"\", { \"dependencies\": { \"real-require\": \"^0.2.0\" } }, \"sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==\"],\n\n    \"three\": [\"three@0.168.0\", \"\", {}, \"sha512-6m6jXtDwMJEK/GGMbAOTSAmxNdzKvvBzgd7q8bE/7Tr6m7PaBh5kKLrN7faWtlglXbzj7sVba48Idwx+NRsZXw==\"],\n\n    \"three-conic-polygon-geometry\": [\"three-conic-polygon-geometry@2.1.2\", \"\", { \"dependencies\": { \"@turf/boolean-point-in-polygon\": \"^7.2\", \"d3-array\": \"1 - 3\", \"d3-geo\": \"1 - 3\", \"d3-geo-voronoi\": \"2\", \"d3-scale\": \"1 - 4\", \"delaunator\": \"5\", \"earcut\": \"3\" }, \"peerDependencies\": { \"three\": \">=0.72.0\" } }, \"sha512-NaP3RWLJIyPGI+zyaZwd0Yj6rkoxm4FJHqAX1Enb4L64oNYLCn4bz1ESgOEYavgcUwCNYINu1AgEoUBJr1wZcA==\"],\n\n    \"three-geojson-geometry\": [\"three-geojson-geometry@2.1.1\", \"\", { \"dependencies\": { \"d3-geo\": \"1 - 3\", \"d3-interpolate\": \"1 - 3\", \"earcut\": \"3\" }, \"peerDependencies\": { \"three\": \">=0.72.0\" } }, \"sha512-dC7bF3ri1goDcihYhzACHOBQqu7YNNazYLa2bSydVIiJUb3jDFojKSy+gNj2pMkqZNSVjssSmdY9zlmnhEpr1w==\"],\n\n    \"three-globe\": [\"three-globe@2.44.0\", \"\", { \"dependencies\": { \"@tweenjs/tween.js\": \"18 - 25\", \"accessor-fn\": \"1\", \"d3-array\": \"3\", \"d3-color\": \"3\", \"d3-geo\": \"3\", \"d3-interpolate\": \"3\", \"d3-scale\": \"4\", \"d3-scale-chromatic\": \"3\", \"data-bind-mapper\": \"1\", \"frame-ticker\": \"1\", \"h3-js\": \"4\", \"index-array-by\": \"1\", \"kapsule\": \"^1.16\", \"three-conic-polygon-geometry\": \"2\", \"three-geojson-geometry\": \"2\", \"three-slippy-map-globe\": \"1\", \"tinycolor2\": \"1\" }, \"peerDependencies\": { \"three\": \">=0.154\" } }, \"sha512-ZDZgGf06xSP2WfKxZgXBl1TjiSutzNhBK9vGMmy7Nupaujia5as75MmhV2VBVQL8iN0nAblXVnnXepfLNC93qA==\"],\n\n    \"three-mesh-bvh\": [\"three-mesh-bvh@0.7.8\", \"\", { \"peerDependencies\": { \"three\": \">= 0.151.0\" } }, \"sha512-BGEZTOIC14U0XIRw3tO4jY7IjP7n7v24nv9JXS1CyeVRWOCkcOMhRnmENUjuV39gktAw4Ofhr0OvIAiTspQrrw==\"],\n\n    \"three-slippy-map-globe\": [\"three-slippy-map-globe@1.0.3\", \"\", { \"dependencies\": { \"d3-geo\": \"1 - 3\", \"d3-octree\": \"^1.1\", \"d3-scale\": \"1 - 4\" }, \"peerDependencies\": { \"three\": \">=0.154\" } }, \"sha512-Y9WCA/tTL8yH8FHVSXVQss/P0V36utTNhuixzFPj0Bs0SXxO+Vui133oAQmMpx4BLXYZpWZwcqHM2i3MfFlYWw==\"],\n\n    \"three-stdlib\": [\"three-stdlib@2.36.0\", \"\", { \"dependencies\": { \"@types/draco3d\": \"^1.4.0\", \"@types/offscreencanvas\": \"^2019.6.4\", \"@types/webxr\": \"^0.5.2\", \"draco3d\": \"^1.4.1\", \"fflate\": \"^0.6.9\", \"potpack\": \"^1.0.1\" }, \"peerDependencies\": { \"three\": \">=0.128.0\" } }, \"sha512-kv0Byb++AXztEGsULgMAs8U2jgUdz6HPpAB/wDJnLiLlaWQX2APHhiTJIN7rqW+Of0eRgcp7jn05U1BsCP3xBA==\"],\n\n    \"throat\": [\"throat@5.0.0\", \"\", {}, \"sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZFNGt7/GYAuXaNOiYCA==\"],\n\n    \"through\": [\"through@2.3.8\", \"\", {}, \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg==\"],\n\n    \"tiny-invariant\": [\"tiny-invariant@1.3.3\", \"\", {}, \"sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==\"],\n\n    \"tinycolor2\": [\"tinycolor2@1.6.0\", \"\", {}, \"sha512-XPaBkWQJdsf3pLKJV9p4qN/S+fm2Oj8AIPo1BTUhg5oxkvm9+SVEGFdhyOz7tTdUTfvxMiAs4sp6/eZO2Ew+pw==\"],\n\n    \"tinyexec\": [\"tinyexec@1.0.1\", \"\", {}, \"sha512-5uC6DDlmeqiOwCPmK9jMSdOuZTh8bU39Ys6yidB+UTt5hfZUPGAypSgFRiEp+jbi9qH40BLDvy85jIU88wKSqw==\"],\n\n    \"tinyglobby\": [\"tinyglobby@0.2.14\", \"\", { \"dependencies\": { \"fdir\": \"^6.4.4\", \"picomatch\": \"^4.0.2\" } }, \"sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==\"],\n\n    \"tinygradient\": [\"tinygradient@1.1.5\", \"\", { \"dependencies\": { \"@types/tinycolor2\": \"^1.4.0\", \"tinycolor2\": \"^1.0.0\" } }, \"sha512-8nIfc2vgQ4TeLnk2lFj4tRLvvJwEfQuabdsmvDdQPT0xlk9TaNtpGd6nNRxXoK6vQhN6RSzj+Cnp5tTQmpxmbw==\"],\n\n    \"tmp\": [\"tmp@0.2.5\", \"\", {}, \"sha512-voyz6MApa1rQGUxT3E+BK7/ROe8itEx7vD8/HEvt4xwXucvQ5G5oeEiHkmHZJuBO21RpOf+YYm9MOivj709jow==\"],\n\n    \"tmpl\": [\"tmpl@1.0.5\", \"\", {}, \"sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==\"],\n\n    \"to-buffer\": [\"to-buffer@1.2.1\", \"\", { \"dependencies\": { \"isarray\": \"^2.0.5\", \"safe-buffer\": \"^5.2.1\", \"typed-array-buffer\": \"^1.0.3\" } }, \"sha512-tB82LpAIWjhLYbqjx3X4zEeHN6M8CiuOEy2JY8SEQVdYRe3CCHOFaqrBW1doLDrfpWhplcW7BL+bO3/6S3pcDQ==\"],\n\n    \"to-regex-range\": [\"to-regex-range@5.0.1\", \"\", { \"dependencies\": { \"is-number\": \"^7.0.0\" } }, \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\"],\n\n    \"to-vfile\": [\"to-vfile@8.0.0\", \"\", { \"dependencies\": { \"vfile\": \"^6.0.0\" } }, \"sha512-IcmH1xB5576MJc9qcfEC/m/nQCFt3fzMHz45sSlgJyTWjRbKW1HAkJpuf3DgE57YzIlZcwcBZA5ENQbBo4aLkg==\"],\n\n    \"toidentifier\": [\"toidentifier@1.0.1\", \"\", {}, \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\"],\n\n    \"toml\": [\"toml@3.0.0\", \"\", {}, \"sha512-y/mWCZinnvxjTKYhJ+pYxwD0mRLVvOtdS2Awbgxln6iEnt4rk0yBxeSBHkGJcPucRiG0e55mwWp+g/05rsrd6w==\"],\n\n    \"tough-cookie\": [\"tough-cookie@4.1.4\", \"\", { \"dependencies\": { \"psl\": \"^1.1.33\", \"punycode\": \"^2.1.1\", \"universalify\": \"^0.2.0\", \"url-parse\": \"^1.5.3\" } }, \"sha512-Loo5UUvLD9ScZ6jh8beX1T6sO1w2/MpCRpEP7V280GKMVUQ0Jzar2U3UJPsrdbziLEMMhu3Ujnq//rhiFuIeag==\"],\n\n    \"tr46\": [\"tr46@0.0.3\", \"\", {}, \"sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==\"],\n\n    \"tree-kill\": [\"tree-kill@1.2.2\", \"\", { \"bin\": { \"tree-kill\": \"cli.js\" } }, \"sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==\"],\n\n    \"trim-lines\": [\"trim-lines@3.0.1\", \"\", {}, \"sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==\"],\n\n    \"troika-three-text\": [\"troika-three-text@0.52.4\", \"\", { \"dependencies\": { \"bidi-js\": \"^1.0.2\", \"troika-three-utils\": \"^0.52.4\", \"troika-worker-utils\": \"^0.52.0\", \"webgl-sdf-generator\": \"1.1.1\" }, \"peerDependencies\": { \"three\": \">=0.125.0\" } }, \"sha512-V50EwcYGruV5rUZ9F4aNsrytGdKcXKALjEtQXIOBfhVoZU9VAqZNIoGQ3TMiooVqFAbR1w15T+f+8gkzoFzawg==\"],\n\n    \"troika-three-utils\": [\"troika-three-utils@0.52.4\", \"\", { \"peerDependencies\": { \"three\": \">=0.125.0\" } }, \"sha512-NORAStSVa/BDiG52Mfudk4j1FG4jC4ILutB3foPnfGbOeIs9+G5vZLa0pnmnaftZUGm4UwSoqEpWdqvC7zms3A==\"],\n\n    \"troika-worker-utils\": [\"troika-worker-utils@0.52.0\", \"\", {}, \"sha512-W1CpvTHykaPH5brv5VHLfQo9D1OYuo0cSBEUQFFT/nBUzM8iD6Lq2/tgG/f1OelbAS1WtaTPQzE5uM49egnngw==\"],\n\n    \"trough\": [\"trough@2.2.0\", \"\", {}, \"sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==\"],\n\n    \"ts-api-utils\": [\"ts-api-utils@1.4.3\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.2.0\" } }, \"sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==\"],\n\n    \"ts-dedent\": [\"ts-dedent@2.2.0\", \"\", {}, \"sha512-q5W7tVM71e2xjHZTlgfTDoPF/SmqKG5hddq9SzR49CH2hayqRKJtQ4mtRlSxKaJlR/+9rEM+mnBHf7I2/BQcpQ==\"],\n\n    \"ts-interface-checker\": [\"ts-interface-checker@0.1.13\", \"\", {}, \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\"],\n\n    \"ts-mixer\": [\"ts-mixer@6.0.4\", \"\", {}, \"sha512-ufKpbmrugz5Aou4wcr5Wc1UUFWOLhq+Fm6qa6P0w0K5Qw2yhaUoiWszhCVuNQyNwrlGiscHOmqYoAox1PtvgjA==\"],\n\n    \"ts-morph\": [\"ts-morph@18.0.0\", \"\", { \"dependencies\": { \"@ts-morph/common\": \"~0.19.0\", \"code-block-writer\": \"^12.0.0\" } }, \"sha512-Kg5u0mk19PIIe4islUI/HWRvm9bC1lHejK4S0oh1zaZ77TMZAEmQC0sHQYiu2RgCQFZKXz1fMVi/7nOOeirznA==\"],\n\n    \"ts-node\": [\"ts-node@10.9.2\", \"\", { \"dependencies\": { \"@cspotcode/source-map-support\": \"^0.8.0\", \"@tsconfig/node10\": \"^1.0.7\", \"@tsconfig/node12\": \"^1.0.7\", \"@tsconfig/node14\": \"^1.0.0\", \"@tsconfig/node16\": \"^1.0.2\", \"acorn\": \"^8.4.1\", \"acorn-walk\": \"^8.1.1\", \"arg\": \"^4.1.0\", \"create-require\": \"^1.1.0\", \"diff\": \"^4.0.1\", \"make-error\": \"^1.1.1\", \"v8-compile-cache-lib\": \"^3.0.1\", \"yn\": \"3.1.1\" }, \"peerDependencies\": { \"@swc/core\": \">=1.2.50\", \"@swc/wasm\": \">=1.2.50\", \"@types/node\": \"*\", \"typescript\": \">=2.7\" }, \"optionalPeers\": [\"@swc/core\", \"@swc/wasm\"], \"bin\": { \"ts-node\": \"dist/bin.js\", \"ts-script\": \"dist/bin-script-deprecated.js\", \"ts-node-cwd\": \"dist/bin-cwd.js\", \"ts-node-esm\": \"dist/bin-esm.js\", \"ts-node-script\": \"dist/bin-script.js\", \"ts-node-transpile-only\": \"dist/bin-transpile.js\" } }, \"sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==\"],\n\n    \"ts-pattern\": [\"ts-pattern@5.8.0\", \"\", {}, \"sha512-kIjN2qmWiHnhgr5DAkAafF9fwb0T5OhMVSWrm8XEdTFnX6+wfXwYOFjeF86UZ54vduqiR7BfqScFmXSzSaH8oA==\"],\n\n    \"tsc-alias\": [\"tsc-alias@1.7.0\", \"\", { \"dependencies\": { \"chokidar\": \"^3.5.3\", \"commander\": \"^9.0.0\", \"globby\": \"^11.0.4\", \"mylas\": \"^2.1.9\", \"normalize-path\": \"^3.0.0\", \"plimit-lit\": \"^1.2.6\" }, \"bin\": { \"tsc-alias\": \"dist/bin/index.js\" } }, \"sha512-n/K6g8S7Ec7Y/A2Z77Ikp2Uv1S1ERtT63ni69XV4W1YPT4rnNmz8ItgIiJYvKfFnKfqcZQ81UPjoKpMTxaC/rg==\"],\n\n    \"tsconfig-paths\": [\"tsconfig-paths@4.2.0\", \"\", { \"dependencies\": { \"json5\": \"^2.2.2\", \"minimist\": \"^1.2.6\", \"strip-bom\": \"^3.0.0\" } }, \"sha512-NoZ4roiN7LnbKn9QqE1amc9DJfzvZXxF4xDavcOWt1BPkdx+m+0gJuPM+S0vCe7zTJMYUP0R8pO2XMr+Y8oLIg==\"],\n\n    \"tslib\": [\"tslib@2.8.1\", \"\", {}, \"sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==\"],\n\n    \"tunnel-rat\": [\"tunnel-rat@0.1.2\", \"\", { \"dependencies\": { \"zustand\": \"^4.3.2\" } }, \"sha512-lR5VHmkPhzdhrM092lI2nACsLO4QubF0/yoOhzX7c+wIpbN1GjHNzCc91QlpxBi+cnx8vVJ+Ur6vL5cEoQPFpQ==\"],\n\n    \"typanion\": [\"typanion@3.14.0\", \"\", {}, \"sha512-ZW/lVMRabETuYCd9O9ZvMhAh8GslSqaUjxmK/JLPCh6l73CvLBiuXswj/+7LdnWOgYsQ130FqLzFz5aGT4I3Ug==\"],\n\n    \"type-check\": [\"type-check@0.4.0\", \"\", { \"dependencies\": { \"prelude-ls\": \"^1.2.1\" } }, \"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\"],\n\n    \"type-detect\": [\"type-detect@4.0.8\", \"\", {}, \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\"],\n\n    \"type-fest\": [\"type-fest@0.21.3\", \"\", {}, \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\"],\n\n    \"type-is\": [\"type-is@1.6.18\", \"\", { \"dependencies\": { \"media-typer\": \"0.3.0\", \"mime-types\": \"~2.1.24\" } }, \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\"],\n\n    \"typed-array-buffer\": [\"typed-array-buffer@1.0.3\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"es-errors\": \"^1.3.0\", \"is-typed-array\": \"^1.1.14\" } }, \"sha512-nAYYwfY3qnzX30IkA6AQZjVbtK6duGontcQm1WSG1MD94YLqK0515GNApXkoxKOWMusVssAHWLh9SeaoefYFGw==\"],\n\n    \"typed-array-byte-length\": [\"typed-array-byte-length@1.0.3\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.8\", \"for-each\": \"^0.3.3\", \"gopd\": \"^1.2.0\", \"has-proto\": \"^1.2.0\", \"is-typed-array\": \"^1.1.14\" } }, \"sha512-BaXgOuIxz8n8pIq3e7Atg/7s+DpiYrxn4vdot3w9KbnBhcRQq6o3xemQdIfynqSeXeDrF32x+WvfzmOjPiY9lg==\"],\n\n    \"typed-array-byte-offset\": [\"typed-array-byte-offset@1.0.4\", \"\", { \"dependencies\": { \"available-typed-arrays\": \"^1.0.7\", \"call-bind\": \"^1.0.8\", \"for-each\": \"^0.3.3\", \"gopd\": \"^1.2.0\", \"has-proto\": \"^1.2.0\", \"is-typed-array\": \"^1.1.15\", \"reflect.getprototypeof\": \"^1.0.9\" } }, \"sha512-bTlAFB/FBYMcuX81gbL4OcpH5PmlFHqlCCpAl8AlEzMz5k53oNDvN8p1PNOWLEmI2x4orp3raOFB51tv9X+MFQ==\"],\n\n    \"typed-array-length\": [\"typed-array-length@1.0.7\", \"\", { \"dependencies\": { \"call-bind\": \"^1.0.7\", \"for-each\": \"^0.3.3\", \"gopd\": \"^1.0.1\", \"is-typed-array\": \"^1.1.13\", \"possible-typed-array-names\": \"^1.0.0\", \"reflect.getprototypeof\": \"^1.0.6\" } }, \"sha512-3KS2b+kL7fsuk/eJZ7EQdnEmQoaho/r6KUef7hxvltNA5DR8NAUM+8wJMbJyZ4G9/7i3v5zPBIMN5aybAh2/Jg==\"],\n\n    \"typed-query-selector\": [\"typed-query-selector@2.12.0\", \"\", {}, \"sha512-SbklCd1F0EiZOyPiW192rrHZzZ5sBijB6xM+cpmrwDqObvdtunOHHIk9fCGsoK5JVIYXoyEp4iEdE3upFH3PAg==\"],\n\n    \"typedarray-to-buffer\": [\"typedarray-to-buffer@3.1.5\", \"\", { \"dependencies\": { \"is-typedarray\": \"^1.0.0\" } }, \"sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==\"],\n\n    \"types\": [\"types@0.1.1\", \"\", {}, \"sha512-JuntZtJj4MKLE9x/XBs7IjsznYhzETwr34pw3XJTKvgYtAMdeMG+o8x8U85E5Lm6eCPa1DdOdGVsHMwq4ZnZAg==\"],\n\n    \"typescript\": [\"typescript@5.5.4\", \"\", { \"bin\": { \"tsc\": \"bin/tsc\", \"tsserver\": \"bin/tsserver\" } }, \"sha512-Mtq29sKDAEYP7aljRgtPOpTvOfbwRWlS6dPRzwjdE+C0R4brX/GUyhHSecbHMFLNBLcJIPt9nl9yG5TZ1weH+Q==\"],\n\n    \"typescript-eslint\": [\"typescript-eslint@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/eslint-plugin\": \"7.18.0\", \"@typescript-eslint/parser\": \"7.18.0\", \"@typescript-eslint/utils\": \"7.18.0\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-PonBkP603E3tt05lDkbOMyaxJjvKqQrXsnow72sVeOFINDE/qNmnnd+f9b4N+U7W6MXnnYyrhtmF2t08QWwUbA==\"],\n\n    \"ufo\": [\"ufo@1.6.1\", \"\", {}, \"sha512-9a4/uxlTWJ4+a5i0ooc1rU7C7YOw3wT+UGqdeNNHWnOF9qcMBgLRS+4IYUqbczewFx4mLEig6gawh7X6mFlEkA==\"],\n\n    \"unbox-primitive\": [\"unbox-primitive@1.1.0\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.3\", \"has-bigints\": \"^1.0.2\", \"has-symbols\": \"^1.1.0\", \"which-boxed-primitive\": \"^1.1.1\" } }, \"sha512-nWJ91DjeOkej/TA8pXQ3myruKpKEYgqvpw9lz4OPHj/NWFNluYrjbz9j01CJ8yKQd2g4jFoOkINCTW2I5LEEyw==\"],\n\n    \"undici\": [\"undici@6.21.3\", \"\", {}, \"sha512-gBLkYIlEnSp8pFbT64yFgGE6UIB9tAkhukC23PmMDCe5Nd+cRqKxSjw5y54MK2AZMgZfJWMaNE4nYUHgi1XEOw==\"],\n\n    \"undici-types\": [\"undici-types@6.21.0\", \"\", {}, \"sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==\"],\n\n    \"unicode-canonical-property-names-ecmascript\": [\"unicode-canonical-property-names-ecmascript@2.0.1\", \"\", {}, \"sha512-dA8WbNeb2a6oQzAQ55YlT5vQAWGV9WXOsi3SskE3bcCdM0P4SDd+24zS/OCacdRq5BkdsRj9q3Pg6YyQoxIGqg==\"],\n\n    \"unicode-match-property-ecmascript\": [\"unicode-match-property-ecmascript@2.0.0\", \"\", { \"dependencies\": { \"unicode-canonical-property-names-ecmascript\": \"^2.0.0\", \"unicode-property-aliases-ecmascript\": \"^2.0.0\" } }, \"sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==\"],\n\n    \"unicode-match-property-value-ecmascript\": [\"unicode-match-property-value-ecmascript@2.2.0\", \"\", {}, \"sha512-4IehN3V/+kkr5YeSSDDQG8QLqO26XpL2XP3GQtqwlT/QYSECAwFztxVHjlbh0+gjJ3XmNLS0zDsbgs9jWKExLg==\"],\n\n    \"unicode-property-aliases-ecmascript\": [\"unicode-property-aliases-ecmascript@2.1.0\", \"\", {}, \"sha512-6t3foTQI9qne+OZoVQB/8x8rk2k1eVy1gRXhV3oFQ5T6R1dqQ1xtin3XqSlx3+ATBkliTaR/hHyJBm+LVPNM8w==\"],\n\n    \"unicorn-magic\": [\"unicorn-magic@0.1.0\", \"\", {}, \"sha512-lRfVq8fE8gz6QMBuDM6a+LO3IAzTi05H6gCVaUpir2E1Rwpo4ZUog45KpNXKC/Mn3Yb9UDuHumeFTo9iV/D9FQ==\"],\n\n    \"unified\": [\"unified@11.0.5\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"bail\": \"^2.0.0\", \"devlop\": \"^1.0.0\", \"extend\": \"^3.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^6.0.0\" } }, \"sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==\"],\n\n    \"unique-string\": [\"unique-string@3.0.0\", \"\", { \"dependencies\": { \"crypto-random-string\": \"^4.0.0\" } }, \"sha512-VGXBUVwxKMBUznyffQweQABPRRW1vHZAbadFZud4pLFAqRGvv/96vafgjWFqzourzr8YonlQiPgH0YCJfawoGQ==\"],\n\n    \"unist-util-generated\": [\"unist-util-generated@2.0.1\", \"\", {}, \"sha512-qF72kLmPxAw0oN2fwpWIqbXAVyEqUzDHMsbtPvOudIlUzXYFIeQIuxXQCRCFh22B7cixvU0MG7m3MW8FTq/S+A==\"],\n\n    \"unist-util-is\": [\"unist-util-is@6.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==\"],\n\n    \"unist-util-position\": [\"unist-util-position@5.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==\"],\n\n    \"unist-util-position-from-estree\": [\"unist-util-position-from-estree@2.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-KaFVRjoqLyF6YXCbVLNad/eS4+OfPQQn2yOd7zF/h5T/CSL2v8NpN6a5TPvtbXthAGw5nG+PuTtq+DdIZr+cRQ==\"],\n\n    \"unist-util-remove-position\": [\"unist-util-remove-position@4.0.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-TkBb0HABNmxzAcfLf4qsIbFbaPDvMO6wa3b3j4VcEzFVaw1LBKwnW4/sRJ/atSLSzoIg41JWEdnE7N6DIhGDGQ==\"],\n\n    \"unist-util-stringify-position\": [\"unist-util-stringify-position@4.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\" } }, \"sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==\"],\n\n    \"unist-util-visit\": [\"unist-util-visit@5.0.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"unist-util-is\": \"^6.0.0\", \"unist-util-visit-parents\": \"^6.0.0\" } }, \"sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==\"],\n\n    \"unist-util-visit-parents\": [\"unist-util-visit-parents@6.0.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"unist-util-is\": \"^6.0.0\" } }, \"sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==\"],\n\n    \"universalify\": [\"universalify@2.0.1\", \"\", {}, \"sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==\"],\n\n    \"unpipe\": [\"unpipe@1.0.0\", \"\", {}, \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\"],\n\n    \"unrs-resolver\": [\"unrs-resolver@1.11.1\", \"\", { \"dependencies\": { \"napi-postinstall\": \"^0.3.0\" }, \"optionalDependencies\": { \"@unrs/resolver-binding-android-arm-eabi\": \"1.11.1\", \"@unrs/resolver-binding-android-arm64\": \"1.11.1\", \"@unrs/resolver-binding-darwin-arm64\": \"1.11.1\", \"@unrs/resolver-binding-darwin-x64\": \"1.11.1\", \"@unrs/resolver-binding-freebsd-x64\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm-gnueabihf\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm-musleabihf\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-arm64-musl\": \"1.11.1\", \"@unrs/resolver-binding-linux-ppc64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-riscv64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-riscv64-musl\": \"1.11.1\", \"@unrs/resolver-binding-linux-s390x-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-x64-gnu\": \"1.11.1\", \"@unrs/resolver-binding-linux-x64-musl\": \"1.11.1\", \"@unrs/resolver-binding-wasm32-wasi\": \"1.11.1\", \"@unrs/resolver-binding-win32-arm64-msvc\": \"1.11.1\", \"@unrs/resolver-binding-win32-ia32-msvc\": \"1.11.1\", \"@unrs/resolver-binding-win32-x64-msvc\": \"1.11.1\" } }, \"sha512-bSjt9pjaEBnNiGgc9rUiHGKv5l4/TGzDmYw3RhnkJGtLhbnnA/5qJj7x3dNDCRx/PJxu774LlH8lCOlB4hEfKg==\"],\n\n    \"update-browserslist-db\": [\"update-browserslist-db@1.1.3\", \"\", { \"dependencies\": { \"escalade\": \"^3.2.0\", \"picocolors\": \"^1.1.1\" }, \"peerDependencies\": { \"browserslist\": \">= 4.21.0\" }, \"bin\": { \"update-browserslist-db\": \"cli.js\" } }, \"sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==\"],\n\n    \"uri-js\": [\"uri-js@4.4.1\", \"\", { \"dependencies\": { \"punycode\": \"^2.1.0\" } }, \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\"],\n\n    \"url-parse\": [\"url-parse@1.5.10\", \"\", { \"dependencies\": { \"querystringify\": \"^2.1.1\", \"requires-port\": \"^1.0.0\" } }, \"sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==\"],\n\n    \"use-callback-ref\": [\"use-callback-ref@1.3.3\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==\"],\n\n    \"use-debounce\": [\"use-debounce@10.0.5\", \"\", { \"peerDependencies\": { \"react\": \"*\" } }, \"sha512-Q76E3lnIV+4YT9AHcrHEHYmAd9LKwUAbPXDm7FlqVGDHiSOhX3RDjT8dm0AxbJup6WgOb1YEcKyCr11kBJR5KQ==\"],\n\n    \"use-sidecar\": [\"use-sidecar@1.1.3\", \"\", { \"dependencies\": { \"detect-node-es\": \"^1.1.0\", \"tslib\": \"^2.0.0\" }, \"peerDependencies\": { \"@types/react\": \"*\", \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc\" }, \"optionalPeers\": [\"@types/react\"] }, \"sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==\"],\n\n    \"use-sync-external-store\": [\"use-sync-external-store@1.5.0\", \"\", { \"peerDependencies\": { \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\" } }, \"sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==\"],\n\n    \"util-deprecate\": [\"util-deprecate@1.0.2\", \"\", {}, \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\"],\n\n    \"utility-types\": [\"utility-types@3.11.0\", \"\", {}, \"sha512-6Z7Ma2aVEWisaL6TvBCy7P8rm2LQoPv6dJ7ecIaIixHcwfbJ0x7mWdbcwlIM5IGQxPZSFYeqRCqlOOeKoJYMkw==\"],\n\n    \"utils-merge\": [\"utils-merge@1.0.1\", \"\", {}, \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\"],\n\n    \"uuid\": [\"uuid@9.0.1\", \"\", { \"bin\": { \"uuid\": \"dist/bin/uuid\" } }, \"sha512-b+1eJOlsR9K8HJpow9Ok3fiWOWSIcIzXodvv0rQjVoOVNpWMpxf1wZNpt4y9h10odCNrqnYp1OBzRktckBe3sA==\"],\n\n    \"uvu\": [\"uvu@0.5.6\", \"\", { \"dependencies\": { \"dequal\": \"^2.0.0\", \"diff\": \"^5.0.0\", \"kleur\": \"^4.0.3\", \"sade\": \"^1.7.3\" }, \"bin\": { \"uvu\": \"bin.js\" } }, \"sha512-+g8ENReyr8YsOc6fv/NVJs2vFdHBnBNdfE49rshrTzDWOlUx4Gq7KOS2GD8eqhy2j+Ejq29+SbKH8yjkAqXqoA==\"],\n\n    \"v8-compile-cache-lib\": [\"v8-compile-cache-lib@3.0.1\", \"\", {}, \"sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==\"],\n\n    \"v8-to-istanbul\": [\"v8-to-istanbul@9.3.0\", \"\", { \"dependencies\": { \"@jridgewell/trace-mapping\": \"^0.3.12\", \"@types/istanbul-lib-coverage\": \"^2.0.1\", \"convert-source-map\": \"^2.0.0\" } }, \"sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==\"],\n\n    \"vary\": [\"vary@1.1.2\", \"\", {}, \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\"],\n\n    \"vfile\": [\"vfile@6.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"vfile-message\": \"^4.0.0\" } }, \"sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==\"],\n\n    \"vfile-location\": [\"vfile-location@4.1.0\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-YF23YMyASIIJXpktBa4vIGLJ5Gs88UB/XePgqPmTa7cDA+JeO3yclbpheQYCHjVHBn/yePzrXuygIL+xbvRYHw==\"],\n\n    \"vfile-matter\": [\"vfile-matter@5.0.1\", \"\", { \"dependencies\": { \"vfile\": \"^6.0.0\", \"yaml\": \"^2.0.0\" } }, \"sha512-o6roP82AiX0XfkyTHyRCMXgHfltUNlXSEqCIS80f+mbAyiQBE2fxtDVMtseyytGx75sihiJFo/zR6r/4LTs2Cw==\"],\n\n    \"vfile-message\": [\"vfile-message@4.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^3.0.0\", \"unist-util-stringify-position\": \"^4.0.0\" } }, \"sha512-QTHzsGd1EhbZs4AsQ20JX1rC3cOlt/IWJruk893DfLRr57lcnOeMaWG4K0JrRta4mIJZKth2Au3mM3u03/JWKw==\"],\n\n    \"vlq\": [\"vlq@1.0.1\", \"\", {}, \"sha512-gQpnTgkubC6hQgdIcRdYGDSDc+SaujOdyesZQMv6JlfQee/9Mp0Qhnys6WxDWvQnL5WZdT7o2Ul187aSt0Rq+w==\"],\n\n    \"vscode-jsonrpc\": [\"vscode-jsonrpc@8.2.0\", \"\", {}, \"sha512-C+r0eKJUIfiDIfwJhria30+TYWPtuHJXHtI7J0YlOmKAo7ogxP20T0zxB7HZQIFhIyvoBPwWskjxrvAtfjyZfA==\"],\n\n    \"vscode-languageserver\": [\"vscode-languageserver@9.0.1\", \"\", { \"dependencies\": { \"vscode-languageserver-protocol\": \"3.17.5\" }, \"bin\": { \"installServerIntoExtension\": \"bin/installServerIntoExtension\" } }, \"sha512-woByF3PDpkHFUreUa7Hos7+pUWdeWMXRd26+ZX2A8cFx6v/JPTtd4/uN0/jB6XQHYaOlHbio03NTHCqrgG5n7g==\"],\n\n    \"vscode-languageserver-protocol\": [\"vscode-languageserver-protocol@3.17.5\", \"\", { \"dependencies\": { \"vscode-jsonrpc\": \"8.2.0\", \"vscode-languageserver-types\": \"3.17.5\" } }, \"sha512-mb1bvRJN8SVznADSGWM9u/b07H7Ecg0I3OgXDuLdn307rl/J3A9YD6/eYOssqhecL27hK1IPZAsaqh00i/Jljg==\"],\n\n    \"vscode-languageserver-textdocument\": [\"vscode-languageserver-textdocument@1.0.12\", \"\", {}, \"sha512-cxWNPesCnQCcMPeenjKKsOCKQZ/L6Tv19DTRIGuLWe32lyzWhihGVJ/rcckZXJxfdKCFvRLS3fpBIsV/ZGX4zA==\"],\n\n    \"vscode-languageserver-types\": [\"vscode-languageserver-types@3.17.5\", \"\", {}, \"sha512-Ld1VelNuX9pdF39h2Hgaeb5hEZM2Z3jUrrMgWQAu82jMtZp7p3vJT3BzToKtZI7NgQssZje5o0zryOrhQvzQAg==\"],\n\n    \"vscode-uri\": [\"vscode-uri@3.0.8\", \"\", {}, \"sha512-AyFQ0EVmsOZOlAnxoFOGOq1SQDWAB7C6aqMGS23svWAllfOaxbuFvcT8D1i8z3Gyn8fraVeZNNmN6e9bxxXkKw==\"],\n\n    \"w3c-xmlserializer\": [\"w3c-xmlserializer@4.0.0\", \"\", { \"dependencies\": { \"xml-name-validator\": \"^4.0.0\" } }, \"sha512-d+BFHzbiCx6zGfz0HyQ6Rg69w9k19nviJspaj4yNscGjrHu94sVP+aRm75yEbCh+r2/yR+7q6hux9LVtbuTGBw==\"],\n\n    \"walker\": [\"walker@1.0.8\", \"\", { \"dependencies\": { \"makeerror\": \"1.0.12\" } }, \"sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==\"],\n\n    \"wcwidth\": [\"wcwidth@1.0.1\", \"\", { \"dependencies\": { \"defaults\": \"^1.0.3\" } }, \"sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==\"],\n\n    \"web-namespaces\": [\"web-namespaces@2.0.1\", \"\", {}, \"sha512-bKr1DkiNa2krS7qxNtdrtHAmzuYGFQLiQ13TsorsdT6ULTkPLKuu5+GsFpDlg6JFjUTwX2DyhMPG2be8uPrqsQ==\"],\n\n    \"web-streams-polyfill\": [\"web-streams-polyfill@4.0.0-beta.3\", \"\", {}, \"sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug==\"],\n\n    \"web-tree-sitter\": [\"web-tree-sitter@0.25.6\", \"\", {}, \"sha512-WG+/YGbxw8r+rLlzzhV+OvgiOJCWdIpOucG3qBf3RCBFMkGDb1CanUi2BxCxjnkpzU3/hLWPT8VO5EKsMk9Fxg==\"],\n\n    \"web-vitals\": [\"web-vitals@4.2.4\", \"\", {}, \"sha512-r4DIlprAGwJ7YM11VZp4R884m0Vmgr6EAKe3P+kO0PPj3Unqyvv59rczf6UiGcb9Z8QxZVcqKNwv/g0WNdWwsw==\"],\n\n    \"webgl-constants\": [\"webgl-constants@1.1.1\", \"\", {}, \"sha512-LkBXKjU5r9vAW7Gcu3T5u+5cvSvh5WwINdr0C+9jpzVB41cjQAP5ePArDtk/WHYdVj0GefCgM73BA7FlIiNtdg==\"],\n\n    \"webgl-sdf-generator\": [\"webgl-sdf-generator@1.1.1\", \"\", {}, \"sha512-9Z0JcMTFxeE+b2x1LJTdnaT8rT8aEp7MVxkNwoycNmJWwPdzoXzMh0BjJSh/AEFP+KPYZUli814h8bJZFIZ2jA==\"],\n\n    \"webidl-conversions\": [\"webidl-conversions@7.0.0\", \"\", {}, \"sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==\"],\n\n    \"whatwg-encoding\": [\"whatwg-encoding@2.0.0\", \"\", { \"dependencies\": { \"iconv-lite\": \"0.6.3\" } }, \"sha512-p41ogyeMUrw3jWclHWTQg1k05DSVXPLcVxRTYsXUk+ZooOCZLcoYgPZ/HL/D/N+uQPOtcp1me1WhBEaX02mhWg==\"],\n\n    \"whatwg-fetch\": [\"whatwg-fetch@3.6.20\", \"\", {}, \"sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==\"],\n\n    \"whatwg-mimetype\": [\"whatwg-mimetype@3.0.0\", \"\", {}, \"sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==\"],\n\n    \"whatwg-url\": [\"whatwg-url@5.0.0\", \"\", { \"dependencies\": { \"tr46\": \"~0.0.3\", \"webidl-conversions\": \"^3.0.0\" } }, \"sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==\"],\n\n    \"which\": [\"which@2.0.2\", \"\", { \"dependencies\": { \"isexe\": \"^2.0.0\" }, \"bin\": { \"node-which\": \"./bin/node-which\" } }, \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\"],\n\n    \"which-boxed-primitive\": [\"which-boxed-primitive@1.1.1\", \"\", { \"dependencies\": { \"is-bigint\": \"^1.1.0\", \"is-boolean-object\": \"^1.2.1\", \"is-number-object\": \"^1.1.1\", \"is-string\": \"^1.1.1\", \"is-symbol\": \"^1.1.1\" } }, \"sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==\"],\n\n    \"which-builtin-type\": [\"which-builtin-type@1.2.1\", \"\", { \"dependencies\": { \"call-bound\": \"^1.0.2\", \"function.prototype.name\": \"^1.1.6\", \"has-tostringtag\": \"^1.0.2\", \"is-async-function\": \"^2.0.0\", \"is-date-object\": \"^1.1.0\", \"is-finalizationregistry\": \"^1.1.0\", \"is-generator-function\": \"^1.0.10\", \"is-regex\": \"^1.2.1\", \"is-weakref\": \"^1.0.2\", \"isarray\": \"^2.0.5\", \"which-boxed-primitive\": \"^1.1.0\", \"which-collection\": \"^1.0.2\", \"which-typed-array\": \"^1.1.16\" } }, \"sha512-6iBczoX+kDQ7a3+YJBnh3T+KZRxM/iYNPXicqk66/Qfm1b93iu+yOImkg0zHbj5LNOcNv1TEADiZ0xa34B4q6Q==\"],\n\n    \"which-collection\": [\"which-collection@1.0.2\", \"\", { \"dependencies\": { \"is-map\": \"^2.0.3\", \"is-set\": \"^2.0.3\", \"is-weakmap\": \"^2.0.2\", \"is-weakset\": \"^2.0.3\" } }, \"sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==\"],\n\n    \"which-typed-array\": [\"which-typed-array@1.1.19\", \"\", { \"dependencies\": { \"available-typed-arrays\": \"^1.0.7\", \"call-bind\": \"^1.0.8\", \"call-bound\": \"^1.0.4\", \"for-each\": \"^0.3.5\", \"get-proto\": \"^1.0.1\", \"gopd\": \"^1.2.0\", \"has-tostringtag\": \"^1.0.2\" } }, \"sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==\"],\n\n    \"widest-line\": [\"widest-line@3.1.0\", \"\", { \"dependencies\": { \"string-width\": \"^4.0.0\" } }, \"sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==\"],\n\n    \"word-wrap\": [\"word-wrap@1.2.5\", \"\", {}, \"sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==\"],\n\n    \"wordwrap\": [\"wordwrap@1.0.0\", \"\", {}, \"sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q==\"],\n\n    \"wrap-ansi\": [\"wrap-ansi@9.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.2.1\", \"string-width\": \"^7.0.0\", \"strip-ansi\": \"^7.1.0\" } }, \"sha512-G8ura3S+3Z2G+mkgNRq8dqaFZAuxfsxpBB8OCTGRTCtp+l/v9nbFNmCUP1BZMts3G1142MsZfn6eeUKrr4PD1Q==\"],\n\n    \"wrap-ansi-cjs\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"wrappy\": [\"wrappy@1.0.2\", \"\", {}, \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\"],\n\n    \"write-file-atomic\": [\"write-file-atomic@3.0.3\", \"\", { \"dependencies\": { \"imurmurhash\": \"^0.1.4\", \"is-typedarray\": \"^1.0.0\", \"signal-exit\": \"^3.0.2\", \"typedarray-to-buffer\": \"^3.1.5\" } }, \"sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==\"],\n\n    \"ws\": [\"ws@8.18.0\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==\"],\n\n    \"xdg-basedir\": [\"xdg-basedir@5.1.0\", \"\", {}, \"sha512-GCPAHLvrIH13+c0SuacwvRYj2SxJXQ4kaVTT5xgL3kPrz56XxkF21IGhjSE1+W0aw7gpBWRGXLCPnPby6lSpmQ==\"],\n\n    \"xml-name-validator\": [\"xml-name-validator@4.0.0\", \"\", {}, \"sha512-ICP2e+jsHvAj2E2lIHxa5tjXRlKDJo4IdvPvCXbXQGdzSfmSpNVyIKMvoZHjDY9DP0zV17iI85o90vRFXNccRw==\"],\n\n    \"xmlchars\": [\"xmlchars@2.2.0\", \"\", {}, \"sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==\"],\n\n    \"xtend\": [\"xtend@4.0.2\", \"\", {}, \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\"],\n\n    \"y18n\": [\"y18n@5.0.8\", \"\", {}, \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\"],\n\n    \"yallist\": [\"yallist@4.0.0\", \"\", {}, \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"],\n\n    \"yaml\": [\"yaml@2.8.1\", \"\", { \"bin\": { \"yaml\": \"bin.mjs\" } }, \"sha512-lcYcMxX2PO9XMGvAJkJ3OsNMw+/7FKes7/hgerGUYWIoWu5j/+YQqcZr5JnPZWzOsEBgMbSbiSTn/dv/69Mkpw==\"],\n\n    \"yargs\": [\"yargs@17.7.2\", \"\", { \"dependencies\": { \"cliui\": \"^8.0.1\", \"escalade\": \"^3.1.1\", \"get-caller-file\": \"^2.0.5\", \"require-directory\": \"^2.1.1\", \"string-width\": \"^4.2.3\", \"y18n\": \"^5.0.5\", \"yargs-parser\": \"^21.1.1\" } }, \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\"],\n\n    \"yargs-parser\": [\"yargs-parser@21.1.1\", \"\", {}, \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\"],\n\n    \"yauzl\": [\"yauzl@2.10.0\", \"\", { \"dependencies\": { \"buffer-crc32\": \"~0.2.3\", \"fd-slicer\": \"~1.1.0\" } }, \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g==\"],\n\n    \"yn\": [\"yn@3.1.1\", \"\", {}, \"sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==\"],\n\n    \"yocto-queue\": [\"yocto-queue@1.2.1\", \"\", {}, \"sha512-AyeEbWOu/TAXdxlV9wmGcR0+yh2j3vYPGOECcIj2S7MkrLyC7ne+oye2BKTItt0ii2PHk4cDy+95+LshzbXnGg==\"],\n\n    \"zdog\": [\"zdog@1.1.3\", \"\", {}, \"sha512-raRj6r0gPzopFm5XWBJZr/NuV4EEnT4iE+U3dp5FV5pCb588Gmm3zLIp/j9yqqcMiHH8VNQlerLTgOqL7krh6w==\"],\n\n    \"zod\": [\"zod@3.25.67\", \"\", {}, \"sha512-idA2YXwpCdqUSKRCACDE6ItZD9TZzy3OZMtpfLoh6oPR47lipysRrJfjzMqFxQ3uJuUPyUeWe1r9vLH33xO/Qw==\"],\n\n    \"zod-from-json-schema\": [\"zod-from-json-schema@0.4.2\", \"\", { \"dependencies\": { \"zod\": \"^3.25.25\" } }, \"sha512-U+SIzUUT7P6w1UNAz81Sj0Vko77eQPkZ8LbJeXqQbwLmq1MZlrjB3Gj4LuebqJW25/CzS9WA8SjTgR5lvuv+zA==\"],\n\n    \"zod-to-json-schema\": [\"zod-to-json-schema@3.24.6\", \"\", { \"peerDependencies\": { \"zod\": \"^3.24.1\" } }, \"sha512-h/z3PKvcTcTetyjl1fkj79MHNEjm+HpD6NXheWjzOekY7kV+lwDYnHw+ivHkijnCSMz1yJaWBD9vu/Fcmk+vEg==\"],\n\n    \"zustand\": [\"zustand@5.0.7\", \"\", { \"peerDependencies\": { \"@types/react\": \">=18.0.0\", \"immer\": \">=9.0.6\", \"react\": \">=18.0.0\", \"use-sync-external-store\": \">=1.2.0\" }, \"optionalPeers\": [\"@types/react\", \"immer\", \"react\", \"use-sync-external-store\"] }, \"sha512-Ot6uqHDW/O2VdYsKLLU8GQu8sCOM1LcoE8RwvLv9uuRT9s6SOHCKs0ZEOhxg+I1Ld+A1Q5lwx+UlKXXUoCZITg==\"],\n\n    \"zwitch\": [\"zwitch@2.0.4\", \"\", {}, \"sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==\"],\n\n    \"@ai-sdk/gateway/@ai-sdk/provider-utils\": [\"@ai-sdk/provider-utils@3.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@standard-schema/spec\": \"^1.0.0\", \"eventsource-parser\": \"^3.0.3\", \"zod-to-json-schema\": \"^3.24.1\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-BoQZtGcBxkeSH1zK+SRYNDtJPIPpacTeiMZqnG4Rv6xXjEwM0FH4MGs9c+PlhyEWmQCzjRM2HAotEydFhD4dYw==\"],\n\n    \"@ampproject/remapping/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@auth/core/jose\": [\"jose@6.0.12\", \"\", {}, \"sha512-T8xypXs8CpmiIi78k0E+Lk7T2zlK4zDyg+o1CZ4AkOHgDg98ogdP2BeZ61lTFKFyoEwJ9RgAgN+SdM3iPgNonQ==\"],\n\n    \"@auth/core/preact\": [\"preact@10.24.3\", \"\", {}, \"sha512-Z2dPnBnMUfyQfSQ+GBdsGa16hz35YmLmtTLhM169uW944hYL6xzTYkJjC07j+Wosz733pMWx0fgON3JNw1jJQA==\"],\n\n    \"@auth/core/preact-render-to-string\": [\"preact-render-to-string@6.5.11\", \"\", { \"peerDependencies\": { \"preact\": \">=10\" } }, \"sha512-ubnauqoGczeGISiOh6RjX0/cdaF8v/oDXIjO85XALCQjwQP+SB4RDXXtvZ6yTYSjG+PC1QRP2AhPgCEsM2EvUw==\"],\n\n    \"@babel/code-frame/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"@babel/core/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/generator/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@babel/helper-compilation-targets/lru-cache\": [\"lru-cache@5.1.1\", \"\", { \"dependencies\": { \"yallist\": \"^3.0.2\" } }, \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\"],\n\n    \"@babel/helper-compilation-targets/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/helper-create-class-features-plugin/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/helper-create-regexp-features-plugin/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@babel/plugin-transform-runtime/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"@codebuff/backend/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@codebuff/backend/ts-pattern\": [\"ts-pattern@5.3.1\", \"\", {}, \"sha512-1RUMKa8jYQdNfmnK4jyzBK3/PS/tnjcZ1CW0v1vWDeYe5RBklc/nquw03MEoB66hVBm4BnlCfmOqDVxHyT1DpA==\"],\n\n    \"@codebuff/common/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@codebuff/npm-app/@types/diff\": [\"@types/diff@5.2.1\", \"\", {}, \"sha512-uxpcuwWJGhe2AR1g8hD9F5OYGCqjqWnBUQFD8gMZsDbv8oPHzxJF6iMO6n8Tk0AdzlxoaaoQhOYlIg/PukVU8g==\"],\n\n    \"@codebuff/npm-app/ignore\": [\"ignore@7.0.3\", \"\", {}, \"sha512-bAH5jbK/F3T3Jls4I0SO1hmPR0dKU0a7+SY6n1yzRtG54FLO8d6w/nxLFX2Nb7dBu6cCWXPaAME6cYqFUMmuCA==\"],\n\n    \"@codebuff/npm-app/posthog-node\": [\"posthog-node@4.17.2\", \"\", { \"dependencies\": { \"axios\": \"^1.8.2\" } }, \"sha512-bFmwOTk4QdYavopeHVXtyFGQ9vyLMVaNWkWocwjix+0n6sQgv7Zq5nYjYulz7ThmK18zsvNJ337ahuMLv3ulow==\"],\n\n    \"@codebuff/npm-app/ts-pattern\": [\"ts-pattern@5.3.1\", \"\", {}, \"sha512-1RUMKa8jYQdNfmnK4jyzBK3/PS/tnjcZ1CW0v1vWDeYe5RBklc/nquw03MEoB66hVBm4BnlCfmOqDVxHyT1DpA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin\": [\"@typescript-eslint/eslint-plugin@8.39.1\", \"\", { \"dependencies\": { \"@eslint-community/regexpp\": \"^4.10.0\", \"@typescript-eslint/scope-manager\": \"8.39.1\", \"@typescript-eslint/type-utils\": \"8.39.1\", \"@typescript-eslint/utils\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^7.0.0\", \"natural-compare\": \"^1.4.0\", \"ts-api-utils\": \"^2.1.0\" }, \"peerDependencies\": { \"@typescript-eslint/parser\": \"^8.39.1\", \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-yYegZ5n3Yr6eOcqgj2nJH8cH/ZZgF+l0YIdKILSDjYFRjgYQMgv/lRjV5Z7Up04b9VYUondt8EPMqg7kTWgJ2g==\"],\n\n    \"@codebuff/web/dotenv\": [\"dotenv@16.6.1\", \"\", {}, \"sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==\"],\n\n    \"@codebuff/web/pino\": [\"pino@9.8.0\", \"\", { \"dependencies\": { \"atomic-sleep\": \"^1.0.0\", \"fast-redact\": \"^3.1.1\", \"on-exit-leak-free\": \"^2.1.0\", \"pino-abstract-transport\": \"^2.0.0\", \"pino-std-serializers\": \"^7.0.0\", \"process-warning\": \"^5.0.0\", \"quick-format-unescaped\": \"^4.0.3\", \"real-require\": \"^0.2.0\", \"safe-stable-stringify\": \"^2.3.1\", \"sonic-boom\": \"^4.0.1\", \"thread-stream\": \"^3.0.0\" }, \"bin\": { \"pino\": \"bin.js\" } }, \"sha512-L5+rV1wL7vGAcxXP7sPpN5lrJ07Piruka6ArXr7EWBXxdVWjJshGVX8suFsiusJVcGKDGUFfbgbnKdg+VAC+0g==\"],\n\n    \"@codebuff/web/prettier\": [\"prettier@3.6.2\", \"\", { \"bin\": { \"prettier\": \"bin/prettier.cjs\" } }, \"sha512-I7AIg5boAr5R0FFtJ6rCfD+LFsWHp81dolrFD8S79U9tb8Az2nGrJncnMSnys+bpQJfRUzqs9hnA81OAA3hCuQ==\"],\n\n    \"@commitlint/config-validator/ajv\": [\"ajv@8.17.1\", \"\", { \"dependencies\": { \"fast-deep-equal\": \"^3.1.3\", \"fast-uri\": \"^3.0.1\", \"json-schema-traverse\": \"^1.0.0\", \"require-from-string\": \"^2.0.2\" } }, \"sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==\"],\n\n    \"@commitlint/format/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"@commitlint/load/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"@commitlint/load/cosmiconfig\": [\"cosmiconfig@9.0.0\", \"\", { \"dependencies\": { \"env-paths\": \"^2.2.1\", \"import-fresh\": \"^3.3.0\", \"js-yaml\": \"^4.1.0\", \"parse-json\": \"^5.2.0\" }, \"peerDependencies\": { \"typescript\": \">=4.9.5\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\"],\n\n    \"@commitlint/top-level/find-up\": [\"find-up@7.0.0\", \"\", { \"dependencies\": { \"locate-path\": \"^7.2.0\", \"path-exists\": \"^5.0.0\", \"unicorn-magic\": \"^0.1.0\" } }, \"sha512-YyZM99iHrqLKjmt4LJDj58KI+fYyufRLBSYcqycxf//KpBk9FoewoGX0450m9nB44qrZnovzC2oeP5hUibxc/g==\"],\n\n    \"@commitlint/types/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"@contentlayer/core/esbuild\": [\"esbuild@0.18.20\", \"\", { \"optionalDependencies\": { \"@esbuild/android-arm\": \"0.18.20\", \"@esbuild/android-arm64\": \"0.18.20\", \"@esbuild/android-x64\": \"0.18.20\", \"@esbuild/darwin-arm64\": \"0.18.20\", \"@esbuild/darwin-x64\": \"0.18.20\", \"@esbuild/freebsd-arm64\": \"0.18.20\", \"@esbuild/freebsd-x64\": \"0.18.20\", \"@esbuild/linux-arm\": \"0.18.20\", \"@esbuild/linux-arm64\": \"0.18.20\", \"@esbuild/linux-ia32\": \"0.18.20\", \"@esbuild/linux-loong64\": \"0.18.20\", \"@esbuild/linux-mips64el\": \"0.18.20\", \"@esbuild/linux-ppc64\": \"0.18.20\", \"@esbuild/linux-riscv64\": \"0.18.20\", \"@esbuild/linux-s390x\": \"0.18.20\", \"@esbuild/linux-x64\": \"0.18.20\", \"@esbuild/netbsd-x64\": \"0.18.20\", \"@esbuild/openbsd-x64\": \"0.18.20\", \"@esbuild/sunos-x64\": \"0.18.20\", \"@esbuild/win32-arm64\": \"0.18.20\", \"@esbuild/win32-ia32\": \"0.18.20\", \"@esbuild/win32-x64\": \"0.18.20\" }, \"bin\": { \"esbuild\": \"bin/esbuild\" } }, \"sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==\"],\n\n    \"@contentlayer/core/remark-parse\": [\"remark-parse@10.0.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-3ydxgHa/ZQzG8LvC7jTXccARYDcRld3VfcgIIFs7bI6vbRSxJJmzgLEIIoYKyrfhaY+ujuWaf/PJiMZXoiCXgw==\"],\n\n    \"@contentlayer/core/remark-rehype\": [\"remark-rehype@10.1.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-to-hast\": \"^12.1.0\", \"unified\": \"^10.0.0\" } }, \"sha512-EFmR5zppdBp0WQeDVZ/b66CWJipB2q2VLNFMabzDSGR66Z2fQii83G5gTBbgGEnEEA0QRussvrFHxk1HWGJskw==\"],\n\n    \"@contentlayer/core/type-fest\": [\"type-fest@3.13.1\", \"\", {}, \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\"],\n\n    \"@contentlayer/core/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"@contentlayer/source-files/ts-pattern\": [\"ts-pattern@4.3.0\", \"\", {}, \"sha512-pefrkcd4lmIVR0LA49Imjf9DYLK8vtWhqBPA3Ya1ir8xCW0O2yjL9dsCVvI7pCodLC5q7smNpEtDR2yVulQxOg==\"],\n\n    \"@contentlayer/source-files/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"@contentlayer/utils/ts-pattern\": [\"ts-pattern@4.3.0\", \"\", {}, \"sha512-pefrkcd4lmIVR0LA49Imjf9DYLK8vtWhqBPA3Ya1ir8xCW0O2yjL9dsCVvI7pCodLC5q7smNpEtDR2yVulQxOg==\"],\n\n    \"@contentlayer/utils/type-fest\": [\"type-fest@3.13.1\", \"\", {}, \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\"],\n\n    \"@discordjs/rest/@discordjs/collection\": [\"@discordjs/collection@2.1.1\", \"\", {}, \"sha512-LiSusze9Tc7qF03sLCujF5iZp7K+vRNEDBZ86FT9aQAv3vxMLihUvKvpsCWiQ2DJq1tVckopKm1rxomgNUc9hg==\"],\n\n    \"@discordjs/ws/@discordjs/collection\": [\"@discordjs/collection@2.1.1\", \"\", {}, \"sha512-LiSusze9Tc7qF03sLCujF5iZp7K+vRNEDBZ86FT9aQAv3vxMLihUvKvpsCWiQ2DJq1tVckopKm1rxomgNUc9hg==\"],\n\n    \"@discordjs/ws/ws\": [\"ws@8.18.3\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild\": [\"esbuild@0.18.20\", \"\", { \"optionalDependencies\": { \"@esbuild/android-arm\": \"0.18.20\", \"@esbuild/android-arm64\": \"0.18.20\", \"@esbuild/android-x64\": \"0.18.20\", \"@esbuild/darwin-arm64\": \"0.18.20\", \"@esbuild/darwin-x64\": \"0.18.20\", \"@esbuild/freebsd-arm64\": \"0.18.20\", \"@esbuild/freebsd-x64\": \"0.18.20\", \"@esbuild/linux-arm\": \"0.18.20\", \"@esbuild/linux-arm64\": \"0.18.20\", \"@esbuild/linux-ia32\": \"0.18.20\", \"@esbuild/linux-loong64\": \"0.18.20\", \"@esbuild/linux-mips64el\": \"0.18.20\", \"@esbuild/linux-ppc64\": \"0.18.20\", \"@esbuild/linux-riscv64\": \"0.18.20\", \"@esbuild/linux-s390x\": \"0.18.20\", \"@esbuild/linux-x64\": \"0.18.20\", \"@esbuild/netbsd-x64\": \"0.18.20\", \"@esbuild/openbsd-x64\": \"0.18.20\", \"@esbuild/sunos-x64\": \"0.18.20\", \"@esbuild/win32-arm64\": \"0.18.20\", \"@esbuild/win32-ia32\": \"0.18.20\", \"@esbuild/win32-x64\": \"0.18.20\" }, \"bin\": { \"esbuild\": \"bin/esbuild\" } }, \"sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==\"],\n\n    \"@eslint/eslintrc/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@iconify/utils/globals\": [\"globals@15.15.0\", \"\", {}, \"sha512-7ACyT3wmyp3I61S4fG682L0VA2RGD9otkqGJIwNUMF1SWUombIIk+af1unuDYgMm082aHYwD+mzJvv9Iu8dsgg==\"],\n\n    \"@isaacs/cliui/string-width\": [\"string-width@5.1.2\", \"\", { \"dependencies\": { \"eastasianwidth\": \"^0.2.0\", \"emoji-regex\": \"^9.2.2\", \"strip-ansi\": \"^7.0.1\" } }, \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\"],\n\n    \"@isaacs/cliui/wrap-ansi\": [\"wrap-ansi@8.1.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.1.0\", \"string-width\": \"^5.0.1\", \"strip-ansi\": \"^7.0.1\" } }, \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\"],\n\n    \"@istanbuljs/load-nyc-config/camelcase\": [\"camelcase@5.3.1\", \"\", {}, \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up\": [\"find-up@4.1.0\", \"\", { \"dependencies\": { \"locate-path\": \"^5.0.0\", \"path-exists\": \"^4.0.0\" } }, \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\"],\n\n    \"@istanbuljs/load-nyc-config/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"@jest/core/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@jest/reporters/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jest/reporters/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"@jest/reporters/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@jest/source-map/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jest/transform/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jest/transform/write-file-atomic\": [\"write-file-atomic@4.0.2\", \"\", { \"dependencies\": { \"imurmurhash\": \"^0.1.4\", \"signal-exit\": \"^3.0.7\" } }, \"sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==\"],\n\n    \"@jridgewell/gen-mapping/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@jridgewell/source-map/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx\": [\"@mdx-js/mdx@2.3.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/mdx\": \"^2.0.0\", \"estree-util-build-jsx\": \"^2.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"estree-util-to-js\": \"^1.1.0\", \"estree-walker\": \"^3.0.0\", \"hast-util-to-estree\": \"^2.0.0\", \"markdown-extensions\": \"^1.0.0\", \"periscopic\": \"^3.0.0\", \"remark-mdx\": \"^2.0.0\", \"remark-parse\": \"^10.0.0\", \"remark-rehype\": \"^10.0.0\", \"unified\": \"^10.0.0\", \"unist-util-position-from-estree\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"unist-util-visit\": \"^4.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-jLuwRlz8DQfQNiUCJR50Y09CGPq3fLtmtUQfVrj79E0JWu3dvsVcxVIcfhR5h0iXu+/z++zDrYeiJqifRynJkA==\"],\n\n    \"@mdx-js/esbuild/node-fetch\": [\"node-fetch@3.3.2\", \"\", { \"dependencies\": { \"data-uri-to-buffer\": \"^4.0.0\", \"fetch-blob\": \"^3.1.4\", \"formdata-polyfill\": \"^4.0.10\" } }, \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\"],\n\n    \"@mdx-js/esbuild/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"@nx/devkit/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@nx/devkit/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"@oclif/core/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"@oclif/core/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"@oclif/core/wrap-ansi\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"@oclif/errors/fs-extra\": [\"fs-extra@8.1.0\", \"\", { \"dependencies\": { \"graceful-fs\": \"^4.2.0\", \"jsonfile\": \"^4.0.0\", \"universalify\": \"^0.1.0\" } }, \"sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==\"],\n\n    \"@oclif/errors/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@oclif/errors/wrap-ansi\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.28.0\", \"\", {}, \"sha512-lp4qAiMTD4sNWW4DbKLBkfiMZ4jbAboJIGOQr5DvciMRI494OapieI9qiODpOt0XBr1LjIDy1xAGAnVs5supTA==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/sdk-trace-base\": [\"@opentelemetry/sdk-trace-base@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-moTiQtc0uPR1hQLt6gLDJH9IIkeBhgRb71OKjNHZPE1VF45fHtD6nBDi5J/DkTHTwYP5X3kBJLa3xN7ub6J4eg==\"],\n\n    \"@opentelemetry/otlp-exporter-base/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/otlp-grpc-exporter-base/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/sdk-trace-base\": [\"@opentelemetry/sdk-trace-base@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/resources\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-moTiQtc0uPR1hQLt6gLDJH9IIkeBhgRb71OKjNHZPE1VF45fHtD6nBDi5J/DkTHTwYP5X3kBJLa3xN7ub6J4eg==\"],\n\n    \"@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.28.0\", \"\", {}, \"sha512-lp4qAiMTD4sNWW4DbKLBkfiMZ4jbAboJIGOQr5DvciMRI494OapieI9qiODpOt0XBr1LjIDy1xAGAnVs5supTA==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/core\": [\"@opentelemetry/core@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-2dBX3Sj99H96uwJKvc2w9NOiNgbvAO6mOFJFramNkKfS9O4Um+VWgpnlAazoYjT6kUJ1MP70KQ5ngD4ed+4NUw==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/resources\": [\"@opentelemetry/resources@1.13.0\", \"\", { \"dependencies\": { \"@opentelemetry/core\": \"1.13.0\", \"@opentelemetry/semantic-conventions\": \"1.13.0\" }, \"peerDependencies\": { \"@opentelemetry/api\": \">=1.0.0 <1.5.0\" } }, \"sha512-euqjOkiN6xhjE//0vQYGvbStxoD/WWQRhDiO0OTLlnLBO9Yw2Gd/VoSx2H+svsebjzYk5OxLuREBmcdw6rbUNg==\"],\n\n    \"@opentelemetry/sdk-trace-base/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.28.0\", \"\", {}, \"sha512-lp4qAiMTD4sNWW4DbKLBkfiMZ4jbAboJIGOQr5DvciMRI494OapieI9qiODpOt0XBr1LjIDy1xAGAnVs5supTA==\"],\n\n    \"@react-native/codegen/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"@react-native/dev-middleware/open\": [\"open@7.4.2\", \"\", { \"dependencies\": { \"is-docker\": \"^2.0.0\", \"is-wsl\": \"^2.1.1\" } }, \"sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==\"],\n\n    \"@react-native/dev-middleware/serve-static\": [\"serve-static@1.16.2\", \"\", { \"dependencies\": { \"encodeurl\": \"~2.0.0\", \"escape-html\": \"~1.0.3\", \"parseurl\": \"~1.3.3\", \"send\": \"0.19.0\" } }, \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\"],\n\n    \"@react-native/dev-middleware/ws\": [\"ws@6.2.3\", \"\", { \"dependencies\": { \"async-limiter\": \"~1.0.0\" } }, \"sha512-jmTjYU0j60B+vHey6TfR3Z7RD61z/hmxBS3VMSGIrroOWXQEneK1zNuotOUrGyBHQj0yrpsLHPWtigEFd13ndA==\"],\n\n    \"@react-three/fiber/zustand\": [\"zustand@3.7.2\", \"\", { \"peerDependencies\": { \"react\": \">=16.8\" }, \"optionalPeers\": [\"react\"] }, \"sha512-PIJDIZKtokhof+9+60cpockVOq05sJzHCriyvaLBmEJixseQ1a5Kdov6fWZfWOu5SK9c+FhH1jU0tntLxRJYMA==\"],\n\n    \"@shadcn/ui/chalk\": [\"chalk@5.2.0\", \"\", {}, \"sha512-ree3Gqw/nazQAPuJJEy+avdl7QfZMcUvmHIKgEZkGL+xOBzRvup5Hxo6LHuMceSxOabuJLJm5Yp/92R9eMmMvA==\"],\n\n    \"@shadcn/ui/commander\": [\"commander@10.0.1\", \"\", {}, \"sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==\"],\n\n    \"@shadcn/ui/node-fetch\": [\"node-fetch@3.3.2\", \"\", { \"dependencies\": { \"data-uri-to-buffer\": \"^4.0.0\", \"fetch-blob\": \"^3.1.4\", \"formdata-polyfill\": \"^4.0.10\" } }, \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\"],\n\n    \"@testing-library/dom/aria-query\": [\"aria-query@5.3.0\", \"\", { \"dependencies\": { \"dequal\": \"^2.0.3\" } }, \"sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==\"],\n\n    \"@testing-library/dom/dom-accessibility-api\": [\"dom-accessibility-api@0.5.16\", \"\", {}, \"sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==\"],\n\n    \"@testing-library/dom/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"@testing-library/dom/pretty-format\": [\"pretty-format@27.5.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\", \"ansi-styles\": \"^5.0.0\", \"react-is\": \"^17.0.1\" } }, \"sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==\"],\n\n    \"@testing-library/jest-dom/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"@ts-morph/common/minimatch\": [\"minimatch@7.4.6\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-sBz8G/YjVniEz6lKPNpKxXwazJe4c19fEfV2GDMX6AjFz+MX9uDWIZW8XreVhkFW3fkIdTv/gxWr/Kks5FFAVw==\"],\n\n    \"@types/request/form-data\": [\"form-data@2.5.5\", \"\", { \"dependencies\": { \"asynckit\": \"^0.4.0\", \"combined-stream\": \"^1.0.8\", \"es-set-tostringtag\": \"^2.1.0\", \"hasown\": \"^2.0.2\", \"mime-types\": \"^2.1.35\", \"safe-buffer\": \"^5.2.1\" } }, \"sha512-jqdObeR2rxZZbPSGL+3VckHMYtu+f9//KXBsVny6JSX/pa38Fy+bGjuG8eW/H6USNQWhLi8Num++cU2yOCNz4A==\"],\n\n    \"@types/three/@tweenjs/tween.js\": [\"@tweenjs/tween.js@23.1.3\", \"\", {}, \"sha512-vJmvvwFxYuGnF2axRtPYocag6Clbb5YS7kLL+SO/TeVFzHqDIWrNKYtcsPMibjDx9O+bu+psAy9NKfWklassUA==\"],\n\n    \"@types/three/fflate\": [\"fflate@0.8.2\", \"\", {}, \"sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==\"],\n\n    \"@typescript-eslint/eslint-plugin/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"@typescript-eslint/parser/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\" } }, \"sha512-RkBKGBrjgskFGWuyUGz/EtD8AF/GW49S21J8dvMzpJitOF1slLEbbHnNEtAHtnDAnx8qDEdRrULRnWVx27wGBw==\"],\n\n    \"@typescript-eslint/parser/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"eslint-visitor-keys\": \"^4.2.1\" } }, \"sha512-W8FQi6kEh2e8zVhQ0eeRnxdvIoOkAp/CPAahcNio6nO9dsIwb9b34z90KOlheoyuVf6LSOEdjlkxSkapNEc+4A==\"],\n\n    \"@typescript-eslint/scope-manager/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" } }, \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\"],\n\n    \"@typescript-eslint/typescript-estree/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"eslint-visitor-keys\": \"^4.2.1\" } }, \"sha512-W8FQi6kEh2e8zVhQ0eeRnxdvIoOkAp/CPAahcNio6nO9dsIwb9b34z90KOlheoyuVf6LSOEdjlkxSkapNEc+4A==\"],\n\n    \"@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"@typescript-eslint/typescript-estree/ts-api-utils\": [\"ts-api-utils@2.1.0\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.8.4\" } }, \"sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@6.21.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"6.21.0\", \"@typescript-eslint/visitor-keys\": \"6.21.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" } }, \"sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ==\"],\n\n    \"@typescript-eslint/visitor-keys/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@unrs/resolver-binding-wasm32-wasi/@napi-rs/wasm-runtime\": [\"@napi-rs/wasm-runtime@0.2.12\", \"\", { \"dependencies\": { \"@emnapi/core\": \"^1.4.3\", \"@emnapi/runtime\": \"^1.4.3\", \"@tybys/wasm-util\": \"^0.10.0\" } }, \"sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==\"],\n\n    \"@yarnpkg/parsers/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"aceternity-ui/chalk\": [\"chalk@5.2.0\", \"\", {}, \"sha512-ree3Gqw/nazQAPuJJEy+avdl7QfZMcUvmHIKgEZkGL+xOBzRvup5Hxo6LHuMceSxOabuJLJm5Yp/92R9eMmMvA==\"],\n\n    \"aceternity-ui/commander\": [\"commander@10.0.1\", \"\", {}, \"sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==\"],\n\n    \"aceternity-ui/dotenv\": [\"dotenv@16.6.1\", \"\", {}, \"sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==\"],\n\n    \"aceternity-ui/https-proxy-agent\": [\"https-proxy-agent@6.2.1\", \"\", { \"dependencies\": { \"agent-base\": \"^7.0.2\", \"debug\": \"4\" } }, \"sha512-ONsE3+yfZF2caH5+bJlcddtWqNI3Gvs5A38+ngvljxaBiRXRswym2c7yf8UAeFpRFKjFNHIFEHqR/OLAWJzyiA==\"],\n\n    \"aceternity-ui/node-fetch\": [\"node-fetch@3.3.2\", \"\", { \"dependencies\": { \"data-uri-to-buffer\": \"^4.0.0\", \"fetch-blob\": \"^3.1.4\", \"formdata-polyfill\": \"^4.0.10\" } }, \"sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==\"],\n\n    \"ai/@ai-sdk/provider-utils\": [\"@ai-sdk/provider-utils@3.0.0\", \"\", { \"dependencies\": { \"@ai-sdk/provider\": \"2.0.0\", \"@standard-schema/spec\": \"^1.0.0\", \"eventsource-parser\": \"^3.0.3\", \"zod-to-json-schema\": \"^3.24.1\" }, \"peerDependencies\": { \"zod\": \"^3.25.76 || ^4\" } }, \"sha512-BoQZtGcBxkeSH1zK+SRYNDtJPIPpacTeiMZqnG4Rv6xXjEwM0FH4MGs9c+PlhyEWmQCzjRM2HAotEydFhD4dYw==\"],\n\n    \"autoprefixer/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"babel-plugin-istanbul/istanbul-lib-instrument\": [\"istanbul-lib-instrument@5.2.1\", \"\", { \"dependencies\": { \"@babel/core\": \"^7.12.3\", \"@babel/parser\": \"^7.14.7\", \"@istanbuljs/schema\": \"^0.1.2\", \"istanbul-lib-coverage\": \"^3.2.0\", \"semver\": \"^6.3.0\" } }, \"sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==\"],\n\n    \"babel-plugin-polyfill-corejs2/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"bl/buffer\": [\"buffer@5.7.1\", \"\", { \"dependencies\": { \"base64-js\": \"^1.3.1\", \"ieee754\": \"^1.1.13\" } }, \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==\"],\n\n    \"bl/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"body-parser/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"caller-callsite/callsites\": [\"callsites@2.0.0\", \"\", {}, \"sha512-ksWePWBloaWPxJYQ8TL0JHvtci6G5QTKwQ95RcWAa/lzoAKuAOflGdAK92hpHXjkwb8zLxoLNUoNYZgVsaJzvQ==\"],\n\n    \"chalk/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"chalk/supports-color\": [\"supports-color@7.2.0\", \"\", { \"dependencies\": { \"has-flag\": \"^4.0.0\" } }, \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\"],\n\n    \"chokidar/glob-parent\": [\"glob-parent@5.1.2\", \"\", { \"dependencies\": { \"is-glob\": \"^4.0.1\" } }, \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\"],\n\n    \"chromium-edge-launcher/mkdirp\": [\"mkdirp@1.0.4\", \"\", { \"bin\": { \"mkdirp\": \"bin/cmd.js\" } }, \"sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==\"],\n\n    \"cliui/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"cliui/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"cliui/wrap-ansi\": [\"wrap-ansi@7.0.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^4.0.0\", \"string-width\": \"^4.1.0\", \"strip-ansi\": \"^6.0.0\" } }, \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\"],\n\n    \"compare-func/dot-prop\": [\"dot-prop@5.3.0\", \"\", { \"dependencies\": { \"is-obj\": \"^2.0.0\" } }, \"sha512-QM8q3zDe58hqUqjraQOmzZ1LIH9SWQJTlEKCH4kJ2oQvLZk7RbQXvtDM2XEq3fwkV9CCvvH4LA0AV+ogFsBM2Q==\"],\n\n    \"connect/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"connect/finalhandler\": [\"finalhandler@1.1.2\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"on-finished\": \"~2.3.0\", \"parseurl\": \"~1.3.3\", \"statuses\": \"~1.5.0\", \"unpipe\": \"~1.0.0\" } }, \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\"],\n\n    \"cosmiconfig-typescript-loader/cosmiconfig\": [\"cosmiconfig@9.0.0\", \"\", { \"dependencies\": { \"env-paths\": \"^2.2.1\", \"import-fresh\": \"^3.3.0\", \"js-yaml\": \"^4.1.0\", \"parse-json\": \"^5.2.0\" }, \"peerDependencies\": { \"typescript\": \">=4.9.5\" }, \"optionalPeers\": [\"typescript\"] }, \"sha512-itvL5h8RETACmOTFc4UfIyB2RfEHi71Ax6E/PivVxq9NseKbOWpeyHEOIbmAw1rs8Ak0VursQNww7lf7YtUwzg==\"],\n\n    \"cosmiconfig-typescript-loader/jiti\": [\"jiti@2.5.1\", \"\", { \"bin\": { \"jiti\": \"lib/jiti-cli.mjs\" } }, \"sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==\"],\n\n    \"crypto-random-string/type-fest\": [\"type-fest@1.4.0\", \"\", {}, \"sha512-yGSza74xk0UG8k+pLh5oeoYirvIiWo5t0/o3zHHAO2tRDiZcxWP7fywNlXhqb6/r6sWvwi+RsyQMWhVLe4BVuA==\"],\n\n    \"cssstyle/cssom\": [\"cssom@0.3.8\", \"\", {}, \"sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==\"],\n\n    \"cytoscape-fcose/cose-base\": [\"cose-base@2.2.0\", \"\", { \"dependencies\": { \"layout-base\": \"^2.0.0\" } }, \"sha512-AzlgcsCbUMymkADOJtQm3wO9S3ltPfYOFD5033keQn9NJzIbtnZj+UdBJe7DYml/8TdbtHJW3j58SOnKhWY/5g==\"],\n\n    \"d3-dsv/commander\": [\"commander@7.2.0\", \"\", {}, \"sha512-QrWXB+ZQSVPmIWIhtEO9H+gwHaMGYiF5ChvoJ+K9ZGHG/sVsa6yiesAD1GC/x46sET00Xlwo1u49RVVVzvcSkw==\"],\n\n    \"d3-dsv/iconv-lite\": [\"iconv-lite@0.6.3\", \"\", { \"dependencies\": { \"safer-buffer\": \">= 2.1.2 < 3.0.0\" } }, \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\"],\n\n    \"d3-sankey/d3-array\": [\"d3-array@2.12.1\", \"\", { \"dependencies\": { \"internmap\": \"^1.0.0\" } }, \"sha512-B0ErZK/66mHtEsR1TkPEEkwdy+WDesimkM5gpZr5Dsg54BiTA5RXtYW5qTLIAcekaS9xfZrzBLF/OAkB3Qn1YQ==\"],\n\n    \"d3-sankey/d3-shape\": [\"d3-shape@1.3.7\", \"\", { \"dependencies\": { \"d3-path\": \"1\" } }, \"sha512-EUkvKjqPFUAZyOlhY5gzCxCeI0Aep04LwIRpsZ/mLFelJiUfnK56jo5JMDSE7yyP2kLSb6LtF+S5chMk7uqPqw==\"],\n\n    \"data-urls/whatwg-url\": [\"whatwg-url@11.0.0\", \"\", { \"dependencies\": { \"tr46\": \"^3.0.0\", \"webidl-conversions\": \"^7.0.0\" } }, \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\"],\n\n    \"degenerator/ast-types\": [\"ast-types@0.13.4\", \"\", { \"dependencies\": { \"tslib\": \"^2.0.1\" } }, \"sha512-x1FCFnFifvYDDzTaLII71vG5uvDwgtmDTEVWAxrgeiR8VjMONcCXJx7E+USjDtHlwFmt9MysbqgF9b9Vjr6w+w==\"],\n\n    \"dotenv-expand/dotenv\": [\"dotenv@16.6.1\", \"\", {}, \"sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==\"],\n\n    \"duplexify/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"escodegen/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"eslint/doctrine\": [\"doctrine@3.0.0\", \"\", { \"dependencies\": { \"esutils\": \"^2.0.2\" } }, \"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\"],\n\n    \"eslint/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"eslint/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser\": [\"@typescript-eslint/parser@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/scope-manager\": \"7.2.0\", \"@typescript-eslint/types\": \"7.2.0\", \"@typescript-eslint/typescript-estree\": \"7.2.0\", \"@typescript-eslint/visitor-keys\": \"7.2.0\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-5FKsVcHTk6TafQKQbuIVkXq58Fnbkd2wDL4LB7AURN7RUOu1utVP+G8+6u3ZhEroW3DF6hyo3ZEXxgKgp4KeCg==\"],\n\n    \"eslint-import-resolver-node/debug\": [\"debug@3.2.7\", \"\", { \"dependencies\": { \"ms\": \"^2.1.1\" } }, \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\"],\n\n    \"eslint-module-utils/debug\": [\"debug@3.2.7\", \"\", { \"dependencies\": { \"ms\": \"^2.1.1\" } }, \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\"],\n\n    \"eslint-plugin-import/debug\": [\"debug@3.2.7\", \"\", { \"dependencies\": { \"ms\": \"^2.1.1\" } }, \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==\"],\n\n    \"eslint-plugin-import/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"eslint-plugin-import/tsconfig-paths\": [\"tsconfig-paths@3.15.0\", \"\", { \"dependencies\": { \"@types/json5\": \"^0.0.29\", \"json5\": \"^1.0.2\", \"minimist\": \"^1.2.6\", \"strip-bom\": \"^3.0.0\" } }, \"sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==\"],\n\n    \"eslint-plugin-jsx-a11y/emoji-regex\": [\"emoji-regex@9.2.2\", \"\", {}, \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\"],\n\n    \"eslint-plugin-react/resolve\": [\"resolve@2.0.0-next.5\", \"\", { \"dependencies\": { \"is-core-module\": \"^2.13.0\", \"path-parse\": \"^1.0.7\", \"supports-preserve-symlinks-flag\": \"^1.0.0\" }, \"bin\": { \"resolve\": \"bin/resolve\" } }, \"sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==\"],\n\n    \"eslint-plugin-react/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"estree-util-value-to-estree/is-plain-obj\": [\"is-plain-obj@3.0.0\", \"\", {}, \"sha512-gwsOE28k+23GP1B6vFl1oVh/WOzmawBrKwo5Ev6wMKzPkaXaCDIQKzLnvsA42DRlbVTWorkgTKIviAKCWkfUwA==\"],\n\n    \"execa/npm-run-path\": [\"npm-run-path@5.3.0\", \"\", { \"dependencies\": { \"path-key\": \"^4.0.0\" } }, \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\"],\n\n    \"execa/onetime\": [\"onetime@6.0.0\", \"\", { \"dependencies\": { \"mimic-fn\": \"^4.0.0\" } }, \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\"],\n\n    \"express/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"extract-zip/get-stream\": [\"get-stream@5.2.0\", \"\", { \"dependencies\": { \"pump\": \"^3.0.0\" } }, \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==\"],\n\n    \"fast-glob/glob-parent\": [\"glob-parent@5.1.2\", \"\", { \"dependencies\": { \"is-glob\": \"^4.0.1\" } }, \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\"],\n\n    \"fetch-blob/web-streams-polyfill\": [\"web-streams-polyfill@3.3.3\", \"\", {}, \"sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==\"],\n\n    \"figures/escape-string-regexp\": [\"escape-string-regexp@1.0.5\", \"\", {}, \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\"],\n\n    \"filelist/minimatch\": [\"minimatch@5.1.6\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==\"],\n\n    \"finalhandler/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"foreground-child/signal-exit\": [\"signal-exit@4.1.0\", \"\", {}, \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\"],\n\n    \"front-matter/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"gaxios/is-stream\": [\"is-stream@2.0.1\", \"\", {}, \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\"],\n\n    \"get-uri/data-uri-to-buffer\": [\"data-uri-to-buffer@6.0.2\", \"\", {}, \"sha512-7hvf7/GW8e86rW0ptuwS3OcBGDjIi6SZva7hCyWC0yYry2cOPmLIjXAUHI6DK2HsnwJd9ifmt57i8eV2n4YNpw==\"],\n\n    \"glob/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"globals/type-fest\": [\"type-fest@0.20.2\", \"\", {}, \"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==\"],\n\n    \"globby/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"gray-matter/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"hast-util-from-parse5/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-from-parse5/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-from-parse5/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"hast-util-from-parse5/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"hast-util-parse-selector/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-raw/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-raw/parse5\": [\"parse5@6.0.1\", \"\", {}, \"sha512-Ofn/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z2ZM7VS9PPhQGW2pOpw==\"],\n\n    \"hast-util-raw/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"hast-util-raw/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"hast-util-raw/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"hast-util-to-html/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-to-html/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-to-html/hast-util-whitespace\": [\"hast-util-whitespace@2.0.1\", \"\", {}, \"sha512-nAxA0v8+vXSBDt3AnRUNjyRIQ0rD+ntpbAp4LnPkumc5M9yUbSMa4XDU9Q6etY4f1Wp4bNgvc1yjiZtsTTrSng==\"],\n\n    \"hast-util-to-html/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"hast-util-to-parse5/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hast-util-to-parse5/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"hastscript/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"hastscript/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"http-proxy-agent/agent-base\": [\"agent-base@6.0.2\", \"\", { \"dependencies\": { \"debug\": \"4\" } }, \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\"],\n\n    \"import-fresh/resolve-from\": [\"resolve-from@4.0.0\", \"\", {}, \"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\"],\n\n    \"isomorphic-git/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"isomorphic-git/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"istanbul-lib-report/supports-color\": [\"supports-color@7.2.0\", \"\", { \"dependencies\": { \"has-flag\": \"^4.0.0\" } }, \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\"],\n\n    \"istanbul-lib-source-maps/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"its-fine/@types/react-reconciler\": [\"@types/react-reconciler@0.28.9\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\" } }, \"sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==\"],\n\n    \"jake/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"jest-changed-files/execa\": [\"execa@5.1.1\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.3\", \"get-stream\": \"^6.0.0\", \"human-signals\": \"^2.1.0\", \"is-stream\": \"^2.0.0\", \"merge-stream\": \"^2.0.0\", \"npm-run-path\": \"^4.0.1\", \"onetime\": \"^5.1.2\", \"signal-exit\": \"^3.0.3\", \"strip-final-newline\": \"^2.0.0\" } }, \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\"],\n\n    \"jest-changed-files/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"jest-circus/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"jest-config/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"jest-diff/pretty-format\": [\"pretty-format@30.0.5\", \"\", { \"dependencies\": { \"@jest/schemas\": \"30.0.5\", \"ansi-styles\": \"^5.2.0\", \"react-is\": \"^18.3.1\" } }, \"sha512-D1tKtYvByrBkFLe2wHJl2bwMJIiT8rW+XA+TiataH79/FszLQMrpGEvzUVkzPau7OCO0Qnrhpe87PqtOAIB8Yw==\"],\n\n    \"jest-matcher-utils/jest-diff\": [\"jest-diff@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"diff-sequences\": \"^29.6.3\", \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\"],\n\n    \"jest-runner/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"jest-runner/source-map-support\": [\"source-map-support@0.5.13\", \"\", { \"dependencies\": { \"buffer-from\": \"^1.0.0\", \"source-map\": \"^0.6.0\" } }, \"sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==\"],\n\n    \"jest-runtime/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"jest-runtime/strip-bom\": [\"strip-bom@4.0.0\", \"\", {}, \"sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\"],\n\n    \"jest-snapshot/jest-diff\": [\"jest-diff@29.7.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.0.0\", \"diff-sequences\": \"^29.6.3\", \"jest-get-type\": \"^29.6.3\", \"pretty-format\": \"^29.7.0\" } }, \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\"],\n\n    \"jsdom/https-proxy-agent\": [\"https-proxy-agent@5.0.1\", \"\", { \"dependencies\": { \"agent-base\": \"6\", \"debug\": \"4\" } }, \"sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==\"],\n\n    \"jsdom/whatwg-url\": [\"whatwg-url@11.0.0\", \"\", { \"dependencies\": { \"tr46\": \"^3.0.0\", \"webidl-conversions\": \"^7.0.0\" } }, \"sha512-RKT8HExMpoYx4igMiVMY83lN6UeITKJlBQ+vR/8ZJ8OCdSiN3RwCq+9gH0+Xzj0+5IrM6i4j/6LuvzbZIQgEcQ==\"],\n\n    \"jsdom/ws\": [\"ws@8.18.3\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\"],\n\n    \"katex/commander\": [\"commander@8.3.0\", \"\", {}, \"sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==\"],\n\n    \"lighthouse-logger/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"lint-staged/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"lint-staged/execa\": [\"execa@8.0.1\", \"\", { \"dependencies\": { \"cross-spawn\": \"^7.0.3\", \"get-stream\": \"^8.0.1\", \"human-signals\": \"^5.0.0\", \"is-stream\": \"^3.0.0\", \"merge-stream\": \"^2.0.0\", \"npm-run-path\": \"^5.1.0\", \"onetime\": \"^6.0.0\", \"signal-exit\": \"^4.1.0\", \"strip-final-newline\": \"^3.0.0\" } }, \"sha512-VyhnebXciFV2DESc+p6B+y0LjSm0krU4OgJN44qFAhBY0TJ+1V61tYD2+wHusZ6F9n5K+vl8k0sTy7PEfV4qpg==\"],\n\n    \"log-symbols/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"log-update/ansi-escapes\": [\"ansi-escapes@7.0.0\", \"\", { \"dependencies\": { \"environment\": \"^1.0.0\" } }, \"sha512-GdYO7a61mR0fOlAsvC9/rIHf7L96sBc6dEWzeOu+KAea5bZyQRPIpojrVoI4AXGJS/ycu/fBTdLrUkA4ODrvjw==\"],\n\n    \"log-update/cli-cursor\": [\"cli-cursor@5.0.0\", \"\", { \"dependencies\": { \"restore-cursor\": \"^5.0.0\" } }, \"sha512-aCj4O5wKyszjMmDT4tZj93kxyydN/K5zPWSCe6/0AV/AA1pqe5ZBIw0a2ZfPQV7lL5/yb5HsUreJ6UFAF1tEQw==\"],\n\n    \"log-update/slice-ansi\": [\"slice-ansi@7.1.0\", \"\", { \"dependencies\": { \"ansi-styles\": \"^6.2.1\", \"is-fullwidth-code-point\": \"^5.0.0\" } }, \"sha512-bSiSngZ/jWeX93BqeIAbImyTbEihizcwNjFoRUIY/T1wWQsfsm2Vw1agPKylXvQTU7iASGdHhyqRlqQzfz+Htg==\"],\n\n    \"mdast-util-definitions/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"mdast-util-definitions/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdast-util-definitions/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"mdast-util-frontmatter/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"mdx-bundler/uuid\": [\"uuid@8.3.2\", \"\", { \"bin\": { \"uuid\": \"dist/bin/uuid\" } }, \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\"],\n\n    \"mdx-bundler/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"mermaid/uuid\": [\"uuid@11.1.0\", \"\", { \"bin\": { \"uuid\": \"dist/esm/bin/uuid\" } }, \"sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==\"],\n\n    \"metro/ci-info\": [\"ci-info@2.0.0\", \"\", {}, \"sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==\"],\n\n    \"metro/source-map\": [\"source-map@0.5.7\", \"\", {}, \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\"],\n\n    \"metro/ws\": [\"ws@7.5.10\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \"^5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==\"],\n\n    \"metro-config/cosmiconfig\": [\"cosmiconfig@5.2.1\", \"\", { \"dependencies\": { \"import-fresh\": \"^2.0.0\", \"is-directory\": \"^0.3.1\", \"js-yaml\": \"^3.13.1\", \"parse-json\": \"^4.0.0\" } }, \"sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==\"],\n\n    \"metro-source-map/source-map\": [\"source-map@0.5.7\", \"\", {}, \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\"],\n\n    \"metro-symbolicate/source-map\": [\"source-map@0.5.7\", \"\", {}, \"sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==\"],\n\n    \"micromark-extension-frontmatter/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"micromark-extension-frontmatter/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"micromark-extension-frontmatter/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"mlly/pkg-types\": [\"pkg-types@1.3.1\", \"\", { \"dependencies\": { \"confbox\": \"^0.1.8\", \"mlly\": \"^1.7.4\", \"pathe\": \"^2.0.1\" } }, \"sha512-/Jm5M4RvtBFVkKWRu2BLUTNP8/M2a+UwuAX+ae4770q1qVGtfjG+WTCupoZixokjmHiry8uI+dlY8KXYV5HVVQ==\"],\n\n    \"next/postcss\": [\"postcss@8.4.31\", \"\", { \"dependencies\": { \"nanoid\": \"^3.3.6\", \"picocolors\": \"^1.0.0\", \"source-map-js\": \"^1.0.2\" } }, \"sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==\"],\n\n    \"next-auth/cookie\": [\"cookie@0.7.2\", \"\", {}, \"sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==\"],\n\n    \"next-auth/uuid\": [\"uuid@8.3.2\", \"\", { \"bin\": { \"uuid\": \"dist/bin/uuid\" } }, \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\"],\n\n    \"nextjs-linkedin-insight-tag/typescript\": [\"typescript@4.9.5\", \"\", { \"bin\": { \"tsc\": \"bin/tsc\", \"tsserver\": \"bin/tsserver\" } }, \"sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g==\"],\n\n    \"nx/axios\": [\"axios@1.11.0\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.4\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==\"],\n\n    \"nx/cli-spinners\": [\"cli-spinners@2.6.1\", \"\", {}, \"sha512-x/5fWmGMnbKQAaNwN+UZlV79qBLM9JFnJuJ03gIi5whrob0xV0ofNVHy9DhwGdsMJQc2OKv0oGmLzvaqvAVv+g==\"],\n\n    \"nx/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"nx/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"nx/ora\": [\"ora@5.3.0\", \"\", { \"dependencies\": { \"bl\": \"^4.0.3\", \"chalk\": \"^4.1.0\", \"cli-cursor\": \"^3.1.0\", \"cli-spinners\": \"^2.5.0\", \"is-interactive\": \"^1.0.0\", \"log-symbols\": \"^4.0.0\", \"strip-ansi\": \"^6.0.0\", \"wcwidth\": \"^1.0.1\" } }, \"sha512-zAKMgGXUim0Jyd6CXK9lraBnD3H5yPGBPPOkC23a2BG6hsm4Zu6OQSjQuEtV0BHDf4aKHcUFvJiGRrFuW3MG8g==\"],\n\n    \"nx/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"openai/@types/node\": [\"@types/node@18.19.122\", \"\", { \"dependencies\": { \"undici-types\": \"~5.26.4\" } }, \"sha512-yzegtT82dwTNEe/9y+CM8cgb42WrUfMMCg2QqSddzO1J6uPmBD7qKCZ7dOHZP2Yrpm/kb0eqdNMn2MUyEiqBmA==\"],\n\n    \"openid-client/object-hash\": [\"object-hash@2.2.0\", \"\", {}, \"sha512-gScRMn0bS5fH+IuwyIFgnh9zBdo4DV+6GhygmWM9HyNJSgS0hScp1f5vjtm7oIIOiT9trXrShAkLFSc2IqKNgw==\"],\n\n    \"ora/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"ora/cli-cursor\": [\"cli-cursor@4.0.0\", \"\", { \"dependencies\": { \"restore-cursor\": \"^4.0.0\" } }, \"sha512-VGtlMu3x/4DOtIUwEkRezxUZ2lBacNJCHash0N0WeZDBS+7Ux1dm3XWAgWYxLJFMMdOeXMHXorshEFhbMSGelg==\"],\n\n    \"p-locate/p-limit\": [\"p-limit@3.1.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^0.1.0\" } }, \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\"],\n\n    \"pac-proxy-agent/http-proxy-agent\": [\"http-proxy-agent@7.0.2\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.0\", \"debug\": \"^4.3.4\" } }, \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\"],\n\n    \"parse-entities/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"parse-json/lines-and-columns\": [\"lines-and-columns@1.2.4\", \"\", {}, \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"],\n\n    \"path-scurry/lru-cache\": [\"lru-cache@10.4.3\", \"\", {}, \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\"],\n\n    \"pkg-dir/find-up\": [\"find-up@4.1.0\", \"\", { \"dependencies\": { \"locate-path\": \"^5.0.0\", \"path-exists\": \"^4.0.0\" } }, \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\"],\n\n    \"playwright/fsevents\": [\"fsevents@2.3.2\", \"\", { \"os\": \"darwin\" }, \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\"],\n\n    \"postcss/nanoid\": [\"nanoid@3.3.11\", \"\", { \"bin\": { \"nanoid\": \"bin/nanoid.cjs\" } }, \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\"],\n\n    \"postcss/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"postcss-nested/postcss-selector-parser\": [\"postcss-selector-parser@6.1.2\", \"\", { \"dependencies\": { \"cssesc\": \"^3.0.0\", \"util-deprecate\": \"^1.0.2\" } }, \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\"],\n\n    \"posthog-node/axios\": [\"axios@1.11.0\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.4\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==\"],\n\n    \"preact-render-to-string/pretty-format\": [\"pretty-format@3.8.0\", \"\", {}, \"sha512-WuxUnVtlWL1OfZFQFuqvnvs6MiAGk9UNsBostyBOB0Is9wb5uRESevA6rnl/rkksXaGX3GzZhPup5d6Vp1nFew==\"],\n\n    \"pretty-format/ansi-styles\": [\"ansi-styles@5.2.0\", \"\", {}, \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\"],\n\n    \"prop-types/react-is\": [\"react-is@16.13.1\", \"\", {}, \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\"],\n\n    \"proxy-agent/http-proxy-agent\": [\"http-proxy-agent@7.0.2\", \"\", { \"dependencies\": { \"agent-base\": \"^7.1.0\", \"debug\": \"^4.3.4\" } }, \"sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==\"],\n\n    \"proxy-agent/lru-cache\": [\"lru-cache@7.18.3\", \"\", {}, \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\"],\n\n    \"puppeteer-core/ws\": [\"ws@8.18.3\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \">=5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==\"],\n\n    \"react-devtools-core/ws\": [\"ws@7.5.10\", \"\", { \"peerDependencies\": { \"bufferutil\": \"^4.0.1\", \"utf-8-validate\": \"^5.0.2\" }, \"optionalPeers\": [\"bufferutil\", \"utf-8-validate\"] }, \"sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==\"],\n\n    \"react-dom/scheduler\": [\"scheduler@0.23.2\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==\"],\n\n    \"react-konva/@types/react-reconciler\": [\"@types/react-reconciler@0.28.9\", \"\", { \"peerDependencies\": { \"@types/react\": \"*\" } }, \"sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==\"],\n\n    \"react-konva/react-reconciler\": [\"react-reconciler@0.29.2\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\", \"scheduler\": \"^0.23.2\" }, \"peerDependencies\": { \"react\": \"^18.3.1\" } }, \"sha512-zZQqIiYgDCTP/f1N/mAR10nJGrPD2ZR+jDSEsKWJHYC7Cm2wodlwbR3upZRdC3cjIjSlTLNVyO7Iu0Yy7t2AYg==\"],\n\n    \"react-konva/scheduler\": [\"scheduler@0.23.2\", \"\", { \"dependencies\": { \"loose-envify\": \"^1.1.0\" } }, \"sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==\"],\n\n    \"react-native/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"react-native/commander\": [\"commander@12.1.0\", \"\", {}, \"sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==\"],\n\n    \"react-native/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"react-native/scheduler\": [\"scheduler@0.26.0\", \"\", {}, \"sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==\"],\n\n    \"react-native/ws\": [\"ws@6.2.3\", \"\", { \"dependencies\": { \"async-limiter\": \"~1.0.0\" } }, \"sha512-jmTjYU0j60B+vHey6TfR3Z7RD61z/hmxBS3VMSGIrroOWXQEneK1zNuotOUrGyBHQj0yrpsLHPWtigEFd13ndA==\"],\n\n    \"read-cache/pify\": [\"pify@2.3.0\", \"\", {}, \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\"],\n\n    \"recast/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"regjsparser/jsesc\": [\"jsesc@3.0.2\", \"\", { \"bin\": { \"jsesc\": \"bin/jsesc\" } }, \"sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==\"],\n\n    \"rehype-stringify/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"rehype-stringify/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"remark-frontmatter/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"remark-frontmatter/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"remark-mdx-frontmatter/estree-util-is-identifier-name\": [\"estree-util-is-identifier-name@1.1.0\", \"\", {}, \"sha512-OVJZ3fGGt9By77Ix9NhaRbzfbDV/2rx9EP7YIDJTmsZSEc5kYn2vWcNccYyahJL2uAQZK2a5Or2i0wtIKTPoRQ==\"],\n\n    \"rimraf/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"send/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"shadcn-ui/chalk\": [\"chalk@5.5.0\", \"\", {}, \"sha512-1tm8DTaJhPBG3bIkVeZt1iZM9GfSX2lzOeDVZH9R9ffRHpmHvxZ/QhgQH/aDTkswQVt+YHdXAdS/In/30OjCbg==\"],\n\n    \"slice-ansi/is-fullwidth-code-point\": [\"is-fullwidth-code-point@4.0.0\", \"\", {}, \"sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==\"],\n\n    \"source-map-support/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"stack-utils/escape-string-regexp\": [\"escape-string-regexp@2.0.0\", \"\", {}, \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\"],\n\n    \"stacktrace-parser/type-fest\": [\"type-fest@0.7.1\", \"\", {}, \"sha512-Ne2YiiGN8bmrmJJEuTWTLJR32nh/JdL1+PSicowtNb0WFpn59GK8/lfD61bVtzguz7b3PBt74nxpv/Pw5po5Rg==\"],\n\n    \"stats-gl/three\": [\"three@0.170.0\", \"\", {}, \"sha512-FQK+LEpYc0fBD+J8g6oSEyyNzjp+Q7Ks1C568WWaoMRLW+TkNNWmenWeGgJjV105Gd+p/2ql1ZcjYvNiPZBhuQ==\"],\n\n    \"stdin-discarder/bl\": [\"bl@5.1.0\", \"\", { \"dependencies\": { \"buffer\": \"^6.0.3\", \"inherits\": \"^2.0.4\", \"readable-stream\": \"^3.4.0\" } }, \"sha512-tv1ZJHLfTDnXE6tMHv73YgSJaWR2AFuPwMntBe7XL/GBFHnT0CLnsHMogfk5+GzCDC5ZWarSCYaIGATZt9dNsQ==\"],\n\n    \"string-length/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"string-width-cjs/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"string-width-cjs/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"strip-ansi-cjs/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"sucrase/commander\": [\"commander@4.1.1\", \"\", {}, \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\"],\n\n    \"sucrase/lines-and-columns\": [\"lines-and-columns@1.2.4\", \"\", {}, \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\"],\n\n    \"tailwindcss/arg\": [\"arg@5.0.2\", \"\", {}, \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\"],\n\n    \"tailwindcss/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"tailwindcss/postcss-selector-parser\": [\"postcss-selector-parser@6.1.2\", \"\", { \"dependencies\": { \"cssesc\": \"^3.0.0\", \"util-deprecate\": \"^1.0.2\" } }, \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\"],\n\n    \"tar-fs/tar-stream\": [\"tar-stream@3.1.7\", \"\", { \"dependencies\": { \"b4a\": \"^1.6.4\", \"fast-fifo\": \"^1.2.0\", \"streamx\": \"^2.15.0\" } }, \"sha512-qJj60CXt7IU1Ffyc3NJMjh6EkuCFej46zUqJ4J7pqYlThyd9bO0XBTmcOIhSzZJVWfsLks0+nle/j538YAW9RQ==\"],\n\n    \"tar-stream/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"teeny-request/https-proxy-agent\": [\"https-proxy-agent@5.0.1\", \"\", { \"dependencies\": { \"agent-base\": \"6\", \"debug\": \"4\" } }, \"sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==\"],\n\n    \"terser/commander\": [\"commander@2.20.3\", \"\", {}, \"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\"],\n\n    \"test-exclude/glob\": [\"glob@7.2.3\", \"\", { \"dependencies\": { \"fs.realpath\": \"^1.0.0\", \"inflight\": \"^1.0.4\", \"inherits\": \"2\", \"minimatch\": \"^3.1.1\", \"once\": \"^1.3.0\", \"path-is-absolute\": \"^1.0.0\" } }, \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\"],\n\n    \"three-stdlib/fflate\": [\"fflate@0.6.10\", \"\", {}, \"sha512-IQrh3lEPM93wVCEczc9SaAOvkmcoQn/G8Bo1e8ZPlY3X3bnAxWaBdvTdvM1hP62iZp0BXWDy4vTAy4fF0+Dlpg==\"],\n\n    \"tinyglobby/picomatch\": [\"picomatch@4.0.3\", \"\", {}, \"sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==\"],\n\n    \"tough-cookie/universalify\": [\"universalify@0.2.0\", \"\", {}, \"sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==\"],\n\n    \"ts-node/diff\": [\"diff@4.0.2\", \"\", {}, \"sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==\"],\n\n    \"tsc-alias/commander\": [\"commander@9.5.0\", \"\", {}, \"sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==\"],\n\n    \"tunnel-rat/zustand\": [\"zustand@4.5.7\", \"\", { \"dependencies\": { \"use-sync-external-store\": \"^1.2.2\" }, \"peerDependencies\": { \"@types/react\": \">=16.8\", \"immer\": \">=9.0.6\", \"react\": \">=16.8\" }, \"optionalPeers\": [\"@types/react\", \"immer\", \"react\"] }, \"sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin\": [\"@typescript-eslint/eslint-plugin@7.18.0\", \"\", { \"dependencies\": { \"@eslint-community/regexpp\": \"^4.10.0\", \"@typescript-eslint/scope-manager\": \"7.18.0\", \"@typescript-eslint/type-utils\": \"7.18.0\", \"@typescript-eslint/utils\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"graphemer\": \"^1.4.0\", \"ignore\": \"^5.3.1\", \"natural-compare\": \"^1.4.0\", \"ts-api-utils\": \"^1.3.0\" }, \"peerDependencies\": { \"@typescript-eslint/parser\": \"^7.0.0\", \"eslint\": \"^8.56.0\" } }, \"sha512-94EQTWZ40mzBc42ATNIBimBEDltSJ9RQHCC8vc/PDbxi4k8dVwUAv4o98dk50M1zB+JGFxp43FP7f8+FP8R6Sw==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser\": [\"@typescript-eslint/parser@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/scope-manager\": \"7.18.0\", \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/typescript-estree\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-4Z+L8I2OqhZV8qA132M4wNL30ypZGYOQVBfMgxDH/K5UX0PNqTu1c6za9ST5r9+tavvHiTWmBnKzpCJ/GlVFtg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils\": [\"@typescript-eslint/utils@7.18.0\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.4.0\", \"@typescript-eslint/scope-manager\": \"7.18.0\", \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/typescript-estree\": \"7.18.0\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==\"],\n\n    \"unist-util-remove-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"unist-util-remove-position/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"update-browserslist-db/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"uvu/kleur\": [\"kleur@4.1.5\", \"\", {}, \"sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==\"],\n\n    \"v8-to-istanbul/@jridgewell/trace-mapping\": [\"@jridgewell/trace-mapping@0.3.30\", \"\", { \"dependencies\": { \"@jridgewell/resolve-uri\": \"^3.1.0\", \"@jridgewell/sourcemap-codec\": \"^1.4.14\" } }, \"sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==\"],\n\n    \"vfile-location/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"vfile-location/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"whatwg-encoding/iconv-lite\": [\"iconv-lite@0.6.3\", \"\", { \"dependencies\": { \"safer-buffer\": \">= 2.1.2 < 3.0.0\" } }, \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\"],\n\n    \"whatwg-url/webidl-conversions\": [\"webidl-conversions@3.0.1\", \"\", {}, \"sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==\"],\n\n    \"widest-line/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"wrap-ansi-cjs/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"wrap-ansi-cjs/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"wrap-ansi-cjs/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"yargs/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"@babel/helper-compilation-targets/lru-cache/yallist\": [\"yallist@3.1.1\", \"\", {}, \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\"],\n\n    \"@codebuff/npm-app/posthog-node/axios\": [\"axios@1.11.0\", \"\", { \"dependencies\": { \"follow-redirects\": \"^1.15.6\", \"form-data\": \"^4.0.4\", \"proxy-from-env\": \"^1.1.0\" } }, \"sha512-1Lx3WLFQWm3ooKDYZD1eXmoGO9fxYQjrycfHFC8P0sCfQVXyROp0p9PFWBehewBOdCwHc+f/b8I0fMto5eSfwA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/visitor-keys\": \"8.39.1\" } }, \"sha512-RkBKGBrjgskFGWuyUGz/EtD8AF/GW49S21J8dvMzpJitOF1slLEbbHnNEtAHtnDAnx8qDEdRrULRnWVx27wGBw==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils\": [\"@typescript-eslint/type-utils@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/typescript-estree\": \"8.39.1\", \"@typescript-eslint/utils\": \"8.39.1\", \"debug\": \"^4.3.4\", \"ts-api-utils\": \"^2.1.0\" }, \"peerDependencies\": { \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-gu9/ahyatyAdQbKeHnhT4R+y3YLtqqHyvkfDxaBYk97EcbfChSJXyaJnIL3ygUv7OuZatePHmQvuH5ru0lnVeA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/utils\": [\"@typescript-eslint/utils@8.39.1\", \"\", { \"dependencies\": { \"@eslint-community/eslint-utils\": \"^4.7.0\", \"@typescript-eslint/scope-manager\": \"8.39.1\", \"@typescript-eslint/types\": \"8.39.1\", \"@typescript-eslint/typescript-estree\": \"8.39.1\" }, \"peerDependencies\": { \"eslint\": \"^8.57.0 || ^9.0.0\", \"typescript\": \">=4.8.4 <6.0.0\" } }, \"sha512-VF5tZ2XnUSTuiqZFXCZfZs1cgkdd3O/sSYmdo2EpSyDlC86UM/8YytTmKnehOW3TGAlivqTDT6bS87B/GQ/jyg==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@8.39.1\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"8.39.1\", \"eslint-visitor-keys\": \"^4.2.1\" } }, \"sha512-W8FQi6kEh2e8zVhQ0eeRnxdvIoOkAp/CPAahcNio6nO9dsIwb9b34z90KOlheoyuVf6LSOEdjlkxSkapNEc+4A==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/ignore\": [\"ignore@7.0.3\", \"\", {}, \"sha512-bAH5jbK/F3T3Jls4I0SO1hmPR0dKU0a7+SY6n1yzRtG54FLO8d6w/nxLFX2Nb7dBu6cCWXPaAME6cYqFUMmuCA==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/ts-api-utils\": [\"ts-api-utils@2.1.0\", \"\", { \"peerDependencies\": { \"typescript\": \">=4.8.4\" } }, \"sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==\"],\n\n    \"@codebuff/web/pino/pino-abstract-transport\": [\"pino-abstract-transport@2.0.0\", \"\", { \"dependencies\": { \"split2\": \"^4.0.0\" } }, \"sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==\"],\n\n    \"@codebuff/web/pino/process-warning\": [\"process-warning@5.0.0\", \"\", {}, \"sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==\"],\n\n    \"@commitlint/config-validator/ajv/json-schema-traverse\": [\"json-schema-traverse@1.0.0\", \"\", {}, \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\"],\n\n    \"@commitlint/top-level/find-up/locate-path\": [\"locate-path@7.2.0\", \"\", { \"dependencies\": { \"p-locate\": \"^6.0.0\" } }, \"sha512-gvVijfZvn7R+2qyPX8mAuKcFGDf6Nc61GdvGafQsHL0sBIxfKzA+usWn4GFC/bk+QdwPUD4kWFJLhElipq+0VA==\"],\n\n    \"@commitlint/top-level/find-up/path-exists\": [\"path-exists@5.0.0\", \"\", {}, \"sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/android-arm\": [\"@esbuild/android-arm@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/android-arm64\": [\"@esbuild/android-arm64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/android-x64\": [\"@esbuild/android-x64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"x64\" }, \"sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/darwin-arm64\": [\"@esbuild/darwin-arm64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/darwin-x64\": [\"@esbuild/darwin-x64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/freebsd-arm64\": [\"@esbuild/freebsd-arm64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"arm64\" }, \"sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/freebsd-x64\": [\"@esbuild/freebsd-x64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-arm\": [\"@esbuild/linux-arm@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-arm64\": [\"@esbuild/linux-arm64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-ia32\": [\"@esbuild/linux-ia32@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ia32\" }, \"sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-loong64\": [\"@esbuild/linux-loong64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-mips64el\": [\"@esbuild/linux-mips64el@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-ppc64\": [\"@esbuild/linux-ppc64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-riscv64\": [\"@esbuild/linux-riscv64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-s390x\": [\"@esbuild/linux-s390x@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/linux-x64\": [\"@esbuild/linux-x64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/netbsd-x64\": [\"@esbuild/netbsd-x64@0.18.20\", \"\", { \"os\": \"none\", \"cpu\": \"x64\" }, \"sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/openbsd-x64\": [\"@esbuild/openbsd-x64@0.18.20\", \"\", { \"os\": \"openbsd\", \"cpu\": \"x64\" }, \"sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/sunos-x64\": [\"@esbuild/sunos-x64@0.18.20\", \"\", { \"os\": \"sunos\", \"cpu\": \"x64\" }, \"sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/win32-arm64\": [\"@esbuild/win32-arm64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/win32-ia32\": [\"@esbuild/win32-ia32@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==\"],\n\n    \"@contentlayer/core/esbuild/@esbuild/win32-x64\": [\"@esbuild/win32-x64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==\"],\n\n    \"@contentlayer/core/remark-parse/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast\": [\"mdast-util-to-hast@12.3.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-definitions\": \"^5.0.0\", \"micromark-util-sanitize-uri\": \"^1.1.0\", \"trim-lines\": \"^3.0.0\", \"unist-util-generated\": \"^2.0.0\", \"unist-util-position\": \"^4.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-pits93r8PhnIoU4Vy9bjW39M2jJ6/tdHyja9rrot9uujkN7UTU9SDnE6WNJz/IGyQk3XHX6yNNtrBH6cQzm8Hw==\"],\n\n    \"@contentlayer/core/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"@contentlayer/source-files/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/source-files/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/android-arm\": [\"@esbuild/android-arm@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm\" }, \"sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/android-arm64\": [\"@esbuild/android-arm64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"arm64\" }, \"sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/android-x64\": [\"@esbuild/android-x64@0.18.20\", \"\", { \"os\": \"android\", \"cpu\": \"x64\" }, \"sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/darwin-arm64\": [\"@esbuild/darwin-arm64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"arm64\" }, \"sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/darwin-x64\": [\"@esbuild/darwin-x64@0.18.20\", \"\", { \"os\": \"darwin\", \"cpu\": \"x64\" }, \"sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/freebsd-arm64\": [\"@esbuild/freebsd-arm64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"arm64\" }, \"sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/freebsd-x64\": [\"@esbuild/freebsd-x64@0.18.20\", \"\", { \"os\": \"freebsd\", \"cpu\": \"x64\" }, \"sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-arm\": [\"@esbuild/linux-arm@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm\" }, \"sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-arm64\": [\"@esbuild/linux-arm64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"arm64\" }, \"sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-ia32\": [\"@esbuild/linux-ia32@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ia32\" }, \"sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-loong64\": [\"@esbuild/linux-loong64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-mips64el\": [\"@esbuild/linux-mips64el@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-ppc64\": [\"@esbuild/linux-ppc64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"ppc64\" }, \"sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-riscv64\": [\"@esbuild/linux-riscv64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"none\" }, \"sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-s390x\": [\"@esbuild/linux-s390x@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"s390x\" }, \"sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/linux-x64\": [\"@esbuild/linux-x64@0.18.20\", \"\", { \"os\": \"linux\", \"cpu\": \"x64\" }, \"sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/netbsd-x64\": [\"@esbuild/netbsd-x64@0.18.20\", \"\", { \"os\": \"none\", \"cpu\": \"x64\" }, \"sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/openbsd-x64\": [\"@esbuild/openbsd-x64@0.18.20\", \"\", { \"os\": \"openbsd\", \"cpu\": \"x64\" }, \"sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/sunos-x64\": [\"@esbuild/sunos-x64@0.18.20\", \"\", { \"os\": \"sunos\", \"cpu\": \"x64\" }, \"sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/win32-arm64\": [\"@esbuild/win32-arm64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"arm64\" }, \"sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/win32-ia32\": [\"@esbuild/win32-ia32@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"ia32\" }, \"sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==\"],\n\n    \"@esbuild-kit/core-utils/esbuild/@esbuild/win32-x64\": [\"@esbuild/win32-x64@0.18.20\", \"\", { \"os\": \"win32\", \"cpu\": \"x64\" }, \"sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==\"],\n\n    \"@isaacs/cliui/string-width/emoji-regex\": [\"emoji-regex@9.2.2\", \"\", {}, \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up/locate-path\": [\"locate-path@5.0.0\", \"\", { \"dependencies\": { \"p-locate\": \"^4.1.0\" } }, \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\"],\n\n    \"@istanbuljs/load-nyc-config/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"@jest/core/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@jest/reporters/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/estree-util-build-jsx\": [\"estree-util-build-jsx@2.2.2\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"estree-walker\": \"^3.0.0\" } }, \"sha512-m56vOXcOBuaF+Igpb9OPAy7f9w9OIkb5yhjsZuaPm7HoGi4oTOQi0h2+yZ+AtKklYFZ+rPC4n0wYCJCEU1ONqg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/estree-util-is-identifier-name\": [\"estree-util-is-identifier-name@2.1.0\", \"\", {}, \"sha512-bEN9VHRyXAUOjkKVQVvArFym08BTWB0aJPppZZr0UNyAqWsLaVfAqP7hbaTJjzHifmB5ebnR8Wm7r7yGN/HonQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/estree-util-to-js\": [\"estree-util-to-js@1.2.0\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"astring\": \"^1.8.0\", \"source-map\": \"^0.7.0\" } }, \"sha512-IzU74r1PK5IMMGZXUVZbmiu4A1uhiPgW5hm1GjcOfr4ZzHaMPpLNJjR7HjXiIOzi25nZDrgFTobHTkV5Q6ITjA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree\": [\"hast-util-to-estree@2.3.3\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/unist\": \"^2.0.0\", \"comma-separated-tokens\": \"^2.0.0\", \"estree-util-attach-comments\": \"^2.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"hast-util-whitespace\": \"^2.0.0\", \"mdast-util-mdx-expression\": \"^1.0.0\", \"mdast-util-mdxjs-esm\": \"^1.0.0\", \"property-information\": \"^6.0.0\", \"space-separated-tokens\": \"^2.0.0\", \"style-to-object\": \"^0.4.1\", \"unist-util-position\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-ihhPIUPxN0v0w6M5+IiAZZrn0LH2uZomeWwhn7uP7avZC6TE7lIiEh2yBMPr5+zi1aUCXq6VoYRgs2Bw9xmycQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/markdown-extensions\": [\"markdown-extensions@1.1.1\", \"\", {}, \"sha512-WWC0ZuMzCyDHYCasEGs4IPvLyTGftYwh6wIEOULOF0HXcqZlhwRzrK0w2VUlxWA98xnvb/jszw4ZSkJ6ADpM6Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx\": [\"remark-mdx@2.3.0\", \"\", { \"dependencies\": { \"mdast-util-mdx\": \"^2.0.0\", \"micromark-extension-mdxjs\": \"^1.0.0\" } }, \"sha512-g53hMkpM0I98MU266IzDFMrTD980gNF3BJnkyFcmN+dD873mQeD5rdMO3Y2X+x8umQfbSE0PcoEDl7ledSA+2g==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse\": [\"remark-parse@10.0.2\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"unified\": \"^10.0.0\" } }, \"sha512-3ydxgHa/ZQzG8LvC7jTXccARYDcRld3VfcgIIFs7bI6vbRSxJJmzgLEIIoYKyrfhaY+ujuWaf/PJiMZXoiCXgw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype\": [\"remark-rehype@10.1.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-to-hast\": \"^12.1.0\", \"unified\": \"^10.0.0\" } }, \"sha512-EFmR5zppdBp0WQeDVZ/b66CWJipB2q2VLNFMabzDSGR66Z2fQii83G5gTBbgGEnEEA0QRussvrFHxk1HWGJskw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unified\": [\"unified@10.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"bail\": \"^2.0.0\", \"extend\": \"^3.0.0\", \"is-buffer\": \"^2.0.0\", \"is-plain-obj\": \"^4.0.0\", \"trough\": \"^2.0.0\", \"vfile\": \"^5.0.0\" } }, \"sha512-pUSWAi/RAnVy1Pif2kAoeWNBa3JVrx0MId2LASj8G+7AiHWoKZNTomq6LG326T68U7/e263X6fTdcXIy7XnF7Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-position-from-estree\": [\"unist-util-position-from-estree@1.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-poZa0eXpS+/XpoQwGwl79UUdea4ol2ZuCYguVaJS4qzIOMDzbqz8a3erUCOmubSZkaOuGamb3tX790iwOIROww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"@mdx-js/esbuild/vfile/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@mdx-js/esbuild/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@nx/devkit/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@oclif/core/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@oclif/core/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"@oclif/core/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@oclif/core/wrap-ansi/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"@oclif/core/wrap-ansi/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@oclif/errors/fs-extra/jsonfile\": [\"jsonfile@4.0.0\", \"\", { \"optionalDependencies\": { \"graceful-fs\": \"^4.1.6\" } }, \"sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==\"],\n\n    \"@oclif/errors/fs-extra/universalify\": [\"universalify@0.1.2\", \"\", {}, \"sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==\"],\n\n    \"@oclif/errors/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@oclif/errors/wrap-ansi/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"@oclif/errors/wrap-ansi/string-width\": [\"string-width@4.2.3\", \"\", { \"dependencies\": { \"emoji-regex\": \"^8.0.0\", \"is-fullwidth-code-point\": \"^3.0.0\", \"strip-ansi\": \"^6.0.1\" } }, \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/exporter-trace-otlp-grpc/@opentelemetry/sdk-trace-base/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-exporter-base/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-grpc-exporter-base/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/otlp-transformer/@opentelemetry/sdk-trace-base/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-logs/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/core/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@opentelemetry/sdk-metrics/@opentelemetry/resources/@opentelemetry/semantic-conventions\": [\"@opentelemetry/semantic-conventions@1.13.0\", \"\", {}, \"sha512-LMGqfSZkaMQXqewO0o1wvWr/2fQdCh4a3Sqlxka/UsJCe0cfLulh6x2aqnKLnsrSGiCq5rSCwvINd152i0nCqw==\"],\n\n    \"@react-native/dev-middleware/serve-static/encodeurl\": [\"encodeurl@2.0.0\", \"\", {}, \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\"],\n\n    \"@react-native/dev-middleware/serve-static/send\": [\"send@0.19.0\", \"\", { \"dependencies\": { \"debug\": \"2.6.9\", \"depd\": \"2.0.0\", \"destroy\": \"1.2.0\", \"encodeurl\": \"~1.0.2\", \"escape-html\": \"~1.0.3\", \"etag\": \"~1.8.1\", \"fresh\": \"0.5.2\", \"http-errors\": \"2.0.0\", \"mime\": \"1.6.0\", \"ms\": \"2.1.3\", \"on-finished\": \"2.4.1\", \"range-parser\": \"~1.2.1\", \"statuses\": \"2.0.1\" } }, \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\"],\n\n    \"@testing-library/dom/pretty-format/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@testing-library/dom/pretty-format/ansi-styles\": [\"ansi-styles@5.2.0\", \"\", {}, \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\"],\n\n    \"@testing-library/dom/pretty-format/react-is\": [\"react-is@17.0.2\", \"\", {}, \"sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\"],\n\n    \"@ts-morph/common/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@typescript-eslint/parser/@typescript-eslint/visitor-keys/eslint-visitor-keys\": [\"eslint-visitor-keys@4.2.1\", \"\", {}, \"sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/@typescript-eslint/types\": [\"@typescript-eslint/types@6.21.0\", \"\", {}, \"sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"@typescript-eslint/typescript-estree/@typescript-eslint/visitor-keys/eslint-visitor-keys\": [\"eslint-visitor-keys@4.2.1\", \"\", {}, \"sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==\"],\n\n    \"@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"@unrs/resolver-binding-wasm32-wasi/@napi-rs/wasm-runtime/@tybys/wasm-util\": [\"@tybys/wasm-util@0.10.0\", \"\", { \"dependencies\": { \"tslib\": \"^2.4.0\" } }, \"sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==\"],\n\n    \"@yarnpkg/parsers/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"babel-plugin-istanbul/istanbul-lib-instrument/semver\": [\"semver@6.3.1\", \"\", { \"bin\": { \"semver\": \"bin/semver.js\" } }, \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\"],\n\n    \"body-parser/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"cliui/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"cliui/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"cliui/wrap-ansi/ansi-styles\": [\"ansi-styles@4.3.0\", \"\", { \"dependencies\": { \"color-convert\": \"^2.0.1\" } }, \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\"],\n\n    \"connect/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"connect/finalhandler/on-finished\": [\"on-finished@2.3.0\", \"\", { \"dependencies\": { \"ee-first\": \"1.1.1\" } }, \"sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==\"],\n\n    \"connect/finalhandler/statuses\": [\"statuses@1.5.0\", \"\", {}, \"sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==\"],\n\n    \"cytoscape-fcose/cose-base/layout-base\": [\"layout-base@2.0.1\", \"\", {}, \"sha512-dp3s92+uNI1hWIpPGH3jK2kxE2lMjdXdr+DH8ynZHpd6PUlH6x6cbuXnoMmiNumznqaNO31xu9e79F0uuZ0JFg==\"],\n\n    \"d3-sankey/d3-array/internmap\": [\"internmap@1.0.1\", \"\", {}, \"sha512-lDB5YccMydFBtasVtxnZ3MRBHuaoE8GKsppq+EchKL2U4nK/DmEpPHNH8MZe5HkMtpSiTSOZwfN0tzYjO/lJEw==\"],\n\n    \"d3-sankey/d3-shape/d3-path\": [\"d3-path@1.0.9\", \"\", {}, \"sha512-VLaYcn81dtHVTjEHd8B+pbe9yHWpXKZUC87PzoFmsFrJqgFwDe/qxfp5MlfsfM1V5E/iVt0MmEbWQ7FVIXh/bg==\"],\n\n    \"data-urls/whatwg-url/tr46\": [\"tr46@3.0.0\", \"\", { \"dependencies\": { \"punycode\": \"^2.1.1\" } }, \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.2.0\", \"@typescript-eslint/visitor-keys\": \"7.2.0\" } }, \"sha512-Qh976RbQM/fYtjx9hs4XkayYujB/aPwglw2choHmf3zBjB4qOywWSdt9+KLRdHubGcoSwBnXUH2sR3hkyaERRg==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/types\": [\"@typescript-eslint/types@7.2.0\", \"\", {}, \"sha512-XFtUHPI/abFhm4cbCDc5Ykc8npOKBSJePY3a3s+lwumt7XWJuzP5cZcfZ610MIPHjQjNsOLlYK8ASPaNG8UiyA==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.2.0\", \"@typescript-eslint/visitor-keys\": \"7.2.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"9.0.3\", \"semver\": \"^7.5.4\", \"ts-api-utils\": \"^1.0.1\" } }, \"sha512-cyxS5WQQCoBwSakpMrvMXuMDEbhOo9bNHHrNcEWis6XHx6KF518tkF1wBvKIn/tpq5ZpUYK7Bdklu8qY0MsFIA==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.2.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.2.0\", \"eslint-visitor-keys\": \"^3.4.1\" } }, \"sha512-c6EIQRHhcpl6+tO8EMR+kjkkV+ugUNXOmeASA1rlzkd8EPIriavpWoiEz1HR/VLhbVIdhqnV6E7JZm00cBDx2A==\"],\n\n    \"eslint-plugin-import/tsconfig-paths/json5\": [\"json5@1.0.2\", \"\", { \"dependencies\": { \"minimist\": \"^1.2.0\" }, \"bin\": { \"json5\": \"lib/cli.js\" } }, \"sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==\"],\n\n    \"eslint/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"execa/npm-run-path/path-key\": [\"path-key@4.0.0\", \"\", {}, \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\"],\n\n    \"execa/onetime/mimic-fn\": [\"mimic-fn@4.0.0\", \"\", {}, \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\"],\n\n    \"express/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"filelist/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"finalhandler/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"front-matter/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"glob/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"gray-matter/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"hast-util-from-parse5/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"hast-util-from-parse5/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"hast-util-parse-selector/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/unist-util-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/unist-util-visit/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"hast-util-raw/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"hast-util-raw/vfile/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hast-util-raw/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"hast-util-raw/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"hast-util-to-parse5/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"hastscript/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"jest-changed-files/execa/human-signals\": [\"human-signals@2.1.0\", \"\", {}, \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\"],\n\n    \"jest-changed-files/execa/is-stream\": [\"is-stream@2.0.1\", \"\", {}, \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\"],\n\n    \"jest-changed-files/execa/strip-final-newline\": [\"strip-final-newline@2.0.0\", \"\", {}, \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\"],\n\n    \"jest-changed-files/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"jest-circus/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"jest-diff/pretty-format/@jest/schemas\": [\"@jest/schemas@30.0.5\", \"\", { \"dependencies\": { \"@sinclair/typebox\": \"^0.34.0\" } }, \"sha512-DmdYgtezMkh3cpU8/1uyXakv3tJRcmcXxBOcO0tbaozPwpmh4YMsnWrQm9ZmZMfa5ocbxzbFk6O4bDPEc/iAnA==\"],\n\n    \"jest-diff/pretty-format/ansi-styles\": [\"ansi-styles@5.2.0\", \"\", {}, \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\"],\n\n    \"jest-runner/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"jest-runner/source-map-support/source-map\": [\"source-map@0.6.1\", \"\", {}, \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\"],\n\n    \"jsdom/https-proxy-agent/agent-base\": [\"agent-base@6.0.2\", \"\", { \"dependencies\": { \"debug\": \"4\" } }, \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\"],\n\n    \"jsdom/whatwg-url/tr46\": [\"tr46@3.0.0\", \"\", { \"dependencies\": { \"punycode\": \"^2.1.1\" } }, \"sha512-l7FvfAHlcmulp8kr+flpQZmVwtu7nfRV7NZujtN0OqES8EL4O4e0qqzL0DC5gAvx/ZC/9lk6rhcUwYvkBnBnYA==\"],\n\n    \"lighthouse-logger/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"lint-staged/execa/get-stream\": [\"get-stream@8.0.1\", \"\", {}, \"sha512-VaUJspBffn/LMCJVoMvSAdmscJyS1auj5Zulnn5UoYcY531UWmdwhRWkcGKnGU93m5HSXP9LP2usOryrBtQowA==\"],\n\n    \"lint-staged/execa/human-signals\": [\"human-signals@5.0.0\", \"\", {}, \"sha512-AXcZb6vzzrFAUE61HnN4mpLqd/cSIwNQjtNWR0euPm6y0iqx3G4gOXaIDdtdDwZmhwe82LA6+zinmW4UBWVePQ==\"],\n\n    \"lint-staged/execa/npm-run-path\": [\"npm-run-path@5.3.0\", \"\", { \"dependencies\": { \"path-key\": \"^4.0.0\" } }, \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\"],\n\n    \"lint-staged/execa/onetime\": [\"onetime@6.0.0\", \"\", { \"dependencies\": { \"mimic-fn\": \"^4.0.0\" } }, \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\"],\n\n    \"lint-staged/execa/signal-exit\": [\"signal-exit@4.1.0\", \"\", {}, \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\"],\n\n    \"log-update/cli-cursor/restore-cursor\": [\"restore-cursor@5.1.0\", \"\", { \"dependencies\": { \"onetime\": \"^7.0.0\", \"signal-exit\": \"^4.1.0\" } }, \"sha512-oMA2dcrw6u0YfxJQXm342bFKX/E4sG9rbTzO9ptUcR/e8A33cHuvStiYOwH7fszkZlZ1z/ta9AAoPk2F4qIOHA==\"],\n\n    \"log-update/slice-ansi/is-fullwidth-code-point\": [\"is-fullwidth-code-point@5.0.0\", \"\", { \"dependencies\": { \"get-east-asian-width\": \"^1.0.0\" } }, \"sha512-OVa3u9kkBbw7b8Xw5F9P+D/T9X+Z4+JruYVNapTjPYZYUznQ5YfWeFkOj606XYYW8yugTfC8Pj0hYqvi4ryAhA==\"],\n\n    \"mdast-util-definitions/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"mdast-util-definitions/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"mdast-util-frontmatter/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"mdx-bundler/vfile/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"mdx-bundler/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"mdx-bundler/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"metro-config/cosmiconfig/import-fresh\": [\"import-fresh@2.0.0\", \"\", { \"dependencies\": { \"caller-path\": \"^2.0.0\", \"resolve-from\": \"^3.0.0\" } }, \"sha512-eZ5H8rcgYazHbKC3PG4ClHNykCSxtAhxSSEM+2mb+7evD2CKF5V7c0dNum7AdpDh0ZdICwZY9sRSn8f+KH96sg==\"],\n\n    \"metro-config/cosmiconfig/js-yaml\": [\"js-yaml@3.14.1\", \"\", { \"dependencies\": { \"argparse\": \"^1.0.7\", \"esprima\": \"^4.0.0\" }, \"bin\": { \"js-yaml\": \"bin/js-yaml.js\" } }, \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\"],\n\n    \"metro-config/cosmiconfig/parse-json\": [\"parse-json@4.0.0\", \"\", { \"dependencies\": { \"error-ex\": \"^1.3.1\", \"json-parse-better-errors\": \"^1.0.1\" } }, \"sha512-aOIos8bujGN93/8Ox/jPLh7RwVnPEysynVFE+fQZyg6jKELEHwzgKdLRFHUgXJL6kylijVSBC4BvN9OmsB48Rw==\"],\n\n    \"mlly/pkg-types/confbox\": [\"confbox@0.1.8\", \"\", {}, \"sha512-RMtmw0iFkeR4YV+fUOSucriAQNb9g8zFR52MWCtl+cCZOFRNL6zeB395vPzFhEjjn4fMxXudmELnl/KF/WrK6w==\"],\n\n    \"next/postcss/nanoid\": [\"nanoid@3.3.11\", \"\", { \"bin\": { \"nanoid\": \"bin/nanoid.cjs\" } }, \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\"],\n\n    \"next/postcss/picocolors\": [\"picocolors@1.1.1\", \"\", {}, \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\"],\n\n    \"nx/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"nx/ora/cli-spinners\": [\"cli-spinners@2.9.2\", \"\", {}, \"sha512-ywqV+5MmyL4E7ybXgKys4DugZbX0FC6LnwrhjuykIjnK9k8OQacQ7axGKnjDXWNhns0xot3bZI5h55H8yo9cJg==\"],\n\n    \"nx/ora/is-interactive\": [\"is-interactive@1.0.0\", \"\", {}, \"sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==\"],\n\n    \"nx/ora/log-symbols\": [\"log-symbols@4.1.0\", \"\", { \"dependencies\": { \"chalk\": \"^4.1.0\", \"is-unicode-supported\": \"^0.1.0\" } }, \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\"],\n\n    \"nx/ora/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"nx/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"nx/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"openai/@types/node/undici-types\": [\"undici-types@5.26.5\", \"\", {}, \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\"],\n\n    \"ora/cli-cursor/restore-cursor\": [\"restore-cursor@4.0.0\", \"\", { \"dependencies\": { \"onetime\": \"^5.1.0\", \"signal-exit\": \"^3.0.2\" } }, \"sha512-I9fPXU9geO9bHOt9pHHOhOkYerIMsmVaWB0rA2AI9ERh/+x/i7MV5HKBNrg+ljO5eoPVgCcnFuRjJ9uH6I/3eg==\"],\n\n    \"p-locate/p-limit/yocto-queue\": [\"yocto-queue@0.1.0\", \"\", {}, \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\"],\n\n    \"pkg-dir/find-up/locate-path\": [\"locate-path@5.0.0\", \"\", { \"dependencies\": { \"p-locate\": \"^4.1.0\" } }, \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\"],\n\n    \"rehype-stringify/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"rehype-stringify/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"rehype-stringify/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"remark-frontmatter/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"remark-frontmatter/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"remark-frontmatter/unified/vfile\": [\"vfile@5.3.7\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"is-buffer\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-r7qlzkgErKjobAmyNIkkSpizsFPYiUPuJb5pNW1RB4JcYVZhs4lIbVqk8XPk033CV/1z8ss5pkax8SuhGpcG8g==\"],\n\n    \"send/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"stdin-discarder/bl/readable-stream\": [\"readable-stream@3.6.2\", \"\", { \"dependencies\": { \"inherits\": \"^2.0.3\", \"string_decoder\": \"^1.1.1\", \"util-deprecate\": \"^1.0.1\" } }, \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\"],\n\n    \"string-length/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"string-width-cjs/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"teeny-request/https-proxy-agent/agent-base\": [\"agent-base@6.0.2\", \"\", { \"dependencies\": { \"debug\": \"4\" } }, \"sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\" } }, \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils\": [\"@typescript-eslint/type-utils@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/typescript-estree\": \"7.18.0\", \"@typescript-eslint/utils\": \"7.18.0\", \"debug\": \"^4.3.4\", \"ts-api-utils\": \"^1.3.0\" }, \"peerDependencies\": { \"eslint\": \"^8.56.0\" } }, \"sha512-XL0FJXuCLaDuX2sYqZUUSOJ2sG5/i1AAze+axqmLnSkNEVMVYLF+cbwlB2w8D1tinFuSikHmFta+P+HOofrLeA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/ignore\": [\"ignore@5.3.2\", \"\", {}, \"sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\" } }, \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^1.3.0\" } }, \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/scope-manager\": [\"@typescript-eslint/scope-manager@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\" } }, \"sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^1.3.0\" } }, \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\"],\n\n    \"unist-util-remove-position/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"unist-util-remove-position/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"vfile-location/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"vfile-location/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"widest-line/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"widest-line/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"wrap-ansi-cjs/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"wrap-ansi-cjs/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"yargs/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"yargs/string-width/strip-ansi\": [\"strip-ansi@6.0.1\", \"\", { \"dependencies\": { \"ansi-regex\": \"^5.0.1\" } }, \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\"],\n\n    \"@codebuff/web/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys/eslint-visitor-keys\": [\"eslint-visitor-keys@4.2.1\", \"\", {}, \"sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==\"],\n\n    \"@commitlint/top-level/find-up/locate-path/p-locate\": [\"p-locate@6.0.0\", \"\", { \"dependencies\": { \"p-limit\": \"^4.0.0\" } }, \"sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==\"],\n\n    \"@contentlayer/core/remark-parse/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit\": [\"unist-util-visit@4.1.2\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\", \"unist-util-visit-parents\": \"^5.1.1\" } }, \"sha512-MSd8OUGISqHdVvfY9TPhyK2VdUrPgxkUtWSuMHF6XAAFuL4LokseigBnZtPnJMu+FbynTkFNnFlyjxpVKujMRg==\"],\n\n    \"@contentlayer/core/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@contentlayer/core/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@contentlayer/source-files/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"@contentlayer/source-files/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up/locate-path/p-locate\": [\"p-locate@4.1.0\", \"\", { \"dependencies\": { \"p-limit\": \"^2.2.0\" } }, \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/estree-util-attach-comments\": [\"estree-util-attach-comments@2.1.1\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\" } }, \"sha512-+5Ba/xGGS6mnwFbXIuQiDPTbuTxuMCooq3arVv7gPZtYpjp+VXH/NkHAP35OOefPhNG/UGqU3vt/LTABwcHX0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/hast-util-whitespace\": [\"hast-util-whitespace@2.0.1\", \"\", {}, \"sha512-nAxA0v8+vXSBDt3AnRUNjyRIQ0rD+ntpbAp4LnPkumc5M9yUbSMa4XDU9Q6etY4f1Wp4bNgvc1yjiZtsTTrSng==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression\": [\"mdast-util-mdx-expression@1.3.2\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-xIPmR5ReJDu/DHH1OoIT1HkuybIfRGYRywC+gJtI7qHjCJp/M9jrmBEJW22O8lskDWm562BX2W8TiAwRTb0rKA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm\": [\"mdast-util-mdxjs-esm@1.3.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-SXqglS0HrEvSdUEfoXFtcg7DRl7S2cwOXc7jkuusG472Mmjag34DUDeOJUZtl+BVnyeO1frIgVpHlNRWc2gk/w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/property-information\": [\"property-information@6.5.0\", \"\", {}, \"sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/style-to-object\": [\"style-to-object@0.4.4\", \"\", { \"dependencies\": { \"inline-style-parser\": \"0.1.1\" } }, \"sha512-HYNoHZa2GorYNyqiCaBgsxvcJIn7OHq6inEga+E6Ke3m5JkoqpQbnFssk4jwe+K7AhGa2fcha4wSOf1Kn01dMg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx\": [\"mdast-util-mdx@2.0.1\", \"\", { \"dependencies\": { \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-mdx-expression\": \"^1.0.0\", \"mdast-util-mdx-jsx\": \"^2.0.0\", \"mdast-util-mdxjs-esm\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-38w5y+r8nyKlGvNjSEqWrhG0w5PmnRA+wnBvm+ulYCct7nsGYhFVb0lljS9bQav4psDAS1eGkP2LMVcZBi/aqw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs\": [\"micromark-extension-mdxjs@1.0.1\", \"\", { \"dependencies\": { \"acorn\": \"^8.0.0\", \"acorn-jsx\": \"^5.0.0\", \"micromark-extension-mdx-expression\": \"^1.0.0\", \"micromark-extension-mdx-jsx\": \"^1.0.0\", \"micromark-extension-mdx-md\": \"^1.0.0\", \"micromark-extension-mdxjs-esm\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-7YA7hF6i5eKOfFUzZ+0z6avRG52GpWR8DL+kN47y3f2KhxbBZMhmxe7auOeaTBrW2DenbbZTf1ea9tA2hDpC2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast\": [\"mdast-util-to-hast@12.3.0\", \"\", { \"dependencies\": { \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-definitions\": \"^5.0.0\", \"micromark-util-sanitize-uri\": \"^1.1.0\", \"trim-lines\": \"^3.0.0\", \"unist-util-generated\": \"^2.0.0\", \"unist-util-position\": \"^4.0.0\", \"unist-util-visit\": \"^4.0.0\" } }, \"sha512-pits93r8PhnIoU4Vy9bjW39M2jJ6/tdHyja9rrot9uujkN7UTU9SDnE6WNJz/IGyQk3XHX6yNNtrBH6cQzm8Hw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unified/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-position-from-estree/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-stringify-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"@oclif/core/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@oclif/core/wrap-ansi/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@oclif/errors/wrap-ansi/string-width/emoji-regex\": [\"emoji-regex@8.0.0\", \"\", {}, \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\"],\n\n    \"@react-native/dev-middleware/serve-static/send/debug\": [\"debug@2.6.9\", \"\", { \"dependencies\": { \"ms\": \"2.0.0\" } }, \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\"],\n\n    \"@react-native/dev-middleware/serve-static/send/encodeurl\": [\"encodeurl@1.0.2\", \"\", {}, \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\"],\n\n    \"@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.3\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==\"],\n\n    \"jest-diff/pretty-format/@jest/schemas/@sinclair/typebox\": [\"@sinclair/typebox@0.34.38\", \"\", {}, \"sha512-HpkxMmc2XmZKhvaKIZZThlHmx1L0I/V1hWK1NubtlFnr6ZqdiOpV72TKudZUNQjZNsyDBay72qFEhEvb+bcwcA==\"],\n\n    \"lint-staged/execa/npm-run-path/path-key\": [\"path-key@4.0.0\", \"\", {}, \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\"],\n\n    \"lint-staged/execa/onetime/mimic-fn\": [\"mimic-fn@4.0.0\", \"\", {}, \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\"],\n\n    \"log-update/cli-cursor/restore-cursor/onetime\": [\"onetime@7.0.0\", \"\", { \"dependencies\": { \"mimic-function\": \"^5.0.0\" } }, \"sha512-VXJjc87FScF88uafS3JllDgvAm+c/Slfz06lorj2uAY34rlUu0Nt+v8wreiImcrgAjjIHp1rXpTDlLOGw29WwQ==\"],\n\n    \"log-update/cli-cursor/restore-cursor/signal-exit\": [\"signal-exit@4.1.0\", \"\", {}, \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"metro-config/cosmiconfig/import-fresh/resolve-from\": [\"resolve-from@3.0.0\", \"\", {}, \"sha512-GnlH6vxLymXJNMBo7XP1fJIzBFbdYt49CuTwmB/6N53t+kMPRMFKz783LlQ4tv28XoQfMWinAJX6WCGf2IlaIw==\"],\n\n    \"metro-config/cosmiconfig/js-yaml/argparse\": [\"argparse@1.0.10\", \"\", { \"dependencies\": { \"sprintf-js\": \"~1.0.2\" } }, \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\"],\n\n    \"nx/ora/log-symbols/is-unicode-supported\": [\"is-unicode-supported@0.1.0\", \"\", {}, \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\"],\n\n    \"nx/ora/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"nx/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"pkg-dir/find-up/locate-path/p-locate\": [\"p-locate@4.1.0\", \"\", { \"dependencies\": { \"p-limit\": \"^2.2.0\" } }, \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\"],\n\n    \"rehype-stringify/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"rehype-stringify/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"remark-frontmatter/unified/vfile/unist-util-stringify-position\": [\"unist-util-stringify-position@3.0.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-k5GzIBZ/QatR8N5X2y+drfpWG8IDBzdnVj6OInRNWm1oXrzydiaAT2OQiA8DPRRZyAKb9b6I2a6PxYklZD0gKg==\"],\n\n    \"remark-frontmatter/unified/vfile/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/scope-manager/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree\": [\"@typescript-eslint/typescript-estree@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"@typescript-eslint/visitor-keys\": \"7.18.0\", \"debug\": \"^4.3.4\", \"globby\": \"^11.1.0\", \"is-glob\": \"^4.0.3\", \"minimatch\": \"^9.0.4\", \"semver\": \"^7.6.0\", \"ts-api-utils\": \"^1.3.0\" } }, \"sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/visitor-keys/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/scope-manager/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree/@typescript-eslint/visitor-keys\": [\"@typescript-eslint/visitor-keys@7.18.0\", \"\", { \"dependencies\": { \"@typescript-eslint/types\": \"7.18.0\", \"eslint-visitor-keys\": \"^3.4.3\" } }, \"sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"widest-line/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"yargs/string-width/strip-ansi/ansi-regex\": [\"ansi-regex@5.0.1\", \"\", {}, \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\"],\n\n    \"@commitlint/top-level/find-up/locate-path/p-locate/p-limit\": [\"p-limit@4.0.0\", \"\", { \"dependencies\": { \"yocto-queue\": \"^1.0.0\" } }, \"sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/unist-util-visit/unist-util-visit-parents\": [\"unist-util-visit-parents@5.1.3\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-x6+y8g7wWMyQhL1iZfhIPhDAs7Xwbn9nRosDXl7qoPTSCy0yNxnKc+hWokFifWQIDGi154rdUqKvbCa4+1kLhg==\"],\n\n    \"@istanbuljs/load-nyc-config/find-up/locate-path/p-locate/p-limit\": [\"p-limit@2.3.0\", \"\", { \"dependencies\": { \"p-try\": \"^2.0.0\" } }, \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/style-to-object/inline-style-parser\": [\"inline-style-parser@0.1.1\", \"\", {}, \"sha512-7NXolsK4CAS5+xvdj5OMMbI962hU/wvwoxk+LWR9Ek9bVtyuuYScDN6eS0rUm6TxApFpw7CX1o4uJzcd4AyD3Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown\": [\"mdast-util-from-markdown@1.3.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"mdast-util-to-string\": \"^3.1.0\", \"micromark\": \"^3.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-4xTO/M8c82qBcnQc1tgpNtubGUW/Y1tBQ1B0i5CtSoelOLKFYlElIr3bvgREYYO5iRqbMY1YuqZng0GVOI8Qww==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression\": [\"mdast-util-mdx-expression@1.3.2\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-xIPmR5ReJDu/DHH1OoIT1HkuybIfRGYRywC+gJtI7qHjCJp/M9jrmBEJW22O8lskDWm562BX2W8TiAwRTb0rKA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx\": [\"mdast-util-mdx-jsx@2.1.4\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"ccount\": \"^2.0.0\", \"mdast-util-from-markdown\": \"^1.1.0\", \"mdast-util-to-markdown\": \"^1.3.0\", \"parse-entities\": \"^4.0.0\", \"stringify-entities\": \"^4.0.0\", \"unist-util-remove-position\": \"^4.0.0\", \"unist-util-stringify-position\": \"^3.0.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-DtMn9CmVhVzZx3f+optVDF8yFgQVt7FghCRNdlIaS3X5Bnym3hZwPbg/XW86vdpKjlc1PVj26SpnLGeJBXD3JA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm\": [\"mdast-util-mdxjs-esm@1.3.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/hast\": \"^2.0.0\", \"@types/mdast\": \"^3.0.0\", \"mdast-util-from-markdown\": \"^1.0.0\", \"mdast-util-to-markdown\": \"^1.0.0\" } }, \"sha512-SXqglS0HrEvSdUEfoXFtcg7DRl7S2cwOXc7jkuusG472Mmjag34DUDeOJUZtl+BVnyeO1frIgVpHlNRWc2gk/w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown\": [\"mdast-util-to-markdown@1.5.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"@types/unist\": \"^2.0.0\", \"longest-streak\": \"^3.0.0\", \"mdast-util-phrasing\": \"^3.0.0\", \"mdast-util-to-string\": \"^3.0.0\", \"micromark-util-decode-string\": \"^1.0.0\", \"unist-util-visit\": \"^4.0.0\", \"zwitch\": \"^2.0.0\" } }, \"sha512-bbv7TPv/WC49thZPg3jXuqzuvI45IL2EVAr/KxF0BSdHsU0ceFHOmwQn6evxAh1GaoK/6GQ1wp4R4oW2+LFL/A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression\": [\"micromark-extension-mdx-expression@1.0.8\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-factory-mdx-expression\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-zZpeQtc5wfWKdzDsHRBY003H2Smg+PUi2REhqgIhdzAa5xonhP03FcXxqFSerFiNUr5AWmHpaNPQTBVOS4lrXw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx\": [\"micromark-extension-mdx-jsx@1.0.5\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"estree-util-is-identifier-name\": \"^2.0.0\", \"micromark-factory-mdx-expression\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-gPH+9ZdmDflbu19Xkb8+gheqEDqkSpdCEubQyxuz/Hn8DOXiXvrXeikOoBA71+e8Pfi0/UYmU3wW3H58kr7akA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-md\": [\"micromark-extension-mdx-md@1.0.1\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-7MSuj2S7xjOQXAjjkbjBsHkMtb+mDGVW6uI2dBL9snOBCbZmoNgDAeZ0nSn9j3T42UE/g2xVNMn18PJxZvkBEA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm\": [\"micromark-extension-mdxjs-esm@1.0.5\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-position-from-estree\": \"^1.1.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-xNRBw4aoURcyz/S69B19WnZAkWJMxHMT5hE36GtDAyhoyn/8TuAeqjFJQlwk+MKQsUD7b3l7kFX+vlfVWgcX1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/unist-util-position\": [\"unist-util-position@4.0.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-kUBE91efOWfIVBo8xzh/uZQ7p9ffYRtUbMRZBNFYwf0RK8koUMx6dGUfwylLOKmaT2cs4wSW96QoYUSXAyEtpg==\"],\n\n    \"@react-native/dev-middleware/serve-static/send/debug/ms\": [\"ms@2.0.0\", \"\", {}, \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"],\n\n    \"eslint-config-next/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"mdast-util-frontmatter/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"pkg-dir/find-up/locate-path/p-locate/p-limit\": [\"p-limit@2.3.0\", \"\", { \"dependencies\": { \"p-try\": \"^2.0.0\" } }, \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/@typescript-eslint/types\": [\"@typescript-eslint/types@7.18.0\", \"\", {}, \"sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch\": [\"minimatch@9.0.5\", \"\", { \"dependencies\": { \"brace-expansion\": \"^2.0.1\" } }, \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\"],\n\n    \"typescript-eslint/@typescript-eslint/parser/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"typescript-eslint/@typescript-eslint/utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@contentlayer/core/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@contentlayer/core/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark\": [\"micromark@3.2.0\", \"\", { \"dependencies\": { \"@types/debug\": \"^4.0.0\", \"debug\": \"^4.0.0\", \"decode-named-character-reference\": \"^1.0.0\", \"micromark-core-commonmark\": \"^1.0.1\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-combine-extensions\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-sanitize-uri\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-uD66tJj54JLYq0De10AhWycZWGQNUvDI55xPgk2sQM5kn1JYlhbCMTtEeT27+vAhW2FBQxLlOmS3pmA7/2z4aA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-jsx/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/hast\": [\"@types/hast@2.3.10\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/@types/mdast\": [\"@types/mdast@3.0.15\", \"\", { \"dependencies\": { \"@types/unist\": \"^2\" } }, \"sha512-LnwD+mUEfxWMa1QpDraczIn6k0Ee3SMicuYSSzS6ZYl2gKS09EClnJYGd8Du6rfc5r/GZEk5o1mRb8TaTj03sQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/mdast-util-phrasing\": [\"mdast-util-phrasing@3.0.1\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\", \"unist-util-is\": \"^5.0.0\" } }, \"sha512-WmI1gTXUBJo4/ZmSk79Wcb2HcjPJBzM1nlI/OUWA8yk2X9ik3ffNbBGsU+09BFmXaL1IBb9fiuvq6/KMiNycSg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/mdast-util-to-string\": [\"mdast-util-to-string@3.2.0\", \"\", { \"dependencies\": { \"@types/mdast\": \"^3.0.0\" } }, \"sha512-V4Zn/ncyN1QNSqSBxTrMOLpjr+IKdHl2v3KVLoWmDPscP4r9GcCi71gjgvUV1SFSKh92AjAG4peFuBl2/YgCJg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string\": [\"micromark-util-decode-string@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-decode-numeric-character-reference\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-YphLGCK8gM1tG1bd54azwyrQRjCFcmgj2S2GoJDNnh4vYtnL38JS8M4gpxzOPNyHdNEpheyWXCTnnTDY3N+NVQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-mdx-expression\": [\"micromark-factory-mdx-expression@1.0.9\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-position-from-estree\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-jGIWzSmNfdnkJq05c7b0+Wv0Kfz3NJ3N4cBjnbO4zjXIlxJr+f8lk+5ZmwFvqdAbUy2q6B5rCY//g0QAAaXDWA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@1.2.3\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\", \"estree-util-visit\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression\": [\"micromark-factory-mdx-expression@1.0.9\", \"\", { \"dependencies\": { \"@types/estree\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-events-to-acorn\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"unist-util-position-from-estree\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-jGIWzSmNfdnkJq05c7b0+Wv0Kfz3NJ3N4cBjnbO4zjXIlxJr+f8lk+5ZmwFvqdAbUy2q6B5rCY//g0QAAaXDWA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@1.2.3\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\", \"estree-util-visit\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-combine-extensions/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/unist-util-position/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"typescript-eslint/@typescript-eslint/eslint-plugin/@typescript-eslint/type-utils/@typescript-eslint/typescript-estree/minimatch/brace-expansion\": [\"brace-expansion@2.0.2\", \"\", { \"dependencies\": { \"balanced-match\": \"^1.0.0\" } }, \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark\": [\"micromark-core-commonmark@1.1.0\", \"\", { \"dependencies\": { \"decode-named-character-reference\": \"^1.0.0\", \"micromark-factory-destination\": \"^1.0.0\", \"micromark-factory-label\": \"^1.0.0\", \"micromark-factory-space\": \"^1.0.0\", \"micromark-factory-title\": \"^1.0.0\", \"micromark-factory-whitespace\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-classify-character\": \"^1.0.0\", \"micromark-util-html-tag-name\": \"^1.0.0\", \"micromark-util-normalize-identifier\": \"^1.0.0\", \"micromark-util-resolve-all\": \"^1.0.0\", \"micromark-util-subtokenize\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.1\", \"uvu\": \"^0.5.0\" } }, \"sha512-BgHO1aRbolh2hcrzL2d1La37V0Aoz73ymF8rAcKnohLy93titmv62E0gP8Hrx9PKcKrqCZ1BbLGbP3bEhoXYlw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-combine-extensions\": [\"micromark-util-combine-extensions@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-Q20sp4mfNf9yEqDL50WwuWZHUrCO4fEyeDCnMGmG5Pr0Cz15Uo7KBs6jq+dq0EgX4DPwwrh9m0X+zPV1ypFvUA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-encode\": [\"micromark-util-encode@1.1.0\", \"\", {}, \"sha512-EuEzTWSTAj9PA5GOAs992GzNh2dGQO52UvAbtSOMvXTxv3Criqb6IOzJUBCmEqrrXSblJIJBbFFv6zPxpreiJw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-sanitize-uri\": [\"micromark-util-sanitize-uri@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-encode\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-QO4GXv0XZfWey4pYFndLUKEAktKkG5kZTdUNaTAkzbuJxn2tNBOr+QtxR2XpWaMhbImT2dPzyLrPXLlPhph34A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdx-expression/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/hast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-mdxjs-esm/@types/mdast/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/mdast-util-phrasing/unist-util-is\": [\"unist-util-is@5.2.1\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\" } }, \"sha512-u9njyyfEh43npf1M+yGKDGVPbY/JWEemg5nH05ncKPfi+kBbKBJoTdsogMu33uhytuLlv9y0O7GH7fEdwLdLQw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character\": [\"micromark-util-character@1.2.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-lXraTwcX3yH/vMDaFWCQJP1uIszLVebzUa3ZHdrgxr7KEU/9mL4mVgCpGbyhvNLNlauROiNUq7WN5u7ndbY6xg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-decode-numeric-character-reference\": [\"micromark-util-decode-numeric-character-reference@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-m9V0ExGv0jB1OT21mrWcuf4QhP46pH1KkfWy9ZEezqHKAxkj4mPCy3nIH1rkbdMlChLHX531eOrymlwyZIf2iw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-mdx-expression/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn/estree-util-visit\": [\"estree-util-visit@1.2.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\" } }, \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-util-events-to-acorn/vfile-message\": [\"vfile-message@3.1.4\", \"\", { \"dependencies\": { \"@types/unist\": \"^2.0.0\", \"unist-util-stringify-position\": \"^3.0.0\" } }, \"sha512-fa0Z6P8HUrQN4BZaX05SIVXic+7kE3b05PWAtPuYP9QLHsLKYR7/AlLW3NtOrpXRLeawpDLMsVkmk5DG0NXgWw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression/micromark-util-events-to-acorn\": [\"micromark-util-events-to-acorn@1.2.3\", \"\", { \"dependencies\": { \"@types/acorn\": \"^4.0.0\", \"@types/estree\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\", \"estree-util-visit\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\", \"vfile-message\": \"^3.0.0\" } }, \"sha512-ij4X7Wuc4fED6UoLWkmo0xJQhsktfNh1J0m8g4PbIMPlx+ek/4YdW5mvbye8z/aZvAPUoxgXHrwVlXAPKMRp1w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/vfile-message/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-space\": [\"micromark-factory-space@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-cRzEj7c0OL4Mw2v6nwzttyOZe8XY/Z8G0rzmWQZTBi/jjwyw/U4uqKtUORXQrR5bAZZnbTI/feRV/R7hc4jQYQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-chunked\": [\"micromark-util-chunked@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-Ye01HXpkZPNcV6FiyoW2fGZDUw4Yc7vT0E9Sad83+bEDiCJ1uXu0S3mr8WLpsz3HaG3x2q0HM6CTuPdcZcluFQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-normalize-identifier\": [\"micromark-util-normalize-identifier@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-symbol\": \"^1.0.0\" } }, \"sha512-N+w5vhqrBihhjdpM8+5Xsxy71QWqGn7HYNUvch71iV2PM7+E3uWGox1Qp90loa1ephtCxG2ftRV/Conitc6P2Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-resolve-all\": [\"micromark-util-resolve-all@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-b/G6BTMSg+bX+xVCshPTPyAu2tmA0E4X98NSR7eIbeC6ycCqCeE7wjfDIgzEbkzdEVJXRtOG4FbEm/uGbCRouA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-core-commonmark/micromark-util-subtokenize\": [\"micromark-util-subtokenize@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-chunked\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-kUQHyzRoxvZO2PuLzMt2P/dwVsTiivCK8icYTeR+3WgbuPqfHgPPy7nFKbeqRivBvn/3N3GBiNC+JRTMSxEC7A==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-events-to-acorn/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/micromark-util-events-to-acorn/estree-util-visit\": [\"estree-util-visit@1.2.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\" } }, \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdxjs-esm/vfile-message/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-util-combine-extensions/micromark-util-chunked/micromark-util-symbol\": [\"micromark-util-symbol@1.1.0\", \"\", {}, \"sha512-uEjpEYY6KMs1g7QfJ2eX1SQEV+ZT4rUD3UcF6l57acZvLNK7PBZL+ty82Z1qhK1/yXIY4bdx04FKMgR0g4IAag==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-parse/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-rehype/mdast-util-to-hast/micromark-util-sanitize-uri/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdx-expression/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/hast-util-to-estree/mdast-util-mdxjs-esm/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-destination\": [\"micromark-factory-destination@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-XaNDROBgx9SgSChd69pjiGKbV+nfHGDPVYFs5dOoDd7ZnMAE+Cuu91BCpsY8RT2NP9vo/B8pds2VQNCLiu0zhg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-label\": [\"micromark-factory-label@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\", \"uvu\": \"^0.5.0\" } }, \"sha512-OLtyez4vZo/1NjxGhcpDSbHQ+m0IIGnT8BoPamh+7jVlzLJBH98zzuCoUeMxvM6WsNeh8wx8cKvqLiPHEACn0w==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-title\": [\"micromark-factory-title@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-J7n9R3vMmgjDOCY8NPw55jiyaQnH5kBdV2/UXCtZIpnHH3P6nHUKaH7XXEYuWwx/xUJcawa8plLBEjMPU24HzQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-factory-whitespace\": [\"micromark-factory-whitespace@1.1.0\", \"\", { \"dependencies\": { \"micromark-factory-space\": \"^1.0.0\", \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-classify-character\": [\"micromark-util-classify-character@1.1.0\", \"\", { \"dependencies\": { \"micromark-util-character\": \"^1.0.0\", \"micromark-util-symbol\": \"^1.0.0\", \"micromark-util-types\": \"^1.0.0\" } }, \"sha512-SL0wLxtKSnklKSUplok1WQFoGhUdWYKggKUiqhX+Swala+BtptGCu5iPRc+xvzJ4PXE/hwM3FNXsfEVgoZsWbw==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-from-markdown/micromark/micromark-core-commonmark/micromark-util-html-tag-name\": [\"micromark-util-html-tag-name@1.2.0\", \"\", {}, \"sha512-VTQzcuQgFUD7yYztuQFKXT49KghjtETQ+Wv/zUjGSGBioZnkA4P1XXZPT1FHeJA6RwRXSF47yvJ1tsJdoxwO+Q==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/mdast-util-mdx/mdast-util-to-markdown/micromark-util-decode-string/micromark-util-character/micromark-util-types\": [\"micromark-util-types@1.1.0\", \"\", {}, \"sha512-ukRBgie8TIAcacscVHSiddHjO4k/q3pnedmzMQ4iwDcK0FtFCohKOlFbaOL/mPgfnPsL3C1ZyxJa4sbWrBl3jg==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-expression/micromark-factory-mdx-expression/vfile-message/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression/micromark-util-events-to-acorn/@types/unist\": [\"@types/unist@2.0.11\", \"\", {}, \"sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==\"],\n\n    \"@mdx-js/esbuild/@mdx-js/mdx/remark-mdx/micromark-extension-mdxjs/micromark-extension-mdx-jsx/micromark-factory-mdx-expression/micromark-util-events-to-acorn/estree-util-visit\": [\"estree-util-visit@1.2.1\", \"\", { \"dependencies\": { \"@types/estree-jsx\": \"^1.0.0\", \"@types/unist\": \"^2.0.0\" } }, \"sha512-xbgqcrkIVbIG+lI/gzbvd9SGTJL4zqJKBFttUl5pP27KhAjtMKbX/mQXJ7qgyXpMgVy/zvpm0xoQQaGL8OloOw==\"],\n  }\n}\n"},{"path":"common/src/__tests__/handlesteps-parsing.test.ts","preContent":"import { afterEach, beforeEach, describe, expect, test } from 'bun:test'\n\nimport { validateAgents } from '../templates/agent-validation'\nimport { DynamicAgentDefinitionSchema } from '../types/dynamic-agent-template'\n\nimport type { DynamicAgentTemplate } from '../types/dynamic-agent-template'\nimport type { AgentState } from '../types/session-state'\nimport type { ProjectFileContext } from '../util/file'\n\ndescribe('handleSteps Parsing Tests', () => {\n  let mockFileContext: ProjectFileContext\n  let mockAgentTemplate: DynamicAgentTemplate\n\n  beforeEach(() => {\n    // Setup common mock data\n    mockFileContext = {\n      projectRoot: '/test',\n      cwd: '/test',\n      fileTree: [],\n      fileTokenScores: {},\n      knowledgeFiles: {},\n      agentTemplates: {},\n      gitChanges: {\n        status: '',\n        diff: '',\n        diffCached: '',\n        lastCommitMessages: '',\n      },\n      changesSinceLastChat: {},\n      shellConfigFiles: {},\n      systemInfo: {\n        platform: 'test',\n        shell: 'test',\n        nodeVersion: 'test',\n        arch: 'test',\n        homedir: '/test',\n        cpus: 1,\n      },\n      tokenCallers: {},\n    }\n\n    mockAgentTemplate = {\n      id: 'test-agent',\n      version: '1.0.0',\n      displayName: 'Test Agent',\n      spawnerPrompt: 'Testing',\n      model: 'claude-3-5-sonnet-20241022',\n      outputMode: 'structured_output' as const,\n      toolNames: ['set_output'],\n      spawnableAgents: [],\n      includeMessageHistory: true,\n      systemPrompt: 'Test system prompt',\n      instructionsPrompt: 'Test user prompt',\n      stepPrompt: 'Test agent step prompt',\n    }\n  })\n\n  afterEach(() => {\n    // No cleanup needed for stateless functions\n  })\n\n  test('should validate agent config with handleSteps function', () => {\n    const agentConfig = {\n      id: 'test-agent',\n      version: '1.0.0',\n      displayName: 'Test Agent',\n      spawnerPrompt: 'Testing handleSteps',\n      model: 'claude-3-5-sonnet-20241022',\n      outputMode: 'structured_output' as const,\n      toolNames: ['set_output'],\n      systemPrompt: 'You are a test agent',\n      instructionsPrompt: 'Process: {prompt}',\n      stepPrompt: 'Continue processing',\n      handleSteps: function* ({\n        agentState,\n        prompt,\n        params,\n      }: {\n        agentState: AgentState\n        prompt?: string\n        params?: any\n      }) {\n        yield {\n          toolName: 'set_output',\n          args: { message: 'Test completed' },\n        }\n      },\n    }\n\n    const result = DynamicAgentDefinitionSchema.safeParse(agentConfig)\n    expect(result.success).toBe(true)\n\n    if (result.success) {\n      expect(typeof result.data.handleSteps).toBe('function')\n    }\n  })\n\n  test('should convert handleSteps function to string', async () => {\n    const handleStepsFunction = function* ({\n      agentState,\n      prompt,\n      params,\n    }: {\n      agentState: AgentState\n      prompt?: string\n      params?: any\n    }) {\n      yield {\n        toolName: 'set_output',\n        args: { message: 'Hello from generator' },\n      }\n    }\n\n    const agentTemplates = {\n      'test-agent.ts': {\n        ...mockAgentTemplate,\n        handleSteps: handleStepsFunction.toString(),\n      },\n    }\n\n    const fileContext: ProjectFileContext = {\n      ...mockFileContext,\n      agentTemplates,\n    }\n\n    const result = validateAgents(fileContext.agentTemplates || {})\n\n    expect(result.validationErrors).toHaveLength(0)\n    expect(result.templates['test-agent']).toBeDefined()\n    expect(typeof result.templates['test-agent'].handleSteps).toBe('string')\n  })\n\n  test('should require set_output tool for handleSteps with json output mode', () => {\n    const {\n      DynamicAgentTemplateSchema,\n    } = require('../types/dynamic-agent-template')\n\n    const agentConfig = {\n      id: 'test-agent',\n      version: '1.0.0',\n      displayName: 'Test Agent',\n      spawnerPrompt: 'Testing handleSteps',\n      model: 'claude-3-5-sonnet-20241022',\n      outputMode: 'structured_output' as const,\n      toolNames: ['end_turn'], // Missing set_output\n      spawnableAgents: [],\n      systemPrompt: 'Test',\n      instructionsPrompt: 'Test',\n      stepPrompt: 'Test',\n\n      handleSteps:\n        'function* () { yield { toolName: \"set_output\", args: {} } }',\n    }\n\n    const result = DynamicAgentTemplateSchema.safeParse(agentConfig)\n    expect(result.success).toBe(false)\n    if (!result.success) {\n      const errorMessage = result.error.issues[0]?.message || ''\n      expect(errorMessage).toContain('set_output')\n    }\n  })\n\n  test('should validate that handleSteps is a generator function', async () => {\n    const agentTemplates = {\n      'test-agent.ts': {\n        ...mockAgentTemplate,\n        handleSteps: 'function () { return \"not a generator\" }', // Missing *\n      },\n    }\n\n    const fileContext: ProjectFileContext = {\n      ...mockFileContext,\n      agentTemplates,\n    }\n\n    const result = validateAgents(fileContext.agentTemplates || {})\n\n    expect(result.validationErrors.length).toBeGreaterThan(0)\n    expect(result.validationErrors[0].message).toContain('generator function')\n    expect(result.validationErrors[0].message).toContain('function*')\n  })\n\n  test('should verify loaded template handleSteps matches original function toString', async () => {\n    // Create a generator function\n    const originalFunction = function* ({\n      agentState,\n      prompt,\n      params,\n    }: {\n      agentState: AgentState\n      prompt?: string\n      params?: any\n    }) {\n      yield {\n        toolName: 'set_output',\n        args: { message: 'Test output', data: params },\n      }\n    }\n\n    // Get the string representation\n    const expectedStringified = originalFunction.toString()\n\n    // Create agent templates with the function\n    const agentTemplates = {\n      'test-agent.ts': {\n        ...mockAgentTemplate,\n        handleSteps: expectedStringified,\n      },\n    }\n\n    const fileContext: ProjectFileContext = {\n      ...mockFileContext,\n      agentTemplates,\n    }\n\n    // Load agents through the service\n    const result = validateAgents(fileContext.agentTemplates || {})\n\n    // Verify no validation errors\n    expect(result.validationErrors).toHaveLength(0)\n    expect(result.templates['test-agent']).toBeDefined()\n\n    // Verify the loaded template's handleSteps field matches the original toString\n    expect(result.templates['test-agent'].handleSteps).toBe(expectedStringified)\n    expect(typeof result.templates['test-agent'].handleSteps).toBe('string')\n  })\n})\n","postContent":"import { afterEach, beforeEach, describe, expect, test } from 'bun:test'\n\nimport { validateAgents } from '../templates/agent-validation'\nimport { DynamicAgentDefinitionSchema } from '../types/dynamic-agent-template'\n\nimport type { DynamicAgentTemplate } from '../types/dynamic-agent-template'\nimport type { AgentState } from '../types/session-state'\nimport type { ProjectFileContext } from '../util/file'\n\ndescribe('handleSteps Parsing Tests', () => {\n  let mockFileContext: ProjectFileContext\n  let mockAgentTemplate: DynamicAgentTemplate\n\n  beforeEach(() => {\n    // Setup common mock data\n    mockFileContext = {\n      projectRoot: '/test',\n      cwd: '/test',\n      fileTree: [],\n      fileTokenScores: {},\n      knowledgeFiles: {},\n      agentTemplates: {},\n      customToolDefinitions: {},\n      gitChanges: {\n        status: '',\n        diff: '',\n        diffCached: '',\n        lastCommitMessages: '',\n      },\n      changesSinceLastChat: {},\n      shellConfigFiles: {},\n      systemInfo: {\n        platform: 'test',\n        shell: 'test',\n        nodeVersion: 'test',\n        arch: 'test',\n        homedir: '/test',\n        cpus: 1,\n      },\n      tokenCallers: {},\n    }\n\n    mockAgentTemplate = {\n      id: 'test-agent',\n      version: '1.0.0',\n      displayName: 'Test Agent',\n      spawnerPrompt: 'Testing',\n      model: 'claude-3-5-sonnet-20241022',\n      outputMode: 'structured_output' as const,\n      toolNames: ['set_output'],\n      spawnableAgents: [],\n      includeMessageHistory: true,\n      systemPrompt: 'Test system prompt',\n      instructionsPrompt: 'Test user prompt',\n      stepPrompt: 'Test agent step prompt',\n    }\n  })\n\n  afterEach(() => {\n    // No cleanup needed for stateless functions\n  })\n\n  test('should validate agent config with handleSteps function', () => {\n    const agentConfig = {\n      id: 'test-agent',\n      version: '1.0.0',\n      displayName: 'Test Agent',\n      spawnerPrompt: 'Testing handleSteps',\n      model: 'claude-3-5-sonnet-20241022',\n      outputMode: 'structured_output' as const,\n      toolNames: ['set_output'],\n      systemPrompt: 'You are a test agent',\n      instructionsPrompt: 'Process: {prompt}',\n      stepPrompt: 'Continue processing',\n      handleSteps: function* ({\n        agentState,\n        prompt,\n        params,\n      }: {\n        agentState: AgentState\n        prompt?: string\n        params?: any\n      }) {\n        yield {\n          toolName: 'set_output',\n          args: { message: 'Test completed' },\n        }\n      },\n    }\n\n    const result = DynamicAgentDefinitionSchema.safeParse(agentConfig)\n    expect(result.success).toBe(true)\n\n    if (result.success) {\n      expect(typeof result.data.handleSteps).toBe('function')\n    }\n  })\n\n  test('should convert handleSteps function to string', async () => {\n    const handleStepsFunction = function* ({\n      agentState,\n      prompt,\n      params,\n    }: {\n      agentState: AgentState\n      prompt?: string\n      params?: any\n    }) {\n      yield {\n        toolName: 'set_output',\n        args: { message: 'Hello from generator' },\n      }\n    }\n\n    const agentTemplates = {\n      'test-agent.ts': {\n        ...mockAgentTemplate,\n        handleSteps: handleStepsFunction.toString(),\n      },\n    }\n\n    const fileContext: ProjectFileContext = {\n      ...mockFileContext,\n      agentTemplates,\n    }\n\n    const result = validateAgents(fileContext.agentTemplates || {})\n\n    expect(result.validationErrors).toHaveLength(0)\n    expect(result.templates['test-agent']).toBeDefined()\n    expect(typeof result.templates['test-agent'].handleSteps).toBe('string')\n  })\n\n  test('should require set_output tool for handleSteps with json output mode', () => {\n    const {\n      DynamicAgentTemplateSchema,\n    } = require('../types/dynamic-agent-template')\n\n    const agentConfig = {\n      id: 'test-agent',\n      version: '1.0.0',\n      displayName: 'Test Agent',\n      spawnerPrompt: 'Testing handleSteps',\n      model: 'claude-3-5-sonnet-20241022',\n      outputMode: 'structured_output' as const,\n      toolNames: ['end_turn'], // Missing set_output\n      spawnableAgents: [],\n      systemPrompt: 'Test',\n      instructionsPrompt: 'Test',\n      stepPrompt: 'Test',\n\n      handleSteps:\n        'function* () { yield { toolName: \"set_output\", args: {} } }',\n    }\n\n    const result = DynamicAgentTemplateSchema.safeParse(agentConfig)\n    expect(result.success).toBe(false)\n    if (!result.success) {\n      const errorMessage = result.error.issues[0]?.message || ''\n      expect(errorMessage).toContain('set_output')\n    }\n  })\n\n  test('should validate that handleSteps is a generator function', async () => {\n    const agentTemplates = {\n      'test-agent.ts': {\n        ...mockAgentTemplate,\n        handleSteps: 'function () { return \"not a generator\" }', // Missing *\n      },\n    }\n\n    const fileContext: ProjectFileContext = {\n      ...mockFileContext,\n      agentTemplates,\n    }\n\n    const result = validateAgents(fileContext.agentTemplates || {})\n\n    expect(result.validationErrors.length).toBeGreaterThan(0)\n    expect(result.validationErrors[0].message).toContain('generator function')\n    expect(result.validationErrors[0].message).toContain('function*')\n  })\n\n  test('should verify loaded template handleSteps matches original function toString', async () => {\n    // Create a generator function\n    const originalFunction = function* ({\n      agentState,\n      prompt,\n      params,\n    }: {\n      agentState: AgentState\n      prompt?: string\n      params?: any\n    }) {\n      yield {\n        toolName: 'set_output',\n        args: { message: 'Test output', data: params },\n      }\n    }\n\n    // Get the string representation\n    const expectedStringified = originalFunction.toString()\n\n    // Create agent templates with the function\n    const agentTemplates = {\n      'test-agent.ts': {\n        ...mockAgentTemplate,\n        handleSteps: expectedStringified,\n      },\n    }\n\n    const fileContext: ProjectFileContext = {\n      ...mockFileContext,\n      agentTemplates,\n    }\n\n    // Load agents through the service\n    const result = validateAgents(fileContext.agentTemplates || {})\n\n    // Verify no validation errors\n    expect(result.validationErrors).toHaveLength(0)\n    expect(result.templates['test-agent']).toBeDefined()\n\n    // Verify the loaded template's handleSteps field matches the original toString\n    expect(result.templates['test-agent'].handleSteps).toBe(expectedStringified)\n    expect(typeof result.templates['test-agent'].handleSteps).toBe('string')\n  })\n})\n"},{"path":"common/src/templates/initial-agents-dir/types/agent-definition.ts","preContent":"/**\n * Codebuff Agent Type Definitions\n *\n * This file provides TypeScript type definitions for creating custom Codebuff agents.\n * Import these types in your agent files to get full type safety and IntelliSense.\n *\n * Usage in .agents/your-agent.ts:\n *   import { AgentDefinition, ToolName, ModelName } from './types/agent-definition'\n *\n *   const definition: AgentDefinition = {\n *     // ... your agent configuration with full type safety ...\n *   }\n *\n *   export default definition\n */\n\n// ============================================================================\n// Agent Definition and Utility Types\n// ============================================================================\n\nexport interface AgentDefinition {\n  /** Unique identifier for this agent. Must contain only lowercase letters, numbers, and hyphens, e.g. 'code-reviewer' */\n  id: string\n\n  /** Version string (if not provided, will default to '0.0.1' and be bumped on each publish) */\n  version?: string\n\n  /** Publisher ID for the agent. Must be provided if you want to publish the agent. */\n  publisher?: string\n\n  /** Human-readable name for the agent */\n  displayName: string\n\n  /** AI model to use for this agent. Can be any model in OpenRouter: https://openrouter.ai/models */\n  model: ModelName\n\n  /**\n   * https://openrouter.ai/docs/use-cases/reasoning-tokens\n   * One of `max_tokens` or `effort` is required.\n   * If `exclude` is true, reasoning will be removed from the response. Default is false.\n   */\n  reasoningOptions?: {\n    enabled?: boolean\n    exclude?: boolean\n  } & (\n    | {\n        max_tokens: number\n      }\n    | {\n        effort: 'high' | 'medium' | 'low'\n      }\n  )\n\n  // ============================================================================\n  // Tools and Subagents\n  // ============================================================================\n\n  /** Tools this agent can use. */\n  toolNames?: ToolName[]\n\n  /** Other agents this agent can spawn, like 'codebuff/file-picker@0.0.1'.\n   *\n   * Use the fully qualified agent id from the agent store, including publisher and version: 'codebuff/file-picker@0.0.1'\n   * (publisher and version are required!)\n   *\n   * Or, use the agent id from a local agent file in your .agents directory: 'file-picker'.\n   */\n  spawnableAgents?: string[]\n\n  // ============================================================================\n  // Input and Output\n  // ============================================================================\n\n  /** The input schema required to spawn the agent. Provide a prompt string and/or a params object or none.\n   * 80% of the time you want just a prompt string with a description:\n   * inputSchema: {\n   *   prompt: { type: 'string', description: 'A description of what info would be helpful to the agent' }\n   * }\n   */\n  inputSchema?: {\n    prompt?: { type: 'string'; description?: string }\n    params?: JsonObjectSchema\n  }\n\n  /** Whether to include conversation history from the parent agent in context.\n   *\n   * Defaults to false.\n   * Use this if the agent needs to know all the previous messages in the conversation.\n   */\n  includeMessageHistory?: boolean\n\n  /** How the agent should output a response to its parent (defaults to 'last_message')\n   *\n   * last_message: The last message from the agent, typcically after using tools.\n   *\n   * all_messages: All messages from the agent, including tool calls and results.\n   *\n   * json: Make the agent output a JSON object. Can be used with outputSchema or without if you want freeform json output.\n   */\n  outputMode?: 'last_message' | 'all_messages' | 'structured_output'\n\n  /** JSON schema for structured output (when outputMode is 'structured_output') */\n  outputSchema?: JsonObjectSchema\n\n  // ============================================================================\n  // Prompts\n  // ============================================================================\n\n  /** Prompt for when and why to spawn this agent. Include the main purpose and use cases.\n   *\n   * This field is key if the agent is intended to be spawned by other agents. */\n  spawnerPrompt?: string\n\n  /** Background information for the agent. Fairly optional. Prefer using instructionsPrompt for agent instructions. */\n  systemPrompt?: string\n\n  /** Instructions for the agent.\n   *\n   * IMPORTANT: Updating this prompt is the best way to shape the agent's behavior.\n   * This prompt is inserted after each user input. */\n  instructionsPrompt?: string\n\n  /** Prompt inserted at each agent step.\n   *\n   * Powerful for changing the agent's behavior, but usually not necessary for smart models.\n   * Prefer instructionsPrompt for most instructions. */\n  stepPrompt?: string\n\n  // ============================================================================\n  // Handle Steps\n  // ============================================================================\n\n  /** Programmatically step the agent forward and run tools.\n   *\n   * You can either yield:\n   * - A tool call object with toolName and input properties.\n   * - 'STEP' to run agent's model and generate one assistant message.\n   * - 'STEP_ALL' to run the agent's model until it uses the end_turn tool or stops includes no tool calls in a message.\n   *\n   * Or use 'return' to end the turn.\n   *\n   * Example 1:\n   * function* handleSteps({ agentStep, prompt, params}) {\n   *   const { toolResult } = yield {\n   *     toolName: 'read_files',\n   *     input: { paths: ['file1.txt', 'file2.txt'] }\n   *   }\n   *   yield 'STEP_ALL'\n   * }\n   *\n   * Example 2:\n   * handleSteps: function* ({ agentState, prompt, params }) {\n   *   while (true) {\n   *     yield {\n   *       toolName: 'spawn_agents',\n   *       input: {\n   *         agents: [\n   *         {\n   *           agent_type: 'thinker',\n   *           prompt: 'Think deeply about the user request',\n   *         },\n   *       ],\n   *     },\n   *   }\n   *   yield 'STEP'\n   * }\n   * }\n   */\n  handleSteps?: (\n    context: AgentStepContext,\n  ) => Generator<\n    ToolCall | 'STEP' | 'STEP_ALL',\n    void,\n    { agentState: AgentState; toolResult: string | undefined }\n  >\n}\n\n// ============================================================================\n// Supporting Types\n// ============================================================================\n\nexport interface AgentState {\n  agentId: string\n  parentId: string\n  messageHistory: Message[]\n}\n\n/**\n * Message in conversation history\n */\nexport interface Message {\n  role: 'user' | 'assistant'\n  content: string\n}\n\n/**\n * Context provided to handleSteps generator function\n */\nexport interface AgentStepContext {\n  agentState: AgentState\n  prompt?: string\n  params?: Record<string, any>\n}\n\n/**\n * Tool call object for handleSteps generator\n */\nexport type ToolCall<T extends ToolName = ToolName> = {\n  [K in T]: {\n    toolName: K\n    input: Tools.GetToolParams<K>\n  }\n}[T]\n\n/**\n * JSON Schema definition (for prompt schema or output schema)\n */\nexport type JsonSchema = {\n  type?:\n    | 'object'\n    | 'array'\n    | 'string'\n    | 'number'\n    | 'boolean'\n    | 'null'\n    | 'integer'\n  description?: string\n  properties?: Record<string, JsonSchema | boolean>\n  required?: string[]\n  enum?: Array<string | number | boolean | null>\n  [k: string]: unknown\n}\nexport type JsonObjectSchema = JsonSchema & { type: 'object' }\n\n// ============================================================================\n// Available Tools\n// ============================================================================\n\n/**\n * File operation tools\n */\nexport type FileTools =\n  | 'read_files'\n  | 'write_file'\n  | 'str_replace'\n  | 'find_files'\n\n/**\n * Code analysis tools\n */\nexport type CodeAnalysisTools = 'code_search' | 'find_files'\n\n/**\n * Terminal and system tools\n */\nexport type TerminalTools = 'run_terminal_command' | 'run_file_change_hooks'\n\n/**\n * Web and browser tools\n */\nexport type WebTools = 'web_search' | 'read_docs'\n\n/**\n * Agent management tools\n */\nexport type AgentTools = 'spawn_agents' | 'set_messages' | 'add_message'\n\n/**\n * Planning and organization tools\n */\nexport type PlanningTools = 'think_deeply'\n\n/**\n * Output and control tools\n */\nexport type OutputTools = 'set_output' | 'end_turn'\n\n/**\n * Common tool combinations for convenience\n */\nexport type FileEditingTools = FileTools | 'end_turn'\nexport type ResearchTools = WebTools | 'write_file' | 'end_turn'\nexport type CodeAnalysisToolSet = FileTools | CodeAnalysisTools | 'end_turn'\n\n// ============================================================================\n// Available Models (see: https://openrouter.ai/models)\n// ============================================================================\n\n/**\n * AI models available for agents. Pick from our selection of recommended models or choose any model in OpenRouter.\n *\n * See available models at https://openrouter.ai/models\n */\nexport type ModelName =\n  // Recommended Models\n\n  // OpenAI\n  | 'openai/gpt-5'\n  | 'openai/gpt-5-mini'\n  | 'openai/gpt-5-nano'\n\n  // Anthropic\n  | 'anthropic/claude-4-sonnet-20250522'\n  | 'anthropic/claude-opus-4.1'\n\n  // Gemini\n  | 'google/gemini-2.5-pro'\n  | 'google/gemini-2.5-flash'\n  | 'google/gemini-2.5-flash-lite'\n\n  // X-AI\n  | 'x-ai/grok-4-07-09'\n\n  // Qwen\n  | 'qwen/qwen3-coder'\n  | 'qwen/qwen3-coder:nitro'\n  | 'qwen/qwen3-235b-a22b-2507'\n  | 'qwen/qwen3-235b-a22b-2507:nitro'\n  | 'qwen/qwen3-235b-a22b-thinking-2507'\n  | 'qwen/qwen3-235b-a22b-thinking-2507:nitro'\n  | 'qwen/qwen3-30b-a3b'\n  | 'qwen/qwen3-30b-a3b:nitro'\n\n  // DeepSeek\n  | 'deepseek/deepseek-chat-v3-0324'\n  | 'deepseek/deepseek-chat-v3-0324:nitro'\n  | 'deepseek/deepseek-r1-0528'\n  | 'deepseek/deepseek-r1-0528:nitro'\n\n  // Other open source models\n  | 'moonshotai/kimi-k2'\n  | 'moonshotai/kimi-k2:nitro'\n  | 'z-ai/glm-4.5'\n  | 'z-ai/glm-4.5:nitro'\n  | (string & {})\n\nimport type * as Tools from './tools'\nexport type { Tools }\ntype ToolName = Tools.ToolName\n","postContent":"/**\n * Codebuff Agent Type Definitions\n *\n * This file provides TypeScript type definitions for creating custom Codebuff agents.\n * Import these types in your agent files to get full type safety and IntelliSense.\n *\n * Usage in .agents/your-agent.ts:\n *   import { AgentDefinition, ToolName, ModelName } from './types/agent-definition'\n *\n *   const definition: AgentDefinition = {\n *     // ... your agent configuration with full type safety ...\n *   }\n *\n *   export default definition\n */\n\n// ============================================================================\n// Agent Definition and Utility Types\n// ============================================================================\n\nexport interface AgentDefinition {\n  /** Unique identifier for this agent. Must contain only lowercase letters, numbers, and hyphens, e.g. 'code-reviewer' */\n  id: string\n\n  /** Version string (if not provided, will default to '0.0.1' and be bumped on each publish) */\n  version?: string\n\n  /** Publisher ID for the agent. Must be provided if you want to publish the agent. */\n  publisher?: string\n\n  /** Human-readable name for the agent */\n  displayName: string\n\n  /** AI model to use for this agent. Can be any model in OpenRouter: https://openrouter.ai/models */\n  model: ModelName\n\n  /**\n   * https://openrouter.ai/docs/use-cases/reasoning-tokens\n   * One of `max_tokens` or `effort` is required.\n   * If `exclude` is true, reasoning will be removed from the response. Default is false.\n   */\n  reasoningOptions?: {\n    enabled?: boolean\n    exclude?: boolean\n  } & (\n    | {\n        max_tokens: number\n      }\n    | {\n        effort: 'high' | 'medium' | 'low'\n      }\n  )\n\n  // ============================================================================\n  // Tools and Subagents\n  // ============================================================================\n\n  /** Tools this agent can use. */\n  toolNames?: (ToolName | (string & {}))[]\n\n  /** Other agents this agent can spawn, like 'codebuff/file-picker@0.0.1'.\n   *\n   * Use the fully qualified agent id from the agent store, including publisher and version: 'codebuff/file-picker@0.0.1'\n   * (publisher and version are required!)\n   *\n   * Or, use the agent id from a local agent file in your .agents directory: 'file-picker'.\n   */\n  spawnableAgents?: string[]\n\n  // ============================================================================\n  // Input and Output\n  // ============================================================================\n\n  /** The input schema required to spawn the agent. Provide a prompt string and/or a params object or none.\n   * 80% of the time you want just a prompt string with a description:\n   * inputSchema: {\n   *   prompt: { type: 'string', description: 'A description of what info would be helpful to the agent' }\n   * }\n   */\n  inputSchema?: {\n    prompt?: { type: 'string'; description?: string }\n    params?: JsonObjectSchema\n  }\n\n  /** Whether to include conversation history from the parent agent in context.\n   *\n   * Defaults to false.\n   * Use this if the agent needs to know all the previous messages in the conversation.\n   */\n  includeMessageHistory?: boolean\n\n  /** How the agent should output a response to its parent (defaults to 'last_message')\n   *\n   * last_message: The last message from the agent, typcically after using tools.\n   *\n   * all_messages: All messages from the agent, including tool calls and results.\n   *\n   * json: Make the agent output a JSON object. Can be used with outputSchema or without if you want freeform json output.\n   */\n  outputMode?: 'last_message' | 'all_messages' | 'structured_output'\n\n  /** JSON schema for structured output (when outputMode is 'structured_output') */\n  outputSchema?: JsonObjectSchema\n\n  // ============================================================================\n  // Prompts\n  // ============================================================================\n\n  /** Prompt for when and why to spawn this agent. Include the main purpose and use cases.\n   *\n   * This field is key if the agent is intended to be spawned by other agents. */\n  spawnerPrompt?: string\n\n  /** Background information for the agent. Fairly optional. Prefer using instructionsPrompt for agent instructions. */\n  systemPrompt?: string\n\n  /** Instructions for the agent.\n   *\n   * IMPORTANT: Updating this prompt is the best way to shape the agent's behavior.\n   * This prompt is inserted after each user input. */\n  instructionsPrompt?: string\n\n  /** Prompt inserted at each agent step.\n   *\n   * Powerful for changing the agent's behavior, but usually not necessary for smart models.\n   * Prefer instructionsPrompt for most instructions. */\n  stepPrompt?: string\n\n  // ============================================================================\n  // Handle Steps\n  // ============================================================================\n\n  /** Programmatically step the agent forward and run tools.\n   *\n   * You can either yield:\n   * - A tool call object with toolName and input properties.\n   * - 'STEP' to run agent's model and generate one assistant message.\n   * - 'STEP_ALL' to run the agent's model until it uses the end_turn tool or stops includes no tool calls in a message.\n   *\n   * Or use 'return' to end the turn.\n   *\n   * Example 1:\n   * function* handleSteps({ agentStep, prompt, params}) {\n   *   const { toolResult } = yield {\n   *     toolName: 'read_files',\n   *     input: { paths: ['file1.txt', 'file2.txt'] }\n   *   }\n   *   yield 'STEP_ALL'\n   * }\n   *\n   * Example 2:\n   * handleSteps: function* ({ agentState, prompt, params }) {\n   *   while (true) {\n   *     yield {\n   *       toolName: 'spawn_agents',\n   *       input: {\n   *         agents: [\n   *         {\n   *           agent_type: 'thinker',\n   *           prompt: 'Think deeply about the user request',\n   *         },\n   *       ],\n   *     },\n   *   }\n   *   yield 'STEP'\n   * }\n   * }\n   */\n  handleSteps?: (\n    context: AgentStepContext,\n  ) => Generator<\n    ToolCall | 'STEP' | 'STEP_ALL',\n    void,\n    { agentState: AgentState; toolResult: string | undefined }\n  >\n}\n\n// ============================================================================\n// Supporting Types\n// ============================================================================\n\nexport interface AgentState {\n  agentId: string\n  parentId: string\n  messageHistory: Message[]\n}\n\n/**\n * Message in conversation history\n */\nexport interface Message {\n  role: 'user' | 'assistant'\n  content: string\n}\n\n/**\n * Context provided to handleSteps generator function\n */\nexport interface AgentStepContext {\n  agentState: AgentState\n  prompt?: string\n  params?: Record<string, any>\n}\n\n/**\n * Tool call object for handleSteps generator\n */\nexport type ToolCall<T extends ToolName = ToolName> = {\n  [K in T]: {\n    toolName: K\n    input: Tools.GetToolParams<K>\n  }\n}[T]\n\n/**\n * JSON Schema definition (for prompt schema or output schema)\n */\nexport type JsonSchema = {\n  type?:\n    | 'object'\n    | 'array'\n    | 'string'\n    | 'number'\n    | 'boolean'\n    | 'null'\n    | 'integer'\n  description?: string\n  properties?: Record<string, JsonSchema | boolean>\n  required?: string[]\n  enum?: Array<string | number | boolean | null>\n  [k: string]: unknown\n}\nexport type JsonObjectSchema = JsonSchema & { type: 'object' }\n\n// ============================================================================\n// Available Tools\n// ============================================================================\n\n/**\n * File operation tools\n */\nexport type FileTools =\n  | 'read_files'\n  | 'write_file'\n  | 'str_replace'\n  | 'find_files'\n\n/**\n * Code analysis tools\n */\nexport type CodeAnalysisTools = 'code_search' | 'find_files'\n\n/**\n * Terminal and system tools\n */\nexport type TerminalTools = 'run_terminal_command' | 'run_file_change_hooks'\n\n/**\n * Web and browser tools\n */\nexport type WebTools = 'web_search' | 'read_docs'\n\n/**\n * Agent management tools\n */\nexport type AgentTools = 'spawn_agents' | 'set_messages' | 'add_message'\n\n/**\n * Planning and organization tools\n */\nexport type PlanningTools = 'think_deeply'\n\n/**\n * Output and control tools\n */\nexport type OutputTools = 'set_output' | 'end_turn'\n\n/**\n * Common tool combinations for convenience\n */\nexport type FileEditingTools = FileTools | 'end_turn'\nexport type ResearchTools = WebTools | 'write_file' | 'end_turn'\nexport type CodeAnalysisToolSet = FileTools | CodeAnalysisTools | 'end_turn'\n\n// ============================================================================\n// Available Models (see: https://openrouter.ai/models)\n// ============================================================================\n\n/**\n * AI models available for agents. Pick from our selection of recommended models or choose any model in OpenRouter.\n *\n * See available models at https://openrouter.ai/models\n */\nexport type ModelName =\n  // Recommended Models\n\n  // OpenAI\n  | 'openai/gpt-5'\n  | 'openai/gpt-5-mini'\n  | 'openai/gpt-5-nano'\n\n  // Anthropic\n  | 'anthropic/claude-4-sonnet-20250522'\n  | 'anthropic/claude-opus-4.1'\n\n  // Gemini\n  | 'google/gemini-2.5-pro'\n  | 'google/gemini-2.5-flash'\n  | 'google/gemini-2.5-flash-lite'\n\n  // X-AI\n  | 'x-ai/grok-4-07-09'\n\n  // Qwen\n  | 'qwen/qwen3-coder'\n  | 'qwen/qwen3-coder:nitro'\n  | 'qwen/qwen3-235b-a22b-2507'\n  | 'qwen/qwen3-235b-a22b-2507:nitro'\n  | 'qwen/qwen3-235b-a22b-thinking-2507'\n  | 'qwen/qwen3-235b-a22b-thinking-2507:nitro'\n  | 'qwen/qwen3-30b-a3b'\n  | 'qwen/qwen3-30b-a3b:nitro'\n\n  // DeepSeek\n  | 'deepseek/deepseek-chat-v3-0324'\n  | 'deepseek/deepseek-chat-v3-0324:nitro'\n  | 'deepseek/deepseek-r1-0528'\n  | 'deepseek/deepseek-r1-0528:nitro'\n\n  // Other open source models\n  | 'moonshotai/kimi-k2'\n  | 'moonshotai/kimi-k2:nitro'\n  | 'z-ai/glm-4.5'\n  | 'z-ai/glm-4.5:nitro'\n  | (string & {})\n\nimport type * as Tools from './tools'\nexport type { Tools }\ntype ToolName = Tools.ToolName\n"},{"path":"common/src/types/agent-template.ts","preContent":"import type { Model } from '../constants'\nimport type { AgentState, AgentTemplateType } from './session-state'\nimport type { ToolCall } from '../templates/initial-agents-dir/types/agent-definition'\nimport type { ToolName } from '../tools/constants'\nimport type { OpenRouterProviderOptions } from '@codebuff/internal/openrouter-ai-sdk'\nimport type { z } from 'zod/v4'\n\nexport type AgentTemplate<\n  P = string | undefined,\n  T = Record<string, any> | undefined,\n> = {\n  id: AgentTemplateType\n  displayName: string\n  model: Model\n  reasoningOptions?: OpenRouterProviderOptions['reasoning']\n\n  toolNames: ToolName[]\n  spawnableAgents: AgentTemplateType[]\n\n  spawnerPrompt?: string\n  systemPrompt: string\n  instructionsPrompt: string\n  stepPrompt: string\n  parentInstructions?: Record<string, string>\n\n  // Required parameters for spawning this agent.\n  inputSchema: {\n    prompt?: z.ZodSchema<P>\n    params?: z.ZodSchema<T>\n  }\n  includeMessageHistory: boolean\n  outputMode: 'last_message' | 'all_messages' | 'structured_output'\n  outputSchema?: z.ZodSchema<any>\n\n  handleSteps?: StepHandler<P, T> | string // Function or string of the generator code for running in a sandbox\n}\n\nexport type StepGenerator = Generator<\n  Omit<ToolCall, 'toolCallId'> | 'STEP' | 'STEP_ALL', // Generic tool call type\n  void,\n  { agentState: AgentState; toolResult: string | undefined }\n>\n\nexport type StepHandler<\n  P = string | undefined,\n  T = Record<string, any> | undefined,\n> = (params: { agentState: AgentState; prompt: P; params: T }) => StepGenerator\n","postContent":"import type { Model } from '../constants'\nimport type { AgentState, AgentTemplateType } from './session-state'\nimport type { ToolCall } from '../templates/initial-agents-dir/types/agent-definition'\nimport type { ToolName } from '../tools/constants'\nimport type { OpenRouterProviderOptions } from '@codebuff/internal/openrouter-ai-sdk'\nimport type { z } from 'zod/v4'\n\nexport type AgentTemplate<\n  P = string | undefined,\n  T = Record<string, any> | undefined,\n> = {\n  id: AgentTemplateType\n  displayName: string\n  model: Model\n  reasoningOptions?: OpenRouterProviderOptions['reasoning']\n\n  toolNames: (ToolName | (string & {}))[]\n  spawnableAgents: AgentTemplateType[]\n\n  spawnerPrompt?: string\n  systemPrompt: string\n  instructionsPrompt: string\n  stepPrompt: string\n  parentInstructions?: Record<string, string>\n\n  // Required parameters for spawning this agent.\n  inputSchema: {\n    prompt?: z.ZodSchema<P>\n    params?: z.ZodSchema<T>\n  }\n  includeMessageHistory: boolean\n  outputMode: 'last_message' | 'all_messages' | 'structured_output'\n  outputSchema?: z.ZodSchema<any>\n\n  handleSteps?: StepHandler<P, T> | string // Function or string of the generator code for running in a sandbox\n}\n\nexport type StepGenerator = Generator<\n  Omit<ToolCall, 'toolCallId'> | 'STEP' | 'STEP_ALL', // Generic tool call type\n  void,\n  { agentState: AgentState; toolResult: string | undefined }\n>\n\nexport type StepHandler<\n  P = string | undefined,\n  T = Record<string, any> | undefined,\n> = (params: { agentState: AgentState; prompt: P; params: T }) => StepGenerator\n"},{"path":"common/src/types/dynamic-agent-template.ts","preContent":"import { z } from 'zod/v4'\n\nimport { ALLOWED_MODEL_PREFIXES, models } from '../constants'\nimport { toolNames } from '../tools/constants'\n\nimport type { JSONSchema } from 'zod/v4/core'\n\n// Filter models to only include those that begin with allowed prefixes\nconst filteredModels = Object.values(models).filter((model) =>\n  ALLOWED_MODEL_PREFIXES.some((prefix) => model.startsWith(prefix)),\n)\n\nif (filteredModels.length === 0) {\n  throw new Error('No valid models found with allowed prefixes')\n}\n\n// Simplified JSON Schema definition - supports object schemas with nested properties\nconst JsonSchemaSchema: z.ZodType<\n  JSONSchema.BaseSchema,\n  JSONSchema.BaseSchema\n> = z.lazy(() =>\n  z.looseObject({\n    type: z\n      .enum([\n        'object',\n        'array',\n        'string',\n        'number',\n        'boolean',\n        'null',\n        'integer',\n      ])\n      .optional(),\n    description: z.string().optional(),\n    properties: z\n      .record(z.string(), JsonSchemaSchema.or(z.boolean()))\n      .optional(),\n    required: z.string().array().optional(),\n    enum: z\n      .union([z.string(), z.number(), z.boolean(), z.null()])\n      .array()\n      .optional(),\n  }),\n)\nconst JsonObjectSchemaSchema = z.intersection(\n  JsonSchemaSchema,\n  z.object({ type: z.literal('object') }),\n)\n\n// Schema for the combined inputSchema object\nconst InputSchemaObjectSchema = z\n  .looseObject({\n    prompt: z\n      .looseObject({\n        type: z.literal('string'),\n        description: z.string().optional(),\n      })\n      .optional(), // Optional JSON schema for prompt validation\n    params: JsonObjectSchemaSchema.optional(), // Optional JSON schema for params validation\n  })\n  .optional()\n\n// Schema for prompt fields that can be either a string or a path reference\nconst PromptFieldSchema = z.union([\n  z.string(), // Direct string content\n  z.object({ path: z.string() }), // Path reference to external file\n])\nexport type PromptField = z.infer<typeof PromptFieldSchema>\n\nconst functionSchema = <T extends z.core.$ZodFunction>(schema: T) =>\n  z.custom<Parameters<T['implement']>[0]>((fn: any) => schema.implement(fn))\n// Schema for validating handleSteps function signature\nconst HandleStepsSchema = functionSchema(\n  z.function({\n    input: [\n      z.object({\n        agentState: z.object({\n          agentId: z.string(),\n          parentId: z.string(),\n          messageHistory: z.array(z.any()),\n        }),\n        prompt: z.string().optional(),\n        params: z.any().optional(),\n      }),\n    ],\n    output: z.any(),\n  }),\n).optional()\n\n// Validates the Typescript template file.\nexport const DynamicAgentDefinitionSchema = z.object({\n  id: z\n    .string()\n    .regex(\n      /^[a-z0-9-]+$/,\n      'Agent ID must contain only lowercase letters, numbers, and hyphens',\n    ), // The unique identifier for this agent\n  version: z.string().optional(),\n  publisher: z.string().optional(),\n\n  // Required fields for new agents\n  displayName: z.string(),\n  model: z.string(),\n  reasoningOptions: z\n    .object({\n      enabled: z.boolean().optional(),\n      exclude: z.boolean().optional(),\n    })\n    .and(\n      z.union([\n        z.object({ max_tokens: z.number() }),\n        z.object({ effort: z.enum(['high', 'medium', 'low']) }),\n      ]),\n    )\n    .optional(),\n\n  // Tools and spawnable agents\n  toolNames: z.array(z.enum(toolNames)).optional().default([]),\n  spawnableAgents: z.array(z.string()).optional().default([]),\n\n  // Input and output\n  inputSchema: InputSchemaObjectSchema,\n  includeMessageHistory: z.boolean().default(false),\n  outputMode: z\n    .enum(['last_message', 'all_messages', 'structured_output'])\n    .default('last_message'),\n  outputSchema: JsonObjectSchemaSchema.optional(), // Optional JSON schema for output validation\n\n  // Prompts\n  spawnerPrompt: z.string().optional(),\n  systemPrompt: z.string().optional(),\n  instructionsPrompt: z.string().optional(),\n  stepPrompt: z.string().optional(),\n\n  // Optional generator function for programmatic agents\n  handleSteps: z.union([z.string(), HandleStepsSchema]).optional(),\n})\nexport type DynamicAgentDefinition = z.input<\n  typeof DynamicAgentDefinitionSchema\n>\nexport type DynamicAgentDefinitionParsed = z.infer<\n  typeof DynamicAgentDefinitionSchema\n>\n\nexport const DynamicAgentTemplateSchema = DynamicAgentDefinitionSchema.extend({\n  systemPrompt: z.string(),\n  instructionsPrompt: z.string(),\n  stepPrompt: z.string(),\n  handleSteps: z.string().optional(), // Converted to string after processing\n})\n  .refine(\n    (data) => {\n      // If outputSchema is provided, outputMode must be explicitly set to 'structured_output'\n      if (data.outputSchema && data.outputMode !== 'structured_output') {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"outputSchema requires outputMode to be explicitly set to 'structured_output'.\",\n      path: ['outputMode'],\n    },\n  )\n  .refine(\n    (data) => {\n      // If outputMode is 'structured_output', 'set_output' tool must be included\n      if (\n        data.outputMode === 'structured_output' &&\n        !data.toolNames.includes('set_output')\n      ) {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"outputMode 'structured_output' requires the 'set_output' tool. Add 'set_output' to toolNames.\",\n      path: ['toolNames'],\n    },\n  )\n  .refine(\n    (data) => {\n      // If 'set_output' tool is included, outputMode must be 'structured_output'\n      if (\n        data.toolNames.includes('set_output') &&\n        data.outputMode !== 'structured_output'\n      ) {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"'set_output' tool requires outputMode to be 'structured_output'. Change outputMode to 'structured_output' or remove 'set_output' from toolNames.\",\n      path: ['outputMode'],\n    },\n  )\n  .refine(\n    (data) => {\n      // If spawnableAgents array is non-empty, 'spawn_agents' tool must be included\n      if (\n        data.spawnableAgents.length > 0 &&\n        !data.toolNames.includes('spawn_agents')\n      ) {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"Non-empty spawnableAgents array requires the 'spawn_agents' tool. Add 'spawn_agents' to toolNames or remove spawnableAgents.\",\n      path: ['toolNames'],\n    },\n  )\nexport type DynamicAgentTemplate = z.infer<typeof DynamicAgentTemplateSchema>\n","postContent":"import { z } from 'zod/v4'\n\nimport { ALLOWED_MODEL_PREFIXES, models } from '../constants'\n\nimport type { JSONSchema } from 'zod/v4/core'\n\n// Filter models to only include those that begin with allowed prefixes\nconst filteredModels = Object.values(models).filter((model) =>\n  ALLOWED_MODEL_PREFIXES.some((prefix) => model.startsWith(prefix)),\n)\n\nif (filteredModels.length === 0) {\n  throw new Error('No valid models found with allowed prefixes')\n}\n\n// Simplified JSON Schema definition - supports object schemas with nested properties\nconst JsonSchemaSchema: z.ZodType<\n  JSONSchema.BaseSchema,\n  JSONSchema.BaseSchema\n> = z.lazy(() =>\n  z.looseObject({\n    type: z\n      .enum([\n        'object',\n        'array',\n        'string',\n        'number',\n        'boolean',\n        'null',\n        'integer',\n      ])\n      .optional(),\n    description: z.string().optional(),\n    properties: z\n      .record(z.string(), JsonSchemaSchema.or(z.boolean()))\n      .optional(),\n    required: z.string().array().optional(),\n    enum: z\n      .union([z.string(), z.number(), z.boolean(), z.null()])\n      .array()\n      .optional(),\n  }),\n)\nconst JsonObjectSchemaSchema = z.intersection(\n  JsonSchemaSchema,\n  z.object({ type: z.literal('object') }),\n)\n\n// Schema for the combined inputSchema object\nconst InputSchemaObjectSchema = z\n  .looseObject({\n    prompt: z\n      .looseObject({\n        type: z.literal('string'),\n        description: z.string().optional(),\n      })\n      .optional(), // Optional JSON schema for prompt validation\n    params: JsonObjectSchemaSchema.optional(), // Optional JSON schema for params validation\n  })\n  .optional()\n\n// Schema for prompt fields that can be either a string or a path reference\nconst PromptFieldSchema = z.union([\n  z.string(), // Direct string content\n  z.object({ path: z.string() }), // Path reference to external file\n])\nexport type PromptField = z.infer<typeof PromptFieldSchema>\n\nconst functionSchema = <T extends z.core.$ZodFunction>(schema: T) =>\n  z.custom<Parameters<T['implement']>[0]>((fn: any) => schema.implement(fn))\n// Schema for validating handleSteps function signature\nconst HandleStepsSchema = functionSchema(\n  z.function({\n    input: [\n      z.object({\n        agentState: z.object({\n          agentId: z.string(),\n          parentId: z.string(),\n          messageHistory: z.array(z.any()),\n        }),\n        prompt: z.string().optional(),\n        params: z.any().optional(),\n      }),\n    ],\n    output: z.any(),\n  }),\n).optional()\n\n// Validates the Typescript template file.\nexport const DynamicAgentDefinitionSchema = z.object({\n  id: z\n    .string()\n    .regex(\n      /^[a-z0-9-]+$/,\n      'Agent ID must contain only lowercase letters, numbers, and hyphens',\n    ), // The unique identifier for this agent\n  version: z.string().optional(),\n  publisher: z.string().optional(),\n\n  // Required fields for new agents\n  displayName: z.string(),\n  model: z.string(),\n  reasoningOptions: z\n    .object({\n      enabled: z.boolean().optional(),\n      exclude: z.boolean().optional(),\n    })\n    .and(\n      z.union([\n        z.object({ max_tokens: z.number() }),\n        z.object({ effort: z.enum(['high', 'medium', 'low']) }),\n      ]),\n    )\n    .optional(),\n\n  // Tools and spawnable agents\n  toolNames: z.string().array().optional().default([]),\n  spawnableAgents: z.array(z.string()).optional().default([]),\n\n  // Input and output\n  inputSchema: InputSchemaObjectSchema,\n  includeMessageHistory: z.boolean().default(false),\n  outputMode: z\n    .enum(['last_message', 'all_messages', 'structured_output'])\n    .default('last_message'),\n  outputSchema: JsonObjectSchemaSchema.optional(), // Optional JSON schema for output validation\n\n  // Prompts\n  spawnerPrompt: z.string().optional(),\n  systemPrompt: z.string().optional(),\n  instructionsPrompt: z.string().optional(),\n  stepPrompt: z.string().optional(),\n\n  // Optional generator function for programmatic agents\n  handleSteps: z.union([z.string(), HandleStepsSchema]).optional(),\n})\nexport type DynamicAgentDefinition = z.input<\n  typeof DynamicAgentDefinitionSchema\n>\nexport type DynamicAgentDefinitionParsed = z.infer<\n  typeof DynamicAgentDefinitionSchema\n>\n\nexport const DynamicAgentTemplateSchema = DynamicAgentDefinitionSchema.extend({\n  systemPrompt: z.string(),\n  instructionsPrompt: z.string(),\n  stepPrompt: z.string(),\n  handleSteps: z.string().optional(), // Converted to string after processing\n})\n  .refine(\n    (data) => {\n      // If outputSchema is provided, outputMode must be explicitly set to 'structured_output'\n      if (data.outputSchema && data.outputMode !== 'structured_output') {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"outputSchema requires outputMode to be explicitly set to 'structured_output'.\",\n      path: ['outputMode'],\n    },\n  )\n  .refine(\n    (data) => {\n      // If outputMode is 'structured_output', 'set_output' tool must be included\n      if (\n        data.outputMode === 'structured_output' &&\n        !data.toolNames.includes('set_output')\n      ) {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"outputMode 'structured_output' requires the 'set_output' tool. Add 'set_output' to toolNames.\",\n      path: ['toolNames'],\n    },\n  )\n  .refine(\n    (data) => {\n      // If 'set_output' tool is included, outputMode must be 'structured_output'\n      if (\n        data.toolNames.includes('set_output') &&\n        data.outputMode !== 'structured_output'\n      ) {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"'set_output' tool requires outputMode to be 'structured_output'. Change outputMode to 'structured_output' or remove 'set_output' from toolNames.\",\n      path: ['outputMode'],\n    },\n  )\n  .refine(\n    (data) => {\n      // If spawnableAgents array is non-empty, 'spawn_agents' tool must be included\n      if (\n        data.spawnableAgents.length > 0 &&\n        !data.toolNames.includes('spawn_agents')\n      ) {\n        return false\n      }\n      return true\n    },\n    {\n      message:\n        \"Non-empty spawnableAgents array requires the 'spawn_agents' tool. Add 'spawn_agents' to toolNames or remove spawnableAgents.\",\n      path: ['toolNames'],\n    },\n  )\nexport type DynamicAgentTemplate = z.infer<typeof DynamicAgentTemplateSchema>\n"},{"path":"common/src/util/file.ts","preContent":"import * as fs from 'fs'\nimport * as os from 'os'\nimport * as path from 'path'\n\nimport { z } from 'zod/v4'\n\nimport { CodebuffConfigSchema } from '../json-config/constants'\nimport { DynamicAgentTemplateSchema } from '../types/dynamic-agent-template'\n\nexport const FileTreeNodeSchema: z.ZodType<FileTreeNode> = z.object({\n  name: z.string(),\n  type: z.enum(['file', 'directory']),\n  children: z.lazy(() => z.array(FileTreeNodeSchema).optional()),\n  filePath: z.string(),\n})\n\nexport interface FileTreeNode {\n  name: string\n  type: 'file' | 'directory'\n  filePath: string\n  lastReadTime?: number\n  children?: FileTreeNode[]\n}\n\nexport interface DirectoryNode extends FileTreeNode {\n  type: 'directory'\n  children: FileTreeNode[]\n}\n\nexport interface FileNode extends FileTreeNode {\n  type: 'file'\n  lastReadTime: number\n}\n\nexport const FileVersionSchema = z.object({\n  path: z.string(),\n  content: z.string(),\n})\n\nexport type FileVersion = z.infer<typeof FileVersionSchema>\n\nexport const ProjectFileContextSchema = z.object({\n  projectRoot: z.string(),\n  cwd: z.string(),\n  fileTree: z.array(z.custom<FileTreeNode>()),\n  fileTokenScores: z.record(z.string(), z.record(z.string(), z.number())),\n  tokenCallers: z\n    .record(z.string(), z.record(z.string(), z.array(z.string())))\n    .optional(),\n  knowledgeFiles: z.record(z.string(), z.string()),\n  userKnowledgeFiles: z.record(z.string(), z.string()).optional(),\n  agentTemplates: z.record(z.string(), z.any()).default({}),\n  codebuffConfig: CodebuffConfigSchema.optional(),\n  gitChanges: z.object({\n    status: z.string(),\n    diff: z.string(),\n    diffCached: z.string(),\n    lastCommitMessages: z.string(),\n  }),\n  changesSinceLastChat: z.record(z.string(), z.string()),\n  shellConfigFiles: z.record(z.string(), z.string()),\n  systemInfo: z.object({\n    platform: z.string(),\n    shell: z.string(),\n    nodeVersion: z.string(),\n    arch: z.string(),\n    homedir: z.string(),\n    cpus: z.number(),\n  }),\n  fileVersions: z.array(z.array(FileVersionSchema)).optional(), // Keep temporarily for migration\n})\n\nexport type ProjectFileContext = z.infer<typeof ProjectFileContextSchema>\n\nexport const fileRegex =\n  /<write_file>\\s*<path>([^<]+)<\\/path>\\s*<content>([\\s\\S]*?)<\\/content>\\s*<\\/write_file>/g\nexport const fileWithNoPathRegex = /<write_file>([\\s\\S]*?)<\\/write_file>/g\n\nexport const parseFileBlocks = (fileBlocks: string) => {\n  let fileMatch\n  const files: Record<string, string> = {}\n  while ((fileMatch = fileRegex.exec(fileBlocks)) !== null) {\n    const [, filePath, fileContent] = fileMatch\n    files[filePath] = fileContent.startsWith('\\n')\n      ? fileContent.slice(1)\n      : fileContent\n  }\n  return files\n}\n\nexport const getStubProjectFileContext = (): ProjectFileContext => ({\n  projectRoot: '',\n  cwd: '',\n  fileTree: [],\n  fileTokenScores: {},\n  knowledgeFiles: {},\n  userKnowledgeFiles: {},\n  agentTemplates: {},\n  codebuffConfig: undefined,\n  gitChanges: {\n    status: '',\n    diff: '',\n    diffCached: '',\n    lastCommitMessages: '',\n  },\n  changesSinceLastChat: {},\n  shellConfigFiles: {},\n  systemInfo: {\n    platform: '',\n    shell: '',\n    nodeVersion: '',\n    arch: '',\n    homedir: '',\n    cpus: 0,\n  },\n})\n\nexport const createMarkdownFileBlock = (filePath: string, content: string) => {\n  return `\\`\\`\\`${filePath}\\n${content}\\n\\`\\`\\``\n}\n\nexport const parseMarkdownCodeBlock = (content: string) => {\n  const match = content.match(/^```(?:[a-zA-Z]+)?\\n([\\s\\S]*)\\n```$/)\n  if (match) {\n    return match[1] + '\\n'\n  }\n  return content\n}\n\nexport const createSearchReplaceBlock = (search: string, replace: string) => {\n  return `<<<<<<< SEARCH\\n${search}\\n=======\\n${replace}\\n>>>>>>> REPLACE`\n}\n\nexport function printFileTree(\n  nodes: FileTreeNode[],\n  depth: number = 0,\n): string {\n  let result = ''\n  const indentation = ' '.repeat(depth)\n  for (const node of nodes) {\n    result += `${indentation}${node.name}${node.type === 'directory' ? '/' : ''}\\n`\n    if (node.type === 'directory' && node.children) {\n      result += printFileTree(node.children, depth + 1)\n    }\n  }\n  return result\n}\n\nexport function printFileTreeWithTokens(\n  nodes: FileTreeNode[],\n  fileTokenScores: Record<string, Record<string, number>>,\n  path: string[] = [],\n): string {\n  let result = ''\n  const depth = path.length\n  const indentToken = ' '\n  const indentation = indentToken.repeat(depth)\n  const indentationWithFile = indentToken.repeat(depth + 1)\n  for (const node of nodes) {\n    if (\n      node.type === 'directory' &&\n      (!node.children || node.children.length === 0)\n    ) {\n      // Skip empty directories\n      continue\n    }\n    result += `${indentation}${node.name}${node.type === 'directory' ? '/' : ''}`\n    path.push(node.name)\n    const filePath = path.join('/')\n    const tokenScores = fileTokenScores[filePath]\n    if (node.type === 'file' && tokenScores) {\n      const tokens = Object.keys(tokenScores)\n      if (tokens.length > 0) {\n        result += `\\n${indentationWithFile}${tokens.join(' ')}`\n      }\n    }\n    result += '\\n'\n    if (node.type === 'directory' && node.children) {\n      result += printFileTreeWithTokens(node.children, fileTokenScores, path)\n    }\n    path.pop()\n  }\n  return result\n}\n\n/**\n * Ensures the given file contents ends with a newline character.\n * @param contents - The file contents\n * @returns the file contents with a newline character.\n */\nexport const ensureEndsWithNewline = (\n  contents: string | null,\n): string | null => {\n  if (contents === null || contents === '') {\n    // Leave empty file as is\n    return contents\n  }\n  if (contents.endsWith('\\n')) {\n    return contents\n  }\n  return contents + '\\n'\n}\n\nexport const ensureDirectoryExists = (baseDir: string) => {\n  if (!fs.existsSync(baseDir)) {\n    fs.mkdirSync(baseDir, { recursive: true })\n  }\n}\n\n/**\n * Removes markdown code block syntax if present, including any language tag\n */\nexport const cleanMarkdownCodeBlock = (content: string): string => {\n  const cleanResponse = content.match(/^```(?:[a-zA-Z]+)?\\n([\\s\\S]*)\\n```$/)\n    ? content.replace(/^```(?:[a-zA-Z]+)?\\n/, '').replace(/\\n```$/, '')\n    : content\n  return cleanResponse\n}\n\nexport function isValidFilePath(path: string) {\n  if (!path) return false\n\n  // Check for whitespace\n  if (/\\s/.test(path)) return false\n\n  // Check for invalid characters\n  const invalidChars = /[<>:\"|?*\\x00-\\x1F]/g\n  if (invalidChars.test(path)) return false\n\n  return true\n}\n\nexport function isDir(p: string): boolean {\n  try {\n    return fs.statSync(p).isDirectory()\n  } catch {\n    return false\n  }\n}\n\n/**\n * Returns true if the `toPath` is a subdirectory of `fromPath`.\n */\nexport function isSubdir(fromPath: string, toPath: string) {\n  const resolvedFrom = path.resolve(fromPath)\n  const resolvedTo = path.resolve(toPath)\n\n  if (process.platform === 'win32') {\n    const fromDrive = path.parse(resolvedFrom).root.toLowerCase()\n    const toDrive = path.parse(resolvedTo).root.toLowerCase()\n    if (fromDrive !== toDrive) {\n      return false\n    }\n  }\n\n  return !path.relative(resolvedFrom, resolvedTo).startsWith('..')\n}\n\nexport function isValidProjectRoot(dir: string): boolean {\n  return !isSubdir(dir, os.homedir())\n}\n","postContent":"import * as fs from 'fs'\nimport * as os from 'os'\nimport * as path from 'path'\n\nimport { z } from 'zod/v4'\n\nimport { CodebuffConfigSchema } from '../json-config/constants'\n\nexport const FileTreeNodeSchema: z.ZodType<FileTreeNode> = z.object({\n  name: z.string(),\n  type: z.enum(['file', 'directory']),\n  children: z.lazy(() => z.array(FileTreeNodeSchema).optional()),\n  filePath: z.string(),\n})\n\nexport interface FileTreeNode {\n  name: string\n  type: 'file' | 'directory'\n  filePath: string\n  lastReadTime?: number\n  children?: FileTreeNode[]\n}\n\nexport interface DirectoryNode extends FileTreeNode {\n  type: 'directory'\n  children: FileTreeNode[]\n}\n\nexport interface FileNode extends FileTreeNode {\n  type: 'file'\n  lastReadTime: number\n}\n\nexport const FileVersionSchema = z.object({\n  path: z.string(),\n  content: z.string(),\n})\n\nexport type FileVersion = z.infer<typeof FileVersionSchema>\n\nexport const customToolDefinitionsSchema = z\n  .record(\n    z.string(),\n    z.object({\n      inputJsonSchema: z.any(),\n      endsAgentStep: z.boolean().optional().default(false),\n      description: z.string().optional(),\n      exampleInputs: z.record(z.string(), z.any()).array().optional(),\n    }),\n  )\n  .default({})\nexport type CustomToolDefinitions = z.input<typeof customToolDefinitionsSchema>\n\nexport const ProjectFileContextSchema = z.object({\n  projectRoot: z.string(),\n  cwd: z.string(),\n  fileTree: z.array(z.custom<FileTreeNode>()),\n  fileTokenScores: z.record(z.string(), z.record(z.string(), z.number())),\n  tokenCallers: z\n    .record(z.string(), z.record(z.string(), z.array(z.string())))\n    .optional(),\n  knowledgeFiles: z.record(z.string(), z.string()),\n  userKnowledgeFiles: z.record(z.string(), z.string()).optional(),\n  agentTemplates: z.record(z.string(), z.any()).default({}),\n  customToolDefinitions: customToolDefinitionsSchema,\n  codebuffConfig: CodebuffConfigSchema.optional(),\n  gitChanges: z.object({\n    status: z.string(),\n    diff: z.string(),\n    diffCached: z.string(),\n    lastCommitMessages: z.string(),\n  }),\n  changesSinceLastChat: z.record(z.string(), z.string()),\n  shellConfigFiles: z.record(z.string(), z.string()),\n  systemInfo: z.object({\n    platform: z.string(),\n    shell: z.string(),\n    nodeVersion: z.string(),\n    arch: z.string(),\n    homedir: z.string(),\n    cpus: z.number(),\n  }),\n})\n\nexport type ProjectFileContext = z.infer<typeof ProjectFileContextSchema>\n\nexport const fileRegex =\n  /<write_file>\\s*<path>([^<]+)<\\/path>\\s*<content>([\\s\\S]*?)<\\/content>\\s*<\\/write_file>/g\nexport const fileWithNoPathRegex = /<write_file>([\\s\\S]*?)<\\/write_file>/g\n\nexport const parseFileBlocks = (fileBlocks: string) => {\n  let fileMatch\n  const files: Record<string, string> = {}\n  while ((fileMatch = fileRegex.exec(fileBlocks)) !== null) {\n    const [, filePath, fileContent] = fileMatch\n    files[filePath] = fileContent.startsWith('\\n')\n      ? fileContent.slice(1)\n      : fileContent\n  }\n  return files\n}\n\nexport const getStubProjectFileContext = (): ProjectFileContext => ({\n  projectRoot: '',\n  cwd: '',\n  fileTree: [],\n  fileTokenScores: {},\n  knowledgeFiles: {},\n  userKnowledgeFiles: {},\n  agentTemplates: {},\n  customToolDefinitions: {},\n  codebuffConfig: undefined,\n  gitChanges: {\n    status: '',\n    diff: '',\n    diffCached: '',\n    lastCommitMessages: '',\n  },\n  changesSinceLastChat: {},\n  shellConfigFiles: {},\n  systemInfo: {\n    platform: '',\n    shell: '',\n    nodeVersion: '',\n    arch: '',\n    homedir: '',\n    cpus: 0,\n  },\n})\n\nexport const createMarkdownFileBlock = (filePath: string, content: string) => {\n  return `\\`\\`\\`${filePath}\\n${content}\\n\\`\\`\\``\n}\n\nexport const parseMarkdownCodeBlock = (content: string) => {\n  const match = content.match(/^```(?:[a-zA-Z]+)?\\n([\\s\\S]*)\\n```$/)\n  if (match) {\n    return match[1] + '\\n'\n  }\n  return content\n}\n\nexport const createSearchReplaceBlock = (search: string, replace: string) => {\n  return `<<<<<<< SEARCH\\n${search}\\n=======\\n${replace}\\n>>>>>>> REPLACE`\n}\n\nexport function printFileTree(\n  nodes: FileTreeNode[],\n  depth: number = 0,\n): string {\n  let result = ''\n  const indentation = ' '.repeat(depth)\n  for (const node of nodes) {\n    result += `${indentation}${node.name}${node.type === 'directory' ? '/' : ''}\\n`\n    if (node.type === 'directory' && node.children) {\n      result += printFileTree(node.children, depth + 1)\n    }\n  }\n  return result\n}\n\nexport function printFileTreeWithTokens(\n  nodes: FileTreeNode[],\n  fileTokenScores: Record<string, Record<string, number>>,\n  path: string[] = [],\n): string {\n  let result = ''\n  const depth = path.length\n  const indentToken = ' '\n  const indentation = indentToken.repeat(depth)\n  const indentationWithFile = indentToken.repeat(depth + 1)\n  for (const node of nodes) {\n    if (\n      node.type === 'directory' &&\n      (!node.children || node.children.length === 0)\n    ) {\n      // Skip empty directories\n      continue\n    }\n    result += `${indentation}${node.name}${node.type === 'directory' ? '/' : ''}`\n    path.push(node.name)\n    const filePath = path.join('/')\n    const tokenScores = fileTokenScores[filePath]\n    if (node.type === 'file' && tokenScores) {\n      const tokens = Object.keys(tokenScores)\n      if (tokens.length > 0) {\n        result += `\\n${indentationWithFile}${tokens.join(' ')}`\n      }\n    }\n    result += '\\n'\n    if (node.type === 'directory' && node.children) {\n      result += printFileTreeWithTokens(node.children, fileTokenScores, path)\n    }\n    path.pop()\n  }\n  return result\n}\n\n/**\n * Ensures the given file contents ends with a newline character.\n * @param contents - The file contents\n * @returns the file contents with a newline character.\n */\nexport const ensureEndsWithNewline = (\n  contents: string | null,\n): string | null => {\n  if (contents === null || contents === '') {\n    // Leave empty file as is\n    return contents\n  }\n  if (contents.endsWith('\\n')) {\n    return contents\n  }\n  return contents + '\\n'\n}\n\nexport const ensureDirectoryExists = (baseDir: string) => {\n  if (!fs.existsSync(baseDir)) {\n    fs.mkdirSync(baseDir, { recursive: true })\n  }\n}\n\n/**\n * Removes markdown code block syntax if present, including any language tag\n */\nexport const cleanMarkdownCodeBlock = (content: string): string => {\n  const cleanResponse = content.match(/^```(?:[a-zA-Z]+)?\\n([\\s\\S]*)\\n```$/)\n    ? content.replace(/^```(?:[a-zA-Z]+)?\\n/, '').replace(/\\n```$/, '')\n    : content\n  return cleanResponse\n}\n\nexport function isValidFilePath(path: string) {\n  if (!path) return false\n\n  // Check for whitespace\n  if (/\\s/.test(path)) return false\n\n  // Check for invalid characters\n  const invalidChars = /[<>:\"|?*\\x00-\\x1F]/g\n  if (invalidChars.test(path)) return false\n\n  return true\n}\n\nexport function isDir(p: string): boolean {\n  try {\n    return fs.statSync(p).isDirectory()\n  } catch {\n    return false\n  }\n}\n\n/**\n * Returns true if the `toPath` is a subdirectory of `fromPath`.\n */\nexport function isSubdir(fromPath: string, toPath: string) {\n  const resolvedFrom = path.resolve(fromPath)\n  const resolvedTo = path.resolve(toPath)\n\n  if (process.platform === 'win32') {\n    const fromDrive = path.parse(resolvedFrom).root.toLowerCase()\n    const toDrive = path.parse(resolvedTo).root.toLowerCase()\n    if (fromDrive !== toDrive) {\n      return false\n    }\n  }\n\n  return !path.relative(resolvedFrom, resolvedTo).startsWith('..')\n}\n\nexport function isValidProjectRoot(dir: string): boolean {\n  return !isSubdir(dir, os.homedir())\n}\n"},{"path":"evals/scaffolding.ts","preContent":"import { execSync } from 'child_process'\nimport { EventEmitter } from 'events'\nimport fs from 'fs'\nimport path from 'path'\n\nimport { runAgentStep } from '@codebuff/backend/run-agent-step'\nimport { assembleLocalAgentTemplates } from '@codebuff/backend/templates/agent-registry'\nimport { getFileTokenScores } from '@codebuff/code-map/parse'\nimport { TEST_USER_ID } from '@codebuff/common/old-constants'\nimport { mockModule } from '@codebuff/common/testing/mock-modules'\nimport { applyAndRevertChanges } from '@codebuff/common/util/changes'\nimport { generateCompactId } from '@codebuff/common/util/string'\nimport { handleToolCall } from '@codebuff/npm-app/tool-handlers'\nimport { getSystemInfo } from '@codebuff/npm-app/utils/system-info'\nimport { mock } from 'bun:test'\nimport { blue } from 'picocolors'\n\nimport {\n  getAllFilePaths,\n  getProjectFileTree,\n} from '../common/src/project-file-tree'\n\nimport type {\n  requestFiles as originalRequestFiles,\n  requestToolCall as originalRequestToolCall,\n} from '@codebuff/backend/websockets/websocket-action'\nimport type { FileChanges } from '@codebuff/common/actions'\nimport type { ClientToolCall } from '@codebuff/common/tools/list'\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type {\n  AgentState,\n  AgentTemplateType,\n  SessionState,\n  ToolResult,\n} from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\nconst DEBUG_MODE = true\n\nexport type AgentStep = {\n  response: string\n  toolCalls: ClientToolCall[]\n  toolResults: ToolResult[]\n}\n\nfunction readMockFile(projectRoot: string, filePath: string): string | null {\n  const fullPath = path.join(projectRoot, filePath)\n  try {\n    return fs.readFileSync(fullPath, 'utf-8')\n  } catch (error) {\n    return null\n  }\n}\n\nlet toolCalls: ClientToolCall[] = []\nlet toolResults: ToolResult[] = []\nexport function createFileReadingMock(projectRoot: string) {\n  mockModule('@codebuff/backend/websockets/websocket-action', () => ({\n    requestFiles: ((ws: WebSocket, filePaths: string[]) => {\n      const files: Record<string, string | null> = {}\n      for (const filePath of filePaths) {\n        files[filePath] = readMockFile(projectRoot, filePath)\n      }\n      return Promise.resolve(files)\n    }) satisfies typeof originalRequestFiles,\n    requestToolCall: (async (\n      ws: WebSocket,\n      userInputId: string,\n      toolName: string,\n      input: Record<string, any>,\n      timeout: number = 30_000,\n    ): ReturnType<typeof originalRequestToolCall> => {\n      // Execute the tool call using existing tool handlers\n      const toolCall = {\n        toolCallId: generateCompactId(),\n        toolName,\n        input,\n      }\n      toolCalls.push(toolCall as ClientToolCall)\n      try {\n        const toolResult = await handleToolCall(toolCall as any)\n        toolResults.push({\n          toolName: toolCall.toolName,\n          toolCallId: toolCall.toolCallId,\n          output: toolResult.output,\n        })\n\n        // Send successful response back to backend\n        return {\n          success: true,\n          output: toolResult.output,\n        }\n      } catch (error) {\n        // Send error response back to backend\n        const resultString =\n          error instanceof Error ? error.message : String(error)\n        toolResults.push({\n          toolName: toolCall.toolName,\n          toolCallId: toolCall.toolCallId,\n          output: { type: 'text', value: resultString },\n        })\n        return {\n          success: false,\n          error: resultString,\n        }\n      }\n    }) satisfies typeof originalRequestToolCall,\n  }))\n}\n\nexport async function getProjectFileContext(\n  projectPath: string,\n): Promise<ProjectFileContext> {\n  const fileTree = getProjectFileTree(projectPath)\n  const allFilePaths = getAllFilePaths(fileTree)\n  const knowledgeFilePaths = allFilePaths.filter((filePath) =>\n    filePath.endsWith('knowledge.md'),\n  )\n  const knowledgeFiles: Record<string, string> = {}\n  for (const filePath of knowledgeFilePaths) {\n    const content = readMockFile(projectPath, filePath)\n    if (content !== null) {\n      knowledgeFiles[filePath] = content\n    }\n  }\n  const fileTokenScores = (await getFileTokenScores(projectPath, allFilePaths))\n    .tokenScores\n  return {\n    projectRoot: projectPath,\n    cwd: projectPath,\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    fileVersions: [],\n    systemInfo: getSystemInfo(),\n    shellConfigFiles: {},\n    knowledgeFiles,\n    fileTokenScores,\n    fileTree,\n    agentTemplates: {},\n  }\n}\n\nexport async function runAgentStepScaffolding(\n  agentState: AgentState,\n  fileContext: ProjectFileContext,\n  prompt: string | undefined,\n  sessionId: string,\n  agentType: AgentTemplateType,\n) {\n  const mockWs = new EventEmitter() as WebSocket\n  mockWs.send = mock()\n  mockWs.close = mock()\n\n  let fullResponse = ''\n  const { agentTemplates: localAgentTemplates } =\n    assembleLocalAgentTemplates(fileContext)\n\n  const result = await runAgentStep(mockWs, {\n    userId: TEST_USER_ID,\n    userInputId: generateCompactId(),\n    clientSessionId: sessionId,\n    fingerprintId: 'test-fingerprint-id',\n    onResponseChunk: (chunk: string | PrintModeEvent) => {\n      if (typeof chunk !== 'string') {\n        return\n      }\n      if (DEBUG_MODE) {\n        process.stdout.write(chunk)\n      }\n      fullResponse += chunk\n    },\n    agentType,\n    fileContext,\n    localAgentTemplates,\n    agentState,\n    prompt,\n    params: undefined,\n  })\n\n  return {\n    ...result,\n    fullResponse,\n  }\n}\n\nexport async function runToolCalls(toolCalls: ClientToolCall[]) {\n  const toolResults: ToolResult[] = []\n  for (const toolCall of toolCalls) {\n    const toolResult = await handleToolCall(toolCall)\n    toolResults.push(toolResult)\n  }\n  return toolResults\n}\n\nexport async function loopMainPrompt({\n  sessionState,\n  prompt,\n  projectPath,\n  maxIterations,\n  stopCondition,\n  agentType,\n}: {\n  sessionState: SessionState\n  prompt: string\n  projectPath: string\n  maxIterations: number\n  stopCondition?: (sessionState: AgentState) => boolean\n  agentType: AgentTemplateType\n}) {\n  console.log(blue(prompt))\n\n  const startTime = Date.now()\n  const sessionId = 'test-session-id-' + generateCompactId()\n  let currentAgentState = sessionState.mainAgentState\n  let iterations = 1\n  const steps: AgentStep[] = []\n\n  for (; iterations < maxIterations; iterations++) {\n    console.log('\\nIteration', iterations)\n    let {\n      agentState: newAgentState,\n      fullResponse,\n      shouldEndTurn,\n    } = await runAgentStepScaffolding(\n      currentAgentState,\n      sessionState.fileContext,\n      iterations === 1 ? prompt : undefined,\n      sessionId,\n      agentType,\n    )\n    currentAgentState = newAgentState\n\n    const stop = stopCondition && stopCondition(currentAgentState)\n    if (stop) break\n\n    steps.push({\n      response: fullResponse,\n      toolCalls,\n      toolResults,\n    })\n\n    toolCalls = []\n    toolResults = []\n\n    if (shouldEndTurn) {\n      break\n    }\n  }\n\n  console.log('Main loop finished!')\n  console.log('  - iterations', iterations)\n  console.log(\n    '  - took',\n    ((Date.now() - startTime) / 1000).toFixed(2),\n    'seconds',\n  )\n\n  return {\n    agentState: currentAgentState,\n    iterations: iterations - 1,\n    steps,\n    duration: Date.now() - startTime,\n  }\n}\n\nexport function extractErrorFiles(output: string): string[] {\n  const lines = output.split('\\n')\n  return lines\n    .filter((line) => line.includes(': error TS'))\n    .map((line) => line.split('(')[0].trim())\n}\n\nexport const applyAndRevertChangesSequentially = (() => {\n  const queue: Array<() => Promise<void>> = []\n  let isProcessing = false\n\n  const processQueue = async () => {\n    if (isProcessing || queue.length === 0) return\n    isProcessing = true\n    const nextOperation = queue.shift()\n    if (nextOperation) {\n      await nextOperation()\n    }\n    isProcessing = false\n    processQueue()\n  }\n\n  return async (\n    projectRoot: string,\n    changes: FileChanges,\n    onApply: () => Promise<void>,\n  ) => {\n    return new Promise<void>((resolve, reject) => {\n      queue.push(async () => {\n        try {\n          await applyAndRevertChanges(projectRoot, changes, onApply)\n          resolve()\n        } catch (error) {\n          reject(error)\n        }\n      })\n      processQueue()\n    })\n  }\n})()\n\nexport function resetRepoToCommit(projectPath: string, commit: string) {\n  console.log(`Resetting repository at ${projectPath} to commit ${commit}...`)\n  try {\n    execSync(\n      `cd ${projectPath} && git reset --hard ${commit} && git clean -fd`,\n      {\n        timeout: 30_000,\n      },\n    )\n    console.log('Repository reset successful')\n  } catch (error) {\n    console.error('Error resetting repository:', error)\n    throw error\n  }\n}\n\nexport default {\n  createFileReadingMock,\n  getProjectFileContext,\n  runAgentStepScaffolding,\n  runToolCalls,\n  loopMainPrompt,\n  extractErrorFiles,\n  applyAndRevertChangesSequentially,\n  resetRepoToCommit,\n}\n","postContent":"import { execSync } from 'child_process'\nimport { EventEmitter } from 'events'\nimport fs from 'fs'\nimport path from 'path'\n\nimport { runAgentStep } from '@codebuff/backend/run-agent-step'\nimport { assembleLocalAgentTemplates } from '@codebuff/backend/templates/agent-registry'\nimport { getFileTokenScores } from '@codebuff/code-map/parse'\nimport { TEST_USER_ID } from '@codebuff/common/old-constants'\nimport { mockModule } from '@codebuff/common/testing/mock-modules'\nimport { applyAndRevertChanges } from '@codebuff/common/util/changes'\nimport { generateCompactId } from '@codebuff/common/util/string'\nimport { handleToolCall } from '@codebuff/npm-app/tool-handlers'\nimport { getSystemInfo } from '@codebuff/npm-app/utils/system-info'\nimport { mock } from 'bun:test'\nimport { blue } from 'picocolors'\n\nimport {\n  getAllFilePaths,\n  getProjectFileTree,\n} from '../common/src/project-file-tree'\n\nimport type {\n  requestFiles as originalRequestFiles,\n  requestToolCall as originalRequestToolCall,\n} from '@codebuff/backend/websockets/websocket-action'\nimport type { FileChanges } from '@codebuff/common/actions'\nimport type { ClientToolCall } from '@codebuff/common/tools/list'\nimport type { PrintModeEvent } from '@codebuff/common/types/print-mode'\nimport type {\n  AgentState,\n  AgentTemplateType,\n  SessionState,\n  ToolResult,\n} from '@codebuff/common/types/session-state'\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\nimport type { WebSocket } from 'ws'\n\nconst DEBUG_MODE = true\n\nexport type AgentStep = {\n  response: string\n  toolCalls: ClientToolCall[]\n  toolResults: ToolResult[]\n}\n\nfunction readMockFile(projectRoot: string, filePath: string): string | null {\n  const fullPath = path.join(projectRoot, filePath)\n  try {\n    return fs.readFileSync(fullPath, 'utf-8')\n  } catch (error) {\n    return null\n  }\n}\n\nlet toolCalls: ClientToolCall[] = []\nlet toolResults: ToolResult[] = []\nexport function createFileReadingMock(projectRoot: string) {\n  mockModule('@codebuff/backend/websockets/websocket-action', () => ({\n    requestFiles: ((ws: WebSocket, filePaths: string[]) => {\n      const files: Record<string, string | null> = {}\n      for (const filePath of filePaths) {\n        files[filePath] = readMockFile(projectRoot, filePath)\n      }\n      return Promise.resolve(files)\n    }) satisfies typeof originalRequestFiles,\n    requestToolCall: (async (\n      ws: WebSocket,\n      userInputId: string,\n      toolName: string,\n      input: Record<string, any>,\n      timeout: number = 30_000,\n    ): ReturnType<typeof originalRequestToolCall> => {\n      // Execute the tool call using existing tool handlers\n      const toolCall = {\n        toolCallId: generateCompactId(),\n        toolName,\n        input,\n      }\n      toolCalls.push(toolCall as ClientToolCall)\n      try {\n        const toolResult = await handleToolCall(toolCall as any)\n        toolResults.push({\n          toolName: toolCall.toolName,\n          toolCallId: toolCall.toolCallId,\n          output: toolResult.output,\n        })\n\n        // Send successful response back to backend\n        return {\n          success: true,\n          output: toolResult.output,\n        }\n      } catch (error) {\n        // Send error response back to backend\n        const resultString =\n          error instanceof Error ? error.message : String(error)\n        toolResults.push({\n          toolName: toolCall.toolName,\n          toolCallId: toolCall.toolCallId,\n          output: { type: 'text', value: resultString },\n        })\n        return {\n          success: false,\n          error: resultString,\n        }\n      }\n    }) satisfies typeof originalRequestToolCall,\n  }))\n}\n\nexport async function getProjectFileContext(\n  projectPath: string,\n): Promise<ProjectFileContext> {\n  const fileTree = getProjectFileTree(projectPath)\n  const allFilePaths = getAllFilePaths(fileTree)\n  const knowledgeFilePaths = allFilePaths.filter((filePath) =>\n    filePath.endsWith('knowledge.md'),\n  )\n  const knowledgeFiles: Record<string, string> = {}\n  for (const filePath of knowledgeFilePaths) {\n    const content = readMockFile(projectPath, filePath)\n    if (content !== null) {\n      knowledgeFiles[filePath] = content\n    }\n  }\n  const fileTokenScores = (await getFileTokenScores(projectPath, allFilePaths))\n    .tokenScores\n  return {\n    projectRoot: projectPath,\n    cwd: projectPath,\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    systemInfo: getSystemInfo(),\n    shellConfigFiles: {},\n    knowledgeFiles,\n    fileTokenScores,\n    fileTree,\n    agentTemplates: {},\n    customToolDefinitions: {},\n  }\n}\n\nexport async function runAgentStepScaffolding(\n  agentState: AgentState,\n  fileContext: ProjectFileContext,\n  prompt: string | undefined,\n  sessionId: string,\n  agentType: AgentTemplateType,\n) {\n  const mockWs = new EventEmitter() as WebSocket\n  mockWs.send = mock()\n  mockWs.close = mock()\n\n  let fullResponse = ''\n  const { agentTemplates: localAgentTemplates } =\n    assembleLocalAgentTemplates(fileContext)\n\n  const result = await runAgentStep(mockWs, {\n    userId: TEST_USER_ID,\n    userInputId: generateCompactId(),\n    clientSessionId: sessionId,\n    fingerprintId: 'test-fingerprint-id',\n    onResponseChunk: (chunk: string | PrintModeEvent) => {\n      if (typeof chunk !== 'string') {\n        return\n      }\n      if (DEBUG_MODE) {\n        process.stdout.write(chunk)\n      }\n      fullResponse += chunk\n    },\n    agentType,\n    fileContext,\n    localAgentTemplates,\n    agentState,\n    prompt,\n    params: undefined,\n  })\n\n  return {\n    ...result,\n    fullResponse,\n  }\n}\n\nexport async function runToolCalls(toolCalls: ClientToolCall[]) {\n  const toolResults: ToolResult[] = []\n  for (const toolCall of toolCalls) {\n    const toolResult = await handleToolCall(toolCall)\n    toolResults.push(toolResult)\n  }\n  return toolResults\n}\n\nexport async function loopMainPrompt({\n  sessionState,\n  prompt,\n  projectPath,\n  maxIterations,\n  stopCondition,\n  agentType,\n}: {\n  sessionState: SessionState\n  prompt: string\n  projectPath: string\n  maxIterations: number\n  stopCondition?: (sessionState: AgentState) => boolean\n  agentType: AgentTemplateType\n}) {\n  console.log(blue(prompt))\n\n  const startTime = Date.now()\n  const sessionId = 'test-session-id-' + generateCompactId()\n  let currentAgentState = sessionState.mainAgentState\n  let iterations = 1\n  const steps: AgentStep[] = []\n\n  for (; iterations < maxIterations; iterations++) {\n    console.log('\\nIteration', iterations)\n    let {\n      agentState: newAgentState,\n      fullResponse,\n      shouldEndTurn,\n    } = await runAgentStepScaffolding(\n      currentAgentState,\n      sessionState.fileContext,\n      iterations === 1 ? prompt : undefined,\n      sessionId,\n      agentType,\n    )\n    currentAgentState = newAgentState\n\n    const stop = stopCondition && stopCondition(currentAgentState)\n    if (stop) break\n\n    steps.push({\n      response: fullResponse,\n      toolCalls,\n      toolResults,\n    })\n\n    toolCalls = []\n    toolResults = []\n\n    if (shouldEndTurn) {\n      break\n    }\n  }\n\n  console.log('Main loop finished!')\n  console.log('  - iterations', iterations)\n  console.log(\n    '  - took',\n    ((Date.now() - startTime) / 1000).toFixed(2),\n    'seconds',\n  )\n\n  return {\n    agentState: currentAgentState,\n    iterations: iterations - 1,\n    steps,\n    duration: Date.now() - startTime,\n  }\n}\n\nexport function extractErrorFiles(output: string): string[] {\n  const lines = output.split('\\n')\n  return lines\n    .filter((line) => line.includes(': error TS'))\n    .map((line) => line.split('(')[0].trim())\n}\n\nexport const applyAndRevertChangesSequentially = (() => {\n  const queue: Array<() => Promise<void>> = []\n  let isProcessing = false\n\n  const processQueue = async () => {\n    if (isProcessing || queue.length === 0) return\n    isProcessing = true\n    const nextOperation = queue.shift()\n    if (nextOperation) {\n      await nextOperation()\n    }\n    isProcessing = false\n    processQueue()\n  }\n\n  return async (\n    projectRoot: string,\n    changes: FileChanges,\n    onApply: () => Promise<void>,\n  ) => {\n    return new Promise<void>((resolve, reject) => {\n      queue.push(async () => {\n        try {\n          await applyAndRevertChanges(projectRoot, changes, onApply)\n          resolve()\n        } catch (error) {\n          reject(error)\n        }\n      })\n      processQueue()\n    })\n  }\n})()\n\nexport function resetRepoToCommit(projectPath: string, commit: string) {\n  console.log(`Resetting repository at ${projectPath} to commit ${commit}...`)\n  try {\n    execSync(\n      `cd ${projectPath} && git reset --hard ${commit} && git clean -fd`,\n      {\n        timeout: 30_000,\n      },\n    )\n    console.log('Repository reset successful')\n  } catch (error) {\n    console.error('Error resetting repository:', error)\n    throw error\n  }\n}\n\nexport default {\n  createFileReadingMock,\n  getProjectFileContext,\n  runAgentStepScaffolding,\n  runToolCalls,\n  loopMainPrompt,\n  extractErrorFiles,\n  applyAndRevertChangesSequentially,\n  resetRepoToCommit,\n}\n"},{"path":"npm-app/src/project-files.ts","preContent":"import { exec } from 'child_process'\nimport fs, { existsSync, statSync } from 'fs'\nimport os from 'os'\nimport path, { isAbsolute } from 'path'\nimport { promisify } from 'util'\nimport { Worker } from 'worker_threads'\n\nimport { getFileTokenScores } from '@codebuff/code-map'\nimport {\n  AGENT_TEMPLATES_DIR,\n  FILE_READ_STATUS,\n  toOptionalFile,\n} from '@codebuff/common/old-constants'\nimport {\n  codebuffConfigFile,\n  codebuffConfigFileBackup,\n} from '@codebuff/common/json-config/constants'\nimport {\n  flattenTree,\n  getProjectFileTree,\n  parseGitignore,\n} from '@codebuff/common/project-file-tree'\nimport { ensureDirectoryExists } from '@codebuff/common/util/file'\nimport { filterObject } from '@codebuff/common/util/object'\nimport { createPatch } from 'diff'\nimport { green } from 'picocolors'\n\nimport { loadLocalAgents } from './agents/load-agents'\nimport { checkpointManager } from './checkpoints/checkpoint-manager'\nimport { CONFIG_DIR } from './credentials'\nimport { loadCodebuffConfig } from './json-config/parser'\nimport { findGitRoot, gitCommandIsAvailable } from './utils/git'\nimport { logger } from './utils/logger'\nimport { getSystemInfo } from './utils/system-info'\nimport { getScrapedContentBlocks, parseUrlsFromContent } from './web-scraper'\n\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\n\n// Global variables for chat management\n// Initialize chat ID on first import with singleton pattern\nlet currentChatId: string | null = null\n\nfunction initializeChatId(providedChatId?: string): string {\n  if (currentChatId === null) {\n    currentChatId =\n      providedChatId || new Date().toISOString().replace(/:/g, '-')\n  }\n  return currentChatId\n}\n\n// Function to set chat ID from external source (like worker message)\nexport function setChatIdFromExternal(chatId: string): void {\n  if (currentChatId === null) {\n    currentChatId = chatId\n  }\n}\n\nexport function getCurrentChatId() {\n  if (currentChatId === null) {\n    initializeChatId()\n  }\n  return currentChatId!\n}\n\nexport function startNewChat() {\n  const oldId = currentChatId\n  currentChatId = new Date().toISOString().replace(/:/g, '-')\n  return currentChatId\n}\n\n// Get the project-specific data directory\nexport function getProjectDataDir(): string {\n  const root = getProjectRoot()\n  if (!root) {\n    throw new Error('Project root not set. Call setProjectRoot() first.')\n  }\n\n  const baseName = path.basename(root)\n  const baseDir = path.join(CONFIG_DIR, 'projects', baseName)\n\n  // TODO: Need to handle duplicate project directories after adding automatic\n  // feedback feature\n  return baseDir\n}\n\nexport function getCurrentChatDir(): string {\n  const chatId = getCurrentChatId()\n  const dir = path.join(getProjectDataDir(), 'chats', chatId)\n  ensureDirectoryExists(dir)\n  return dir\n}\n\nconst execAsync = promisify(exec)\n\nlet projectRoot: string\n\nexport function setProjectRoot(dir: string, setCwd: boolean = false) {\n  if (existsSync(dir)) {\n    if (projectRoot && projectRoot !== dir) {\n      checkpointManager.clearCheckpoints(true)\n\n      console.log(\n        '\\n' + green('Directory change:'),\n        `Codebuff will read and write files in \"${dir}\".\\n`,\n      )\n    }\n    projectRoot = dir\n    if (setCwd) {\n      setWorkingDirectory(dir)\n    }\n    return dir\n  }\n  if (setCwd) {\n    setWorkingDirectory(projectRoot)\n  }\n  return projectRoot\n}\n\nexport function getProjectRoot() {\n  return projectRoot\n}\n\nlet workingDirectory: string\nexport function setWorkingDirectory(dir: string) {\n  workingDirectory = dir\n  return workingDirectory\n}\n\nexport function getWorkingDirectory() {\n  return workingDirectory\n}\n\nexport function getStartingDirectory(dir: string | undefined = undefined): {\n  cwd: string\n  shouldSearch: boolean\n} {\n  let base\n  try {\n    base = process.cwd()\n  } catch (error) {\n    throw new Error(\n      'Failed to get current working directory. Is this directory deleted?',\n      { cause: error },\n    )\n  }\n  if (!dir) {\n    return { cwd: base, shouldSearch: true }\n  }\n  const dirAbsolute = path.normalize(path.resolve(base, dir))\n  if (!existsSync(dirAbsolute) || !statSync(dirAbsolute).isDirectory()) {\n    console.log(`Could not find directory ${dirAbsolute}\\n`)\n    return { cwd: base, shouldSearch: true }\n  }\n  return { cwd: dirAbsolute, shouldSearch: false }\n}\n\n/**\n * Initialize project root for standalone commands that don't go through normal CLI setup\n * @param cwd Optional working directory override\n * @returns Object with projectRoot and workingDir paths\n */\nexport function initializeProjectRootAndWorkingDir(cwd?: string): {\n  projectRoot: string\n  workingDir: string\n} {\n  const { cwd: workingDir, shouldSearch } = getStartingDirectory(cwd)\n  const gitRoot = shouldSearch\n    ? findGitRoot(workingDir) ?? workingDir\n    : workingDir\n  const projectRoot = setProjectRoot(gitRoot)\n  setWorkingDirectory(workingDir)\n  return { projectRoot, workingDir }\n}\n\n/**\n * Transforms a relative filepath into an absolute one, using the project root as the base.\n * Handles '..' and '.' in paths correctly. Also handles Windows paths.\n *\n * @param filepath The relative filepath to transform\n * @param projectRoot The absolute path to the project root\n * @returns The absolute filepath\n */\nexport function toAbsolutePath(filepath: string, projectRoot: string): string {\n  // If already absolute, normalize and return\n  if (path.isAbsolute(filepath)) {\n    return path.normalize(filepath)\n  }\n\n  // Handle '..' at the start by resolving against project root\n  return path.normalize(path.resolve(projectRoot, filepath))\n}\n\nlet cachedProjectFileContext: ProjectFileContext | undefined\n\nexport function clearCachedProjectFileContext() {\n  cachedProjectFileContext = undefined\n}\n\nexport function initProjectFileContextWithWorker(\n  dir: string,\n  resetCache: boolean = false,\n) {\n  if (resetCache) {\n    cachedProjectFileContext = undefined\n  }\n\n  const workerRelativePath = './workers/project-context.ts'\n  const worker = new Worker(\n    process.env.IS_BINARY\n      ? // Use relative path for compiled binary.\n        workerRelativePath\n      : // Use absolute path for dev (via bun URL).\n        new URL(workerRelativePath, import.meta.url).href,\n  )\n\n  // Pass the current chat ID to the worker to ensure consistency\n  const mainThreadChatId = getCurrentChatId()\n  worker.postMessage({ dir, chatId: mainThreadChatId })\n\n  return new Promise<ProjectFileContext>((resolve, reject) => {\n    worker.on('error', (error) => {\n      reject(error)\n    })\n    worker.on('message', (initFileContext) => {\n      worker.terminate()\n      cachedProjectFileContext = initFileContext\n      resolve(initFileContext)\n    })\n  })\n}\n\n/**\n * Retrieves or updates the project file context for a given project.\n *\n * This function gathers comprehensive information about the project's files, structure,\n * and state. It either creates a new context if one doesn't exist for the specified\n * project root, or updates an existing cached context with new information.\n *\n * The context includes:\n * - File tree structure\n * - Token scores for code analysis\n * - Knowledge files (project-specific documentation)\n * - User knowledge files (from home directory)\n * - Git changes and status\n * - Changes since the last file version\n * - Shell configuration files\n * - System information\n *\n * @param {string} projectRoot - The root directory path of the project\n * @param {Record<string, string>} lastFileVersion - Record of the last known file versions\n * @param {FileVersion[][]} newFileVersions - Array of file version arrays, representing the history of file changes\n * @returns {Promise<ProjectFileContext>} A promise that resolves to the project file context object\n */\nexport const getProjectFileContext = async (\n  projectRoot: string,\n  lastFileVersion: Record<string, string>,\n): Promise<ProjectFileContext> => {\n  const gitChanges = await getGitChanges()\n  const changesSinceLastChat = getChangesSinceLastFileVersion(lastFileVersion)\n\n  if (\n    !cachedProjectFileContext ||\n    cachedProjectFileContext.projectRoot !== projectRoot\n  ) {\n    const fileTree = getProjectFileTree(projectRoot)\n    const flattenedNodes = flattenTree(fileTree)\n    const allFilePaths = flattenedNodes\n      .filter((node) => node.type === 'file')\n      .map((node) => node.filePath)\n    const knowledgeFilePaths = allFilePaths.filter((filePath) => {\n      const lowercaseFilePath = filePath.toLowerCase()\n      return (\n        lowercaseFilePath.endsWith('knowledge.md') ||\n        lowercaseFilePath.endsWith('claude.md') ||\n        lowercaseFilePath === codebuffConfigFile.toLowerCase() ||\n        lowercaseFilePath === codebuffConfigFileBackup.toLowerCase()\n      )\n    })\n\n    // Filter out agent template paths from knowledge files to avoid duplication\n    const filteredKnowledgeFilePaths = knowledgeFilePaths.filter(\n      (filePath) => !filePath.startsWith(AGENT_TEMPLATES_DIR),\n    )\n\n    const knowledgeFiles = getExistingFiles(filteredKnowledgeFilePaths)\n    const knowledgeFilesWithScrapedContent =\n      await addScrapedContentToFiles(knowledgeFiles)\n\n    // Get knowledge files from user's home directory\n    const homeDir = os.homedir()\n    const userKnowledgeFiles = findKnowledgeFilesInDir(homeDir)\n    const userKnowledgeFilesWithScrapedContent =\n      await addScrapedContentToFiles(userKnowledgeFiles)\n\n    const shellConfigFiles = loadShellConfigFiles()\n\n    const { tokenScores, tokenCallers } = await getFileTokenScores(\n      projectRoot,\n      allFilePaths,\n    )\n\n    // Load codebuff configuration\n    const codebuffConfig = loadCodebuffConfig()\n\n    cachedProjectFileContext = {\n      projectRoot,\n      cwd: projectRoot,\n      fileTree,\n      fileTokenScores: tokenScores,\n      tokenCallers,\n      knowledgeFiles: knowledgeFilesWithScrapedContent,\n      agentTemplates: await loadLocalAgents({ verbose: false }),\n      codebuffConfig,\n      shellConfigFiles,\n      systemInfo: getSystemInfo(),\n      userKnowledgeFiles: userKnowledgeFilesWithScrapedContent,\n      gitChanges,\n      changesSinceLastChat,\n      fileVersions: [],\n    }\n  }\n\n  return cachedProjectFileContext\n}\n\n/**\n * Retrieves information about the current state of the Git repository.\n *\n * This asynchronous function executes several Git commands to gather comprehensive\n * information about the repository's current state, including:\n * - Current status (modified files, untracked files, etc.)\n * - Uncommitted changes (diff)\n * - Staged changes (cached diff)\n * - Recent commit messages (from the last 10 commits)\n *\n * The function uses the global projectRoot variable to determine which repository\n * to query. If any Git command fails (e.g., if the directory is not a Git repository),\n * the function gracefully handles the error and returns empty strings for all properties.\n *\n * @returns {Promise<{status: string, diff: string, diffCached: string, lastCommitMessages: string}>}\n *          A promise that resolves to an object containing Git repository information:\n *          - status: Output of 'git status' command\n *          - diff: Output of 'git diff' command showing uncommitted changes\n *          - diffCached: Output of 'git diff --cached' command showing staged changes\n *          - lastCommitMessages: Recent commit messages, formatted as a newline-separated string\n */\nasync function getGitChanges(): Promise<{\n  status: string\n  diff: string\n  diffCached: string\n  lastCommitMessages: string\n}> {\n  if (!gitCommandIsAvailable()) {\n    return { status: '', diff: '', diffCached: '', lastCommitMessages: '' }\n  }\n  const status = execAsync('git status', { cwd: projectRoot })\n    .then(({ stdout }) => stdout)\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get git status')\n      return ''\n    })\n\n  const diff = execAsync('git diff', { cwd: projectRoot })\n    .then(({ stdout }) => stdout)\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get git diff')\n      return ''\n    })\n\n  const diffCached = execAsync('git diff --cached', {\n    cwd: projectRoot,\n  })\n    .then(({ stdout }) => stdout)\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get git diff --cached')\n      return ''\n    })\n\n  const lastCommitMessages = execAsync('git shortlog HEAD~10..HEAD', {\n    cwd: projectRoot,\n  })\n    .then(({ stdout }) =>\n      stdout\n        .trim()\n        .split('\\n')\n        .slice(1)\n        .reverse()\n        .map((line) => line.trim())\n        .join('\\n'),\n    )\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get lastCommitMessages')\n      return ''\n    })\n\n  return {\n    status: await status,\n    diff: await diff,\n    diffCached: await diffCached,\n    lastCommitMessages: await lastCommitMessages,\n  }\n}\n\n/**\n * Identifies changes between the last known version of files and their current state on disk.\n *\n * This function compares each file in the provided lastFileVersion record with its current\n * content on disk. For files that have changed, it generates a patch using the diff library's\n * createPatch function. Files that haven't changed or can't be read are filtered out from\n * the result.\n *\n * The function is used to track changes made to files since the last interaction or session,\n * which helps maintain context about what has changed in the project over time.\n *\n * @param {Record<string, string>} lastFileVersion - A record mapping file paths to their\n *        content as of the last known version\n * @returns {Record<string, string>} A record mapping file paths to patch strings for files\n *          that have changed since the last version. Files that haven't changed or couldn't\n *          be read are not included in the result.\n */\nexport function getChangesSinceLastFileVersion(\n  lastFileVersion: Record<string, string>,\n): Record<string, string> {\n  const changes = Object.entries(lastFileVersion)\n    .map(([filePath, lastContents]) => {\n      const fullFilePath = path.join(getProjectRoot(), filePath)\n      try {\n        const currentContent = fs.readFileSync(fullFilePath, 'utf8')\n        if (currentContent === lastContents) {\n          return [filePath, null] as const\n        }\n        return [\n          filePath,\n          createPatch(filePath, lastContents, currentContent),\n        ] as const\n      } catch (error) {\n        if (\n          error instanceof Object &&\n          'code' in error &&\n          error.code === 'ENOENT'\n        ) {\n          return [filePath, createPatch(filePath, lastContents, '')]\n        }\n        logger.error({ error }, 'Error reading file while getting file changes')\n        return [filePath, null] as const\n      }\n    })\n    .filter(([_, diff]) => diff !== null) as [string, string][]\n  return Object.fromEntries(changes)\n}\n\nexport function getFiles(filePaths: string[]) {\n  const result: Record<string, string | null> = {}\n  const MAX_FILE_SIZE = 1024 * 1024 // 1MB in bytes\n  const ig = parseGitignore(projectRoot, projectRoot)\n\n  for (const filePath of filePaths) {\n    if (!filePath) {\n      continue\n    }\n\n    // Convert absolute paths within project to relative paths\n    const relativePath = filePath.startsWith(projectRoot)\n      ? path.relative(projectRoot, filePath)\n      : filePath\n    const fullPath = path.join(projectRoot, relativePath)\n    if (isAbsolute(relativePath) || !fullPath.startsWith(projectRoot)) {\n      result[relativePath] = FILE_READ_STATUS.OUTSIDE_PROJECT\n      continue\n    }\n    try {\n      if (ig.ignores(relativePath)) {\n        result[relativePath] = FILE_READ_STATUS.IGNORED\n        continue\n      }\n    } catch (error) {\n      logger.error(\n        {\n          errorMessage: error instanceof Error ? error.message : String(error),\n          errorStack: error instanceof Error ? error.stack : undefined,\n          relativePath,\n        },\n        'Error checking if file is ignored',\n      )\n      result[relativePath] = FILE_READ_STATUS.ERROR\n      continue\n    }\n    try {\n      const stats = fs.statSync(fullPath)\n      if (stats.size > MAX_FILE_SIZE) {\n        result[relativePath] =\n          FILE_READ_STATUS.TOO_LARGE +\n          ` [${(stats.size / (1024 * 1024)).toFixed(2)}MB]`\n      } else {\n        const content = fs.readFileSync(fullPath, 'utf8')\n        result[relativePath] = content\n      }\n    } catch (error) {\n      if (\n        error &&\n        typeof error === 'object' &&\n        'code' in error &&\n        error.code === 'ENOENT'\n      ) {\n        result[relativePath] = FILE_READ_STATUS.DOES_NOT_EXIST\n      } else {\n        logger.error(\n          {\n            errorMessage:\n              error instanceof Error ? error.message : String(error),\n            errorStack: error instanceof Error ? error.stack : undefined,\n            fullPath,\n          },\n          'Error reading file',\n        )\n        result[relativePath] = FILE_READ_STATUS.ERROR\n      }\n    }\n  }\n  return result\n}\nexport function getFilesOrNull(filePaths: string[]) {\n  const result = getFiles(filePaths)\n  return Object.fromEntries(\n    Object.entries(result).map(([filePath, content]) => [\n      filePath,\n      toOptionalFile(content),\n    ]),\n  )\n}\n\nexport function getExistingFiles(filePaths: string[]) {\n  return filterObject(\n    getFilesOrNull(filePaths),\n    (value) => value !== null,\n  ) as Record<string, string>\n}\nexport async function addScrapedContentToFiles(files: Record<string, string>) {\n  const newFiles = { ...files }\n  await Promise.all(\n    Object.entries(files).map(async ([filePath, content]) => {\n      const urls = parseUrlsFromContent(content)\n      const scrapedContent = await getScrapedContentBlocks(urls)\n\n      newFiles[filePath] =\n        content +\n        (scrapedContent.length > 0 ? '\\n' : '') +\n        scrapedContent.join('\\n')\n    }),\n  )\n  return newFiles\n}\n\nfunction findKnowledgeFilesInDir(dir: string): Record<string, string> {\n  const result: Record<string, string> = {}\n  try {\n    const files = fs.readdirSync(dir, { withFileTypes: true })\n    for (const file of files) {\n      if (!file.isDirectory() && file.name.endsWith('knowledge.md')) {\n        const fullPath = path.join(dir, file.name)\n        try {\n          const content = fs.readFileSync(fullPath, 'utf8')\n          result[file.name] = content\n        } catch (error) {\n          // Skip files we can't read\n          logger.error(\n            {\n              errorMessage:\n                error instanceof Error ? error.message : String(error),\n              errorStack: error instanceof Error ? error.stack : undefined,\n              fullPath,\n            },\n            'Error reading knowledge file',\n          )\n        }\n      }\n    }\n  } catch (error) {\n    // Skip directories we can't read\n    logger.error(\n      {\n        errorMessage: error instanceof Error ? error.message : String(error),\n        errorStack: error instanceof Error ? error.stack : undefined,\n        dir,\n      },\n      'Error reading directory for knowledge files',\n    )\n  }\n  return result\n}\n\nexport function getFilesAbsolutePath(\n  filePaths: string[],\n  options: { silent?: boolean } = {},\n) {\n  const result: Record<string, string | null> = {}\n  for (const filePath of filePaths) {\n    try {\n      const content = fs.readFileSync(filePath, 'utf8')\n      result[filePath] = content\n    } catch (error) {\n      if (!options.silent) {\n        logger.error(\n          {\n            errorMessage:\n              error instanceof Error ? error.message : String(error),\n            errorStack: error instanceof Error ? error.stack : undefined,\n            filePath,\n          },\n          'Error reading file by absolute path',\n        )\n      }\n      result[filePath] = null\n    }\n  }\n  return result\n}\n\nexport function setFiles(files: Record<string, string>) {\n  for (const [filePath, content] of Object.entries(files)) {\n    const fullPath = path.join(projectRoot, filePath)\n    fs.writeFileSync(fullPath, content, 'utf8')\n  }\n}\n\nconst loadShellConfigFiles = () => {\n  const homeDir = os.homedir()\n  const configFiles = [\n    path.join(homeDir, '.bashrc'),\n    path.join(homeDir, '.bash_profile'),\n    path.join(homeDir, '.bash_login'),\n    path.join(homeDir, '.profile'),\n    path.join(homeDir, '.zshrc'),\n    path.join(homeDir, '.kshrc'),\n  ]\n  const files = getFilesAbsolutePath(configFiles, { silent: true })\n  return filterObject(files, (value) => value !== null) as Record<\n    string,\n    string\n  >\n}\n\n/*\nfunction getExportedTokensForFiles(\n  filePaths: string[]\n): Record<string, string[]> {\n  const result: Record<string, string[]> = {}\n  const fullFilePaths = filePaths.map((filePath) =>\n    path.join(projectRoot, filePath)\n  )\n  const program = ts.createProgram(fullFilePaths, {})\n\n  for (let i = 0; i < filePaths.length; i++) {\n    const filePath = filePaths[i]\n    const fullFilePath = fullFilePaths[i]\n    const sourceFile = program.getSourceFile(fullFilePath)\n    if (sourceFile) {\n      try {\n        const exportedTokens = getExportedTokens(sourceFile)\n        result[filePath] = exportedTokens\n      } catch (error) {\n        console.error(`Error processing file ${fullFilePath}:`, error)\n        result[filePath] = []\n      }\n    } else {\n      // console.error(`Could not find source file: ${fullFilePath}`)\n      result[filePath] = []\n    }\n  }\n\n  return result\n}\n\nfunction getExportedTokens(sourceFile: ts.SourceFile): string[] {\n  const exportedTokens: string[] = []\n\n  function visit(node: ts.Node) {\n    if (ts.isExportDeclaration(node)) {\n      if (node.exportClause && ts.isNamedExports(node.exportClause)) {\n        node.exportClause.elements.forEach((element) => {\n          exportedTokens.push(element.name.text)\n        })\n      }\n    } else if (\n      ts.isFunctionDeclaration(node) ||\n      ts.isClassDeclaration(node) ||\n      ts.isVariableStatement(node)\n    ) {\n      if (\n        node.modifiers?.some(\n          (modifier) => modifier.kind === ts.SyntaxKind.ExportKeyword\n        )\n      ) {\n        if (ts.isFunctionDeclaration(node) || ts.isClassDeclaration(node)) {\n          if (node.name) {\n            exportedTokens.push(node.name.text)\n          }\n        } else if (ts.isVariableStatement(node)) {\n          node.declarationList.declarations.forEach((declaration) => {\n            if (ts.isIdentifier(declaration.name)) {\n              exportedTokens.push(declaration.name.text)\n            }\n          })\n        }\n      }\n    }\n\n    ts.forEachChild(node, visit)\n  }\n\n  visit(sourceFile)\n\n  return exportedTokens\n}\n*/\n\nexport const deleteFile = (fullPath: string): boolean => {\n  try {\n    if (fs.existsSync(fullPath)) {\n      fs.unlinkSync(fullPath)\n      return true\n    }\n    return false\n  } catch (error) {\n    console.error(`Error deleting file ${fullPath}:`, error)\n    logger.error(\n      {\n        errorMessage: error instanceof Error ? error.message : String(error),\n        errorStack: error instanceof Error ? error.stack : undefined,\n        fullPath,\n      },\n      'Error deleting file',\n    )\n    return false\n  }\n}\n","postContent":"import { exec } from 'child_process'\nimport fs, { existsSync, statSync } from 'fs'\nimport os from 'os'\nimport path, { isAbsolute } from 'path'\nimport { promisify } from 'util'\nimport { Worker } from 'worker_threads'\n\nimport { getFileTokenScores } from '@codebuff/code-map'\nimport {\n  AGENT_TEMPLATES_DIR,\n  FILE_READ_STATUS,\n  toOptionalFile,\n} from '@codebuff/common/old-constants'\nimport {\n  codebuffConfigFile,\n  codebuffConfigFileBackup,\n} from '@codebuff/common/json-config/constants'\nimport {\n  flattenTree,\n  getProjectFileTree,\n  parseGitignore,\n} from '@codebuff/common/project-file-tree'\nimport { ensureDirectoryExists } from '@codebuff/common/util/file'\nimport { filterObject } from '@codebuff/common/util/object'\nimport { createPatch } from 'diff'\nimport { green } from 'picocolors'\n\nimport { loadLocalAgents } from './agents/load-agents'\nimport { checkpointManager } from './checkpoints/checkpoint-manager'\nimport { CONFIG_DIR } from './credentials'\nimport { loadCodebuffConfig } from './json-config/parser'\nimport { findGitRoot, gitCommandIsAvailable } from './utils/git'\nimport { logger } from './utils/logger'\nimport { getSystemInfo } from './utils/system-info'\nimport { getScrapedContentBlocks, parseUrlsFromContent } from './web-scraper'\n\nimport type { ProjectFileContext } from '@codebuff/common/util/file'\n\n// Global variables for chat management\n// Initialize chat ID on first import with singleton pattern\nlet currentChatId: string | null = null\n\nfunction initializeChatId(providedChatId?: string): string {\n  if (currentChatId === null) {\n    currentChatId =\n      providedChatId || new Date().toISOString().replace(/:/g, '-')\n  }\n  return currentChatId\n}\n\n// Function to set chat ID from external source (like worker message)\nexport function setChatIdFromExternal(chatId: string): void {\n  if (currentChatId === null) {\n    currentChatId = chatId\n  }\n}\n\nexport function getCurrentChatId() {\n  if (currentChatId === null) {\n    initializeChatId()\n  }\n  return currentChatId!\n}\n\nexport function startNewChat() {\n  const oldId = currentChatId\n  currentChatId = new Date().toISOString().replace(/:/g, '-')\n  return currentChatId\n}\n\n// Get the project-specific data directory\nexport function getProjectDataDir(): string {\n  const root = getProjectRoot()\n  if (!root) {\n    throw new Error('Project root not set. Call setProjectRoot() first.')\n  }\n\n  const baseName = path.basename(root)\n  const baseDir = path.join(CONFIG_DIR, 'projects', baseName)\n\n  // TODO: Need to handle duplicate project directories after adding automatic\n  // feedback feature\n  return baseDir\n}\n\nexport function getCurrentChatDir(): string {\n  const chatId = getCurrentChatId()\n  const dir = path.join(getProjectDataDir(), 'chats', chatId)\n  ensureDirectoryExists(dir)\n  return dir\n}\n\nconst execAsync = promisify(exec)\n\nlet projectRoot: string\n\nexport function setProjectRoot(dir: string, setCwd: boolean = false) {\n  if (existsSync(dir)) {\n    if (projectRoot && projectRoot !== dir) {\n      checkpointManager.clearCheckpoints(true)\n\n      console.log(\n        '\\n' + green('Directory change:'),\n        `Codebuff will read and write files in \"${dir}\".\\n`,\n      )\n    }\n    projectRoot = dir\n    if (setCwd) {\n      setWorkingDirectory(dir)\n    }\n    return dir\n  }\n  if (setCwd) {\n    setWorkingDirectory(projectRoot)\n  }\n  return projectRoot\n}\n\nexport function getProjectRoot() {\n  return projectRoot\n}\n\nlet workingDirectory: string\nexport function setWorkingDirectory(dir: string) {\n  workingDirectory = dir\n  return workingDirectory\n}\n\nexport function getWorkingDirectory() {\n  return workingDirectory\n}\n\nexport function getStartingDirectory(dir: string | undefined = undefined): {\n  cwd: string\n  shouldSearch: boolean\n} {\n  let base\n  try {\n    base = process.cwd()\n  } catch (error) {\n    throw new Error(\n      'Failed to get current working directory. Is this directory deleted?',\n      { cause: error },\n    )\n  }\n  if (!dir) {\n    return { cwd: base, shouldSearch: true }\n  }\n  const dirAbsolute = path.normalize(path.resolve(base, dir))\n  if (!existsSync(dirAbsolute) || !statSync(dirAbsolute).isDirectory()) {\n    console.log(`Could not find directory ${dirAbsolute}\\n`)\n    return { cwd: base, shouldSearch: true }\n  }\n  return { cwd: dirAbsolute, shouldSearch: false }\n}\n\n/**\n * Initialize project root for standalone commands that don't go through normal CLI setup\n * @param cwd Optional working directory override\n * @returns Object with projectRoot and workingDir paths\n */\nexport function initializeProjectRootAndWorkingDir(cwd?: string): {\n  projectRoot: string\n  workingDir: string\n} {\n  const { cwd: workingDir, shouldSearch } = getStartingDirectory(cwd)\n  const gitRoot = shouldSearch\n    ? findGitRoot(workingDir) ?? workingDir\n    : workingDir\n  const projectRoot = setProjectRoot(gitRoot)\n  setWorkingDirectory(workingDir)\n  return { projectRoot, workingDir }\n}\n\n/**\n * Transforms a relative filepath into an absolute one, using the project root as the base.\n * Handles '..' and '.' in paths correctly. Also handles Windows paths.\n *\n * @param filepath The relative filepath to transform\n * @param projectRoot The absolute path to the project root\n * @returns The absolute filepath\n */\nexport function toAbsolutePath(filepath: string, projectRoot: string): string {\n  // If already absolute, normalize and return\n  if (path.isAbsolute(filepath)) {\n    return path.normalize(filepath)\n  }\n\n  // Handle '..' at the start by resolving against project root\n  return path.normalize(path.resolve(projectRoot, filepath))\n}\n\nlet cachedProjectFileContext: ProjectFileContext | undefined\n\nexport function clearCachedProjectFileContext() {\n  cachedProjectFileContext = undefined\n}\n\nexport function initProjectFileContextWithWorker(\n  dir: string,\n  resetCache: boolean = false,\n) {\n  if (resetCache) {\n    cachedProjectFileContext = undefined\n  }\n\n  const workerRelativePath = './workers/project-context.ts'\n  const worker = new Worker(\n    process.env.IS_BINARY\n      ? // Use relative path for compiled binary.\n        workerRelativePath\n      : // Use absolute path for dev (via bun URL).\n        new URL(workerRelativePath, import.meta.url).href,\n  )\n\n  // Pass the current chat ID to the worker to ensure consistency\n  const mainThreadChatId = getCurrentChatId()\n  worker.postMessage({ dir, chatId: mainThreadChatId })\n\n  return new Promise<ProjectFileContext>((resolve, reject) => {\n    worker.on('error', (error) => {\n      reject(error)\n    })\n    worker.on('message', (initFileContext) => {\n      worker.terminate()\n      cachedProjectFileContext = initFileContext\n      resolve(initFileContext)\n    })\n  })\n}\n\n/**\n * Retrieves or updates the project file context for a given project.\n *\n * This function gathers comprehensive information about the project's files, structure,\n * and state. It either creates a new context if one doesn't exist for the specified\n * project root, or updates an existing cached context with new information.\n *\n * The context includes:\n * - File tree structure\n * - Token scores for code analysis\n * - Knowledge files (project-specific documentation)\n * - User knowledge files (from home directory)\n * - Git changes and status\n * - Changes since the last file version\n * - Shell configuration files\n * - System information\n *\n * @param {string} projectRoot - The root directory path of the project\n * @param {Record<string, string>} lastFileVersion - Record of the last known file versions\n * @param {FileVersion[][]} newFileVersions - Array of file version arrays, representing the history of file changes\n * @returns {Promise<ProjectFileContext>} A promise that resolves to the project file context object\n */\nexport const getProjectFileContext = async (\n  projectRoot: string,\n  lastFileVersion: Record<string, string>,\n): Promise<ProjectFileContext> => {\n  const gitChanges = await getGitChanges()\n  const changesSinceLastChat = getChangesSinceLastFileVersion(lastFileVersion)\n\n  if (\n    !cachedProjectFileContext ||\n    cachedProjectFileContext.projectRoot !== projectRoot\n  ) {\n    const fileTree = getProjectFileTree(projectRoot)\n    const flattenedNodes = flattenTree(fileTree)\n    const allFilePaths = flattenedNodes\n      .filter((node) => node.type === 'file')\n      .map((node) => node.filePath)\n    const knowledgeFilePaths = allFilePaths.filter((filePath) => {\n      const lowercaseFilePath = filePath.toLowerCase()\n      return (\n        lowercaseFilePath.endsWith('knowledge.md') ||\n        lowercaseFilePath.endsWith('claude.md') ||\n        lowercaseFilePath === codebuffConfigFile.toLowerCase() ||\n        lowercaseFilePath === codebuffConfigFileBackup.toLowerCase()\n      )\n    })\n\n    // Filter out agent template paths from knowledge files to avoid duplication\n    const filteredKnowledgeFilePaths = knowledgeFilePaths.filter(\n      (filePath) => !filePath.startsWith(AGENT_TEMPLATES_DIR),\n    )\n\n    const knowledgeFiles = getExistingFiles(filteredKnowledgeFilePaths)\n    const knowledgeFilesWithScrapedContent =\n      await addScrapedContentToFiles(knowledgeFiles)\n\n    // Get knowledge files from user's home directory\n    const homeDir = os.homedir()\n    const userKnowledgeFiles = findKnowledgeFilesInDir(homeDir)\n    const userKnowledgeFilesWithScrapedContent =\n      await addScrapedContentToFiles(userKnowledgeFiles)\n\n    const shellConfigFiles = loadShellConfigFiles()\n\n    const { tokenScores, tokenCallers } = await getFileTokenScores(\n      projectRoot,\n      allFilePaths,\n    )\n\n    // Load codebuff configuration\n    const codebuffConfig = loadCodebuffConfig()\n\n    cachedProjectFileContext = {\n      projectRoot,\n      cwd: projectRoot,\n      fileTree,\n      fileTokenScores: tokenScores,\n      tokenCallers,\n      knowledgeFiles: knowledgeFilesWithScrapedContent,\n      agentTemplates: await loadLocalAgents({ verbose: false }),\n      customToolDefinitions: {},\n      codebuffConfig,\n      shellConfigFiles,\n      systemInfo: getSystemInfo(),\n      userKnowledgeFiles: userKnowledgeFilesWithScrapedContent,\n      gitChanges,\n      changesSinceLastChat,\n    }\n  }\n\n  return cachedProjectFileContext\n}\n\n/**\n * Retrieves information about the current state of the Git repository.\n *\n * This asynchronous function executes several Git commands to gather comprehensive\n * information about the repository's current state, including:\n * - Current status (modified files, untracked files, etc.)\n * - Uncommitted changes (diff)\n * - Staged changes (cached diff)\n * - Recent commit messages (from the last 10 commits)\n *\n * The function uses the global projectRoot variable to determine which repository\n * to query. If any Git command fails (e.g., if the directory is not a Git repository),\n * the function gracefully handles the error and returns empty strings for all properties.\n *\n * @returns {Promise<{status: string, diff: string, diffCached: string, lastCommitMessages: string}>}\n *          A promise that resolves to an object containing Git repository information:\n *          - status: Output of 'git status' command\n *          - diff: Output of 'git diff' command showing uncommitted changes\n *          - diffCached: Output of 'git diff --cached' command showing staged changes\n *          - lastCommitMessages: Recent commit messages, formatted as a newline-separated string\n */\nasync function getGitChanges(): Promise<{\n  status: string\n  diff: string\n  diffCached: string\n  lastCommitMessages: string\n}> {\n  if (!gitCommandIsAvailable()) {\n    return { status: '', diff: '', diffCached: '', lastCommitMessages: '' }\n  }\n  const status = execAsync('git status', { cwd: projectRoot })\n    .then(({ stdout }) => stdout)\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get git status')\n      return ''\n    })\n\n  const diff = execAsync('git diff', { cwd: projectRoot })\n    .then(({ stdout }) => stdout)\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get git diff')\n      return ''\n    })\n\n  const diffCached = execAsync('git diff --cached', {\n    cwd: projectRoot,\n  })\n    .then(({ stdout }) => stdout)\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get git diff --cached')\n      return ''\n    })\n\n  const lastCommitMessages = execAsync('git shortlog HEAD~10..HEAD', {\n    cwd: projectRoot,\n  })\n    .then(({ stdout }) =>\n      stdout\n        .trim()\n        .split('\\n')\n        .slice(1)\n        .reverse()\n        .map((line) => line.trim())\n        .join('\\n'),\n    )\n    .catch((error) => {\n      logger.error({ error }, 'Failed to get lastCommitMessages')\n      return ''\n    })\n\n  return {\n    status: await status,\n    diff: await diff,\n    diffCached: await diffCached,\n    lastCommitMessages: await lastCommitMessages,\n  }\n}\n\n/**\n * Identifies changes between the last known version of files and their current state on disk.\n *\n * This function compares each file in the provided lastFileVersion record with its current\n * content on disk. For files that have changed, it generates a patch using the diff library's\n * createPatch function. Files that haven't changed or can't be read are filtered out from\n * the result.\n *\n * The function is used to track changes made to files since the last interaction or session,\n * which helps maintain context about what has changed in the project over time.\n *\n * @param {Record<string, string>} lastFileVersion - A record mapping file paths to their\n *        content as of the last known version\n * @returns {Record<string, string>} A record mapping file paths to patch strings for files\n *          that have changed since the last version. Files that haven't changed or couldn't\n *          be read are not included in the result.\n */\nexport function getChangesSinceLastFileVersion(\n  lastFileVersion: Record<string, string>,\n): Record<string, string> {\n  const changes = Object.entries(lastFileVersion)\n    .map(([filePath, lastContents]) => {\n      const fullFilePath = path.join(getProjectRoot(), filePath)\n      try {\n        const currentContent = fs.readFileSync(fullFilePath, 'utf8')\n        if (currentContent === lastContents) {\n          return [filePath, null] as const\n        }\n        return [\n          filePath,\n          createPatch(filePath, lastContents, currentContent),\n        ] as const\n      } catch (error) {\n        if (\n          error instanceof Object &&\n          'code' in error &&\n          error.code === 'ENOENT'\n        ) {\n          return [filePath, createPatch(filePath, lastContents, '')]\n        }\n        logger.error({ error }, 'Error reading file while getting file changes')\n        return [filePath, null] as const\n      }\n    })\n    .filter(([_, diff]) => diff !== null) as [string, string][]\n  return Object.fromEntries(changes)\n}\n\nexport function getFiles(filePaths: string[]) {\n  const result: Record<string, string | null> = {}\n  const MAX_FILE_SIZE = 1024 * 1024 // 1MB in bytes\n  const ig = parseGitignore(projectRoot, projectRoot)\n\n  for (const filePath of filePaths) {\n    if (!filePath) {\n      continue\n    }\n\n    // Convert absolute paths within project to relative paths\n    const relativePath = filePath.startsWith(projectRoot)\n      ? path.relative(projectRoot, filePath)\n      : filePath\n    const fullPath = path.join(projectRoot, relativePath)\n    if (isAbsolute(relativePath) || !fullPath.startsWith(projectRoot)) {\n      result[relativePath] = FILE_READ_STATUS.OUTSIDE_PROJECT\n      continue\n    }\n    try {\n      if (ig.ignores(relativePath)) {\n        result[relativePath] = FILE_READ_STATUS.IGNORED\n        continue\n      }\n    } catch (error) {\n      logger.error(\n        {\n          errorMessage: error instanceof Error ? error.message : String(error),\n          errorStack: error instanceof Error ? error.stack : undefined,\n          relativePath,\n        },\n        'Error checking if file is ignored',\n      )\n      result[relativePath] = FILE_READ_STATUS.ERROR\n      continue\n    }\n    try {\n      const stats = fs.statSync(fullPath)\n      if (stats.size > MAX_FILE_SIZE) {\n        result[relativePath] =\n          FILE_READ_STATUS.TOO_LARGE +\n          ` [${(stats.size / (1024 * 1024)).toFixed(2)}MB]`\n      } else {\n        const content = fs.readFileSync(fullPath, 'utf8')\n        result[relativePath] = content\n      }\n    } catch (error) {\n      if (\n        error &&\n        typeof error === 'object' &&\n        'code' in error &&\n        error.code === 'ENOENT'\n      ) {\n        result[relativePath] = FILE_READ_STATUS.DOES_NOT_EXIST\n      } else {\n        logger.error(\n          {\n            errorMessage:\n              error instanceof Error ? error.message : String(error),\n            errorStack: error instanceof Error ? error.stack : undefined,\n            fullPath,\n          },\n          'Error reading file',\n        )\n        result[relativePath] = FILE_READ_STATUS.ERROR\n      }\n    }\n  }\n  return result\n}\nexport function getFilesOrNull(filePaths: string[]) {\n  const result = getFiles(filePaths)\n  return Object.fromEntries(\n    Object.entries(result).map(([filePath, content]) => [\n      filePath,\n      toOptionalFile(content),\n    ]),\n  )\n}\n\nexport function getExistingFiles(filePaths: string[]) {\n  return filterObject(\n    getFilesOrNull(filePaths),\n    (value) => value !== null,\n  ) as Record<string, string>\n}\nexport async function addScrapedContentToFiles(files: Record<string, string>) {\n  const newFiles = { ...files }\n  await Promise.all(\n    Object.entries(files).map(async ([filePath, content]) => {\n      const urls = parseUrlsFromContent(content)\n      const scrapedContent = await getScrapedContentBlocks(urls)\n\n      newFiles[filePath] =\n        content +\n        (scrapedContent.length > 0 ? '\\n' : '') +\n        scrapedContent.join('\\n')\n    }),\n  )\n  return newFiles\n}\n\nfunction findKnowledgeFilesInDir(dir: string): Record<string, string> {\n  const result: Record<string, string> = {}\n  try {\n    const files = fs.readdirSync(dir, { withFileTypes: true })\n    for (const file of files) {\n      if (!file.isDirectory() && file.name.endsWith('knowledge.md')) {\n        const fullPath = path.join(dir, file.name)\n        try {\n          const content = fs.readFileSync(fullPath, 'utf8')\n          result[file.name] = content\n        } catch (error) {\n          // Skip files we can't read\n          logger.error(\n            {\n              errorMessage:\n                error instanceof Error ? error.message : String(error),\n              errorStack: error instanceof Error ? error.stack : undefined,\n              fullPath,\n            },\n            'Error reading knowledge file',\n          )\n        }\n      }\n    }\n  } catch (error) {\n    // Skip directories we can't read\n    logger.error(\n      {\n        errorMessage: error instanceof Error ? error.message : String(error),\n        errorStack: error instanceof Error ? error.stack : undefined,\n        dir,\n      },\n      'Error reading directory for knowledge files',\n    )\n  }\n  return result\n}\n\nexport function getFilesAbsolutePath(\n  filePaths: string[],\n  options: { silent?: boolean } = {},\n) {\n  const result: Record<string, string | null> = {}\n  for (const filePath of filePaths) {\n    try {\n      const content = fs.readFileSync(filePath, 'utf8')\n      result[filePath] = content\n    } catch (error) {\n      if (!options.silent) {\n        logger.error(\n          {\n            errorMessage:\n              error instanceof Error ? error.message : String(error),\n            errorStack: error instanceof Error ? error.stack : undefined,\n            filePath,\n          },\n          'Error reading file by absolute path',\n        )\n      }\n      result[filePath] = null\n    }\n  }\n  return result\n}\n\nexport function setFiles(files: Record<string, string>) {\n  for (const [filePath, content] of Object.entries(files)) {\n    const fullPath = path.join(projectRoot, filePath)\n    fs.writeFileSync(fullPath, content, 'utf8')\n  }\n}\n\nconst loadShellConfigFiles = () => {\n  const homeDir = os.homedir()\n  const configFiles = [\n    path.join(homeDir, '.bashrc'),\n    path.join(homeDir, '.bash_profile'),\n    path.join(homeDir, '.bash_login'),\n    path.join(homeDir, '.profile'),\n    path.join(homeDir, '.zshrc'),\n    path.join(homeDir, '.kshrc'),\n  ]\n  const files = getFilesAbsolutePath(configFiles, { silent: true })\n  return filterObject(files, (value) => value !== null) as Record<\n    string,\n    string\n  >\n}\n\n/*\nfunction getExportedTokensForFiles(\n  filePaths: string[]\n): Record<string, string[]> {\n  const result: Record<string, string[]> = {}\n  const fullFilePaths = filePaths.map((filePath) =>\n    path.join(projectRoot, filePath)\n  )\n  const program = ts.createProgram(fullFilePaths, {})\n\n  for (let i = 0; i < filePaths.length; i++) {\n    const filePath = filePaths[i]\n    const fullFilePath = fullFilePaths[i]\n    const sourceFile = program.getSourceFile(fullFilePath)\n    if (sourceFile) {\n      try {\n        const exportedTokens = getExportedTokens(sourceFile)\n        result[filePath] = exportedTokens\n      } catch (error) {\n        console.error(`Error processing file ${fullFilePath}:`, error)\n        result[filePath] = []\n      }\n    } else {\n      // console.error(`Could not find source file: ${fullFilePath}`)\n      result[filePath] = []\n    }\n  }\n\n  return result\n}\n\nfunction getExportedTokens(sourceFile: ts.SourceFile): string[] {\n  const exportedTokens: string[] = []\n\n  function visit(node: ts.Node) {\n    if (ts.isExportDeclaration(node)) {\n      if (node.exportClause && ts.isNamedExports(node.exportClause)) {\n        node.exportClause.elements.forEach((element) => {\n          exportedTokens.push(element.name.text)\n        })\n      }\n    } else if (\n      ts.isFunctionDeclaration(node) ||\n      ts.isClassDeclaration(node) ||\n      ts.isVariableStatement(node)\n    ) {\n      if (\n        node.modifiers?.some(\n          (modifier) => modifier.kind === ts.SyntaxKind.ExportKeyword\n        )\n      ) {\n        if (ts.isFunctionDeclaration(node) || ts.isClassDeclaration(node)) {\n          if (node.name) {\n            exportedTokens.push(node.name.text)\n          }\n        } else if (ts.isVariableStatement(node)) {\n          node.declarationList.declarations.forEach((declaration) => {\n            if (ts.isIdentifier(declaration.name)) {\n              exportedTokens.push(declaration.name.text)\n            }\n          })\n        }\n      }\n    }\n\n    ts.forEachChild(node, visit)\n  }\n\n  visit(sourceFile)\n\n  return exportedTokens\n}\n*/\n\nexport const deleteFile = (fullPath: string): boolean => {\n  try {\n    if (fs.existsSync(fullPath)) {\n      fs.unlinkSync(fullPath)\n      return true\n    }\n    return false\n  } catch (error) {\n    console.error(`Error deleting file ${fullPath}:`, error)\n    logger.error(\n      {\n        errorMessage: error instanceof Error ? error.message : String(error),\n        errorStack: error instanceof Error ? error.stack : undefined,\n        fullPath,\n      },\n      'Error deleting file',\n    )\n    return false\n  }\n}\n"},{"path":"sdk/package.json","preContent":"{\n  \"name\": \"@codebuff/sdk\",\n  \"private\": false,\n  \"access\": \"public\",\n  \"version\": \"0.1.9\",\n  \"description\": \"Official SDK for Codebuff — AI coding agent & framework\",\n  \"license\": \"MIT\",\n  \"type\": \"module\",\n  \"main\": \"./dist/sdk/src/index.js\",\n  \"types\": \"./dist/sdk/src/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/sdk/src/index.d.ts\",\n      \"import\": \"./dist/sdk/src/index.js\",\n      \"default\": \"./dist/sdk/src/index.js\"\n    }\n  },\n  \"files\": [\n    \"dist\",\n    \"README.md\",\n    \"CHANGELOG.md\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"clean\": \"rm -rf dist\",\n    \"prepare-dist\": \"node scripts/publish.js --dry-run\",\n    \"publish-sdk\": \"node scripts/publish.js --public\",\n    \"publish-dry-run\": \"node scripts/publish.js --dry-run\",\n    \"prepublishOnly\": \"bun run clean && bun run build\",\n    \"typecheck\": \"tsc --noEmit -p .\",\n    \"test\": \"bun test\"\n  },\n  \"sideEffects\": false,\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"keywords\": [\n    \"codebuff\",\n    \"ai\",\n    \"code-editing\",\n    \"assistant\",\n    \"sdk\",\n    \"typescript\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/codebuff/codebuff.git\",\n    \"directory\": \"sdk\"\n  },\n  \"homepage\": \"https://codebuff.com\",\n  \"bugs\": {\n    \"url\": \"https://github.com/codebuff/codebuff/issues\"\n  },\n  \"dependencies\": {\n    \"ai\": \"^5.0.0\",\n    \"zod\": \"^3.25.67\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"22\",\n    \"@types/bun\": \"^1.2.11\"\n  }\n}\n","postContent":"{\n  \"name\": \"@codebuff/sdk\",\n  \"private\": false,\n  \"access\": \"public\",\n  \"version\": \"0.1.9\",\n  \"description\": \"Official SDK for Codebuff — AI coding agent & framework\",\n  \"license\": \"MIT\",\n  \"type\": \"module\",\n  \"main\": \"./dist/sdk/src/index.js\",\n  \"types\": \"./dist/sdk/src/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/sdk/src/index.d.ts\",\n      \"import\": \"./dist/sdk/src/index.js\",\n      \"default\": \"./dist/sdk/src/index.js\"\n    }\n  },\n  \"files\": [\n    \"dist\",\n    \"README.md\",\n    \"CHANGELOG.md\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"clean\": \"rm -rf dist\",\n    \"prepare-dist\": \"node scripts/publish.js --dry-run\",\n    \"publish-sdk\": \"node scripts/publish.js --public\",\n    \"publish-dry-run\": \"node scripts/publish.js --dry-run\",\n    \"prepublishOnly\": \"bun run clean && bun run build\",\n    \"typecheck\": \"tsc --noEmit -p .\",\n    \"test\": \"bun test\"\n  },\n  \"sideEffects\": false,\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"keywords\": [\n    \"codebuff\",\n    \"ai\",\n    \"code-editing\",\n    \"assistant\",\n    \"sdk\",\n    \"typescript\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/codebuff/codebuff.git\",\n    \"directory\": \"sdk\"\n  },\n  \"homepage\": \"https://codebuff.com\",\n  \"bugs\": {\n    \"url\": \"https://github.com/codebuff/codebuff/issues\"\n  },\n  \"dependencies\": {\n    \"ai\": \"^5.0.0\",\n    \"zod\": \"^4.0.0\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"22\",\n    \"@types/bun\": \"^1.2.11\"\n  }\n}\n"},{"path":"sdk/src/client.ts","preContent":"import { initialSessionState, type RunState } from './run-state'\nimport { changeFile } from './tools/change-file'\nimport { getFiles } from './tools/read-files'\nimport { runTerminalCommand } from './tools/run-terminal-command'\nimport { WebSocketHandler } from './websocket-client'\nimport {\n  PromptResponseSchema,\n  type ServerAction,\n} from '../../common/src/actions'\nimport { API_KEY_ENV_VAR } from '../../common/src/constants'\nimport { DEFAULT_MAX_AGENT_STEPS } from '../../common/src/json-config/constants'\n\nimport type { AgentDefinition } from '../../common/src/templates/initial-agents-dir/types/agent-definition'\nimport type { PrintModeEvent } from '../../common/src/types/print-mode'\n\ntype ClientToolName = 'write_file' | 'run_terminal_command'\n\nexport type CodebuffClientOptions = {\n  // Provide an API key or set the CODEBUFF_API_KEY environment variable.\n  apiKey?: string\n  cwd: string\n  onError: (error: { message: string }) => void\n  overrideTools?: Partial<\n    Record<\n      ClientToolName,\n      (\n        input: ServerAction<'tool-call-request'>['input'],\n      ) => Promise<{ toolResultMessage: string }>\n    > & {\n      // Include read_files separately, since it has a different signature.\n      read_files: (\n        filePath: string[],\n      ) => Promise<{ files: Record<string, string | null> }>\n    }\n  >\n}\n\nexport class CodebuffClient {\n  public cwd: string\n\n  private readonly websocketHandler: WebSocketHandler\n  private readonly overrideTools: NonNullable<\n    CodebuffClientOptions['overrideTools']\n  >\n  private readonly fingerprintId = `codebuff-sdk-${Math.random().toString(36).substring(2, 15)}`\n\n  private readonly promptIdToHandleEvent: Record<\n    string,\n    (event: PrintModeEvent) => void\n  > = {}\n  private readonly promptIdToResolveResponse: Record<\n    string,\n    { resolve: (response: any) => void; reject: (error: any) => void }\n  > = {}\n\n  constructor({ apiKey, cwd, onError, overrideTools }: CodebuffClientOptions) {\n    const foundApiKey = apiKey ?? process.env[API_KEY_ENV_VAR]\n    if (!foundApiKey) {\n      throw new Error(\n        `Codebuff API key not found. Please provide an apiKey in the constructor of CodebuffClient or set the ${API_KEY_ENV_VAR} environment variable.`,\n      )\n    }\n\n    this.cwd = cwd\n    this.overrideTools = overrideTools ?? {}\n    this.websocketHandler = new WebSocketHandler({\n      apiKey: foundApiKey,\n      onWebsocketError: (error) => {\n        onError({ message: error.message })\n      },\n      onWebsocketReconnect: () => {},\n      onRequestReconnect: async () => {},\n      onResponseError: async (error) => {\n        onError({ message: error.message })\n      },\n      readFiles: this.readFiles.bind(this),\n      handleToolCall: this.handleToolCall.bind(this),\n      onCostResponse: async () => {},\n\n      onResponseChunk: async (action) => {\n        const { userInputId, chunk } = action\n        const handleEvent = this.promptIdToHandleEvent[userInputId]\n        if (handleEvent && typeof chunk === 'object') {\n          handleEvent(chunk)\n        }\n      },\n      onSubagentResponseChunk: async () => {},\n\n      onPromptResponse: this.handlePromptResponse.bind(this),\n    })\n  }\n\n  public closeConnection() {\n    this.websocketHandler.close()\n  }\n\n  /**\n   * Run a Codebuff agent with the specified options.\n   *\n   * @param agent - The agent to run. Use 'base' for the default agent, or specify a custom agent ID if you made your own agent config.\n   * @param prompt - The user prompt describing what you want the agent to do.\n   * @param params - (Optional) Additional parameters for the agent. Most agents don't use this, but some custom agents can take a JSON object as input in addition to the user prompt string.\n   * @param handleEvent - (Optional) Callback function that receives every event during execution (assistant messages, tool calls, etc.). This allows you to stream the agent's progress in real-time. We will likely add a token-by-token streaming callback in the future.\n   * @param previousRun - (Optional) JSON state returned from a previous run() call. Use this to continue a conversation or session with the agent, maintaining context from previous interactions.\n   * @param projectFiles - (Optional) All the files in your project as a plain JavaScript object. Keys should be the full path from your current directory to each file, and values should be the string contents of the file. Example: { \"src/index.ts\": \"console.log('hi')\" }. This helps Codebuff pick good source files for context.\n   * @param knowledgeFiles - (Optional) Knowledge files to inject into every run() call. Uses the same schema as projectFiles - keys are file paths and values are file contents. These files are added directly to the agent's context.\n   * @param agentDefinitions - (Optional) Array of custom agent definitions. Each object should satisfy the AgentDefinition type. You can input the agent's id field into the agent parameter to run that agent.\n   * @param maxAgentSteps - (Optional) Maximum number of steps the agent can take before stopping. Use this as a safety measure in case your agent starts going off the rails. A reasonable number is around 20.\n   *\n   * @returns A Promise that resolves to a RunState JSON object which you can pass to a subsequent run() call to continue the run.\n   */\n  public async run({\n    agent,\n    prompt,\n    params,\n    handleEvent,\n    previousRun,\n    projectFiles,\n    knowledgeFiles,\n    agentDefinitions,\n    maxAgentSteps = DEFAULT_MAX_AGENT_STEPS,\n  }: {\n    agent: string\n    prompt: string\n    params?: Record<string, any>\n    handleEvent?: (event: PrintModeEvent) => void\n    previousRun?: RunState\n    projectFiles?: Record<string, string>\n    knowledgeFiles?: Record<string, string>\n    agentDefinitions?: AgentDefinition[]\n    maxAgentSteps?: number\n  }): Promise<RunState> {\n    await this.websocketHandler.connect()\n\n    const promptId = Math.random().toString(36).substring(2, 15)\n    const sessionState =\n      previousRun?.sessionState ??\n      initialSessionState(this.cwd, {\n        knowledgeFiles,\n        agentDefinitions,\n        projectFiles,\n        maxAgentSteps,\n      })\n    sessionState.mainAgentState.stepsRemaining = maxAgentSteps\n    const toolResults = previousRun?.toolResults ?? []\n    if (handleEvent) {\n      this.promptIdToHandleEvent[promptId] = handleEvent\n    }\n    this.websocketHandler.sendInput({\n      promptId,\n      prompt,\n      promptParams: params,\n      fingerprintId: this.fingerprintId,\n      costMode: 'normal',\n      sessionState,\n      toolResults,\n      agentId: agent,\n    })\n\n    return new Promise<RunState>((resolve, reject) => {\n      this.promptIdToResolveResponse[promptId] = { resolve, reject }\n    })\n  }\n\n  private async handlePromptResponse(action: ServerAction<'prompt-response'>) {\n    const promiseActions =\n      this.promptIdToResolveResponse[action?.promptId ?? '']\n\n    const parsedAction = PromptResponseSchema.safeParse(action)\n    if (!parsedAction.success) {\n      const message = [\n        'Received invalid prompt response from server:',\n        JSON.stringify(parsedAction.error.issues),\n        'If this issues persists, please contact support@codebuff.com',\n      ].join('\\n')\n      if (promiseActions) {\n        promiseActions.reject(new Error(message))\n      }\n      return\n    }\n\n    if (promiseActions) {\n      const { sessionState, toolResults } = parsedAction.data\n      const state: RunState = {\n        sessionState,\n        toolResults,\n      }\n      promiseActions.resolve(state)\n\n      delete this.promptIdToResolveResponse[action.promptId]\n      delete this.promptIdToHandleEvent[action.promptId]\n    }\n  }\n\n  private async readFiles(filePath: string[]) {\n    const override = this.overrideTools.read_files\n    if (override) {\n      const overrideResult = await override(filePath)\n      return overrideResult.files\n    }\n    return getFiles(filePath, this.cwd)\n  }\n\n  private async handleToolCall(\n    action: ServerAction<'tool-call-request'>,\n  ): ReturnType<WebSocketHandler['handleToolCall']> {\n    const toolName = action.toolName\n    const input = action.input\n    let result: string\n    try {\n      let override = this.overrideTools[toolName as ClientToolName]\n      if (!override && toolName === 'str_replace') {\n        // Note: write_file and str_replace have the same implementation, so reuse their write_file override.\n        override = this.overrideTools['write_file']\n      }\n      if (override) {\n        const overrideResult = await override(input)\n        result = overrideResult.toolResultMessage\n      } else if (toolName === 'end_turn') {\n        result = ''\n      } else if (toolName === 'write_file' || toolName === 'str_replace') {\n        const r = changeFile(input, this.cwd)\n        result = r.toolResultMessage\n      } else if (toolName === 'run_terminal_command') {\n        const r = await runTerminalCommand({\n          ...input,\n          cwd: input.cwd ?? this.cwd,\n        } as Parameters<typeof runTerminalCommand>[0])\n        result = r.output\n      } else {\n        throw new Error(\n          `Tool not implemented in SDK. Please provide an override or modify your agent to not use this tool: ${toolName}`,\n        )\n      }\n    } catch (error) {\n      return {\n        success: false,\n        output: {\n          type: 'text',\n          value:\n            error &&\n            typeof error === 'object' &&\n            'message' in error &&\n            typeof error.message === 'string'\n              ? error.message\n              : typeof error === 'string'\n                ? error\n                : 'Unknown error',\n        },\n      }\n    }\n    return {\n      success: true,\n      output: {\n        type: 'text',\n        value: result,\n      },\n    }\n  }\n}\n","postContent":"import { initialSessionState, type RunState } from './run-state'\nimport { changeFile } from './tools/change-file'\nimport { getFiles } from './tools/read-files'\nimport { runTerminalCommand } from './tools/run-terminal-command'\nimport { WebSocketHandler } from './websocket-client'\nimport {\n  PromptResponseSchema,\n  type ServerAction,\n} from '../../common/src/actions'\nimport { API_KEY_ENV_VAR } from '../../common/src/constants'\nimport { DEFAULT_MAX_AGENT_STEPS } from '../../common/src/json-config/constants'\nimport { toolNames } from '../../common/src/tools/constants'\n\nimport type { CustomToolDefinition } from './custom-tool'\nimport type { AgentDefinition } from '../../common/src/templates/initial-agents-dir/types/agent-definition'\nimport type { ToolName } from '../../common/src/tools/constants'\nimport type { PrintModeEvent } from '../../common/src/types/print-mode'\n\ntype ClientToolName = 'write_file' | 'run_terminal_command'\n\nexport type CodebuffClientOptions = {\n  // Provide an API key or set the CODEBUFF_API_KEY environment variable.\n  apiKey?: string\n  cwd: string\n  onError: (error: { message: string }) => void\n  overrideTools?: Partial<\n    Record<\n      ClientToolName,\n      (\n        input: ServerAction<'tool-call-request'>['input'],\n      ) => Promise<{ toolResultMessage: string }>\n    > & {\n      // Include read_files separately, since it has a different signature.\n      read_files: (\n        filePath: string[],\n      ) => Promise<{ files: Record<string, string | null> }>\n    }\n  >\n}\n\nexport class CodebuffClient {\n  public cwd: string\n\n  private readonly websocketHandler: WebSocketHandler\n  private readonly overrideTools: NonNullable<\n    CodebuffClientOptions['overrideTools']\n  >\n  private readonly fingerprintId = `codebuff-sdk-${Math.random().toString(36).substring(2, 15)}`\n\n  private readonly promptIdToHandleEvent: Record<\n    string,\n    (event: PrintModeEvent) => void\n  > = {}\n  private readonly promptIdToResolveResponse: Record<\n    string,\n    { resolve: (response: any) => void; reject: (error: any) => void }\n  > = {}\n  private readonly promptIdToCustomToolHandler: Record<\n    string,\n    WebSocketHandler['handleToolCall']\n  > = {}\n\n  constructor({ apiKey, cwd, onError, overrideTools }: CodebuffClientOptions) {\n    const foundApiKey = apiKey ?? process.env[API_KEY_ENV_VAR]\n    if (!foundApiKey) {\n      throw new Error(\n        `Codebuff API key not found. Please provide an apiKey in the constructor of CodebuffClient or set the ${API_KEY_ENV_VAR} environment variable.`,\n      )\n    }\n\n    this.cwd = cwd\n    this.overrideTools = overrideTools ?? {}\n    this.websocketHandler = new WebSocketHandler({\n      apiKey: foundApiKey,\n      onWebsocketError: (error) => {\n        onError({ message: error.message })\n      },\n      onWebsocketReconnect: () => {},\n      onRequestReconnect: async () => {},\n      onResponseError: async (error) => {\n        onError({ message: error.message })\n      },\n      readFiles: this.readFiles.bind(this),\n      handleToolCall: this.handleToolCall.bind(this),\n      onCostResponse: async () => {},\n\n      onResponseChunk: async (action) => {\n        const { userInputId, chunk } = action\n        const handleEvent = this.promptIdToHandleEvent[userInputId]\n        if (handleEvent && typeof chunk === 'object') {\n          handleEvent(chunk)\n        }\n      },\n      onSubagentResponseChunk: async () => {},\n\n      onPromptResponse: this.handlePromptResponse.bind(this),\n    })\n  }\n\n  public closeConnection() {\n    this.websocketHandler.close()\n  }\n\n  /**\n   * Run a Codebuff agent with the specified options.\n   *\n   * @param agent - The agent to run. Use 'base' for the default agent, or specify a custom agent ID if you made your own agent config.\n   * @param prompt - The user prompt describing what you want the agent to do.\n   * @param params - (Optional) Additional parameters for the agent. Most agents don't use this, but some custom agents can take a JSON object as input in addition to the user prompt string.\n   * @param handleEvent - (Optional) Callback function that receives every event during execution (assistant messages, tool calls, etc.). This allows you to stream the agent's progress in real-time. We will likely add a token-by-token streaming callback in the future.\n   * @param previousRun - (Optional) JSON state returned from a previous run() call. Use this to continue a conversation or session with the agent, maintaining context from previous interactions.\n   * @param projectFiles - (Optional) All the files in your project as a plain JavaScript object. Keys should be the full path from your current directory to each file, and values should be the string contents of the file. Example: { \"src/index.ts\": \"console.log('hi')\" }. This helps Codebuff pick good source files for context.\n   * @param knowledgeFiles - (Optional) Knowledge files to inject into every run() call. Uses the same schema as projectFiles - keys are file paths and values are file contents. These files are added directly to the agent's context.\n   * @param agentDefinitions - (Optional) Array of custom agent definitions. Each object should satisfy the AgentDefinition type. You can input the agent's id field into the agent parameter to run that agent.\n   * @param maxAgentSteps - (Optional) Maximum number of steps the agent can take before stopping. Use this as a safety measure in case your agent starts going off the rails. A reasonable number is around 20.\n   *\n   * @returns A Promise that resolves to a RunState JSON object which you can pass to a subsequent run() call to continue the run.\n   */\n  public async run({\n    agent,\n    prompt,\n    params,\n    handleEvent,\n    previousRun,\n    projectFiles,\n    knowledgeFiles,\n    agentDefinitions,\n    customToolDefinitions,\n    maxAgentSteps = DEFAULT_MAX_AGENT_STEPS,\n  }: {\n    agent: string\n    prompt: string\n    params?: Record<string, any>\n    handleEvent?: (event: PrintModeEvent) => void\n    previousRun?: RunState\n    projectFiles?: Record<string, string>\n    knowledgeFiles?: Record<string, string>\n    agentDefinitions?: AgentDefinition[]\n    customToolDefinitions?: CustomToolDefinition[]\n    maxAgentSteps?: number\n  }): Promise<RunState> {\n    await this.websocketHandler.connect()\n\n    const promptId = Math.random().toString(36).substring(2, 15)\n    const sessionState =\n      previousRun?.sessionState ??\n      initialSessionState(this.cwd, {\n        knowledgeFiles,\n        agentDefinitions,\n        customToolDefinitions,\n        projectFiles,\n        maxAgentSteps,\n      })\n    sessionState.mainAgentState.stepsRemaining = maxAgentSteps\n    const toolResults = previousRun?.toolResults ?? []\n    if (handleEvent) {\n      this.promptIdToHandleEvent[promptId] = handleEvent\n    }\n    if (customToolDefinitions) {\n      this.promptIdToCustomToolHandler[promptId] = async ({\n        toolName,\n        input,\n      }) => {\n        const toolDefs = customToolDefinitions.filter(\n          (def) => def.toolName === toolName,\n        )\n        if (toolDefs.length === 0) {\n          throw new Error(\n            `Implementation for custom tool ${toolName} not found.`,\n          )\n        }\n        const handler = toolDefs[toolDefs.length - 1].handler\n        try {\n          return {\n            success: true,\n            output: {\n              type: 'text',\n              value: (await handler(input)).toolResultMessage,\n            },\n          }\n        } catch (error) {\n          return {\n            success: false,\n            output: {\n              type: 'text',\n              value:\n                error &&\n                typeof error === 'object' &&\n                'message' in error &&\n                typeof error.message === 'string'\n                  ? error.message\n                  : typeof error === 'string'\n                    ? error\n                    : 'Unknown error',\n            },\n          }\n        }\n      }\n    }\n    this.websocketHandler.sendInput({\n      promptId,\n      prompt,\n      promptParams: params,\n      fingerprintId: this.fingerprintId,\n      costMode: 'normal',\n      sessionState,\n      toolResults,\n      agentId: agent,\n    })\n\n    return new Promise<RunState>((resolve, reject) => {\n      this.promptIdToResolveResponse[promptId] = { resolve, reject }\n    })\n  }\n\n  private async handlePromptResponse(action: ServerAction<'prompt-response'>) {\n    const promiseActions =\n      this.promptIdToResolveResponse[action?.promptId ?? '']\n\n    const parsedAction = PromptResponseSchema.safeParse(action)\n    if (!parsedAction.success) {\n      const message = [\n        'Received invalid prompt response from server:',\n        JSON.stringify(parsedAction.error.issues),\n        'If this issues persists, please contact support@codebuff.com',\n      ].join('\\n')\n      if (promiseActions) {\n        promiseActions.reject(new Error(message))\n      }\n      return\n    }\n\n    if (promiseActions) {\n      const { sessionState, toolResults } = parsedAction.data\n      const state: RunState = {\n        sessionState,\n        toolResults,\n      }\n      promiseActions.resolve(state)\n\n      delete this.promptIdToResolveResponse[action.promptId]\n      delete this.promptIdToHandleEvent[action.promptId]\n      delete this.promptIdToCustomToolHandler[action.promptId]\n    }\n  }\n\n  private async readFiles(filePath: string[]) {\n    const override = this.overrideTools.read_files\n    if (override) {\n      const overrideResult = await override(filePath)\n      return overrideResult.files\n    }\n    return getFiles(filePath, this.cwd)\n  }\n\n  private async handleToolCall(\n    action: ServerAction<'tool-call-request'>,\n  ): ReturnType<WebSocketHandler['handleToolCall']> {\n    const toolName = action.toolName\n    const input = action.input\n\n    let result: string\n    if (!toolNames.includes(toolName as ToolName)) {\n      return this.promptIdToCustomToolHandler[action.userInputId](action)\n    }\n\n    try {\n      let override = this.overrideTools[toolName as ClientToolName]\n      if (!override && toolName === 'str_replace') {\n        // Note: write_file and str_replace have the same implementation, so reuse their write_file override.\n        override = this.overrideTools['write_file']\n      }\n      if (override) {\n        const overrideResult = await override(input)\n        result = overrideResult.toolResultMessage\n      } else if (toolName === 'end_turn') {\n        result = ''\n      } else if (toolName === 'write_file' || toolName === 'str_replace') {\n        const r = changeFile(input, this.cwd)\n        result = r.toolResultMessage\n      } else if (toolName === 'run_terminal_command') {\n        const r = await runTerminalCommand({\n          ...input,\n          cwd: input.cwd ?? this.cwd,\n        } as Parameters<typeof runTerminalCommand>[0])\n        result = r.output\n      } else {\n        throw new Error(\n          `Tool not implemented in SDK. Please provide an override or modify your agent to not use this tool: ${toolName}`,\n        )\n      }\n    } catch (error) {\n      return {\n        success: false,\n        output: {\n          type: 'text',\n          value:\n            error &&\n            typeof error === 'object' &&\n            'message' in error &&\n            typeof error.message === 'string'\n              ? error.message\n              : typeof error === 'string'\n                ? error\n                : 'Unknown error',\n        },\n      }\n    }\n    return {\n      success: true,\n      output: {\n        type: 'text',\n        value: result,\n      },\n    }\n  }\n}\n"},{"path":"sdk/src/custom-tool.ts","preContent":"[NEW FILE]","postContent":"import z from 'zod/v4'\n\nimport type { JSONSchema } from 'zod/v4/core'\n\nexport type CustomToolDefinition<\n  N extends string = string,\n  Output = any,\n  Input = any,\n> = {\n  toolName: N\n  zodSchema: z.ZodType<Output, Input>\n  inputJsonSchema: JSONSchema.BaseSchema\n  description?: string\n  endsAgentStep: boolean\n  exampleInputs: Input[]\n  handler: (params: Input) => Promise<{\n    toolResultMessage: string\n  }>\n}\n\nexport function getCustomToolDefinintion<\n  ToolName extends string,\n  Output,\n  Input,\n>({\n  toolName,\n  inputSchema,\n  description,\n  endsAgentStep = false,\n  exampleInputs = [],\n  handler,\n}: {\n  toolName: ToolName\n  inputSchema: z.ZodType<Output, Input>\n  description?: string\n  endsAgentStep?: boolean\n  exampleInputs?: Input[]\n  handler: (params: Input) => Promise<{\n    toolResultMessage: string\n  }>\n}): CustomToolDefinition<ToolName, Output, Input> {\n  return {\n    toolName,\n    zodSchema: inputSchema,\n    inputJsonSchema: z.toJSONSchema(inputSchema, { io: 'input' }),\n    description,\n    endsAgentStep,\n    exampleInputs,\n    handler,\n  }\n}\n"},{"path":"sdk/src/index.ts","preContent":"export { CodebuffClient } from './client'\nexport {\n  generateInitialRunState,\n  initialSessionState,\n  withAdditionalMessage,\n  withMessageHistory,\n} from './run-state'\nexport { WebSocketHandler } from './websocket-client'\n\nexport type { AgentDefinition } from '../../common/src/templates/initial-agents-dir/types/agent-definition'\n","postContent":"export { CodebuffClient } from './client'\nexport { getCustomToolDefinintion } from './custom-tool'\nexport {\n  generateInitialRunState,\n  initialSessionState,\n  withAdditionalMessage,\n  withMessageHistory,\n} from './run-state'\nexport { WebSocketHandler } from './websocket-client'\n\nexport type { AgentDefinition } from '../../common/src/templates/initial-agents-dir/types/agent-definition'\n"},{"path":"sdk/src/run-state.ts","preContent":"import * as os from 'os'\n\nimport { getInitialSessionState } from '../../common/src/types/session-state'\n\nimport type { ServerAction } from '../../common/src/actions'\nimport type { AgentDefinition } from '../../common/src/templates/initial-agents-dir/types/agent-definition'\nimport type { CodebuffMessage } from '../../common/src/types/message'\nimport type { SessionState } from '../../common/src/types/session-state'\n\nexport type RunState = {\n  sessionState: SessionState\n  toolResults: ServerAction<'prompt-response'>['toolResults']\n}\n\nexport function initialSessionState(\n  cwd: string,\n  options: {\n    // TODO: Parse projectFiles into fileTree, fileTokenScores, tokenCallers\n    projectFiles?: Record<string, string>\n    knowledgeFiles?: Record<string, string>\n    agentDefinitions?: AgentDefinition[]\n    maxAgentSteps?: number\n  },\n) {\n  const { projectFiles = {}, agentDefinitions = [] } = options\n  let { knowledgeFiles } = options\n\n  if (knowledgeFiles === undefined) {\n    knowledgeFiles = {}\n    for (const [filePath, fileContents] of Object.entries(projectFiles)) {\n      if (filePath in projectFiles) {\n        continue\n      }\n      const lowercasePathName = filePath.toLowerCase()\n      if (\n        !lowercasePathName.endsWith('knowledge.md') &&\n        !lowercasePathName.endsWith('claude.md')\n      ) {\n        continue\n      }\n\n      knowledgeFiles[filePath] = fileContents\n    }\n  }\n\n  // Process agentDefinitions array and convert handleSteps functions to strings\n  const processedAgentTemplates: Record<string, any> = {}\n  agentDefinitions.forEach((definition) => {\n    const processedConfig = { ...definition } as Record<string, any>\n    if (\n      processedConfig.handleSteps &&\n      typeof processedConfig.handleSteps === 'function'\n    ) {\n      processedConfig.handleSteps = processedConfig.handleSteps.toString()\n    }\n    if (processedConfig.id) {\n      processedAgentTemplates[processedConfig.id] = processedConfig\n    }\n  })\n\n  const initialState = getInitialSessionState({\n    projectRoot: cwd,\n    cwd,\n    fileTree: [],\n    fileTokenScores: {},\n    tokenCallers: {},\n    knowledgeFiles,\n    userKnowledgeFiles: {},\n    agentTemplates: processedAgentTemplates,\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    systemInfo: {\n      platform: process.platform,\n      shell: process.platform === 'win32' ? 'cmd.exe' : 'bash',\n      nodeVersion: process.version,\n      arch: process.arch,\n      homedir: os.homedir(),\n      cpus: os.cpus().length ?? 1,\n    },\n  })\n\n  if (options.maxAgentSteps) {\n    initialState.mainAgentState.stepsRemaining = options.maxAgentSteps\n  }\n\n  return initialState\n}\n\nexport function generateInitialRunState({\n  cwd,\n  projectFiles,\n  knowledgeFiles,\n  agentDefinitions,\n  maxAgentSteps,\n}: {\n  cwd: string\n  projectFiles?: Record<string, string>\n  knowledgeFiles?: Record<string, string>\n  agentDefinitions?: AgentDefinition[]\n  maxAgentSteps?: number\n}): RunState {\n  return {\n    sessionState: initialSessionState(cwd, {\n      projectFiles,\n      knowledgeFiles,\n      agentDefinitions,\n      maxAgentSteps,\n    }),\n    toolResults: [],\n  }\n}\n\nexport function withAdditionalMessage({\n  runState,\n  message,\n}: {\n  runState: RunState\n  message: CodebuffMessage\n}): RunState {\n  // Deep copy\n  const newRunState = JSON.parse(JSON.stringify(runState)) as typeof runState\n\n  newRunState.sessionState.mainAgentState.messageHistory.push(message)\n\n  return newRunState\n}\n\nexport function withMessageHistory({\n  runState,\n  messages,\n}: {\n  runState: RunState\n  messages: CodebuffMessage[]\n}): RunState {\n  // Deep copy\n  const newRunState = JSON.parse(JSON.stringify(runState)) as typeof runState\n\n  newRunState.sessionState.mainAgentState.messageHistory = messages\n\n  return newRunState\n}\n","postContent":"import * as os from 'os'\n\nimport { type CustomToolDefinition } from './custom-tool'\nimport { getInitialSessionState } from '../../common/src/types/session-state'\n\nimport type { ServerAction } from '../../common/src/actions'\nimport type { AgentDefinition } from '../../common/src/templates/initial-agents-dir/types/agent-definition'\nimport type { CodebuffMessage } from '../../common/src/types/message'\nimport type { SessionState } from '../../common/src/types/session-state'\nimport type { CustomToolDefinitions } from '../../common/src/util/file'\n\nexport type RunState = {\n  sessionState: SessionState\n  toolResults: ServerAction<'prompt-response'>['toolResults']\n}\n\nexport function initialSessionState(\n  cwd: string,\n  options: {\n    // TODO: Parse projectFiles into fileTree, fileTokenScores, tokenCallers\n    projectFiles?: Record<string, string>\n    knowledgeFiles?: Record<string, string>\n    agentDefinitions?: AgentDefinition[]\n    customToolDefinitions?: CustomToolDefinition[]\n    maxAgentSteps?: number\n  },\n) {\n  const { projectFiles = {}, agentDefinitions = [] } = options\n  let { knowledgeFiles } = options\n\n  if (knowledgeFiles === undefined) {\n    knowledgeFiles = {}\n    for (const [filePath, fileContents] of Object.entries(projectFiles)) {\n      if (filePath in projectFiles) {\n        continue\n      }\n      const lowercasePathName = filePath.toLowerCase()\n      if (\n        !lowercasePathName.endsWith('knowledge.md') &&\n        !lowercasePathName.endsWith('claude.md')\n      ) {\n        continue\n      }\n\n      knowledgeFiles[filePath] = fileContents\n    }\n  }\n\n  // Process agentDefinitions array and convert handleSteps functions to strings\n  const processedAgentTemplates: Record<string, any> = {}\n  agentDefinitions.forEach((definition) => {\n    const processedConfig = { ...definition } as Record<string, any>\n    if (\n      processedConfig.handleSteps &&\n      typeof processedConfig.handleSteps === 'function'\n    ) {\n      processedConfig.handleSteps = processedConfig.handleSteps.toString()\n    }\n    if (processedConfig.id) {\n      processedAgentTemplates[processedConfig.id] = processedConfig\n    }\n  })\n\n  const processedCustomToolDefinitions: Record<\n    string,\n    Pick<CustomToolDefinition, keyof NonNullable<CustomToolDefinitions>[string]>\n  > = Object.fromEntries(\n    (options.customToolDefinitions ?? []).map((toolDefinition) => [\n      toolDefinition.toolName,\n      {\n        inputJsonSchema: toolDefinition.inputJsonSchema,\n        description: toolDefinition.description,\n        endsAgentStep: toolDefinition.endsAgentStep,\n        exampleInputs: toolDefinition.exampleInputs,\n      },\n    ]),\n  )\n\n  const initialState = getInitialSessionState({\n    projectRoot: cwd,\n    cwd,\n    fileTree: [],\n    fileTokenScores: {},\n    tokenCallers: {},\n    knowledgeFiles,\n    userKnowledgeFiles: {},\n    agentTemplates: processedAgentTemplates,\n    customToolDefinitions: processedCustomToolDefinitions,\n    gitChanges: {\n      status: '',\n      diff: '',\n      diffCached: '',\n      lastCommitMessages: '',\n    },\n    changesSinceLastChat: {},\n    shellConfigFiles: {},\n    systemInfo: {\n      platform: process.platform,\n      shell: process.platform === 'win32' ? 'cmd.exe' : 'bash',\n      nodeVersion: process.version,\n      arch: process.arch,\n      homedir: os.homedir(),\n      cpus: os.cpus().length ?? 1,\n    },\n  })\n\n  if (options.maxAgentSteps) {\n    initialState.mainAgentState.stepsRemaining = options.maxAgentSteps\n  }\n\n  return initialState\n}\n\nexport function generateInitialRunState({\n  cwd,\n  projectFiles,\n  knowledgeFiles,\n  agentDefinitions,\n  customToolDefinitions,\n  maxAgentSteps,\n}: {\n  cwd: string\n  projectFiles?: Record<string, string>\n  knowledgeFiles?: Record<string, string>\n  agentDefinitions?: AgentDefinition[]\n  customToolDefinitions?: CustomToolDefinition[]\n  maxAgentSteps?: number\n}): RunState {\n  return {\n    sessionState: initialSessionState(cwd, {\n      projectFiles,\n      knowledgeFiles,\n      agentDefinitions,\n      customToolDefinitions,\n      maxAgentSteps,\n    }),\n    toolResults: [],\n  }\n}\n\nexport function withAdditionalMessage({\n  runState,\n  message,\n}: {\n  runState: RunState\n  message: CodebuffMessage\n}): RunState {\n  // Deep copy\n  const newRunState = JSON.parse(JSON.stringify(runState)) as typeof runState\n\n  newRunState.sessionState.mainAgentState.messageHistory.push(message)\n\n  return newRunState\n}\n\nexport function withMessageHistory({\n  runState,\n  messages,\n}: {\n  runState: RunState\n  messages: CodebuffMessage[]\n}): RunState {\n  // Deep copy\n  const newRunState = JSON.parse(JSON.stringify(runState)) as typeof runState\n\n  newRunState.sessionState.mainAgentState.messageHistory = messages\n\n  return newRunState\n}\n"}]}